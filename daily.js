/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Daily"] = factory();
	else
		root["Daily"] = factory();
})(this, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/backgroundtab.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/backgroundtab.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"registerBackgroundTabDetection\": function() { return /* binding */ registerBackgroundTabDetection; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/utils.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW && _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document) {\n    _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getActiveTransaction)() ;\n      if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.hidden && activeTransaction) {\n        const statusType = 'cancelled';\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(\n            `[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`,\n          );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\n\n//# sourceMappingURL=backgroundtab.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL2JhY2tncm91bmR0YWIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDtBQUNiO0FBQ0g7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDZDQUFNLElBQUksc0RBQWU7QUFDL0IsSUFBSSx1RUFBZ0M7QUFDcEMsZ0NBQWdDLGtFQUFvQjtBQUNwRCxVQUFVLDZEQUFzQjtBQUNoQzs7QUFFQTtBQUNBLFVBQVUscURBQVU7QUFDcEIsc0NBQXNDLFlBQVksNENBQTRDLHFCQUFxQjtBQUNuSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0EsTUFBTSxzREFBVztBQUNqQjtBQUNBOztBQUUwQztBQUMxQyIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci9iYWNrZ3JvdW5kdGFiLmpzP2Y0OWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0QWN0aXZlVHJhbnNhY3Rpb24gfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBXSU5ET1cgfSBmcm9tICcuL3R5cGVzLmpzJztcblxuLyoqXG4gKiBBZGQgYSBsaXN0ZW5lciB0aGF0IGNhbmNlbHMgYW5kIGZpbmlzaGVzIGEgdHJhbnNhY3Rpb24gd2hlbiB0aGUgZ2xvYmFsXG4gKiBkb2N1bWVudCBpcyBoaWRkZW4uXG4gKi9cbmZ1bmN0aW9uIHJlZ2lzdGVyQmFja2dyb3VuZFRhYkRldGVjdGlvbigpIHtcbiAgaWYgKFdJTkRPVyAmJiBXSU5ET1cuZG9jdW1lbnQpIHtcbiAgICBXSU5ET1cuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsICgpID0+IHtcbiAgICAgIGNvbnN0IGFjdGl2ZVRyYW5zYWN0aW9uID0gZ2V0QWN0aXZlVHJhbnNhY3Rpb24oKSA7XG4gICAgICBpZiAoV0lORE9XLmRvY3VtZW50LmhpZGRlbiAmJiBhY3RpdmVUcmFuc2FjdGlvbikge1xuICAgICAgICBjb25zdCBzdGF0dXNUeXBlID0gJ2NhbmNlbGxlZCc7XG5cbiAgICAgICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJlxuICAgICAgICAgIGxvZ2dlci5sb2coXG4gICAgICAgICAgICBgW1RyYWNpbmddIFRyYW5zYWN0aW9uOiAke3N0YXR1c1R5cGV9IC0+IHNpbmNlIHRhYiBtb3ZlZCB0byB0aGUgYmFja2dyb3VuZCwgb3A6ICR7YWN0aXZlVHJhbnNhY3Rpb24ub3B9YCxcbiAgICAgICAgICApO1xuICAgICAgICAvLyBXZSBzaG91bGQgbm90IHNldCBzdGF0dXMgaWYgaXQgaXMgYWxyZWFkeSBzZXQsIHRoaXMgcHJldmVudCBpbXBvcnRhbnQgc3RhdHVzZXMgbGlrZVxuICAgICAgICAvLyBlcnJvciBvciBkYXRhIGxvc3MgZnJvbSBiZWluZyBvdmVyd3JpdHRlbiBvbiB0cmFuc2FjdGlvbi5cbiAgICAgICAgaWYgKCFhY3RpdmVUcmFuc2FjdGlvbi5zdGF0dXMpIHtcbiAgICAgICAgICBhY3RpdmVUcmFuc2FjdGlvbi5zZXRTdGF0dXMoc3RhdHVzVHlwZSk7XG4gICAgICAgIH1cbiAgICAgICAgYWN0aXZlVHJhbnNhY3Rpb24uc2V0VGFnKCd2aXNpYmlsaXR5Y2hhbmdlJywgJ2RvY3VtZW50LmhpZGRlbicpO1xuICAgICAgICBhY3RpdmVUcmFuc2FjdGlvbi5maW5pc2goKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmXG4gICAgICBsb2dnZXIud2FybignW1RyYWNpbmddIENvdWxkIG5vdCBzZXQgdXAgYmFja2dyb3VuZCB0YWIgZGV0ZWN0aW9uIGR1ZSB0byBsYWNrIG9mIGdsb2JhbCBkb2N1bWVudCcpO1xuICB9XG59XG5cbmV4cG9ydCB7IHJlZ2lzdGVyQmFja2dyb3VuZFRhYkRldGVjdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFja2dyb3VuZHRhYi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/backgroundtab.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/browsertracing.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/browsertracing.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BROWSER_TRACING_INTEGRATION_ID\": function() { return /* binding */ BROWSER_TRACING_INTEGRATION_ID; },\n/* harmony export */   \"BrowserTracing\": function() { return /* binding */ BrowserTracing; },\n/* harmony export */   \"getMetaContent\": function() { return /* binding */ getMetaContent; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/idletransaction.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/utils.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _backgroundtab_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./backgroundtab.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/backgroundtab.js\");\n/* harmony import */ var _metrics_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./metrics/index.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/metrics/index.js\");\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./request.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/request.js\");\n/* harmony import */ var _router_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./router.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/router.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n\n\n\n\n\n\nconst BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS = {\n  ..._sentry_core__WEBPACK_IMPORTED_MODULE_0__.TRACING_DEFAULTS,\n  markBackgroundTransactions: true,\n  routingInstrumentation: _router_js__WEBPACK_IMPORTED_MODULE_1__.instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  enableLongTask: true,\n  _experiments: {},\n  ..._request_js__WEBPACK_IMPORTED_MODULE_2__.defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nclass BrowserTracing  {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = BROWSER_TRACING_INTEGRATION_ID;}\n\n   __init2() {this._hasSetTracePropagationTargets = false;}\n\n   constructor(_options) {BrowserTracing.prototype.__init.call(this);BrowserTracing.prototype.__init2.call(this);\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.addTracingExtensions)();\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      this._hasSetTracePropagationTargets = !!(\n        _options &&\n        // eslint-disable-next-line deprecation/deprecation\n        (_options.tracePropagationTargets || _options.tracingOrigins)\n      );\n    }\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n    };\n\n    // Special case: enableLongTask can be set in _experiments\n    // TODO (v8): Remove this in v8\n    if (this.options._experiments.enableLongTask !== undefined) {\n      this.options.enableLongTask = this.options._experiments.enableLongTask;\n    }\n\n    // TODO (v8): remove this block after tracingOrigins is removed\n    // Set tracePropagationTargets to tracingOrigins if specified by the user\n    // In case both are specified, tracePropagationTargets takes precedence\n    // eslint-disable-next-line deprecation/deprecation\n    if (_options && !_options.tracePropagationTargets && _options.tracingOrigins) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.options.tracePropagationTargets = _options.tracingOrigins;\n    }\n\n    this._collectWebVitals = (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_4__.startTrackingWebVitals)();\n    if (this.options.enableLongTask) {\n      (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_4__.startTrackingLongTasks)();\n    }\n    if (this.options._experiments.enableInteractions) {\n      (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_4__.startTrackingInteractions)();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    this._getCurrentHub = getCurrentHub;\n    const hub = getCurrentHub();\n    const client = hub.getClient();\n    const clientOptions = client && client.getOptions();\n\n    const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n      _experiments,\n    } = this.options;\n\n    const clientOptionsTracePropagationTargets = clientOptions && clientOptions.tracePropagationTargets;\n    // There are three ways to configure tracePropagationTargets:\n    // 1. via top level client option `tracePropagationTargets`\n    // 2. via BrowserTracing option `tracePropagationTargets`\n    // 3. via BrowserTracing option `tracingOrigins` (deprecated)\n    //\n    // To avoid confusion, favour top level client option `tracePropagationTargets`, and fallback to\n    // BrowserTracing option `tracePropagationTargets` and then `tracingOrigins` (deprecated).\n    // This is done as it minimizes bundle size (we don't have to have undefined checks).\n    //\n    // If both 1 and either one of 2 or 3 are set (from above), we log out a warning.\n    const tracePropagationTargets = clientOptionsTracePropagationTargets || this.options.tracePropagationTargets;\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && this._hasSetTracePropagationTargets && clientOptionsTracePropagationTargets) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(\n        '[Tracing] The `tracePropagationTargets` option was set in the BrowserTracing integration and top level `Sentry.init`. The top level `Sentry.init` value is being used.',\n      );\n    }\n\n    instrumentRouting(\n      (context) => {\n        const transaction = this._createRouteTransaction(context);\n\n        this.options._experiments.onStartRouteTransaction &&\n          this.options._experiments.onStartRouteTransaction(transaction, context, getCurrentHub);\n\n        return transaction;\n      },\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      (0,_backgroundtab_js__WEBPACK_IMPORTED_MODULE_6__.registerBackgroundTabDetection)();\n    }\n\n    if (_experiments.enableInteractions) {\n      this._registerInteractionListener();\n    }\n\n    (0,_request_js__WEBPACK_IMPORTED_MODULE_2__.instrumentOutgoingRequests)({\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n    });\n  }\n\n  /** Create routing idle transaction. */\n   _createRouteTransaction(context) {\n    if (!this._getCurrentHub) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n    const hub = this._getCurrentHub();\n\n    const { beforeNavigate, idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    const sentryTrace = isPageloadTransaction ? getMetaContent('sentry-trace') : '';\n    const baggage = isPageloadTransaction ? getMetaContent('baggage') : '';\n    const { traceparentData, dynamicSamplingContext, propagationContext } = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.tracingContextFromHeaders)(\n      sentryTrace,\n      baggage,\n    );\n\n    const expandedContext = {\n      ...context,\n      ...traceparentData,\n      metadata: {\n        ...context.metadata,\n        dynamicSamplingContext: traceparentData && !dynamicSamplingContext ? {} : dynamicSamplingContext,\n      },\n      trimEnd: true,\n    };\n\n    const modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    const finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    // If `beforeNavigate` set a custom name, record that fact\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? { ...finalContext.metadata, source: 'custom' }\n        : finalContext.metadata;\n\n    this._latestRouteName = finalContext.name;\n    this._latestRouteSource = finalContext.metadata && finalContext.metadata.source;\n\n    if (finalContext.sampled === false) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const { location } = _types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW;\n\n    const idleTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.startIdleTransaction)(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n    );\n\n    const scope = hub.getScope();\n\n    // If it's a pageload and there is a meta tag set\n    // use the traceparentData as the propagation context\n    if (isPageloadTransaction && traceparentData) {\n      scope.setPropagationContext(propagationContext);\n    } else {\n      // Navigation transactions should set a new propagation context based on the\n      // created idle transaction.\n      scope.setPropagationContext({\n        traceId: idleTransaction.traceId,\n        spanId: idleTransaction.spanId,\n        parentSpanId: idleTransaction.parentSpanId,\n        sampled: !!idleTransaction.sampled,\n      });\n    }\n\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      this._collectWebVitals();\n      (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_4__.addPerformanceEntries)(transaction);\n    });\n\n    return idleTransaction ;\n  }\n\n  /** Start listener for interaction transactions */\n   _registerInteractionListener() {\n    let inflightInteractionTransaction;\n    const registerInteractionTransaction = () => {\n      const { idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n      const op = 'ui.action.click';\n\n      const currentTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.getActiveTransaction)();\n      if (currentTransaction && currentTransaction.op && ['navigation', 'pageload'].includes(currentTransaction.op)) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(\n            `[Tracing] Did not create ${op} transaction because a pageload or navigation transaction is in progress.`,\n          );\n        return undefined;\n      }\n\n      if (inflightInteractionTransaction) {\n        inflightInteractionTransaction.setFinishReason('interactionInterrupted');\n        inflightInteractionTransaction.finish();\n        inflightInteractionTransaction = undefined;\n      }\n\n      if (!this._getCurrentHub) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`[Tracing] Did not create ${op} transaction because _getCurrentHub is invalid.`);\n        return undefined;\n      }\n\n      if (!this._latestRouteName) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n        return undefined;\n      }\n\n      const hub = this._getCurrentHub();\n      const { location } = _types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW;\n\n      const context = {\n        name: this._latestRouteName,\n        op,\n        trimEnd: true,\n        metadata: {\n          source: this._latestRouteSource || 'url',\n        },\n      };\n\n      inflightInteractionTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.startIdleTransaction)(\n        hub,\n        context,\n        idleTimeout,\n        finalTimeout,\n        true,\n        { location }, // for use in the tracesSampler\n        heartbeatInterval,\n      );\n    };\n\n    ['click'].forEach(type => {\n      addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n    });\n  }\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__.getDomElement)(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\n\n//# sourceMappingURL=browsertracing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/browsertracing.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/metrics/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/metrics/index.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_addMeasureSpans\": function() { return /* binding */ _addMeasureSpans; },\n/* harmony export */   \"_addResourceSpans\": function() { return /* binding */ _addResourceSpans; },\n/* harmony export */   \"addPerformanceEntries\": function() { return /* binding */ addPerformanceEntries; },\n/* harmony export */   \"startTrackingInteractions\": function() { return /* binding */ startTrackingInteractions; },\n/* harmony export */   \"startTrackingLongTasks\": function() { return /* binding */ startTrackingLongTasks; },\n/* harmony export */   \"startTrackingWebVitals\": function() { return /* binding */ startTrackingWebVitals; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/utils.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n/* harmony import */ var _web_vitals_getCLS_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../web-vitals/getCLS.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getCLS.js\");\n/* harmony import */ var _web_vitals_getFID_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../web-vitals/getFID.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getFID.js\");\n/* harmony import */ var _web_vitals_getLCP_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../web-vitals/getLCP.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getLCP.js\");\n/* harmony import */ var _web_vitals_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../web-vitals/lib/getVisibilityWatcher.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js\");\n/* harmony import */ var _web_vitals_lib_observe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../web-vitals/lib/observe.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/metrics/utils.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\nfunction getBrowserPerformanceAPI() {\n  // @ts-ignore we want to make sure all of these are available, even if TS is sure they are\n  return _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW && _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.addEventListener && _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance;\n}\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals\n *\n * @returns A function that forces web vitals collection\n */\nfunction startTrackingWebVitals() {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin) {\n    // @ts-ignore we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance.mark('sentry-tracing-init');\n    }\n    _trackFID();\n    const clsCallback = _trackCLS();\n    const lcpCallback = _trackLCP();\n\n    return () => {\n      if (clsCallback) {\n        clsCallback();\n      }\n      if (lcpCallback) {\n        lcpCallback();\n      }\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nfunction startTrackingLongTasks() {\n  const entryHandler = (entries) => {\n    for (const entry of entries) {\n      const transaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getActiveTransaction)() ;\n      if (!transaction) {\n        return;\n      }\n      const startTime = msToSec((_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin ) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      transaction.startChild({\n        description: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        startTimestamp: startTime,\n        endTimestamp: startTime + duration,\n      });\n    }\n  };\n\n  (0,_web_vitals_lib_observe_js__WEBPACK_IMPORTED_MODULE_3__.observe)('longtask', entryHandler);\n}\n\n/**\n * Start tracking interaction events.\n */\nfunction startTrackingInteractions() {\n  const entryHandler = (entries) => {\n    for (const entry of entries) {\n      const transaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getActiveTransaction)() ;\n      if (!transaction) {\n        return;\n      }\n\n      if (entry.name === 'click') {\n        const startTime = msToSec((_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin ) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        transaction.startChild({\n          description: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.htmlTreeAsString)(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          startTimestamp: startTime,\n          endTimestamp: startTime + duration,\n        });\n      }\n    }\n  };\n\n  (0,_web_vitals_lib_observe_js__WEBPACK_IMPORTED_MODULE_3__.observe)('event', entryHandler, { durationThreshold: 0 });\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS() {\n  // See:\n  // https://web.dev/evolving-cls/\n  // https://web.dev/cls-web-tooling/\n  return (0,_web_vitals_getCLS_js__WEBPACK_IMPORTED_MODULE_5__.onCLS)(metric => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry ;\n  });\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP() {\n  return (0,_web_vitals_getLCP_js__WEBPACK_IMPORTED_MODULE_7__.onLCP)(metric => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry ;\n  });\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  (0,_web_vitals_getFID_js__WEBPACK_IMPORTED_MODULE_8__.onFID)(metric => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin );\n    const startTime = msToSec(entry.startTime);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(transaction) {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance.getEntries || !_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = msToSec(_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  let responseStartTimestamp;\n  let requestStartTimestamp;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry) => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(entry.duration);\n\n    if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        responseStartTimestamp = timeOrigin + msToSec(entry.responseStart);\n        requestStartTimestamp = timeOrigin + msToSec(entry.requestStart);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = (0,_web_vitals_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_9__.getVisibilityWatcher)();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        const resourceName = (entry.name ).replace(_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.origin, '');\n        _addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n        break;\n      }\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (transaction.op === 'pageload') {\n    // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n    // start of the response in milliseconds\n    if (typeof responseStartTimestamp === 'number') {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding TTFB');\n      _measurements['ttfb'] = {\n        value: (responseStartTimestamp - transaction.startTimestamp) * 1000,\n        unit: 'millisecond',\n      };\n\n      if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n        // Capture the time spent making the request and receiving the first byte of the response.\n        // This is the time between the start of the request and the start of the response in milliseconds.\n        _measurements['ttfb.requestTime'] = {\n          value: (responseStartTimestamp - requestStartTimestamp) * 1000,\n          unit: 'millisecond',\n        };\n      }\n    }\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || timeOrigin >= transaction.startTimestamp) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      const oldValue = _measurements[name].value;\n      const measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_10__._startChild)(transaction, {\n        description: 'first input delay',\n        endTimestamp: fidMark.value + msToSec(_measurements['fid'].value),\n        op: 'ui.action',\n        startTimestamp: fidMark.value,\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      transaction.setMeasurement(\n        measurementName,\n        _measurements[measurementName].value,\n        _measurements[measurementName].unit,\n      );\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nfunction _addMeasureSpans(\n  transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_10__._startChild)(transaction, {\n    description: entry.name ,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType ,\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(transaction, entry, timeOrigin) {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  event,\n  timeOrigin,\n  description,\n  eventEnd,\n) {\n  const end = eventEnd ? (entry[eventEnd] ) : (entry[`${event}End`] );\n  const start = entry[`${event}Start`] ;\n  if (!start || !end) {\n    return;\n  }\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_10__._startChild)(transaction, {\n    op: 'browser',\n    description: description || event,\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(transaction, entry, timeOrigin) {\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_10__._startChild)(transaction, {\n    op: 'browser',\n    description: 'request',\n    startTimestamp: timeOrigin + msToSec(entry.requestStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_10__._startChild)(transaction, {\n    op: 'browser',\n    description: 'response',\n    startTimestamp: timeOrigin + msToSec(entry.responseStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n}\n\n/** Create resource-related spans */\nfunction _addResourceSpans(\n  transaction,\n  entry,\n  resourceName,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const data = {};\n  if ('transferSize' in entry) {\n    data['http.response_transfer_size'] = entry.transferSize;\n  }\n  if ('encodedBodySize' in entry) {\n    data['http.response_content_length'] = entry.encodedBodySize;\n  }\n  if ('decodedBodySize' in entry) {\n    data['http.decoded_response_content_length'] = entry.decodedBodySize;\n  }\n  if ('renderBlockingStatus' in entry) {\n    data['resource.render_blocking_status'] = entry.renderBlockingStatus;\n  }\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_10__._startChild)(transaction, {\n    description: resourceName,\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction) {\n  const navigator = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_10__.isMeasurementValue)(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_10__.isMeasurementValue)(navigator.deviceMemory)) {\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_10__.isMeasurementValue)(navigator.hardwareConcurrency)) {\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction) {\n  if (_lcpEntry) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      transaction.setTag('lcp.element', (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.htmlTreeAsString)(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      transaction.setTag(`cls.source.${index + 1}`, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.htmlTreeAsString)(source.node)),\n    );\n  }\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/metrics/index.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/metrics/utils.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/metrics/utils.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_startChild\": function() { return /* binding */ _startChild; },\n/* harmony export */   \"isMeasurementValue\": function() { return /* binding */ isMeasurementValue; }\n/* harmony export */ });\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction _startChild(transaction, { startTimestamp, ...ctx }) {\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL21ldHJpY3MvdXRpbHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyx3QkFBd0I7QUFDNUQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFMkM7QUFDM0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5LWludGVybmFsL3RyYWNpbmcvZXNtL2Jyb3dzZXIvbWV0cmljcy91dGlscy5qcz9lODJiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2tzIGlmIGEgZ2l2ZW4gdmFsdWUgaXMgYSB2YWxpZCBtZWFzdXJlbWVudCB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gaXNNZWFzdXJlbWVudFZhbHVlKHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInICYmIGlzRmluaXRlKHZhbHVlKTtcbn1cblxuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gdG8gc3RhcnQgY2hpbGQgb24gdHJhbnNhY3Rpb25zLiBUaGlzIGZ1bmN0aW9uIHdpbGwgbWFrZSBzdXJlIHRoYXQgdGhlIHRyYW5zYWN0aW9uIHdpbGxcbiAqIHVzZSB0aGUgc3RhcnQgdGltZXN0YW1wIG9mIHRoZSBjcmVhdGVkIGNoaWxkIHNwYW4gaWYgaXQgaXMgZWFybGllciB0aGFuIHRoZSB0cmFuc2FjdGlvbnMgYWN0dWFsXG4gKiBzdGFydCB0aW1lc3RhbXAuXG4gKi9cbmZ1bmN0aW9uIF9zdGFydENoaWxkKHRyYW5zYWN0aW9uLCB7IHN0YXJ0VGltZXN0YW1wLCAuLi5jdHggfSkge1xuICBpZiAoc3RhcnRUaW1lc3RhbXAgJiYgdHJhbnNhY3Rpb24uc3RhcnRUaW1lc3RhbXAgPiBzdGFydFRpbWVzdGFtcCkge1xuICAgIHRyYW5zYWN0aW9uLnN0YXJ0VGltZXN0YW1wID0gc3RhcnRUaW1lc3RhbXA7XG4gIH1cblxuICByZXR1cm4gdHJhbnNhY3Rpb24uc3RhcnRDaGlsZCh7XG4gICAgc3RhcnRUaW1lc3RhbXAsXG4gICAgLi4uY3R4LFxuICB9KTtcbn1cblxuZXhwb3J0IHsgX3N0YXJ0Q2hpbGQsIGlzTWVhc3VyZW1lbnRWYWx1ZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/metrics/utils.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/request.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/request.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_TRACE_PROPAGATION_TARGETS\": function() { return /* binding */ DEFAULT_TRACE_PROPAGATION_TARGETS; },\n/* harmony export */   \"addTracingHeadersToFetchRequest\": function() { return /* binding */ addTracingHeadersToFetchRequest; },\n/* harmony export */   \"defaultRequestInstrumentationOptions\": function() { return /* binding */ defaultRequestInstrumentationOptions; },\n/* harmony export */   \"extractNetworkProtocol\": function() { return /* binding */ extractNetworkProtocol; },\n/* harmony export */   \"fetchCallback\": function() { return /* binding */ fetchCallback; },\n/* harmony export */   \"instrumentOutgoingRequests\": function() { return /* binding */ instrumentOutgoingRequests; },\n/* harmony export */   \"shouldAttachHeaders\": function() { return /* binding */ shouldAttachHeaders; },\n/* harmony export */   \"xhrCallback\": function() { return /* binding */ xhrCallback; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/instrument.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n\n\n\n/* eslint-disable max-lines */\n\nconst DEFAULT_TRACE_PROPAGATION_TARGETS = ['localhost', /^\\/(?!\\/)/];\n\n/** Options for Request Instrumentation */\n\nconst defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n  // TODO (v8): Remove this property\n  tracingOrigins: DEFAULT_TRACE_PROPAGATION_TARGETS,\n  tracePropagationTargets: DEFAULT_TRACE_PROPAGATION_TARGETS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n  const {\n    traceFetch,\n    traceXHR,\n    tracePropagationTargets,\n    // eslint-disable-next-line deprecation/deprecation\n    tracingOrigins,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n  } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_) => true;\n\n  // TODO(v8) Remove tracingOrigins here\n  // The only reason we're passing it in here is because this instrumentOutgoingRequests function is publicly exported\n  // and we don't want to break the API. We can remove it in v8.\n  const shouldAttachHeadersWithTargets = (url) =>\n    shouldAttachHeaders(url, tracePropagationTargets || tracingOrigins);\n\n  const spans = {};\n\n  if (traceFetch) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('fetch', (handlerData) => {\n      const createdSpan = fetchCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n\n  if (traceXHR) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('xhr', (handlerData) => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span) {\n  const url = span.data.url;\n  const observer = new PerformanceObserver(list => {\n    const entries = list.getEntries() ;\n    entries.forEach(entry => {\n      if ((entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest') && entry.name.endsWith(url)) {\n        const spanData = resourceTimingEntryToSpanData(entry);\n        spanData.forEach(data => span.setData(...data));\n        observer.disconnect();\n      }\n    });\n  });\n  observer.observe({\n    entryTypes: ['resource'],\n  });\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nfunction extractNetworkProtocol(nextHopProtocol) {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/');\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1];\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\nfunction getAbsoluteTime(time) {\n  return ((_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin || performance.timeOrigin) + time) / 1000;\n}\n\nfunction resourceTimingEntryToSpanData(resourceTiming) {\n  const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n\n  const timingSpanData = [];\n\n  timingSpanData.push(['network.protocol.version', version], ['network.protocol.name', name]);\n\n  if (!_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.redirect_start', getAbsoluteTime(resourceTiming.redirectStart)],\n    ['http.request.fetch_start', getAbsoluteTime(resourceTiming.fetchStart)],\n    ['http.request.domain_lookup_start', getAbsoluteTime(resourceTiming.domainLookupStart)],\n    ['http.request.domain_lookup_end', getAbsoluteTime(resourceTiming.domainLookupEnd)],\n    ['http.request.connect_start', getAbsoluteTime(resourceTiming.connectStart)],\n    ['http.request.secure_connection_start', getAbsoluteTime(resourceTiming.secureConnectionStart)],\n    ['http.request.connection_end', getAbsoluteTime(resourceTiming.connectEnd)],\n    ['http.request.request_start', getAbsoluteTime(resourceTiming.requestStart)],\n    ['http.request.response_start', getAbsoluteTime(resourceTiming.responseStart)],\n    ['http.request.response_end', getAbsoluteTime(resourceTiming.responseEnd)],\n  ];\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * This was extracted from `instrumentOutgoingRequests` to make it easier to test shouldAttachHeaders.\n * We only export this fuction for testing purposes.\n */\nfunction shouldAttachHeaders(url, tracePropagationTargets) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.stringMatchesSomePattern)(url, tracePropagationTargets || DEFAULT_TRACE_PROPAGATION_TARGETS);\n}\n\n/**\n * Create and track fetch request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\nfunction fetchCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  if (!(0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.hasTracingEnabled)() || !handlerData.fetchData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(handlerData.fetchData.url);\n\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      if (handlerData.response) {\n        // TODO (kmclb) remove this once types PR goes through\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        span.setHttpStatus(handlerData.response.status);\n\n        const contentLength =\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          handlerData.response && handlerData.response.headers && handlerData.response.headers.get('content-length');\n\n        const contentLengthNum = parseInt(contentLength);\n        if (contentLengthNum > 0) {\n          span.setData('http.response_content_length', contentLengthNum);\n        }\n      } else if (handlerData.error) {\n        span.setStatus('internal_error');\n      }\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getCurrentHub)();\n  const scope = hub.getScope();\n  const client = hub.getClient();\n  const parentSpan = scope.getSpan();\n\n  const { method, url } = handlerData.fetchData;\n\n  const span =\n    shouldCreateSpanResult && parentSpan\n      ? parentSpan.startChild({\n          data: {\n            url,\n            type: 'fetch',\n            'http.method': method,\n          },\n          description: `${method} ${url}`,\n          op: 'http.client',\n        })\n      : undefined;\n\n  if (span) {\n    handlerData.fetchData.__span = span.spanId;\n    spans[span.spanId] = span;\n  }\n\n  if (shouldAttachHeaders(handlerData.fetchData.url) && client) {\n    const request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options = handlerData.args[1];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    options.headers = addTracingHeadersToFetchRequest(request, client, scope, options);\n  }\n\n  return span;\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers\n */\nfunction addTracingHeadersToFetchRequest(\n  request, // unknown is actually type Request but we can't export DOM types from this package,\n  client,\n  scope,\n  options\n\n,\n) {\n  const span = scope.getSpan();\n\n  const transaction = span && span.transaction;\n\n  const { traceId, sampled, dsc } = scope.getPropagationContext();\n\n  const sentryTraceHeader = span ? span.toTraceparent() : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.generateSentryTraceHeader)(traceId, undefined, sampled);\n  const dynamicSamplingContext = transaction\n    ? transaction.getDynamicSamplingContext()\n    : dsc\n    ? dsc\n    : (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getDynamicSamplingContextFromClient)(traceId, client, scope);\n\n  const sentryBaggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n\n  const headers =\n    typeof Request !== 'undefined' && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.isInstanceOf)(request, Request) ? (request ).headers : options.headers;\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.isInstanceOf)(headers, Headers)) {\n    const newHeaders = new Headers(headers );\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended multiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders ;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders ;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    const newBaggageHeaders = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers ),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\n// eslint-disable-next-line complexity\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr && xhr[_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SENTRY_XHR_DATA_KEY];\n\n  if (!(0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.hasTracingEnabled)() || (xhr && xhr.__sentry_own_request__) || !xhr || !sentryXhrData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(sentryXhrData.url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      span.setHttpStatus(sentryXhrData.status_code);\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getCurrentHub)();\n  const scope = hub.getScope();\n  const parentSpan = scope.getSpan();\n\n  const span =\n    shouldCreateSpanResult && parentSpan\n      ? parentSpan.startChild({\n          data: {\n            ...sentryXhrData.data,\n            type: 'xhr',\n            'http.method': sentryXhrData.method,\n            url: sentryXhrData.url,\n          },\n          description: `${sentryXhrData.method} ${sentryXhrData.url}`,\n          op: 'http.client',\n        })\n      : undefined;\n\n  if (span) {\n    xhr.__sentry_xhr_span_id__ = span.spanId;\n    spans[xhr.__sentry_xhr_span_id__] = span;\n  }\n\n  if (xhr.setRequestHeader && shouldAttachHeaders(sentryXhrData.url)) {\n    if (span) {\n      const transaction = span && span.transaction;\n      const dynamicSamplingContext = transaction && transaction.getDynamicSamplingContext();\n      const sentryBaggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n      setHeaderOnXhr(xhr, span.toTraceparent(), sentryBaggageHeader);\n    } else {\n      const client = hub.getClient();\n      const { traceId, sampled, dsc } = scope.getPropagationContext();\n      const sentryTraceHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.generateSentryTraceHeader)(traceId, undefined, sampled);\n      const dynamicSamplingContext =\n        dsc || (client ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getDynamicSamplingContextFromClient)(traceId, client, scope) : undefined);\n      const sentryBaggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n      setHeaderOnXhr(xhr, sentryTraceHeader, sentryBaggageHeader);\n    }\n  }\n\n  return span;\n}\n\nfunction setHeaderOnXhr(\n  xhr,\n  sentryTraceHeader,\n  sentryBaggageHeader,\n) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n      // We can therefore simply set a baggage header without checking what was there before\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      xhr.setRequestHeader(_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n  } catch (_) {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\n\n//# sourceMappingURL=request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3JlcXVlc3QuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBcUc7QUFDNkk7O0FBRWxQOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsSUFBSSx3RUFBeUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQSxJQUFJLHdFQUF5QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FBQ0EsV0FBVyx1RUFBNEI7QUFDdkM7O0FBRUE7QUFDQSxVQUFVLGdCQUFnQjs7QUFFMUI7O0FBRUE7O0FBRUEsT0FBTyx1RUFBNEI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyx1RUFBd0I7QUFDakM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sK0RBQWlCO0FBQ3hCO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYywyREFBYTtBQUMzQjtBQUNBO0FBQ0E7O0FBRUEsVUFBVSxjQUFjOztBQUV4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCwwQkFBMEIsUUFBUSxFQUFFLElBQUk7QUFDeEM7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSwyRkFBMkY7QUFDM0Y7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxVQUFVLHdCQUF3Qjs7QUFFbEMsMERBQTBELHdFQUF5QjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0saUZBQW1DOztBQUV6Qyw4QkFBOEIsMEZBQTJDOztBQUV6RTtBQUNBLHNDQUFzQywyREFBWTs7QUFFbEQ7QUFDQSxhQUFhO0FBQ2IsSUFBSSwyQ0FBMkMsMkRBQVk7QUFDM0Q7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDhEQUFtQjtBQUMzQzs7QUFFQTtBQUNBLElBQUk7QUFDSjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsOERBQW1CO0FBQzFDOztBQUVBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyw4REFBbUI7O0FBRXRELE9BQU8sK0RBQWlCO0FBQ3hCO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLDJEQUFhO0FBQzNCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCwwQkFBMEIsc0JBQXNCLEVBQUUsa0JBQWtCO0FBQ3BFO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDBGQUEyQztBQUM3RTtBQUNBLE1BQU07QUFDTjtBQUNBLGNBQWMsd0JBQXdCO0FBQ3RDLGdDQUFnQyx3RUFBeUI7QUFDekQ7QUFDQSx5QkFBeUIsaUZBQW1DO0FBQzVELGtDQUFrQywwRkFBMkM7QUFDN0U7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsOERBQW1CO0FBQzlDO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFeU47QUFDek4iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5LWludGVybmFsL3RyYWNpbmcvZXNtL2Jyb3dzZXIvcmVxdWVzdC5qcz9mNzdkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhhc1RyYWNpbmdFbmFibGVkLCBnZXRDdXJyZW50SHViLCBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbUNsaWVudCB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBhZGRJbnN0cnVtZW50YXRpb25IYW5kbGVyLCBicm93c2VyUGVyZm9ybWFuY2VUaW1lT3JpZ2luLCBnZW5lcmF0ZVNlbnRyeVRyYWNlSGVhZGVyLCBkeW5hbWljU2FtcGxpbmdDb250ZXh0VG9TZW50cnlCYWdnYWdlSGVhZGVyLCBpc0luc3RhbmNlT2YsIEJBR0dBR0VfSEVBREVSX05BTUUsIFNFTlRSWV9YSFJfREFUQV9LRVksIHN0cmluZ01hdGNoZXNTb21lUGF0dGVybiB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBtYXgtbGluZXMgKi9cblxuY29uc3QgREVGQVVMVF9UUkFDRV9QUk9QQUdBVElPTl9UQVJHRVRTID0gWydsb2NhbGhvc3QnLCAvXlxcLyg/IVxcLykvXTtcblxuLyoqIE9wdGlvbnMgZm9yIFJlcXVlc3QgSW5zdHJ1bWVudGF0aW9uICovXG5cbmNvbnN0IGRlZmF1bHRSZXF1ZXN0SW5zdHJ1bWVudGF0aW9uT3B0aW9ucyA9IHtcbiAgdHJhY2VGZXRjaDogdHJ1ZSxcbiAgdHJhY2VYSFI6IHRydWUsXG4gIGVuYWJsZUhUVFBUaW1pbmdzOiB0cnVlLFxuICAvLyBUT0RPICh2OCk6IFJlbW92ZSB0aGlzIHByb3BlcnR5XG4gIHRyYWNpbmdPcmlnaW5zOiBERUZBVUxUX1RSQUNFX1BST1BBR0FUSU9OX1RBUkdFVFMsXG4gIHRyYWNlUHJvcGFnYXRpb25UYXJnZXRzOiBERUZBVUxUX1RSQUNFX1BST1BBR0FUSU9OX1RBUkdFVFMsXG59O1xuXG4vKiogUmVnaXN0ZXJzIHNwYW4gY3JlYXRvcnMgZm9yIHhociBhbmQgZmV0Y2ggcmVxdWVzdHMgICovXG5mdW5jdGlvbiBpbnN0cnVtZW50T3V0Z29pbmdSZXF1ZXN0cyhfb3B0aW9ucykge1xuICBjb25zdCB7XG4gICAgdHJhY2VGZXRjaCxcbiAgICB0cmFjZVhIUixcbiAgICB0cmFjZVByb3BhZ2F0aW9uVGFyZ2V0cyxcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICB0cmFjaW5nT3JpZ2lucyxcbiAgICBzaG91bGRDcmVhdGVTcGFuRm9yUmVxdWVzdCxcbiAgICBlbmFibGVIVFRQVGltaW5ncyxcbiAgfSA9IHtcbiAgICB0cmFjZUZldGNoOiBkZWZhdWx0UmVxdWVzdEluc3RydW1lbnRhdGlvbk9wdGlvbnMudHJhY2VGZXRjaCxcbiAgICB0cmFjZVhIUjogZGVmYXVsdFJlcXVlc3RJbnN0cnVtZW50YXRpb25PcHRpb25zLnRyYWNlWEhSLFxuICAgIC4uLl9vcHRpb25zLFxuICB9O1xuXG4gIGNvbnN0IHNob3VsZENyZWF0ZVNwYW4gPVxuICAgIHR5cGVvZiBzaG91bGRDcmVhdGVTcGFuRm9yUmVxdWVzdCA9PT0gJ2Z1bmN0aW9uJyA/IHNob3VsZENyZWF0ZVNwYW5Gb3JSZXF1ZXN0IDogKF8pID0+IHRydWU7XG5cbiAgLy8gVE9ETyh2OCkgUmVtb3ZlIHRyYWNpbmdPcmlnaW5zIGhlcmVcbiAgLy8gVGhlIG9ubHkgcmVhc29uIHdlJ3JlIHBhc3NpbmcgaXQgaW4gaGVyZSBpcyBiZWNhdXNlIHRoaXMgaW5zdHJ1bWVudE91dGdvaW5nUmVxdWVzdHMgZnVuY3Rpb24gaXMgcHVibGljbHkgZXhwb3J0ZWRcbiAgLy8gYW5kIHdlIGRvbid0IHdhbnQgdG8gYnJlYWsgdGhlIEFQSS4gV2UgY2FuIHJlbW92ZSBpdCBpbiB2OC5cbiAgY29uc3Qgc2hvdWxkQXR0YWNoSGVhZGVyc1dpdGhUYXJnZXRzID0gKHVybCkgPT5cbiAgICBzaG91bGRBdHRhY2hIZWFkZXJzKHVybCwgdHJhY2VQcm9wYWdhdGlvblRhcmdldHMgfHwgdHJhY2luZ09yaWdpbnMpO1xuXG4gIGNvbnN0IHNwYW5zID0ge307XG5cbiAgaWYgKHRyYWNlRmV0Y2gpIHtcbiAgICBhZGRJbnN0cnVtZW50YXRpb25IYW5kbGVyKCdmZXRjaCcsIChoYW5kbGVyRGF0YSkgPT4ge1xuICAgICAgY29uc3QgY3JlYXRlZFNwYW4gPSBmZXRjaENhbGxiYWNrKGhhbmRsZXJEYXRhLCBzaG91bGRDcmVhdGVTcGFuLCBzaG91bGRBdHRhY2hIZWFkZXJzV2l0aFRhcmdldHMsIHNwYW5zKTtcbiAgICAgIGlmIChlbmFibGVIVFRQVGltaW5ncyAmJiBjcmVhdGVkU3Bhbikge1xuICAgICAgICBhZGRIVFRQVGltaW5ncyhjcmVhdGVkU3Bhbik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBpZiAodHJhY2VYSFIpIHtcbiAgICBhZGRJbnN0cnVtZW50YXRpb25IYW5kbGVyKCd4aHInLCAoaGFuZGxlckRhdGEpID0+IHtcbiAgICAgIGNvbnN0IGNyZWF0ZWRTcGFuID0geGhyQ2FsbGJhY2soaGFuZGxlckRhdGEsIHNob3VsZENyZWF0ZVNwYW4sIHNob3VsZEF0dGFjaEhlYWRlcnNXaXRoVGFyZ2V0cywgc3BhbnMpO1xuICAgICAgaWYgKGVuYWJsZUhUVFBUaW1pbmdzICYmIGNyZWF0ZWRTcGFuKSB7XG4gICAgICAgIGFkZEhUVFBUaW1pbmdzKGNyZWF0ZWRTcGFuKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuXG4vKipcbiAqIENyZWF0ZXMgYSB0ZW1wb3Jhcnkgb2JzZXJ2ZXIgdG8gbGlzdGVuIHRvIHRoZSBuZXh0IGZldGNoL3hociByZXNvdXJjaW5nIHRpbWluZ3MsXG4gKiBzbyB0aGF0IHdoZW4gdGltaW5ncyBoaXQgdGhlaXIgcGVyLWJyb3dzZXIgbGltaXQgdGhleSBkb24ndCBuZWVkIHRvIGJlIHJlbW92ZWQuXG4gKlxuICogQHBhcmFtIHNwYW4gQSBzcGFuIHRoYXQgaGFzIHlldCB0byBiZSBmaW5pc2hlZCwgbXVzdCBjb250YWluIGB1cmxgIG9uIGRhdGEuXG4gKi9cbmZ1bmN0aW9uIGFkZEhUVFBUaW1pbmdzKHNwYW4pIHtcbiAgY29uc3QgdXJsID0gc3Bhbi5kYXRhLnVybDtcbiAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgUGVyZm9ybWFuY2VPYnNlcnZlcihsaXN0ID0+IHtcbiAgICBjb25zdCBlbnRyaWVzID0gbGlzdC5nZXRFbnRyaWVzKCkgO1xuICAgIGVudHJpZXMuZm9yRWFjaChlbnRyeSA9PiB7XG4gICAgICBpZiAoKGVudHJ5LmluaXRpYXRvclR5cGUgPT09ICdmZXRjaCcgfHwgZW50cnkuaW5pdGlhdG9yVHlwZSA9PT0gJ3htbGh0dHByZXF1ZXN0JykgJiYgZW50cnkubmFtZS5lbmRzV2l0aCh1cmwpKSB7XG4gICAgICAgIGNvbnN0IHNwYW5EYXRhID0gcmVzb3VyY2VUaW1pbmdFbnRyeVRvU3BhbkRhdGEoZW50cnkpO1xuICAgICAgICBzcGFuRGF0YS5mb3JFYWNoKGRhdGEgPT4gc3Bhbi5zZXREYXRhKC4uLmRhdGEpKTtcbiAgICAgICAgb2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbiAgb2JzZXJ2ZXIub2JzZXJ2ZSh7XG4gICAgZW50cnlUeXBlczogWydyZXNvdXJjZSddLFxuICB9KTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBBTFBOIHByb3RvY29sIGlkcyB0byBuYW1lIGFuZCB2ZXJzaW9uLlxuICpcbiAqIChodHRwczovL3d3dy5pYW5hLm9yZy9hc3NpZ25tZW50cy90bHMtZXh0ZW5zaW9udHlwZS12YWx1ZXMvdGxzLWV4dGVuc2lvbnR5cGUtdmFsdWVzLnhodG1sI2FscG4tcHJvdG9jb2wtaWRzKVxuICogQHBhcmFtIG5leHRIb3BQcm90b2NvbCBQZXJmb3JtYW5jZVJlc291cmNlVGltaW5nLm5leHRIb3BQcm90b2NvbFxuICovXG5mdW5jdGlvbiBleHRyYWN0TmV0d29ya1Byb3RvY29sKG5leHRIb3BQcm90b2NvbCkge1xuICBsZXQgbmFtZSA9ICd1bmtub3duJztcbiAgbGV0IHZlcnNpb24gPSAndW5rbm93bic7XG4gIGxldCBfbmFtZSA9ICcnO1xuICBmb3IgKGNvbnN0IGNoYXIgb2YgbmV4dEhvcFByb3RvY29sKSB7XG4gICAgLy8gaHR0cC8xLjEgZXRjLlxuICAgIGlmIChjaGFyID09PSAnLycpIHtcbiAgICAgIFtuYW1lLCB2ZXJzaW9uXSA9IG5leHRIb3BQcm90b2NvbC5zcGxpdCgnLycpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIC8vIGgyLCBoMyBldGMuXG4gICAgaWYgKCFpc05hTihOdW1iZXIoY2hhcikpKSB7XG4gICAgICBuYW1lID0gX25hbWUgPT09ICdoJyA/ICdodHRwJyA6IF9uYW1lO1xuICAgICAgdmVyc2lvbiA9IG5leHRIb3BQcm90b2NvbC5zcGxpdChfbmFtZSlbMV07XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgX25hbWUgKz0gY2hhcjtcbiAgfVxuICBpZiAoX25hbWUgPT09IG5leHRIb3BQcm90b2NvbCkge1xuICAgIC8vIHdlYnJ0YywgZnRwLCBldGMuXG4gICAgbmFtZSA9IF9uYW1lO1xuICB9XG4gIHJldHVybiB7IG5hbWUsIHZlcnNpb24gfTtcbn1cblxuZnVuY3Rpb24gZ2V0QWJzb2x1dGVUaW1lKHRpbWUpIHtcbiAgcmV0dXJuICgoYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbiB8fCBwZXJmb3JtYW5jZS50aW1lT3JpZ2luKSArIHRpbWUpIC8gMTAwMDtcbn1cblxuZnVuY3Rpb24gcmVzb3VyY2VUaW1pbmdFbnRyeVRvU3BhbkRhdGEocmVzb3VyY2VUaW1pbmcpIHtcbiAgY29uc3QgeyBuYW1lLCB2ZXJzaW9uIH0gPSBleHRyYWN0TmV0d29ya1Byb3RvY29sKHJlc291cmNlVGltaW5nLm5leHRIb3BQcm90b2NvbCk7XG5cbiAgY29uc3QgdGltaW5nU3BhbkRhdGEgPSBbXTtcblxuICB0aW1pbmdTcGFuRGF0YS5wdXNoKFsnbmV0d29yay5wcm90b2NvbC52ZXJzaW9uJywgdmVyc2lvbl0sIFsnbmV0d29yay5wcm90b2NvbC5uYW1lJywgbmFtZV0pO1xuXG4gIGlmICghYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbikge1xuICAgIHJldHVybiB0aW1pbmdTcGFuRGF0YTtcbiAgfVxuICByZXR1cm4gW1xuICAgIC4uLnRpbWluZ1NwYW5EYXRhLFxuICAgIFsnaHR0cC5yZXF1ZXN0LnJlZGlyZWN0X3N0YXJ0JywgZ2V0QWJzb2x1dGVUaW1lKHJlc291cmNlVGltaW5nLnJlZGlyZWN0U3RhcnQpXSxcbiAgICBbJ2h0dHAucmVxdWVzdC5mZXRjaF9zdGFydCcsIGdldEFic29sdXRlVGltZShyZXNvdXJjZVRpbWluZy5mZXRjaFN0YXJ0KV0sXG4gICAgWydodHRwLnJlcXVlc3QuZG9tYWluX2xvb2t1cF9zdGFydCcsIGdldEFic29sdXRlVGltZShyZXNvdXJjZVRpbWluZy5kb21haW5Mb29rdXBTdGFydCldLFxuICAgIFsnaHR0cC5yZXF1ZXN0LmRvbWFpbl9sb29rdXBfZW5kJywgZ2V0QWJzb2x1dGVUaW1lKHJlc291cmNlVGltaW5nLmRvbWFpbkxvb2t1cEVuZCldLFxuICAgIFsnaHR0cC5yZXF1ZXN0LmNvbm5lY3Rfc3RhcnQnLCBnZXRBYnNvbHV0ZVRpbWUocmVzb3VyY2VUaW1pbmcuY29ubmVjdFN0YXJ0KV0sXG4gICAgWydodHRwLnJlcXVlc3Quc2VjdXJlX2Nvbm5lY3Rpb25fc3RhcnQnLCBnZXRBYnNvbHV0ZVRpbWUocmVzb3VyY2VUaW1pbmcuc2VjdXJlQ29ubmVjdGlvblN0YXJ0KV0sXG4gICAgWydodHRwLnJlcXVlc3QuY29ubmVjdGlvbl9lbmQnLCBnZXRBYnNvbHV0ZVRpbWUocmVzb3VyY2VUaW1pbmcuY29ubmVjdEVuZCldLFxuICAgIFsnaHR0cC5yZXF1ZXN0LnJlcXVlc3Rfc3RhcnQnLCBnZXRBYnNvbHV0ZVRpbWUocmVzb3VyY2VUaW1pbmcucmVxdWVzdFN0YXJ0KV0sXG4gICAgWydodHRwLnJlcXVlc3QucmVzcG9uc2Vfc3RhcnQnLCBnZXRBYnNvbHV0ZVRpbWUocmVzb3VyY2VUaW1pbmcucmVzcG9uc2VTdGFydCldLFxuICAgIFsnaHR0cC5yZXF1ZXN0LnJlc3BvbnNlX2VuZCcsIGdldEFic29sdXRlVGltZShyZXNvdXJjZVRpbWluZy5yZXNwb25zZUVuZCldLFxuICBdO1xufVxuXG4vKipcbiAqIEEgZnVuY3Rpb24gdGhhdCBkZXRlcm1pbmVzIHdoZXRoZXIgdG8gYXR0YWNoIHRyYWNpbmcgaGVhZGVycyB0byBhIHJlcXVlc3QuXG4gKiBUaGlzIHdhcyBleHRyYWN0ZWQgZnJvbSBgaW5zdHJ1bWVudE91dGdvaW5nUmVxdWVzdHNgIHRvIG1ha2UgaXQgZWFzaWVyIHRvIHRlc3Qgc2hvdWxkQXR0YWNoSGVhZGVycy5cbiAqIFdlIG9ubHkgZXhwb3J0IHRoaXMgZnVjdGlvbiBmb3IgdGVzdGluZyBwdXJwb3Nlcy5cbiAqL1xuZnVuY3Rpb24gc2hvdWxkQXR0YWNoSGVhZGVycyh1cmwsIHRyYWNlUHJvcGFnYXRpb25UYXJnZXRzKSB7XG4gIHJldHVybiBzdHJpbmdNYXRjaGVzU29tZVBhdHRlcm4odXJsLCB0cmFjZVByb3BhZ2F0aW9uVGFyZ2V0cyB8fCBERUZBVUxUX1RSQUNFX1BST1BBR0FUSU9OX1RBUkdFVFMpO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhbmQgdHJhY2sgZmV0Y2ggcmVxdWVzdCBzcGFuc1xuICpcbiAqIEByZXR1cm5zIFNwYW4gaWYgYSBzcGFuIHdhcyBjcmVhdGVkLCBvdGhlcndpc2Ugdm9pZC5cbiAqL1xuZnVuY3Rpb24gZmV0Y2hDYWxsYmFjayhcbiAgaGFuZGxlckRhdGEsXG4gIHNob3VsZENyZWF0ZVNwYW4sXG4gIHNob3VsZEF0dGFjaEhlYWRlcnMsXG4gIHNwYW5zLFxuKSB7XG4gIGlmICghaGFzVHJhY2luZ0VuYWJsZWQoKSB8fCAhaGFuZGxlckRhdGEuZmV0Y2hEYXRhKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGNvbnN0IHNob3VsZENyZWF0ZVNwYW5SZXN1bHQgPSBzaG91bGRDcmVhdGVTcGFuKGhhbmRsZXJEYXRhLmZldGNoRGF0YS51cmwpO1xuXG4gIGlmIChoYW5kbGVyRGF0YS5lbmRUaW1lc3RhbXAgJiYgc2hvdWxkQ3JlYXRlU3BhblJlc3VsdCkge1xuICAgIGNvbnN0IHNwYW5JZCA9IGhhbmRsZXJEYXRhLmZldGNoRGF0YS5fX3NwYW47XG4gICAgaWYgKCFzcGFuSWQpIHJldHVybjtcblxuICAgIGNvbnN0IHNwYW4gPSBzcGFuc1tzcGFuSWRdO1xuICAgIGlmIChzcGFuKSB7XG4gICAgICBpZiAoaGFuZGxlckRhdGEucmVzcG9uc2UpIHtcbiAgICAgICAgLy8gVE9ETyAoa21jbGIpIHJlbW92ZSB0aGlzIG9uY2UgdHlwZXMgUFIgZ29lcyB0aHJvdWdoXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgICAgICAgc3Bhbi5zZXRIdHRwU3RhdHVzKGhhbmRsZXJEYXRhLnJlc3BvbnNlLnN0YXR1cyk7XG5cbiAgICAgICAgY29uc3QgY29udGVudExlbmd0aCA9XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICAgICAgICAgIGhhbmRsZXJEYXRhLnJlc3BvbnNlICYmIGhhbmRsZXJEYXRhLnJlc3BvbnNlLmhlYWRlcnMgJiYgaGFuZGxlckRhdGEucmVzcG9uc2UuaGVhZGVycy5nZXQoJ2NvbnRlbnQtbGVuZ3RoJyk7XG5cbiAgICAgICAgY29uc3QgY29udGVudExlbmd0aE51bSA9IHBhcnNlSW50KGNvbnRlbnRMZW5ndGgpO1xuICAgICAgICBpZiAoY29udGVudExlbmd0aE51bSA+IDApIHtcbiAgICAgICAgICBzcGFuLnNldERhdGEoJ2h0dHAucmVzcG9uc2VfY29udGVudF9sZW5ndGgnLCBjb250ZW50TGVuZ3RoTnVtKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChoYW5kbGVyRGF0YS5lcnJvcikge1xuICAgICAgICBzcGFuLnNldFN0YXR1cygnaW50ZXJuYWxfZXJyb3InKTtcbiAgICAgIH1cbiAgICAgIHNwYW4uZmluaXNoKCk7XG5cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZHluYW1pYy1kZWxldGVcbiAgICAgIGRlbGV0ZSBzcGFuc1tzcGFuSWRdO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgY29uc3QgaHViID0gZ2V0Q3VycmVudEh1YigpO1xuICBjb25zdCBzY29wZSA9IGh1Yi5nZXRTY29wZSgpO1xuICBjb25zdCBjbGllbnQgPSBodWIuZ2V0Q2xpZW50KCk7XG4gIGNvbnN0IHBhcmVudFNwYW4gPSBzY29wZS5nZXRTcGFuKCk7XG5cbiAgY29uc3QgeyBtZXRob2QsIHVybCB9ID0gaGFuZGxlckRhdGEuZmV0Y2hEYXRhO1xuXG4gIGNvbnN0IHNwYW4gPVxuICAgIHNob3VsZENyZWF0ZVNwYW5SZXN1bHQgJiYgcGFyZW50U3BhblxuICAgICAgPyBwYXJlbnRTcGFuLnN0YXJ0Q2hpbGQoe1xuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIHVybCxcbiAgICAgICAgICAgIHR5cGU6ICdmZXRjaCcsXG4gICAgICAgICAgICAnaHR0cC5tZXRob2QnOiBtZXRob2QsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogYCR7bWV0aG9kfSAke3VybH1gLFxuICAgICAgICAgIG9wOiAnaHR0cC5jbGllbnQnLFxuICAgICAgICB9KVxuICAgICAgOiB1bmRlZmluZWQ7XG5cbiAgaWYgKHNwYW4pIHtcbiAgICBoYW5kbGVyRGF0YS5mZXRjaERhdGEuX19zcGFuID0gc3Bhbi5zcGFuSWQ7XG4gICAgc3BhbnNbc3Bhbi5zcGFuSWRdID0gc3BhbjtcbiAgfVxuXG4gIGlmIChzaG91bGRBdHRhY2hIZWFkZXJzKGhhbmRsZXJEYXRhLmZldGNoRGF0YS51cmwpICYmIGNsaWVudCkge1xuICAgIGNvbnN0IHJlcXVlc3QgPSBoYW5kbGVyRGF0YS5hcmdzWzBdO1xuXG4gICAgLy8gSW4gY2FzZSB0aGUgdXNlciBoYXNuJ3Qgc2V0IHRoZSBzZWNvbmQgYXJndW1lbnQgb2YgYSBmZXRjaCBjYWxsIHdlIGRlZmF1bHQgaXQgdG8gYHt9YC5cbiAgICBoYW5kbGVyRGF0YS5hcmdzWzFdID0gaGFuZGxlckRhdGEuYXJnc1sxXSB8fCB7fTtcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgY29uc3Qgb3B0aW9ucyA9IGhhbmRsZXJEYXRhLmFyZ3NbMV07XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueSwgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzXG4gICAgb3B0aW9ucy5oZWFkZXJzID0gYWRkVHJhY2luZ0hlYWRlcnNUb0ZldGNoUmVxdWVzdChyZXF1ZXN0LCBjbGllbnQsIHNjb3BlLCBvcHRpb25zKTtcbiAgfVxuXG4gIHJldHVybiBzcGFuO1xufVxuXG4vKipcbiAqIEFkZHMgc2VudHJ5LXRyYWNlIGFuZCBiYWdnYWdlIGhlYWRlcnMgdG8gdGhlIHZhcmlvdXMgZm9ybXMgb2YgZmV0Y2ggaGVhZGVyc1xuICovXG5mdW5jdGlvbiBhZGRUcmFjaW5nSGVhZGVyc1RvRmV0Y2hSZXF1ZXN0KFxuICByZXF1ZXN0LCAvLyB1bmtub3duIGlzIGFjdHVhbGx5IHR5cGUgUmVxdWVzdCBidXQgd2UgY2FuJ3QgZXhwb3J0IERPTSB0eXBlcyBmcm9tIHRoaXMgcGFja2FnZSxcbiAgY2xpZW50LFxuICBzY29wZSxcbiAgb3B0aW9uc1xuXG4sXG4pIHtcbiAgY29uc3Qgc3BhbiA9IHNjb3BlLmdldFNwYW4oKTtcblxuICBjb25zdCB0cmFuc2FjdGlvbiA9IHNwYW4gJiYgc3Bhbi50cmFuc2FjdGlvbjtcblxuICBjb25zdCB7IHRyYWNlSWQsIHNhbXBsZWQsIGRzYyB9ID0gc2NvcGUuZ2V0UHJvcGFnYXRpb25Db250ZXh0KCk7XG5cbiAgY29uc3Qgc2VudHJ5VHJhY2VIZWFkZXIgPSBzcGFuID8gc3Bhbi50b1RyYWNlcGFyZW50KCkgOiBnZW5lcmF0ZVNlbnRyeVRyYWNlSGVhZGVyKHRyYWNlSWQsIHVuZGVmaW5lZCwgc2FtcGxlZCk7XG4gIGNvbnN0IGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgPSB0cmFuc2FjdGlvblxuICAgID8gdHJhbnNhY3Rpb24uZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dCgpXG4gICAgOiBkc2NcbiAgICA/IGRzY1xuICAgIDogZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dEZyb21DbGllbnQodHJhY2VJZCwgY2xpZW50LCBzY29wZSk7XG5cbiAgY29uc3Qgc2VudHJ5QmFnZ2FnZUhlYWRlciA9IGR5bmFtaWNTYW1wbGluZ0NvbnRleHRUb1NlbnRyeUJhZ2dhZ2VIZWFkZXIoZHluYW1pY1NhbXBsaW5nQ29udGV4dCk7XG5cbiAgY29uc3QgaGVhZGVycyA9XG4gICAgdHlwZW9mIFJlcXVlc3QgIT09ICd1bmRlZmluZWQnICYmIGlzSW5zdGFuY2VPZihyZXF1ZXN0LCBSZXF1ZXN0KSA/IChyZXF1ZXN0ICkuaGVhZGVycyA6IG9wdGlvbnMuaGVhZGVycztcblxuICBpZiAoIWhlYWRlcnMpIHtcbiAgICByZXR1cm4geyAnc2VudHJ5LXRyYWNlJzogc2VudHJ5VHJhY2VIZWFkZXIsIGJhZ2dhZ2U6IHNlbnRyeUJhZ2dhZ2VIZWFkZXIgfTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgSGVhZGVycyAhPT0gJ3VuZGVmaW5lZCcgJiYgaXNJbnN0YW5jZU9mKGhlYWRlcnMsIEhlYWRlcnMpKSB7XG4gICAgY29uc3QgbmV3SGVhZGVycyA9IG5ldyBIZWFkZXJzKGhlYWRlcnMgKTtcblxuICAgIG5ld0hlYWRlcnMuYXBwZW5kKCdzZW50cnktdHJhY2UnLCBzZW50cnlUcmFjZUhlYWRlcik7XG5cbiAgICBpZiAoc2VudHJ5QmFnZ2FnZUhlYWRlcikge1xuICAgICAgLy8gSWYgdGhlIHNhbWUgaGVhZGVyIGlzIGFwcGVuZGVkIG11bHRpcGxlIHRpbWVzIHRoZSBicm93c2VyIHdpbGwgbWVyZ2UgdGhlIHZhbHVlcyBpbnRvIGEgc2luZ2xlIHJlcXVlc3QgaGVhZGVyLlxuICAgICAgLy8gSXRzIHRoZXJlZm9yZSBzYWZlIHRvIHNpbXBseSBwdXNoIGEgXCJiYWdnYWdlXCIgZW50cnksIGV2ZW4gdGhvdWdoIHRoZXJlIG1pZ2h0IGFscmVhZHkgYmUgYW5vdGhlciBiYWdnYWdlIGhlYWRlci5cbiAgICAgIG5ld0hlYWRlcnMuYXBwZW5kKEJBR0dBR0VfSEVBREVSX05BTUUsIHNlbnRyeUJhZ2dhZ2VIZWFkZXIpO1xuICAgIH1cblxuICAgIHJldHVybiBuZXdIZWFkZXJzIDtcbiAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGhlYWRlcnMpKSB7XG4gICAgY29uc3QgbmV3SGVhZGVycyA9IFsuLi5oZWFkZXJzLCBbJ3NlbnRyeS10cmFjZScsIHNlbnRyeVRyYWNlSGVhZGVyXV07XG5cbiAgICBpZiAoc2VudHJ5QmFnZ2FnZUhlYWRlcikge1xuICAgICAgLy8gSWYgdGhlcmUgYXJlIG11bHRpcGxlIGVudHJpZXMgd2l0aCB0aGUgc2FtZSBrZXksIHRoZSBicm93c2VyIHdpbGwgbWVyZ2UgdGhlIHZhbHVlcyBpbnRvIGEgc2luZ2xlIHJlcXVlc3QgaGVhZGVyLlxuICAgICAgLy8gSXRzIHRoZXJlZm9yZSBzYWZlIHRvIHNpbXBseSBwdXNoIGEgXCJiYWdnYWdlXCIgZW50cnksIGV2ZW4gdGhvdWdoIHRoZXJlIG1pZ2h0IGFscmVhZHkgYmUgYW5vdGhlciBiYWdnYWdlIGhlYWRlci5cbiAgICAgIG5ld0hlYWRlcnMucHVzaChbQkFHR0FHRV9IRUFERVJfTkFNRSwgc2VudHJ5QmFnZ2FnZUhlYWRlcl0pO1xuICAgIH1cblxuICAgIHJldHVybiBuZXdIZWFkZXJzIDtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBleGlzdGluZ0JhZ2dhZ2VIZWFkZXIgPSAnYmFnZ2FnZScgaW4gaGVhZGVycyA/IGhlYWRlcnMuYmFnZ2FnZSA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBuZXdCYWdnYWdlSGVhZGVycyA9IFtdO1xuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZXhpc3RpbmdCYWdnYWdlSGVhZGVyKSkge1xuICAgICAgbmV3QmFnZ2FnZUhlYWRlcnMucHVzaCguLi5leGlzdGluZ0JhZ2dhZ2VIZWFkZXIpO1xuICAgIH0gZWxzZSBpZiAoZXhpc3RpbmdCYWdnYWdlSGVhZGVyKSB7XG4gICAgICBuZXdCYWdnYWdlSGVhZGVycy5wdXNoKGV4aXN0aW5nQmFnZ2FnZUhlYWRlcik7XG4gICAgfVxuXG4gICAgaWYgKHNlbnRyeUJhZ2dhZ2VIZWFkZXIpIHtcbiAgICAgIG5ld0JhZ2dhZ2VIZWFkZXJzLnB1c2goc2VudHJ5QmFnZ2FnZUhlYWRlcik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLihoZWFkZXJzICksXG4gICAgICAnc2VudHJ5LXRyYWNlJzogc2VudHJ5VHJhY2VIZWFkZXIsXG4gICAgICBiYWdnYWdlOiBuZXdCYWdnYWdlSGVhZGVycy5sZW5ndGggPiAwID8gbmV3QmFnZ2FnZUhlYWRlcnMuam9pbignLCcpIDogdW5kZWZpbmVkLFxuICAgIH07XG4gIH1cbn1cblxuLyoqXG4gKiBDcmVhdGUgYW5kIHRyYWNrIHhociByZXF1ZXN0IHNwYW5zXG4gKlxuICogQHJldHVybnMgU3BhbiBpZiBhIHNwYW4gd2FzIGNyZWF0ZWQsIG90aGVyd2lzZSB2b2lkLlxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29tcGxleGl0eVxuZnVuY3Rpb24geGhyQ2FsbGJhY2soXG4gIGhhbmRsZXJEYXRhLFxuICBzaG91bGRDcmVhdGVTcGFuLFxuICBzaG91bGRBdHRhY2hIZWFkZXJzLFxuICBzcGFucyxcbikge1xuICBjb25zdCB4aHIgPSBoYW5kbGVyRGF0YS54aHI7XG4gIGNvbnN0IHNlbnRyeVhockRhdGEgPSB4aHIgJiYgeGhyW1NFTlRSWV9YSFJfREFUQV9LRVldO1xuXG4gIGlmICghaGFzVHJhY2luZ0VuYWJsZWQoKSB8fCAoeGhyICYmIHhoci5fX3NlbnRyeV9vd25fcmVxdWVzdF9fKSB8fCAheGhyIHx8ICFzZW50cnlYaHJEYXRhKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGNvbnN0IHNob3VsZENyZWF0ZVNwYW5SZXN1bHQgPSBzaG91bGRDcmVhdGVTcGFuKHNlbnRyeVhockRhdGEudXJsKTtcblxuICAvLyBjaGVjayBmaXJzdCBpZiB0aGUgcmVxdWVzdCBoYXMgZmluaXNoZWQgYW5kIGlzIHRyYWNrZWQgYnkgYW4gZXhpc3Rpbmcgc3BhbiB3aGljaCBzaG91bGQgbm93IGVuZFxuICBpZiAoaGFuZGxlckRhdGEuZW5kVGltZXN0YW1wICYmIHNob3VsZENyZWF0ZVNwYW5SZXN1bHQpIHtcbiAgICBjb25zdCBzcGFuSWQgPSB4aHIuX19zZW50cnlfeGhyX3NwYW5faWRfXztcbiAgICBpZiAoIXNwYW5JZCkgcmV0dXJuO1xuXG4gICAgY29uc3Qgc3BhbiA9IHNwYW5zW3NwYW5JZF07XG4gICAgaWYgKHNwYW4pIHtcbiAgICAgIHNwYW4uc2V0SHR0cFN0YXR1cyhzZW50cnlYaHJEYXRhLnN0YXR1c19jb2RlKTtcbiAgICAgIHNwYW4uZmluaXNoKCk7XG5cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZHluYW1pYy1kZWxldGVcbiAgICAgIGRlbGV0ZSBzcGFuc1tzcGFuSWRdO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgY29uc3QgaHViID0gZ2V0Q3VycmVudEh1YigpO1xuICBjb25zdCBzY29wZSA9IGh1Yi5nZXRTY29wZSgpO1xuICBjb25zdCBwYXJlbnRTcGFuID0gc2NvcGUuZ2V0U3BhbigpO1xuXG4gIGNvbnN0IHNwYW4gPVxuICAgIHNob3VsZENyZWF0ZVNwYW5SZXN1bHQgJiYgcGFyZW50U3BhblxuICAgICAgPyBwYXJlbnRTcGFuLnN0YXJ0Q2hpbGQoe1xuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIC4uLnNlbnRyeVhockRhdGEuZGF0YSxcbiAgICAgICAgICAgIHR5cGU6ICd4aHInLFxuICAgICAgICAgICAgJ2h0dHAubWV0aG9kJzogc2VudHJ5WGhyRGF0YS5tZXRob2QsXG4gICAgICAgICAgICB1cmw6IHNlbnRyeVhockRhdGEudXJsLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IGAke3NlbnRyeVhockRhdGEubWV0aG9kfSAke3NlbnRyeVhockRhdGEudXJsfWAsXG4gICAgICAgICAgb3A6ICdodHRwLmNsaWVudCcsXG4gICAgICAgIH0pXG4gICAgICA6IHVuZGVmaW5lZDtcblxuICBpZiAoc3Bhbikge1xuICAgIHhoci5fX3NlbnRyeV94aHJfc3Bhbl9pZF9fID0gc3Bhbi5zcGFuSWQ7XG4gICAgc3BhbnNbeGhyLl9fc2VudHJ5X3hocl9zcGFuX2lkX19dID0gc3BhbjtcbiAgfVxuXG4gIGlmICh4aHIuc2V0UmVxdWVzdEhlYWRlciAmJiBzaG91bGRBdHRhY2hIZWFkZXJzKHNlbnRyeVhockRhdGEudXJsKSkge1xuICAgIGlmIChzcGFuKSB7XG4gICAgICBjb25zdCB0cmFuc2FjdGlvbiA9IHNwYW4gJiYgc3Bhbi50cmFuc2FjdGlvbjtcbiAgICAgIGNvbnN0IGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgPSB0cmFuc2FjdGlvbiAmJiB0cmFuc2FjdGlvbi5nZXREeW5hbWljU2FtcGxpbmdDb250ZXh0KCk7XG4gICAgICBjb25zdCBzZW50cnlCYWdnYWdlSGVhZGVyID0gZHluYW1pY1NhbXBsaW5nQ29udGV4dFRvU2VudHJ5QmFnZ2FnZUhlYWRlcihkeW5hbWljU2FtcGxpbmdDb250ZXh0KTtcbiAgICAgIHNldEhlYWRlck9uWGhyKHhociwgc3Bhbi50b1RyYWNlcGFyZW50KCksIHNlbnRyeUJhZ2dhZ2VIZWFkZXIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBjbGllbnQgPSBodWIuZ2V0Q2xpZW50KCk7XG4gICAgICBjb25zdCB7IHRyYWNlSWQsIHNhbXBsZWQsIGRzYyB9ID0gc2NvcGUuZ2V0UHJvcGFnYXRpb25Db250ZXh0KCk7XG4gICAgICBjb25zdCBzZW50cnlUcmFjZUhlYWRlciA9IGdlbmVyYXRlU2VudHJ5VHJhY2VIZWFkZXIodHJhY2VJZCwgdW5kZWZpbmVkLCBzYW1wbGVkKTtcbiAgICAgIGNvbnN0IGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgPVxuICAgICAgICBkc2MgfHwgKGNsaWVudCA/IGdldER5bmFtaWNTYW1wbGluZ0NvbnRleHRGcm9tQ2xpZW50KHRyYWNlSWQsIGNsaWVudCwgc2NvcGUpIDogdW5kZWZpbmVkKTtcbiAgICAgIGNvbnN0IHNlbnRyeUJhZ2dhZ2VIZWFkZXIgPSBkeW5hbWljU2FtcGxpbmdDb250ZXh0VG9TZW50cnlCYWdnYWdlSGVhZGVyKGR5bmFtaWNTYW1wbGluZ0NvbnRleHQpO1xuICAgICAgc2V0SGVhZGVyT25YaHIoeGhyLCBzZW50cnlUcmFjZUhlYWRlciwgc2VudHJ5QmFnZ2FnZUhlYWRlcik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHNwYW47XG59XG5cbmZ1bmN0aW9uIHNldEhlYWRlck9uWGhyKFxuICB4aHIsXG4gIHNlbnRyeVRyYWNlSGVhZGVyLFxuICBzZW50cnlCYWdnYWdlSGVhZGVyLFxuKSB7XG4gIHRyeSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cbiAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcignc2VudHJ5LXRyYWNlJywgc2VudHJ5VHJhY2VIZWFkZXIpO1xuICAgIGlmIChzZW50cnlCYWdnYWdlSGVhZGVyKSB7XG4gICAgICAvLyBGcm9tIE1ETjogXCJJZiB0aGlzIG1ldGhvZCBpcyBjYWxsZWQgc2V2ZXJhbCB0aW1lcyB3aXRoIHRoZSBzYW1lIGhlYWRlciwgdGhlIHZhbHVlcyBhcmUgbWVyZ2VkIGludG8gb25lIHNpbmdsZSByZXF1ZXN0IGhlYWRlci5cIlxuICAgICAgLy8gV2UgY2FuIHRoZXJlZm9yZSBzaW1wbHkgc2V0IGEgYmFnZ2FnZSBoZWFkZXIgd2l0aG91dCBjaGVja2luZyB3aGF0IHdhcyB0aGVyZSBiZWZvcmVcbiAgICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9YTUxIdHRwUmVxdWVzdC9zZXRSZXF1ZXN0SGVhZGVyXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvblxuICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoQkFHR0FHRV9IRUFERVJfTkFNRSwgc2VudHJ5QmFnZ2FnZUhlYWRlcik7XG4gICAgfVxuICB9IGNhdGNoIChfKSB7XG4gICAgLy8gRXJyb3I6IEludmFsaWRTdGF0ZUVycm9yOiBGYWlsZWQgdG8gZXhlY3V0ZSAnc2V0UmVxdWVzdEhlYWRlcicgb24gJ1hNTEh0dHBSZXF1ZXN0JzogVGhlIG9iamVjdCdzIHN0YXRlIG11c3QgYmUgT1BFTkVELlxuICB9XG59XG5cbmV4cG9ydCB7IERFRkFVTFRfVFJBQ0VfUFJPUEFHQVRJT05fVEFSR0VUUywgYWRkVHJhY2luZ0hlYWRlcnNUb0ZldGNoUmVxdWVzdCwgZGVmYXVsdFJlcXVlc3RJbnN0cnVtZW50YXRpb25PcHRpb25zLCBleHRyYWN0TmV0d29ya1Byb3RvY29sLCBmZXRjaENhbGxiYWNrLCBpbnN0cnVtZW50T3V0Z29pbmdSZXF1ZXN0cywgc2hvdWxkQXR0YWNoSGVhZGVycywgeGhyQ2FsbGJhY2sgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3QuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/request.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/router.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/router.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"instrumentRoutingWithDefaults\": function() { return /* binding */ instrumentRoutingWithDefaults; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/instrument.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nfunction instrumentRoutingWithDefaults(\n  customStartTransaction,\n  startTransactionOnPageLoad = true,\n  startTransactionOnLocationChange = true,\n) {\n  if (!_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW || !_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.href;\n\n  let activeTransaction;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({\n      name: _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.pathname,\n      // pageload should always start at timeOrigin (and needs to be in s, not ms)\n      startTimestamp: _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.browserPerformanceTimeOrigin ? _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.browserPerformanceTimeOrigin / 1000 : undefined,\n      op: 'pageload',\n      metadata: { source: 'url' },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addInstrumentationHandler)('history', ({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.finish();\n        }\n        activeTransaction = customStartTransaction({\n          name: _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.pathname,\n          op: 'navigation',\n          metadata: { source: 'url' },\n        });\n      }\n    });\n  }\n}\n\n\n//# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3JvdXRlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFnRztBQUM1RDs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sNkNBQU0sS0FBSyxzREFBZTtBQUNqQyxxRUFBcUUsc0RBQVc7QUFDaEY7QUFDQTs7QUFFQSxvQkFBb0IsMkRBQW9COztBQUV4QztBQUNBO0FBQ0E7QUFDQSxZQUFZLCtEQUF3QjtBQUNwQztBQUNBLHNCQUFzQix1RUFBNEIsR0FBRyx1RUFBNEI7QUFDakY7QUFDQSxrQkFBa0IsZUFBZTtBQUNqQyxLQUFLO0FBQ0w7O0FBRUE7QUFDQSxJQUFJLHdFQUF5QixlQUFlLFVBQVU7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLHFEQUFVLHFEQUFxRCxxQkFBcUI7QUFDL0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsK0RBQXdCO0FBQ3hDO0FBQ0Esc0JBQXNCLGVBQWU7QUFDckMsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRXlDO0FBQ3pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3JvdXRlci5qcz9mODY3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvZ2dlciwgYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbiwgYWRkSW5zdHJ1bWVudGF0aW9uSGFuZGxlciB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnLi90eXBlcy5qcyc7XG5cbi8qKlxuICogRGVmYXVsdCBmdW5jdGlvbiBpbXBsZW1lbnRpbmcgcGFnZWxvYWQgYW5kIG5hdmlnYXRpb24gdHJhbnNhY3Rpb25zXG4gKi9cbmZ1bmN0aW9uIGluc3RydW1lbnRSb3V0aW5nV2l0aERlZmF1bHRzKFxuICBjdXN0b21TdGFydFRyYW5zYWN0aW9uLFxuICBzdGFydFRyYW5zYWN0aW9uT25QYWdlTG9hZCA9IHRydWUsXG4gIHN0YXJ0VHJhbnNhY3Rpb25PbkxvY2F0aW9uQ2hhbmdlID0gdHJ1ZSxcbikge1xuICBpZiAoIVdJTkRPVyB8fCAhV0lORE9XLmxvY2F0aW9uKSB7XG4gICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBsb2dnZXIud2FybignQ291bGQgbm90IGluaXRpYWxpemUgcm91dGluZyBpbnN0cnVtZW50YXRpb24gZHVlIHRvIGludmFsaWQgbG9jYXRpb24nKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBsZXQgc3RhcnRpbmdVcmwgPSBXSU5ET1cubG9jYXRpb24uaHJlZjtcblxuICBsZXQgYWN0aXZlVHJhbnNhY3Rpb247XG4gIGlmIChzdGFydFRyYW5zYWN0aW9uT25QYWdlTG9hZCkge1xuICAgIGFjdGl2ZVRyYW5zYWN0aW9uID0gY3VzdG9tU3RhcnRUcmFuc2FjdGlvbih7XG4gICAgICBuYW1lOiBXSU5ET1cubG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAvLyBwYWdlbG9hZCBzaG91bGQgYWx3YXlzIHN0YXJ0IGF0IHRpbWVPcmlnaW4gKGFuZCBuZWVkcyB0byBiZSBpbiBzLCBub3QgbXMpXG4gICAgICBzdGFydFRpbWVzdGFtcDogYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbiA/IGJyb3dzZXJQZXJmb3JtYW5jZVRpbWVPcmlnaW4gLyAxMDAwIDogdW5kZWZpbmVkLFxuICAgICAgb3A6ICdwYWdlbG9hZCcsXG4gICAgICBtZXRhZGF0YTogeyBzb3VyY2U6ICd1cmwnIH0sXG4gICAgfSk7XG4gIH1cblxuICBpZiAoc3RhcnRUcmFuc2FjdGlvbk9uTG9jYXRpb25DaGFuZ2UpIHtcbiAgICBhZGRJbnN0cnVtZW50YXRpb25IYW5kbGVyKCdoaXN0b3J5JywgKHsgdG8sIGZyb20gfSkgPT4ge1xuICAgICAgLyoqXG4gICAgICAgKiBUaGlzIGVhcmx5IHJldHVybiBpcyB0aGVyZSB0byBhY2NvdW50IGZvciBzb21lIGNhc2VzIHdoZXJlIGEgbmF2aWdhdGlvbiB0cmFuc2FjdGlvbiBzdGFydHMgcmlnaHQgYWZ0ZXJcbiAgICAgICAqIGxvbmctcnVubmluZyBwYWdlbG9hZC4gV2UgbWFrZSBzdXJlIHRoYXQgaWYgYGZyb21gIGlzIHVuZGVmaW5lZCBhbmQgYSB2YWxpZCBgc3RhcnRpbmdVUkxgIGV4aXN0cywgd2UgZG9uJ3RcbiAgICAgICAqIGNyZWF0ZSBhbiB1bmVjY2Vzc2FyeSBuYXZpZ2F0aW9uIHRyYW5zYWN0aW9uLlxuICAgICAgICpcbiAgICAgICAqIFRoaXMgd2FzIGhhcmQgdG8gZHVwbGljYXRlLCBidXQgdGhpcyBiZWhhdmlvciBzdG9wcGVkIGFzIHNvb24gYXMgdGhpcyBmaXggd2FzIGFwcGxpZWQuIFRoaXMgaXNzdWUgbWlnaHQgYWxzb1xuICAgICAgICogb25seSBiZSBjYXVzZWQgaW4gY2VydGFpbiBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMgd2hlcmUgdGhlIHVzYWdlIG9mIGEgaG90IG1vZHVsZSByZWxvYWRlciBpcyBjYXVzaW5nXG4gICAgICAgKiBlcnJvcnMuXG4gICAgICAgKi9cbiAgICAgIGlmIChmcm9tID09PSB1bmRlZmluZWQgJiYgc3RhcnRpbmdVcmwgJiYgc3RhcnRpbmdVcmwuaW5kZXhPZih0bykgIT09IC0xKSB7XG4gICAgICAgIHN0YXJ0aW5nVXJsID0gdW5kZWZpbmVkO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChmcm9tICE9PSB0bykge1xuICAgICAgICBzdGFydGluZ1VybCA9IHVuZGVmaW5lZDtcbiAgICAgICAgaWYgKGFjdGl2ZVRyYW5zYWN0aW9uKSB7XG4gICAgICAgICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBsb2dnZXIubG9nKGBbVHJhY2luZ10gRmluaXNoaW5nIGN1cnJlbnQgdHJhbnNhY3Rpb24gd2l0aCBvcDogJHthY3RpdmVUcmFuc2FjdGlvbi5vcH1gKTtcbiAgICAgICAgICAvLyBJZiB0aGVyZSdzIGFuIG9wZW4gdHJhbnNhY3Rpb24gb24gdGhlIHNjb3BlLCB3ZSBuZWVkIHRvIGZpbmlzaCBpdCBiZWZvcmUgY3JlYXRpbmcgYW4gbmV3IG9uZS5cbiAgICAgICAgICBhY3RpdmVUcmFuc2FjdGlvbi5maW5pc2goKTtcbiAgICAgICAgfVxuICAgICAgICBhY3RpdmVUcmFuc2FjdGlvbiA9IGN1c3RvbVN0YXJ0VHJhbnNhY3Rpb24oe1xuICAgICAgICAgIG5hbWU6IFdJTkRPVy5sb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgICBvcDogJ25hdmlnYXRpb24nLFxuICAgICAgICAgIG1ldGFkYXRhOiB7IHNvdXJjZTogJ3VybCcgfSxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IHsgaW5zdHJ1bWVudFJvdXRpbmdXaXRoRGVmYXVsdHMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdXRlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/router.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/types.js":
/*!********************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/types.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WINDOW\": function() { return /* binding */ WINDOW; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\n\n//# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3R5cGVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJDOztBQUUzQyxlQUFlLHFEQUFVOztBQUVQO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3R5cGVzLmpzPzMxMTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR0xPQkFMX09CSiB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG5jb25zdCBXSU5ET1cgPSBHTE9CQUxfT0JKIDtcblxuZXhwb3J0IHsgV0lORE9XIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/types.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getCLS.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getCLS.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"onCLS\": function() { return /* binding */ onCLS; }\n/* harmony export */ });\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/initMetric.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js\");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/observe.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js\");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/onHidden.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js\");\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the [CLS](https://web.dev/cls/) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/cls/#layout-shift-score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onCLS = (onReport) => {\n  const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_0__.initMetric)('CLS', 0);\n  let report;\n\n  let sessionValue = 0;\n  let sessionEntries = [];\n\n  // const handleEntries = (entries: Metric['entries']) => {\n  const handleEntries = (entries) => {\n    entries.forEach(entry => {\n      // Only count layout shifts without recent user input.\n      if (!entry.hadRecentInput) {\n        const firstSessionEntry = sessionEntries[0];\n        const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n        // If the entry occurred less than 1 second after the previous entry and\n        // less than 5 seconds after the first entry in the session, include the\n        // entry in the current session. Otherwise, start a new session.\n        if (\n          sessionValue &&\n          sessionEntries.length !== 0 &&\n          entry.startTime - lastSessionEntry.startTime < 1000 &&\n          entry.startTime - firstSessionEntry.startTime < 5000\n        ) {\n          sessionValue += entry.value;\n          sessionEntries.push(entry);\n        } else {\n          sessionValue = entry.value;\n          sessionEntries = [entry];\n        }\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          if (report) {\n            report();\n          }\n        }\n      }\n    });\n  };\n\n  const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_1__.observe)('layout-shift', handleEntries);\n  if (po) {\n    report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_2__.bindReporter)(onReport, metric);\n\n    const stopListening = () => {\n      handleEntries(po.takeRecords() );\n      report(true);\n    };\n\n    (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_3__.onHidden)(stopListening);\n\n    return stopListening;\n  }\n\n  return;\n};\n\n\n//# sourceMappingURL=getCLS.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvZ2V0Q0xTLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXFEO0FBQ0o7QUFDTjtBQUNFOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsOERBQVU7QUFDM0I7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQSxhQUFhLHdEQUFPO0FBQ3BCO0FBQ0EsYUFBYSxrRUFBWTs7QUFFekI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSwwREFBUTs7QUFFWjtBQUNBOztBQUVBO0FBQ0E7O0FBRWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvZ2V0Q0xTLmpzPzc0MmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmluZFJlcG9ydGVyIH0gZnJvbSAnLi9saWIvYmluZFJlcG9ydGVyLmpzJztcbmltcG9ydCB7IGluaXRNZXRyaWMgfSBmcm9tICcuL2xpYi9pbml0TWV0cmljLmpzJztcbmltcG9ydCB7IG9ic2VydmUgfSBmcm9tICcuL2xpYi9vYnNlcnZlLmpzJztcbmltcG9ydCB7IG9uSGlkZGVuIH0gZnJvbSAnLi9saWIvb25IaWRkZW4uanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqXG4gKiBDYWxjdWxhdGVzIHRoZSBbQ0xTXShodHRwczovL3dlYi5kZXYvY2xzLykgdmFsdWUgZm9yIHRoZSBjdXJyZW50IHBhZ2UgYW5kXG4gKiBjYWxscyB0aGUgYGNhbGxiYWNrYCBmdW5jdGlvbiBvbmNlIHRoZSB2YWx1ZSBpcyByZWFkeSB0byBiZSByZXBvcnRlZCwgYWxvbmdcbiAqIHdpdGggYWxsIGBsYXlvdXQtc2hpZnRgIHBlcmZvcm1hbmNlIGVudHJpZXMgdGhhdCB3ZXJlIHVzZWQgaW4gdGhlIG1ldHJpY1xuICogdmFsdWUgY2FsY3VsYXRpb24uIFRoZSByZXBvcnRlZCB2YWx1ZSBpcyBhIGBkb3VibGVgIChjb3JyZXNwb25kaW5nIHRvIGFcbiAqIFtsYXlvdXQgc2hpZnQgc2NvcmVdKGh0dHBzOi8vd2ViLmRldi9jbHMvI2xheW91dC1zaGlmdC1zY29yZSkpLlxuICpcbiAqIElmIHRoZSBgcmVwb3J0QWxsQ2hhbmdlc2AgY29uZmlndXJhdGlvbiBvcHRpb24gaXMgc2V0IHRvIGB0cnVlYCwgdGhlXG4gKiBgY2FsbGJhY2tgIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkIGFzIHNvb24gYXMgdGhlIHZhbHVlIGlzIGluaXRpYWxseVxuICogZGV0ZXJtaW5lZCBhcyB3ZWxsIGFzIGFueSB0aW1lIHRoZSB2YWx1ZSBjaGFuZ2VzIHRocm91Z2hvdXQgdGhlIHBhZ2VcbiAqIGxpZmVzcGFuLlxuICpcbiAqIF8qKkltcG9ydGFudDoqKiBDTFMgc2hvdWxkIGJlIGNvbnRpbnVhbGx5IG1vbml0b3JlZCBmb3IgY2hhbmdlcyB0aHJvdWdob3V0XG4gKiB0aGUgZW50aXJlIGxpZmVzcGFuIG9mIGEgcGFnZeKAlGluY2x1ZGluZyBpZiB0aGUgdXNlciByZXR1cm5zIHRvIHRoZSBwYWdlIGFmdGVyXG4gKiBpdCdzIGJlZW4gaGlkZGVuL2JhY2tncm91bmRlZC4gSG93ZXZlciwgc2luY2UgYnJvd3NlcnMgb2Z0ZW4gW3dpbGwgbm90IGZpcmVcbiAqIGFkZGl0aW9uYWwgY2FsbGJhY2tzIG9uY2UgdGhlIHVzZXIgaGFzIGJhY2tncm91bmRlZCBhXG4gKiBwYWdlXShodHRwczovL2RldmVsb3Blci5jaHJvbWUuY29tL2Jsb2cvcGFnZS1saWZlY3ljbGUtYXBpLyNhZHZpY2UtaGlkZGVuKSxcbiAqIGBjYWxsYmFja2AgaXMgYWx3YXlzIGNhbGxlZCB3aGVuIHRoZSBwYWdlJ3MgdmlzaWJpbGl0eSBzdGF0ZSBjaGFuZ2VzIHRvXG4gKiBoaWRkZW4uIEFzIGEgcmVzdWx0LCB0aGUgYGNhbGxiYWNrYCBmdW5jdGlvbiBtaWdodCBiZSBjYWxsZWQgbXVsdGlwbGUgdGltZXNcbiAqIGR1cmluZyB0aGUgc2FtZSBwYWdlIGxvYWQuX1xuICovXG5jb25zdCBvbkNMUyA9IChvblJlcG9ydCkgPT4ge1xuICBjb25zdCBtZXRyaWMgPSBpbml0TWV0cmljKCdDTFMnLCAwKTtcbiAgbGV0IHJlcG9ydDtcblxuICBsZXQgc2Vzc2lvblZhbHVlID0gMDtcbiAgbGV0IHNlc3Npb25FbnRyaWVzID0gW107XG5cbiAgLy8gY29uc3QgaGFuZGxlRW50cmllcyA9IChlbnRyaWVzOiBNZXRyaWNbJ2VudHJpZXMnXSkgPT4ge1xuICBjb25zdCBoYW5kbGVFbnRyaWVzID0gKGVudHJpZXMpID0+IHtcbiAgICBlbnRyaWVzLmZvckVhY2goZW50cnkgPT4ge1xuICAgICAgLy8gT25seSBjb3VudCBsYXlvdXQgc2hpZnRzIHdpdGhvdXQgcmVjZW50IHVzZXIgaW5wdXQuXG4gICAgICBpZiAoIWVudHJ5LmhhZFJlY2VudElucHV0KSB7XG4gICAgICAgIGNvbnN0IGZpcnN0U2Vzc2lvbkVudHJ5ID0gc2Vzc2lvbkVudHJpZXNbMF07XG4gICAgICAgIGNvbnN0IGxhc3RTZXNzaW9uRW50cnkgPSBzZXNzaW9uRW50cmllc1tzZXNzaW9uRW50cmllcy5sZW5ndGggLSAxXTtcblxuICAgICAgICAvLyBJZiB0aGUgZW50cnkgb2NjdXJyZWQgbGVzcyB0aGFuIDEgc2Vjb25kIGFmdGVyIHRoZSBwcmV2aW91cyBlbnRyeSBhbmRcbiAgICAgICAgLy8gbGVzcyB0aGFuIDUgc2Vjb25kcyBhZnRlciB0aGUgZmlyc3QgZW50cnkgaW4gdGhlIHNlc3Npb24sIGluY2x1ZGUgdGhlXG4gICAgICAgIC8vIGVudHJ5IGluIHRoZSBjdXJyZW50IHNlc3Npb24uIE90aGVyd2lzZSwgc3RhcnQgYSBuZXcgc2Vzc2lvbi5cbiAgICAgICAgaWYgKFxuICAgICAgICAgIHNlc3Npb25WYWx1ZSAmJlxuICAgICAgICAgIHNlc3Npb25FbnRyaWVzLmxlbmd0aCAhPT0gMCAmJlxuICAgICAgICAgIGVudHJ5LnN0YXJ0VGltZSAtIGxhc3RTZXNzaW9uRW50cnkuc3RhcnRUaW1lIDwgMTAwMCAmJlxuICAgICAgICAgIGVudHJ5LnN0YXJ0VGltZSAtIGZpcnN0U2Vzc2lvbkVudHJ5LnN0YXJ0VGltZSA8IDUwMDBcbiAgICAgICAgKSB7XG4gICAgICAgICAgc2Vzc2lvblZhbHVlICs9IGVudHJ5LnZhbHVlO1xuICAgICAgICAgIHNlc3Npb25FbnRyaWVzLnB1c2goZW50cnkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHNlc3Npb25WYWx1ZSA9IGVudHJ5LnZhbHVlO1xuICAgICAgICAgIHNlc3Npb25FbnRyaWVzID0gW2VudHJ5XTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIElmIHRoZSBjdXJyZW50IHNlc3Npb24gdmFsdWUgaXMgbGFyZ2VyIHRoYW4gdGhlIGN1cnJlbnQgQ0xTIHZhbHVlLFxuICAgICAgICAvLyB1cGRhdGUgQ0xTIGFuZCB0aGUgZW50cmllcyBjb250cmlidXRpbmcgdG8gaXQuXG4gICAgICAgIGlmIChzZXNzaW9uVmFsdWUgPiBtZXRyaWMudmFsdWUpIHtcbiAgICAgICAgICBtZXRyaWMudmFsdWUgPSBzZXNzaW9uVmFsdWU7XG4gICAgICAgICAgbWV0cmljLmVudHJpZXMgPSBzZXNzaW9uRW50cmllcztcbiAgICAgICAgICBpZiAocmVwb3J0KSB7XG4gICAgICAgICAgICByZXBvcnQoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBwbyA9IG9ic2VydmUoJ2xheW91dC1zaGlmdCcsIGhhbmRsZUVudHJpZXMpO1xuICBpZiAocG8pIHtcbiAgICByZXBvcnQgPSBiaW5kUmVwb3J0ZXIob25SZXBvcnQsIG1ldHJpYyk7XG5cbiAgICBjb25zdCBzdG9wTGlzdGVuaW5nID0gKCkgPT4ge1xuICAgICAgaGFuZGxlRW50cmllcyhwby50YWtlUmVjb3JkcygpICk7XG4gICAgICByZXBvcnQodHJ1ZSk7XG4gICAgfTtcblxuICAgIG9uSGlkZGVuKHN0b3BMaXN0ZW5pbmcpO1xuXG4gICAgcmV0dXJuIHN0b3BMaXN0ZW5pbmc7XG4gIH1cblxuICByZXR1cm47XG59O1xuXG5leHBvcnQgeyBvbkNMUyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0Q0xTLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getCLS.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getFID.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getFID.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"onFID\": function() { return /* binding */ onFID; }\n/* harmony export */ });\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/getVisibilityWatcher.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/initMetric.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js\");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/observe.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js\");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/onHidden.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js\");\n\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the [FID](https://web.dev/fid/) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nconst onFID = (onReport) => {\n  const visibilityWatcher = (0,_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_0__.getVisibilityWatcher)();\n  const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__.initMetric)('FID');\n  // eslint-disable-next-line prefer-const\n  let report;\n\n  const handleEntry = (entry) => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  const handleEntries = (entries) => {\n    (entries ).forEach(handleEntry);\n  };\n\n  const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_2__.observe)('first-input', handleEntries);\n  report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_3__.bindReporter)(onReport, metric);\n\n  if (po) {\n    (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_4__.onHidden)(() => {\n      handleEntries(po.takeRecords() );\n      po.disconnect();\n    }, true);\n  }\n};\n\n\n//# sourceMappingURL=getFID.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvZ2V0RklELmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxRDtBQUNnQjtBQUNwQjtBQUNOO0FBQ0U7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixrRkFBb0I7QUFDaEQsaUJBQWlCLDhEQUFVO0FBQzNCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYSx3REFBTztBQUNwQixXQUFXLGtFQUFZOztBQUV2QjtBQUNBLElBQUksMERBQVE7QUFDWjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvZ2V0RklELmpzP2MzMGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmluZFJlcG9ydGVyIH0gZnJvbSAnLi9saWIvYmluZFJlcG9ydGVyLmpzJztcbmltcG9ydCB7IGdldFZpc2liaWxpdHlXYXRjaGVyIH0gZnJvbSAnLi9saWIvZ2V0VmlzaWJpbGl0eVdhdGNoZXIuanMnO1xuaW1wb3J0IHsgaW5pdE1ldHJpYyB9IGZyb20gJy4vbGliL2luaXRNZXRyaWMuanMnO1xuaW1wb3J0IHsgb2JzZXJ2ZSB9IGZyb20gJy4vbGliL29ic2VydmUuanMnO1xuaW1wb3J0IHsgb25IaWRkZW4gfSBmcm9tICcuL2xpYi9vbkhpZGRlbi5qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKipcbiAqIENhbGN1bGF0ZXMgdGhlIFtGSURdKGh0dHBzOi8vd2ViLmRldi9maWQvKSB2YWx1ZSBmb3IgdGhlIGN1cnJlbnQgcGFnZSBhbmRcbiAqIGNhbGxzIHRoZSBgY2FsbGJhY2tgIGZ1bmN0aW9uIG9uY2UgdGhlIHZhbHVlIGlzIHJlYWR5LCBhbG9uZyB3aXRoIHRoZVxuICogcmVsZXZhbnQgYGZpcnN0LWlucHV0YCBwZXJmb3JtYW5jZSBlbnRyeSB1c2VkIHRvIGRldGVybWluZSB0aGUgdmFsdWUuIFRoZVxuICogcmVwb3J0ZWQgdmFsdWUgaXMgYSBgRE9NSGlnaFJlc1RpbWVTdGFtcGAuXG4gKlxuICogXyoqSW1wb3J0YW50OioqIHNpbmNlIEZJRCBpcyBvbmx5IHJlcG9ydGVkIGFmdGVyIHRoZSB1c2VyIGludGVyYWN0cyB3aXRoIHRoZVxuICogcGFnZSwgaXQncyBwb3NzaWJsZSB0aGF0IGl0IHdpbGwgbm90IGJlIHJlcG9ydGVkIGZvciBzb21lIHBhZ2UgbG9hZHMuX1xuICovXG5jb25zdCBvbkZJRCA9IChvblJlcG9ydCkgPT4ge1xuICBjb25zdCB2aXNpYmlsaXR5V2F0Y2hlciA9IGdldFZpc2liaWxpdHlXYXRjaGVyKCk7XG4gIGNvbnN0IG1ldHJpYyA9IGluaXRNZXRyaWMoJ0ZJRCcpO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWNvbnN0XG4gIGxldCByZXBvcnQ7XG5cbiAgY29uc3QgaGFuZGxlRW50cnkgPSAoZW50cnkpID0+IHtcbiAgICAvLyBPbmx5IHJlcG9ydCBpZiB0aGUgcGFnZSB3YXNuJ3QgaGlkZGVuIHByaW9yIHRvIHRoZSBmaXJzdCBpbnB1dC5cbiAgICBpZiAoZW50cnkuc3RhcnRUaW1lIDwgdmlzaWJpbGl0eVdhdGNoZXIuZmlyc3RIaWRkZW5UaW1lKSB7XG4gICAgICBtZXRyaWMudmFsdWUgPSBlbnRyeS5wcm9jZXNzaW5nU3RhcnQgLSBlbnRyeS5zdGFydFRpbWU7XG4gICAgICBtZXRyaWMuZW50cmllcy5wdXNoKGVudHJ5KTtcbiAgICAgIHJlcG9ydCh0cnVlKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlRW50cmllcyA9IChlbnRyaWVzKSA9PiB7XG4gICAgKGVudHJpZXMgKS5mb3JFYWNoKGhhbmRsZUVudHJ5KTtcbiAgfTtcblxuICBjb25zdCBwbyA9IG9ic2VydmUoJ2ZpcnN0LWlucHV0JywgaGFuZGxlRW50cmllcyk7XG4gIHJlcG9ydCA9IGJpbmRSZXBvcnRlcihvblJlcG9ydCwgbWV0cmljKTtcblxuICBpZiAocG8pIHtcbiAgICBvbkhpZGRlbigoKSA9PiB7XG4gICAgICBoYW5kbGVFbnRyaWVzKHBvLnRha2VSZWNvcmRzKCkgKTtcbiAgICAgIHBvLmRpc2Nvbm5lY3QoKTtcbiAgICB9LCB0cnVlKTtcbiAgfVxufTtcblxuZXhwb3J0IHsgb25GSUQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEZJRC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getFID.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getLCP.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getLCP.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"onLCP\": function() { return /* binding */ onLCP; }\n/* harmony export */ });\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/getActivationStart.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js\");\n/* harmony import */ var _lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/getVisibilityWatcher.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/initMetric.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js\");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/observe.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js\");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/onHidden.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js\");\n\n\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst reportedMetricIDs = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nconst onLCP = (onReport) => {\n  const visibilityWatcher = (0,_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_0__.getVisibilityWatcher)();\n  const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__.initMetric)('LCP');\n  let report;\n\n  const handleEntries = (entries) => {\n    const lastEntry = entries[entries.length - 1] ;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - (0,_lib_getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__.getActivationStart)(), 0);\n\n      // Only report if the page wasn't hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_3__.observe)('largest-contentful-paint', handleEntries);\n\n  if (po) {\n    report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_4__.bindReporter)(onReport, metric);\n\n    const stopListening = () => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() );\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      addEventListener(type, stopListening, { once: true, capture: true });\n    });\n\n    (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_5__.onHidden)(stopListening, true);\n\n    return stopListening;\n  }\n\n  return;\n};\n\n\n//# sourceMappingURL=getLCP.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvZ2V0TENQLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBcUQ7QUFDWTtBQUNJO0FBQ3BCO0FBQ047QUFDRTs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGtGQUFvQjtBQUNoRCxpQkFBaUIsOERBQVU7QUFDM0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsOEVBQWtCOztBQUVyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsd0RBQU87O0FBRXBCO0FBQ0EsYUFBYSxrRUFBWTs7QUFFekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QywyQkFBMkI7QUFDekUsS0FBSzs7QUFFTCxJQUFJLDBEQUFROztBQUVaO0FBQ0E7O0FBRUE7QUFDQTs7QUFFaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5LWludGVybmFsL3RyYWNpbmcvZXNtL2Jyb3dzZXIvd2ViLXZpdGFscy9nZXRMQ1AuanM/ZWYxNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiaW5kUmVwb3J0ZXIgfSBmcm9tICcuL2xpYi9iaW5kUmVwb3J0ZXIuanMnO1xuaW1wb3J0IHsgZ2V0QWN0aXZhdGlvblN0YXJ0IH0gZnJvbSAnLi9saWIvZ2V0QWN0aXZhdGlvblN0YXJ0LmpzJztcbmltcG9ydCB7IGdldFZpc2liaWxpdHlXYXRjaGVyIH0gZnJvbSAnLi9saWIvZ2V0VmlzaWJpbGl0eVdhdGNoZXIuanMnO1xuaW1wb3J0IHsgaW5pdE1ldHJpYyB9IGZyb20gJy4vbGliL2luaXRNZXRyaWMuanMnO1xuaW1wb3J0IHsgb2JzZXJ2ZSB9IGZyb20gJy4vbGliL29ic2VydmUuanMnO1xuaW1wb3J0IHsgb25IaWRkZW4gfSBmcm9tICcuL2xpYi9vbkhpZGRlbi5qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5jb25zdCByZXBvcnRlZE1ldHJpY0lEcyA9IHt9O1xuXG4vKipcbiAqIENhbGN1bGF0ZXMgdGhlIFtMQ1BdKGh0dHBzOi8vd2ViLmRldi9sY3AvKSB2YWx1ZSBmb3IgdGhlIGN1cnJlbnQgcGFnZSBhbmRcbiAqIGNhbGxzIHRoZSBgY2FsbGJhY2tgIGZ1bmN0aW9uIG9uY2UgdGhlIHZhbHVlIGlzIHJlYWR5IChhbG9uZyB3aXRoIHRoZVxuICogcmVsZXZhbnQgYGxhcmdlc3QtY29udGVudGZ1bC1wYWludGAgcGVyZm9ybWFuY2UgZW50cnkgdXNlZCB0byBkZXRlcm1pbmUgdGhlXG4gKiB2YWx1ZSkuIFRoZSByZXBvcnRlZCB2YWx1ZSBpcyBhIGBET01IaWdoUmVzVGltZVN0YW1wYC5cbiAqL1xuY29uc3Qgb25MQ1AgPSAob25SZXBvcnQpID0+IHtcbiAgY29uc3QgdmlzaWJpbGl0eVdhdGNoZXIgPSBnZXRWaXNpYmlsaXR5V2F0Y2hlcigpO1xuICBjb25zdCBtZXRyaWMgPSBpbml0TWV0cmljKCdMQ1AnKTtcbiAgbGV0IHJlcG9ydDtcblxuICBjb25zdCBoYW5kbGVFbnRyaWVzID0gKGVudHJpZXMpID0+IHtcbiAgICBjb25zdCBsYXN0RW50cnkgPSBlbnRyaWVzW2VudHJpZXMubGVuZ3RoIC0gMV0gO1xuICAgIGlmIChsYXN0RW50cnkpIHtcbiAgICAgIC8vIFRoZSBzdGFydFRpbWUgYXR0cmlidXRlIHJldHVybnMgdGhlIHZhbHVlIG9mIHRoZSByZW5kZXJUaW1lIGlmIGl0IGlzXG4gICAgICAvLyBub3QgMCwgYW5kIHRoZSB2YWx1ZSBvZiB0aGUgbG9hZFRpbWUgb3RoZXJ3aXNlLiBUaGUgYWN0aXZhdGlvblN0YXJ0XG4gICAgICAvLyByZWZlcmVuY2UgaXMgdXNlZCBiZWNhdXNlIExDUCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gcGFnZSBhY3RpdmF0aW9uXG4gICAgICAvLyByYXRoZXIgdGhhbiBuYXZpZ2F0aW9uIHN0YXJ0IGlmIHRoZSBwYWdlIHdhcyBwcmVyZW5kZXJlZC5cbiAgICAgIGNvbnN0IHZhbHVlID0gTWF0aC5tYXgobGFzdEVudHJ5LnN0YXJ0VGltZSAtIGdldEFjdGl2YXRpb25TdGFydCgpLCAwKTtcblxuICAgICAgLy8gT25seSByZXBvcnQgaWYgdGhlIHBhZ2Ugd2Fzbid0IGhpZGRlbiBwcmlvciB0byBMQ1AuXG4gICAgICBpZiAodmFsdWUgPCB2aXNpYmlsaXR5V2F0Y2hlci5maXJzdEhpZGRlblRpbWUpIHtcbiAgICAgICAgbWV0cmljLnZhbHVlID0gdmFsdWU7XG4gICAgICAgIG1ldHJpYy5lbnRyaWVzID0gW2xhc3RFbnRyeV07XG4gICAgICAgIHJlcG9ydCgpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBjb25zdCBwbyA9IG9ic2VydmUoJ2xhcmdlc3QtY29udGVudGZ1bC1wYWludCcsIGhhbmRsZUVudHJpZXMpO1xuXG4gIGlmIChwbykge1xuICAgIHJlcG9ydCA9IGJpbmRSZXBvcnRlcihvblJlcG9ydCwgbWV0cmljKTtcblxuICAgIGNvbnN0IHN0b3BMaXN0ZW5pbmcgPSAoKSA9PiB7XG4gICAgICBpZiAoIXJlcG9ydGVkTWV0cmljSURzW21ldHJpYy5pZF0pIHtcbiAgICAgICAgaGFuZGxlRW50cmllcyhwby50YWtlUmVjb3JkcygpICk7XG4gICAgICAgIHBvLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgcmVwb3J0ZWRNZXRyaWNJRHNbbWV0cmljLmlkXSA9IHRydWU7XG4gICAgICAgIHJlcG9ydCh0cnVlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8gU3RvcCBsaXN0ZW5pbmcgYWZ0ZXIgaW5wdXQuIE5vdGU6IHdoaWxlIHNjcm9sbGluZyBpcyBhbiBpbnB1dCB0aGF0XG4gICAgLy8gc3RvcCBMQ1Agb2JzZXJ2YXRpb24sIGl0J3MgdW5yZWxpYWJsZSBzaW5jZSBpdCBjYW4gYmUgcHJvZ3JhbW1hdGljYWxseVxuICAgIC8vIGdlbmVyYXRlZC4gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vR29vZ2xlQ2hyb21lL3dlYi12aXRhbHMvaXNzdWVzLzc1XG4gICAgWydrZXlkb3duJywgJ2NsaWNrJ10uZm9yRWFjaCh0eXBlID0+IHtcbiAgICAgIGFkZEV2ZW50TGlzdGVuZXIodHlwZSwgc3RvcExpc3RlbmluZywgeyBvbmNlOiB0cnVlLCBjYXB0dXJlOiB0cnVlIH0pO1xuICAgIH0pO1xuXG4gICAgb25IaWRkZW4oc3RvcExpc3RlbmluZywgdHJ1ZSk7XG5cbiAgICByZXR1cm4gc3RvcExpc3RlbmluZztcbiAgfVxuXG4gIHJldHVybjtcbn07XG5cbmV4cG9ydCB7IG9uTENQIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRMQ1AuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getLCP.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bindReporter\": function() { return /* binding */ bindReporter; }\n/* harmony export */ });\nconst bindReporter = (\n  callback,\n  metric,\n  reportAllChanges,\n) => {\n  let prevValue;\n  let delta;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\n\n//# sourceMappingURL=bindReporter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2JpbmRSZXBvcnRlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5LWludGVybmFsL3RyYWNpbmcvZXNtL2Jyb3dzZXIvd2ViLXZpdGFscy9saWIvYmluZFJlcG9ydGVyLmpzPzkwOTIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYmluZFJlcG9ydGVyID0gKFxuICBjYWxsYmFjayxcbiAgbWV0cmljLFxuICByZXBvcnRBbGxDaGFuZ2VzLFxuKSA9PiB7XG4gIGxldCBwcmV2VmFsdWU7XG4gIGxldCBkZWx0YTtcbiAgcmV0dXJuIChmb3JjZVJlcG9ydCkgPT4ge1xuICAgIGlmIChtZXRyaWMudmFsdWUgPj0gMCkge1xuICAgICAgaWYgKGZvcmNlUmVwb3J0IHx8IHJlcG9ydEFsbENoYW5nZXMpIHtcbiAgICAgICAgZGVsdGEgPSBtZXRyaWMudmFsdWUgLSAocHJldlZhbHVlIHx8IDApO1xuXG4gICAgICAgIC8vIFJlcG9ydCB0aGUgbWV0cmljIGlmIHRoZXJlJ3MgYSBub24temVybyBkZWx0YSBvciBpZiBubyBwcmV2aW91c1xuICAgICAgICAvLyB2YWx1ZSBleGlzdHMgKHdoaWNoIGNhbiBoYXBwZW4gaW4gdGhlIGNhc2Ugb2YgdGhlIGRvY3VtZW50IGJlY29taW5nXG4gICAgICAgIC8vIGhpZGRlbiB3aGVuIHRoZSBtZXRyaWMgdmFsdWUgaXMgMCkuXG4gICAgICAgIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL0dvb2dsZUNocm9tZS93ZWItdml0YWxzL2lzc3Vlcy8xNFxuICAgICAgICBpZiAoZGVsdGEgfHwgcHJldlZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBwcmV2VmFsdWUgPSBtZXRyaWMudmFsdWU7XG4gICAgICAgICAgbWV0cmljLmRlbHRhID0gZGVsdGE7XG4gICAgICAgICAgY2FsbGJhY2sobWV0cmljKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcbn07XG5cbmV4cG9ydCB7IGJpbmRSZXBvcnRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmluZFJlcG9ydGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/generateUniqueID.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/generateUniqueID.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateUniqueID\": function() { return /* binding */ generateUniqueID; }\n/* harmony export */ });\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nconst generateUniqueID = () => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\n\n//# sourceMappingURL=generateUniqueID.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2dlbmVyYXRlVW5pcXVlSUQuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLGVBQWUsV0FBVyxHQUFHLDhDQUE4QztBQUMzRTs7QUFFNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5LWludGVybmFsL3RyYWNpbmcvZXNtL2Jyb3dzZXIvd2ViLXZpdGFscy9saWIvZ2VuZXJhdGVVbmlxdWVJRC5qcz9iNjY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKipcbiAqIFBlcmZvcm1hbnRseSBnZW5lcmF0ZSBhIHVuaXF1ZSwgMzAtY2hhciBzdHJpbmcgYnkgY29tYmluaW5nIGEgdmVyc2lvblxuICogbnVtYmVyLCB0aGUgY3VycmVudCB0aW1lc3RhbXAgd2l0aCBhIDEzLWRpZ2l0IG51bWJlciBpbnRlZ2VyLlxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5jb25zdCBnZW5lcmF0ZVVuaXF1ZUlEID0gKCkgPT4ge1xuICByZXR1cm4gYHYzLSR7RGF0ZS5ub3coKX0tJHtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoOWUxMiAtIDEpKSArIDFlMTJ9YDtcbn07XG5cbmV4cG9ydCB7IGdlbmVyYXRlVW5pcXVlSUQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdlbmVyYXRlVW5pcXVlSUQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/generateUniqueID.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getActivationStart\": function() { return /* binding */ getActivationStart; }\n/* harmony export */ });\n/* harmony import */ var _getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNavigationEntry.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js\");\n\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst getActivationStart = () => {\n  const navEntry = (0,_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__.getNavigationEntry)();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n\n\n//# sourceMappingURL=getActivationStart.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2dldEFjdGl2YXRpb25TdGFydC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE2RDs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLDBFQUFrQjtBQUNyQztBQUNBOztBQUU4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2xpYi9nZXRBY3RpdmF0aW9uU3RhcnQuanM/ZWU0MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXROYXZpZ2F0aW9uRW50cnkgfSBmcm9tICcuL2dldE5hdmlnYXRpb25FbnRyeS5qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5jb25zdCBnZXRBY3RpdmF0aW9uU3RhcnQgPSAoKSA9PiB7XG4gIGNvbnN0IG5hdkVudHJ5ID0gZ2V0TmF2aWdhdGlvbkVudHJ5KCk7XG4gIHJldHVybiAobmF2RW50cnkgJiYgbmF2RW50cnkuYWN0aXZhdGlvblN0YXJ0KSB8fCAwO1xufTtcblxuZXhwb3J0IHsgZ2V0QWN0aXZhdGlvblN0YXJ0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRBY3RpdmF0aW9uU3RhcnQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getNavigationEntry\": function() { return /* binding */ getNavigationEntry; }\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../types.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst getNavigationEntryFromPerformanceTiming = () => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance.navigation.type;\n\n  const navigationEntry = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      // eslint-disable-next-line deprecation/deprecation\n      navigationEntry[key] = Math.max((timing[key ] ) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry ;\n};\n\nconst getNavigationEntry = () => {\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n\n\n//# sourceMappingURL=getNavigationEntry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2dldE5hdmlnYXRpb25FbnRyeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3Qzs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUIsZ0VBQXlCO0FBQzFDO0FBQ0EsZUFBZSx5RUFBa0M7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE1BQU0scUVBQThCO0FBQ3BDO0FBQ0EsTUFBTSx5REFBa0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKLFdBQVcseURBQWtCO0FBQzdCO0FBQ0E7O0FBRThCO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2dldE5hdmlnYXRpb25FbnRyeS5qcz8zOWU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdJTkRPVyB9IGZyb20gJy4uLy4uL3R5cGVzLmpzJztcblxuLypcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTENcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmNvbnN0IGdldE5hdmlnYXRpb25FbnRyeUZyb21QZXJmb3JtYW5jZVRpbWluZyA9ICgpID0+IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGNvbnN0IHRpbWluZyA9IFdJTkRPVy5wZXJmb3JtYW5jZS50aW1pbmc7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICBjb25zdCB0eXBlID0gV0lORE9XLnBlcmZvcm1hbmNlLm5hdmlnYXRpb24udHlwZTtcblxuICBjb25zdCBuYXZpZ2F0aW9uRW50cnkgPSB7XG4gICAgZW50cnlUeXBlOiAnbmF2aWdhdGlvbicsXG4gICAgc3RhcnRUaW1lOiAwLFxuICAgIHR5cGU6IHR5cGUgPT0gMiA/ICdiYWNrX2ZvcndhcmQnIDogdHlwZSA9PT0gMSA/ICdyZWxvYWQnIDogJ25hdmlnYXRlJyxcbiAgfTtcblxuICBmb3IgKGNvbnN0IGtleSBpbiB0aW1pbmcpIHtcbiAgICBpZiAoa2V5ICE9PSAnbmF2aWdhdGlvblN0YXJ0JyAmJiBrZXkgIT09ICd0b0pTT04nKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICAgIG5hdmlnYXRpb25FbnRyeVtrZXldID0gTWF0aC5tYXgoKHRpbWluZ1trZXkgXSApIC0gdGltaW5nLm5hdmlnYXRpb25TdGFydCwgMCk7XG4gICAgfVxuICB9XG4gIHJldHVybiBuYXZpZ2F0aW9uRW50cnkgO1xufTtcblxuY29uc3QgZ2V0TmF2aWdhdGlvbkVudHJ5ID0gKCkgPT4ge1xuICBpZiAoV0lORE9XLl9fV0VCX1ZJVEFMU19QT0xZRklMTF9fKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIFdJTkRPVy5wZXJmb3JtYW5jZSAmJlxuICAgICAgKChwZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlUeXBlICYmIHBlcmZvcm1hbmNlLmdldEVudHJpZXNCeVR5cGUoJ25hdmlnYXRpb24nKVswXSkgfHxcbiAgICAgICAgZ2V0TmF2aWdhdGlvbkVudHJ5RnJvbVBlcmZvcm1hbmNlVGltaW5nKCkpXG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gV0lORE9XLnBlcmZvcm1hbmNlICYmIHBlcmZvcm1hbmNlLmdldEVudHJpZXNCeVR5cGUgJiYgcGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5VHlwZSgnbmF2aWdhdGlvbicpWzBdO1xuICB9XG59O1xuXG5leHBvcnQgeyBnZXROYXZpZ2F0aW9uRW50cnkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldE5hdmlnYXRpb25FbnRyeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getVisibilityWatcher\": function() { return /* binding */ getVisibilityWatcher; }\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../types.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n/* harmony import */ var _onHidden_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./onHidden.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js\");\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = () => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  return _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.visibilityState === 'hidden' && !_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.prerendering ? 0 : Infinity;\n};\n\nconst trackChanges = () => {\n  // Update the time if/when the document becomes hidden.\n  (0,_onHidden_js__WEBPACK_IMPORTED_MODULE_1__.onHidden)(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nconst getVisibilityWatcher = (\n\n) => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\n\n//# sourceMappingURL=getVisibilityWatcher.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2dldFZpc2liaWxpdHlXYXRjaGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3QztBQUNDOztBQUV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzRUFBK0Isa0JBQWtCLG1FQUE0QjtBQUN0Rjs7QUFFQTtBQUNBO0FBQ0EsRUFBRSxzREFBUSxJQUFJLFdBQVc7QUFDekI7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRWdDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2dldFZpc2liaWxpdHlXYXRjaGVyLmpzPzlkNjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnLi4vLi4vdHlwZXMuanMnO1xuaW1wb3J0IHsgb25IaWRkZW4gfSBmcm9tICcuL29uSGlkZGVuLmpzJztcblxuLypcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmxldCBmaXJzdEhpZGRlblRpbWUgPSAtMTtcblxuY29uc3QgaW5pdEhpZGRlblRpbWUgPSAoKSA9PiB7XG4gIC8vIElmIHRoZSBkb2N1bWVudCBpcyBoaWRkZW4gYW5kIG5vdCBwcmVyZW5kZXJpbmcsIGFzc3VtZSBpdCB3YXMgYWx3YXlzXG4gIC8vIGhpZGRlbiBhbmQgdGhlIHBhZ2Ugd2FzIGxvYWRlZCBpbiB0aGUgYmFja2dyb3VuZC5cbiAgcmV0dXJuIFdJTkRPVy5kb2N1bWVudC52aXNpYmlsaXR5U3RhdGUgPT09ICdoaWRkZW4nICYmICFXSU5ET1cuZG9jdW1lbnQucHJlcmVuZGVyaW5nID8gMCA6IEluZmluaXR5O1xufTtcblxuY29uc3QgdHJhY2tDaGFuZ2VzID0gKCkgPT4ge1xuICAvLyBVcGRhdGUgdGhlIHRpbWUgaWYvd2hlbiB0aGUgZG9jdW1lbnQgYmVjb21lcyBoaWRkZW4uXG4gIG9uSGlkZGVuKCh7IHRpbWVTdGFtcCB9KSA9PiB7XG4gICAgZmlyc3RIaWRkZW5UaW1lID0gdGltZVN0YW1wO1xuICB9LCB0cnVlKTtcbn07XG5cbmNvbnN0IGdldFZpc2liaWxpdHlXYXRjaGVyID0gKFxuXG4pID0+IHtcbiAgaWYgKGZpcnN0SGlkZGVuVGltZSA8IDApIHtcbiAgICAvLyBJZiB0aGUgZG9jdW1lbnQgaXMgaGlkZGVuIHdoZW4gdGhpcyBjb2RlIHJ1bnMsIGFzc3VtZSBpdCB3YXMgaGlkZGVuXG4gICAgLy8gc2luY2UgbmF2aWdhdGlvbiBzdGFydC4gVGhpcyBpc24ndCBhIHBlcmZlY3QgaGV1cmlzdGljLCBidXQgaXQncyB0aGVcbiAgICAvLyBiZXN0IHdlIGNhbiBkbyB1bnRpbCBhbiBBUEkgaXMgYXZhaWxhYmxlIHRvIHN1cHBvcnQgcXVlcnlpbmcgcGFzdFxuICAgIC8vIHZpc2liaWxpdHlTdGF0ZS5cbiAgICBmaXJzdEhpZGRlblRpbWUgPSBpbml0SGlkZGVuVGltZSgpO1xuICAgIHRyYWNrQ2hhbmdlcygpO1xuICB9XG4gIHJldHVybiB7XG4gICAgZ2V0IGZpcnN0SGlkZGVuVGltZSgpIHtcbiAgICAgIHJldHVybiBmaXJzdEhpZGRlblRpbWU7XG4gICAgfSxcbiAgfTtcbn07XG5cbmV4cG9ydCB7IGdldFZpc2liaWxpdHlXYXRjaGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRWaXNpYmlsaXR5V2F0Y2hlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initMetric\": function() { return /* binding */ initMetric; }\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../types.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n/* harmony import */ var _generateUniqueID_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./generateUniqueID.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/generateUniqueID.js\");\n/* harmony import */ var _getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getActivationStart.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js\");\n/* harmony import */ var _getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNavigationEntry.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js\");\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst initMetric = (name, value) => {\n  const navEntry = (0,_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__.getNavigationEntry)();\n  let navigationType = 'navigate';\n\n  if (navEntry) {\n    if (_types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document.prerendering || (0,_getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__.getActivationStart)() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') ;\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: (0,_generateUniqueID_js__WEBPACK_IMPORTED_MODULE_3__.generateUniqueID)(),\n    navigationType,\n  };\n};\n\n\n//# sourceMappingURL=initMetric.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2luaXRNZXRyaWMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBd0M7QUFDaUI7QUFDSTtBQUNBOztBQUU3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQkFBbUIsMEVBQWtCO0FBQ3JDOztBQUVBO0FBQ0EsUUFBUSxtRUFBNEIsSUFBSSwwRUFBa0I7QUFDMUQ7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0VBQWdCO0FBQ3hCO0FBQ0E7QUFDQTs7QUFFc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5LWludGVybmFsL3RyYWNpbmcvZXNtL2Jyb3dzZXIvd2ViLXZpdGFscy9saWIvaW5pdE1ldHJpYy5qcz8wOGJhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdJTkRPVyB9IGZyb20gJy4uLy4uL3R5cGVzLmpzJztcbmltcG9ydCB7IGdlbmVyYXRlVW5pcXVlSUQgfSBmcm9tICcuL2dlbmVyYXRlVW5pcXVlSUQuanMnO1xuaW1wb3J0IHsgZ2V0QWN0aXZhdGlvblN0YXJ0IH0gZnJvbSAnLi9nZXRBY3RpdmF0aW9uU3RhcnQuanMnO1xuaW1wb3J0IHsgZ2V0TmF2aWdhdGlvbkVudHJ5IH0gZnJvbSAnLi9nZXROYXZpZ2F0aW9uRW50cnkuanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuY29uc3QgaW5pdE1ldHJpYyA9IChuYW1lLCB2YWx1ZSkgPT4ge1xuICBjb25zdCBuYXZFbnRyeSA9IGdldE5hdmlnYXRpb25FbnRyeSgpO1xuICBsZXQgbmF2aWdhdGlvblR5cGUgPSAnbmF2aWdhdGUnO1xuXG4gIGlmIChuYXZFbnRyeSkge1xuICAgIGlmIChXSU5ET1cuZG9jdW1lbnQucHJlcmVuZGVyaW5nIHx8IGdldEFjdGl2YXRpb25TdGFydCgpID4gMCkge1xuICAgICAgbmF2aWdhdGlvblR5cGUgPSAncHJlcmVuZGVyJztcbiAgICB9IGVsc2Uge1xuICAgICAgbmF2aWdhdGlvblR5cGUgPSBuYXZFbnRyeS50eXBlLnJlcGxhY2UoL18vZywgJy0nKSA7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lLFxuICAgIHZhbHVlOiB0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnID8gLTEgOiB2YWx1ZSxcbiAgICByYXRpbmc6ICdnb29kJywgLy8gV2lsbCBiZSB1cGRhdGVkIGlmIHRoZSB2YWx1ZSBjaGFuZ2VzLlxuICAgIGRlbHRhOiAwLFxuICAgIGVudHJpZXM6IFtdLFxuICAgIGlkOiBnZW5lcmF0ZVVuaXF1ZUlEKCksXG4gICAgbmF2aWdhdGlvblR5cGUsXG4gIH07XG59O1xuXG5leHBvcnQgeyBpbml0TWV0cmljIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbml0TWV0cmljLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"observe\": function() { return /* binding */ observe; }\n/* harmony export */ });\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nconst observe = (\n  type,\n  callback,\n  opts,\n) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() );\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) ,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\n\n//# sourceMappingURL=observe.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL29ic2VydmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL29ic2VydmUuanM/NTlmYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRha2VzIGEgcGVyZm9ybWFuY2UgZW50cnkgdHlwZSBhbmQgYSBjYWxsYmFjayBmdW5jdGlvbiwgYW5kIGNyZWF0ZXMgYVxuICogYFBlcmZvcm1hbmNlT2JzZXJ2ZXJgIGluc3RhbmNlIHRoYXQgd2lsbCBvYnNlcnZlIHRoZSBzcGVjaWZpZWQgZW50cnkgdHlwZVxuICogd2l0aCBidWZmZXJpbmcgZW5hYmxlZCBhbmQgY2FsbCB0aGUgY2FsbGJhY2sgX2ZvciBlYWNoIGVudHJ5Xy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGFsc28gZmVhdHVyZS1kZXRlY3RzIGVudHJ5IHN1cHBvcnQgYW5kIHdyYXBzIHRoZSBsb2dpYyBpbiBhXG4gKiB0cnkvY2F0Y2ggdG8gYXZvaWQgZXJyb3JzIGluIHVuc3VwcG9ydGluZyBicm93c2Vycy5cbiAqL1xuY29uc3Qgb2JzZXJ2ZSA9IChcbiAgdHlwZSxcbiAgY2FsbGJhY2ssXG4gIG9wdHMsXG4pID0+IHtcbiAgdHJ5IHtcbiAgICBpZiAoUGVyZm9ybWFuY2VPYnNlcnZlci5zdXBwb3J0ZWRFbnRyeVR5cGVzLmluY2x1ZGVzKHR5cGUpKSB7XG4gICAgICBjb25zdCBwbyA9IG5ldyBQZXJmb3JtYW5jZU9ic2VydmVyKGxpc3QgPT4ge1xuICAgICAgICBjYWxsYmFjayhsaXN0LmdldEVudHJpZXMoKSApO1xuICAgICAgfSk7XG4gICAgICBwby5vYnNlcnZlKFxuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICBidWZmZXJlZDogdHJ1ZSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIG9wdHMgfHwge30sXG4gICAgICAgICkgLFxuICAgICAgKTtcbiAgICAgIHJldHVybiBwbztcbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBEbyBub3RoaW5nLlxuICB9XG4gIHJldHVybjtcbn07XG5cbmV4cG9ydCB7IG9ic2VydmUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9ic2VydmUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js\n");

/***/ }),

/***/ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"onHidden\": function() { return /* binding */ onHidden; }\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../types.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst onHidden = (cb, once) => {\n  const onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n\n\n//# sourceMappingURL=onHidden.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL29uSGlkZGVuLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFDQUFxQyxzRUFBK0I7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVvQjtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2xpYi9vbkhpZGRlbi5qcz9hYThkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdJTkRPVyB9IGZyb20gJy4uLy4uL3R5cGVzLmpzJztcblxuLypcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmNvbnN0IG9uSGlkZGVuID0gKGNiLCBvbmNlKSA9PiB7XG4gIGNvbnN0IG9uSGlkZGVuT3JQYWdlSGlkZSA9IChldmVudCkgPT4ge1xuICAgIGlmIChldmVudC50eXBlID09PSAncGFnZWhpZGUnIHx8IFdJTkRPVy5kb2N1bWVudC52aXNpYmlsaXR5U3RhdGUgPT09ICdoaWRkZW4nKSB7XG4gICAgICBjYihldmVudCk7XG4gICAgICBpZiAob25jZSkge1xuICAgICAgICByZW1vdmVFdmVudExpc3RlbmVyKCd2aXNpYmlsaXR5Y2hhbmdlJywgb25IaWRkZW5PclBhZ2VIaWRlLCB0cnVlKTtcbiAgICAgICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcigncGFnZWhpZGUnLCBvbkhpZGRlbk9yUGFnZUhpZGUsIHRydWUpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgYWRkRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsIG9uSGlkZGVuT3JQYWdlSGlkZSwgdHJ1ZSk7XG4gIC8vIFNvbWUgYnJvd3NlcnMgaGF2ZSBidWdneSBpbXBsZW1lbnRhdGlvbnMgb2YgdmlzaWJpbGl0eWNoYW5nZSxcbiAgLy8gc28gd2UgdXNlIHBhZ2VoaWRlIGluIGFkZGl0aW9uLCBqdXN0IHRvIGJlIHNhZmUuXG4gIGFkZEV2ZW50TGlzdGVuZXIoJ3BhZ2VoaWRlJywgb25IaWRkZW5PclBhZ2VIaWRlLCB0cnVlKTtcbn07XG5cbmV4cG9ydCB7IG9uSGlkZGVuIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vbkhpZGRlbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/client.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/client.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BrowserClient\": function() { return /* binding */ BrowserClient; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/baseclient.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/version.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/env.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/clientreport.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _eventbuilder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./eventbuilder.js */ \"./node_modules/@sentry/browser/esm/eventbuilder.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n/* harmony import */ var _integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./integrations/breadcrumbs.js */ \"./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js\");\n/* harmony import */ var _userfeedback_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./userfeedback.js */ \"./node_modules/@sentry/browser/esm/userfeedback.js\");\n\n\n\n\n\n\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends _sentry_core__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    const sdkSource = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.SENTRY_SDK_SOURCE || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getSDKSource)();\n\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: `${sdkSource}:@sentry/browser`,\n          version: _sentry_core__WEBPACK_IMPORTED_MODULE_3__.SDK_VERSION,\n        },\n      ],\n      version: _sentry_core__WEBPACK_IMPORTED_MODULE_3__.SDK_VERSION,\n    };\n\n    super(options);\n\n    if (options.sendClientReports && _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document) {\n      _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document.addEventListener('visibilitychange', () => {\n        if (_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_4__.eventFromException)(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level = 'info',\n    hint,\n  ) {\n    return (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_4__.eventFromMessage)(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint) {\n    // We only want to add the sentry event breadcrumb when the user has the breadcrumb integration installed and\n    // activated its `sentry` option.\n    // We also do not want to use the `Breadcrumbs` class here directly, because we do not want it to be included in\n    // bundles, if it is not used by the SDK.\n    // This all sadly is a bit ugly, but we currently don't have a \"pre-send\" hook on the integrations so we do it this\n    // way for now.\n    const breadcrumbIntegration = this.getIntegrationById(_integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_5__.BREADCRUMB_INTEGRATION_ID) ;\n    // We check for definedness of `addSentryBreadcrumb` in case users provided their own integration with id\n    // \"Breadcrumbs\" that does not have this function.\n    if (breadcrumbIntegration && breadcrumbIntegration.addSentryBreadcrumb) {\n      breadcrumbIntegration.addSentryBreadcrumb(event);\n    }\n\n    super.sendEvent(event, hint);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n   captureUserFeedback(feedback) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = (0,_userfeedback_js__WEBPACK_IMPORTED_MODULE_7__.createUserFeedbackEnvelope)(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n    void this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('No outcomes to send');\n      return;\n    }\n\n    if (!this._dsn) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('Sending outcomes:', outcomes);\n\n    const envelope = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.createClientReportEnvelope)(outcomes, this._options.tunnel && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.dsnToString)(this._dsn));\n    void this._sendEnvelope(envelope);\n  }\n}\n\n\n//# sourceMappingURL=client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9jbGllbnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBdUQ7QUFDdUM7QUFDckI7QUFDbkM7QUFDb0M7QUFDWDs7QUFFL0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLG9EQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpRUFBd0IsSUFBSSwyREFBWTs7QUFFOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixVQUFVO0FBQzdCLG1CQUFtQixxREFBVztBQUM5QixTQUFTO0FBQ1Q7QUFDQSxlQUFlLHFEQUFXO0FBQzFCOztBQUVBOztBQUVBLHFDQUFxQyx3REFBZTtBQUNwRCxNQUFNLHlFQUFnQztBQUN0QyxZQUFZLHdFQUErQjtBQUMzQztBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9FQUFrQjtBQUM3Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGtFQUFnQjtBQUMzQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCxtRkFBeUI7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1RUFBdUUsc0RBQVc7QUFDbEY7QUFDQTs7QUFFQSxxQkFBcUIsNEVBQTBCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx1RUFBdUUscURBQVU7QUFDakY7QUFDQTs7QUFFQTtBQUNBLHVFQUF1RSxxREFBVTtBQUNqRjtBQUNBOztBQUVBLHFFQUFxRSxxREFBVTs7QUFFL0UscUJBQXFCLHlFQUEwQixtQ0FBbUMsMERBQVc7QUFDN0Y7QUFDQTtBQUNBOztBQUV5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvYnJvd3Nlci9lc20vY2xpZW50LmpzPzkxNmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZUNsaWVudCwgU0RLX1ZFUlNJT04gfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgZ2V0U0RLU291cmNlLCBsb2dnZXIsIGNyZWF0ZUNsaWVudFJlcG9ydEVudmVsb3BlLCBkc25Ub1N0cmluZyB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZXZlbnRGcm9tRXhjZXB0aW9uLCBldmVudEZyb21NZXNzYWdlIH0gZnJvbSAnLi9ldmVudGJ1aWxkZXIuanMnO1xuaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcbmltcG9ydCB7IEJSRUFEQ1JVTUJfSU5URUdSQVRJT05fSUQgfSBmcm9tICcuL2ludGVncmF0aW9ucy9icmVhZGNydW1icy5qcyc7XG5pbXBvcnQgeyBjcmVhdGVVc2VyRmVlZGJhY2tFbnZlbG9wZSB9IGZyb20gJy4vdXNlcmZlZWRiYWNrLmpzJztcblxuLyoqXG4gKiBDb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIHRoZSBTZW50cnkgQnJvd3NlciBTREsuXG4gKiBAc2VlIEBzZW50cnkvdHlwZXMgT3B0aW9ucyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqL1xuXG4vKipcbiAqIFRoZSBTZW50cnkgQnJvd3NlciBTREsgQ2xpZW50LlxuICpcbiAqIEBzZWUgQnJvd3Nlck9wdGlvbnMgZm9yIGRvY3VtZW50YXRpb24gb24gY29uZmlndXJhdGlvbiBvcHRpb25zLlxuICogQHNlZSBTZW50cnlDbGllbnQgZm9yIHVzYWdlIGRvY3VtZW50YXRpb24uXG4gKi9cbmNsYXNzIEJyb3dzZXJDbGllbnQgZXh0ZW5kcyBCYXNlQ2xpZW50IHtcbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBuZXcgQnJvd3NlciBTREsgaW5zdGFuY2UuXG4gICAqXG4gICAqIEBwYXJhbSBvcHRpb25zIENvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgdGhpcyBTREsuXG4gICAqL1xuICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIGNvbnN0IHNka1NvdXJjZSA9IFdJTkRPVy5TRU5UUllfU0RLX1NPVVJDRSB8fCBnZXRTREtTb3VyY2UoKTtcblxuICAgIG9wdGlvbnMuX21ldGFkYXRhID0gb3B0aW9ucy5fbWV0YWRhdGEgfHwge307XG4gICAgb3B0aW9ucy5fbWV0YWRhdGEuc2RrID0gb3B0aW9ucy5fbWV0YWRhdGEuc2RrIHx8IHtcbiAgICAgIG5hbWU6ICdzZW50cnkuamF2YXNjcmlwdC5icm93c2VyJyxcbiAgICAgIHBhY2thZ2VzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBgJHtzZGtTb3VyY2V9OkBzZW50cnkvYnJvd3NlcmAsXG4gICAgICAgICAgdmVyc2lvbjogU0RLX1ZFUlNJT04sXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgICAgdmVyc2lvbjogU0RLX1ZFUlNJT04sXG4gICAgfTtcblxuICAgIHN1cGVyKG9wdGlvbnMpO1xuXG4gICAgaWYgKG9wdGlvbnMuc2VuZENsaWVudFJlcG9ydHMgJiYgV0lORE9XLmRvY3VtZW50KSB7XG4gICAgICBXSU5ET1cuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsICgpID0+IHtcbiAgICAgICAgaWYgKFdJTkRPVy5kb2N1bWVudC52aXNpYmlsaXR5U3RhdGUgPT09ICdoaWRkZW4nKSB7XG4gICAgICAgICAgdGhpcy5fZmx1c2hPdXRjb21lcygpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBldmVudEZyb21FeGNlcHRpb24oZXhjZXB0aW9uLCBoaW50KSB7XG4gICAgcmV0dXJuIGV2ZW50RnJvbUV4Y2VwdGlvbih0aGlzLl9vcHRpb25zLnN0YWNrUGFyc2VyLCBleGNlcHRpb24sIGhpbnQsIHRoaXMuX29wdGlvbnMuYXR0YWNoU3RhY2t0cmFjZSk7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBldmVudEZyb21NZXNzYWdlKFxuICAgIG1lc3NhZ2UsXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gICAgbGV2ZWwgPSAnaW5mbycsXG4gICAgaGludCxcbiAgKSB7XG4gICAgcmV0dXJuIGV2ZW50RnJvbU1lc3NhZ2UodGhpcy5fb3B0aW9ucy5zdGFja1BhcnNlciwgbWVzc2FnZSwgbGV2ZWwsIGhpbnQsIHRoaXMuX29wdGlvbnMuYXR0YWNoU3RhY2t0cmFjZSk7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzZW5kRXZlbnQoZXZlbnQsIGhpbnQpIHtcbiAgICAvLyBXZSBvbmx5IHdhbnQgdG8gYWRkIHRoZSBzZW50cnkgZXZlbnQgYnJlYWRjcnVtYiB3aGVuIHRoZSB1c2VyIGhhcyB0aGUgYnJlYWRjcnVtYiBpbnRlZ3JhdGlvbiBpbnN0YWxsZWQgYW5kXG4gICAgLy8gYWN0aXZhdGVkIGl0cyBgc2VudHJ5YCBvcHRpb24uXG4gICAgLy8gV2UgYWxzbyBkbyBub3Qgd2FudCB0byB1c2UgdGhlIGBCcmVhZGNydW1ic2AgY2xhc3MgaGVyZSBkaXJlY3RseSwgYmVjYXVzZSB3ZSBkbyBub3Qgd2FudCBpdCB0byBiZSBpbmNsdWRlZCBpblxuICAgIC8vIGJ1bmRsZXMsIGlmIGl0IGlzIG5vdCB1c2VkIGJ5IHRoZSBTREsuXG4gICAgLy8gVGhpcyBhbGwgc2FkbHkgaXMgYSBiaXQgdWdseSwgYnV0IHdlIGN1cnJlbnRseSBkb24ndCBoYXZlIGEgXCJwcmUtc2VuZFwiIGhvb2sgb24gdGhlIGludGVncmF0aW9ucyBzbyB3ZSBkbyBpdCB0aGlzXG4gICAgLy8gd2F5IGZvciBub3cuXG4gICAgY29uc3QgYnJlYWRjcnVtYkludGVncmF0aW9uID0gdGhpcy5nZXRJbnRlZ3JhdGlvbkJ5SWQoQlJFQURDUlVNQl9JTlRFR1JBVElPTl9JRCkgO1xuICAgIC8vIFdlIGNoZWNrIGZvciBkZWZpbmVkbmVzcyBvZiBgYWRkU2VudHJ5QnJlYWRjcnVtYmAgaW4gY2FzZSB1c2VycyBwcm92aWRlZCB0aGVpciBvd24gaW50ZWdyYXRpb24gd2l0aCBpZFxuICAgIC8vIFwiQnJlYWRjcnVtYnNcIiB0aGF0IGRvZXMgbm90IGhhdmUgdGhpcyBmdW5jdGlvbi5cbiAgICBpZiAoYnJlYWRjcnVtYkludGVncmF0aW9uICYmIGJyZWFkY3J1bWJJbnRlZ3JhdGlvbi5hZGRTZW50cnlCcmVhZGNydW1iKSB7XG4gICAgICBicmVhZGNydW1iSW50ZWdyYXRpb24uYWRkU2VudHJ5QnJlYWRjcnVtYihldmVudCk7XG4gICAgfVxuXG4gICAgc3VwZXIuc2VuZEV2ZW50KGV2ZW50LCBoaW50KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZW5kcyB1c2VyIGZlZWRiYWNrIHRvIFNlbnRyeS5cbiAgICovXG4gICBjYXB0dXJlVXNlckZlZWRiYWNrKGZlZWRiYWNrKSB7XG4gICAgaWYgKCF0aGlzLl9pc0VuYWJsZWQoKSkge1xuICAgICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBsb2dnZXIud2FybignU0RLIG5vdCBlbmFibGVkLCB3aWxsIG5vdCBjYXB0dXJlIHVzZXIgZmVlZGJhY2suJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgZW52ZWxvcGUgPSBjcmVhdGVVc2VyRmVlZGJhY2tFbnZlbG9wZShmZWVkYmFjaywge1xuICAgICAgbWV0YWRhdGE6IHRoaXMuZ2V0U2RrTWV0YWRhdGEoKSxcbiAgICAgIGRzbjogdGhpcy5nZXREc24oKSxcbiAgICAgIHR1bm5lbDogdGhpcy5nZXRPcHRpb25zKCkudHVubmVsLFxuICAgIH0pO1xuICAgIHZvaWQgdGhpcy5fc2VuZEVudmVsb3BlKGVudmVsb3BlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIF9wcmVwYXJlRXZlbnQoZXZlbnQsIGhpbnQsIHNjb3BlKSB7XG4gICAgZXZlbnQucGxhdGZvcm0gPSBldmVudC5wbGF0Zm9ybSB8fCAnamF2YXNjcmlwdCc7XG4gICAgcmV0dXJuIHN1cGVyLl9wcmVwYXJlRXZlbnQoZXZlbnQsIGhpbnQsIHNjb3BlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZW5kcyBjbGllbnQgcmVwb3J0cyBhcyBhbiBlbnZlbG9wZS5cbiAgICovXG4gICBfZmx1c2hPdXRjb21lcygpIHtcbiAgICBjb25zdCBvdXRjb21lcyA9IHRoaXMuX2NsZWFyT3V0Y29tZXMoKTtcblxuICAgIGlmIChvdXRjb21lcy5sZW5ndGggPT09IDApIHtcbiAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLmxvZygnTm8gb3V0Y29tZXMgdG8gc2VuZCcpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICghdGhpcy5fZHNuKSB7XG4gICAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5sb2coJ05vIGRzbiBwcm92aWRlZCwgd2lsbCBub3Qgc2VuZCBvdXRjb21lcycpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLmxvZygnU2VuZGluZyBvdXRjb21lczonLCBvdXRjb21lcyk7XG5cbiAgICBjb25zdCBlbnZlbG9wZSA9IGNyZWF0ZUNsaWVudFJlcG9ydEVudmVsb3BlKG91dGNvbWVzLCB0aGlzLl9vcHRpb25zLnR1bm5lbCAmJiBkc25Ub1N0cmluZyh0aGlzLl9kc24pKTtcbiAgICB2b2lkIHRoaXMuX3NlbmRFbnZlbG9wZShlbnZlbG9wZSk7XG4gIH1cbn1cblxuZXhwb3J0IHsgQnJvd3NlckNsaWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xpZW50LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/client.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/eventbuilder.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/eventbuilder.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"eventFromError\": function() { return /* binding */ eventFromError; },\n/* harmony export */   \"eventFromException\": function() { return /* binding */ eventFromException; },\n/* harmony export */   \"eventFromMessage\": function() { return /* binding */ eventFromMessage; },\n/* harmony export */   \"eventFromPlainObject\": function() { return /* binding */ eventFromPlainObject; },\n/* harmony export */   \"eventFromString\": function() { return /* binding */ eventFromString; },\n/* harmony export */   \"eventFromUnknownInput\": function() { return /* binding */ eventFromUnknownInput; },\n/* harmony export */   \"exceptionFromError\": function() { return /* binding */ exceptionFromError; },\n/* harmony export */   \"parseStackFrames\": function() { return /* binding */ parseStackFrames; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n\n\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n  const client = hub.getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isEvent)(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        },\n      ],\n    },\n    extra: {\n      __serialized__: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeToSize)(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception ).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex) {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addExceptionMechanism)(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.resolvedSyncPromise)(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.resolvedSyncPromise)(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isErrorEvent)(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isDOMError)(exception) || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isDOMException)(exception )) {\n    const domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      const name = domException.name || ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isDOMError)(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addExceptionTypeValue)(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isError)(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(exception) || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isEvent)(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addExceptionMechanism)(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addExceptionTypeValue)(event, `${exception}`, undefined);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addExceptionMechanism)(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromString(\n  stackParser,\n  input,\n  syntheticException,\n  attachStacktrace,\n) {\n  const event = {\n    message: input,\n  };\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: input, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception,\n  { isUnhandledRejection },\n) {\n  const keys = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.extractExceptionKeysForMessage)(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isErrorEvent)(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isEvent)(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj) {\n  try {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\n\n//# sourceMappingURL=eventbuilder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/eventbuilder.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/helpers.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/helpers.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WINDOW\": function() { return /* binding */ WINDOW; },\n/* harmony export */   \"ignoreNextOnError\": function() { return /* binding */ ignoreNextOnError; },\n/* harmony export */   \"shouldIgnoreOnError\": function() { return /* binding */ shouldIgnoreOnError; },\n/* harmony export */   \"wrap\": function() { return /* binding */ wrap; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n\n\n\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getOriginalFunction)(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function () {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.withScope)((scope) => {\n        scope.addEventProcessor((event) => {\n          if (options.mechanism) {\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addExceptionTypeValue)(event, undefined, undefined);\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addExceptionMechanism)(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.captureException)(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.markFunctionWrapped)(sentryWrapped, fn);\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addNonEnumerableProperty)(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\n\n\n//# sourceMappingURL=helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9oZWxwZXJzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQTJEO0FBQ2tHOztBQUU3SixlQUFlLHFEQUFVOztBQUV6Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxRQUFRLGtFQUFtQjtBQUMzQjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOOztBQUVBLE1BQU0sdURBQVM7QUFDZjtBQUNBO0FBQ0EsWUFBWSxvRUFBcUI7QUFDakMsWUFBWSxvRUFBcUI7QUFDakM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxTQUFTOztBQUVULFFBQVEsOERBQWdCO0FBQ3hCLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksZUFBZTs7QUFFbkI7QUFDQTtBQUNBLEVBQUUsa0VBQW1COztBQUVyQixFQUFFLHVFQUF3Qjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQSxJQUFJOztBQUVKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVnRTtBQUNoRSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvYnJvd3Nlci9lc20vaGVscGVycy5qcz9iZjM3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdpdGhTY29wZSwgY2FwdHVyZUV4Y2VwdGlvbiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBHTE9CQUxfT0JKLCBnZXRPcmlnaW5hbEZ1bmN0aW9uLCBtYXJrRnVuY3Rpb25XcmFwcGVkLCBhZGROb25FbnVtZXJhYmxlUHJvcGVydHksIGFkZEV4Y2VwdGlvblR5cGVWYWx1ZSwgYWRkRXhjZXB0aW9uTWVjaGFuaXNtIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmNvbnN0IFdJTkRPVyA9IEdMT0JBTF9PQkogO1xuXG5sZXQgaWdub3JlT25FcnJvciA9IDA7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBzaG91bGRJZ25vcmVPbkVycm9yKCkge1xuICByZXR1cm4gaWdub3JlT25FcnJvciA+IDA7XG59XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBpZ25vcmVOZXh0T25FcnJvcigpIHtcbiAgLy8gb25lcnJvciBzaG91bGQgdHJpZ2dlciBiZWZvcmUgc2V0VGltZW91dFxuICBpZ25vcmVPbkVycm9yKys7XG4gIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgIGlnbm9yZU9uRXJyb3ItLTtcbiAgfSk7XG59XG5cbi8qKlxuICogSW5zdHJ1bWVudHMgdGhlIGdpdmVuIGZ1bmN0aW9uIGFuZCBzZW5kcyBhbiBldmVudCB0byBTZW50cnkgZXZlcnkgdGltZSB0aGVcbiAqIGZ1bmN0aW9uIHRocm93cyBhbiBleGNlcHRpb24uXG4gKlxuICogQHBhcmFtIGZuIEEgZnVuY3Rpb24gdG8gd3JhcC4gSXQgaXMgZ2VuZXJhbGx5IHNhZmUgdG8gcGFzcyBhbiB1bmJvdW5kIGZ1bmN0aW9uLCBiZWNhdXNlIHRoZSByZXR1cm5lZCB3cmFwcGVyIGFsd2F5c1xuICogaGFzIGEgY29ycmVjdCBgdGhpc2AgY29udGV4dC5cbiAqIEByZXR1cm5zIFRoZSB3cmFwcGVkIGZ1bmN0aW9uLlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiB3cmFwKFxuICBmbixcbiAgb3B0aW9uc1xuXG4gPSB7fSxcbiAgYmVmb3JlLFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuKSB7XG4gIC8vIGZvciBmdXR1cmUgcmVhZGVycyB3aGF0IHRoaXMgZG9lcyBpcyB3cmFwIGEgZnVuY3Rpb24gYW5kIHRoZW4gY3JlYXRlXG4gIC8vIGEgYmktZGlyZWN0aW9uYWwgd3JhcHBpbmcgYmV0d2VlbiB0aGVtLlxuICAvL1xuICAvLyBleGFtcGxlOiB3cmFwcGVkID0gd3JhcChvcmlnaW5hbCk7XG4gIC8vICBvcmlnaW5hbC5fX3NlbnRyeV93cmFwcGVkX18gLT4gd3JhcHBlZFxuICAvLyAgd3JhcHBlZC5fX3NlbnRyeV9vcmlnaW5hbF9fIC0+IG9yaWdpbmFsXG5cbiAgaWYgKHR5cGVvZiBmbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBmbjtcbiAgfVxuXG4gIHRyeSB7XG4gICAgLy8gaWYgd2UncmUgZGVhbGluZyB3aXRoIGEgZnVuY3Rpb24gdGhhdCB3YXMgcHJldmlvdXNseSB3cmFwcGVkLCByZXR1cm5cbiAgICAvLyB0aGUgb3JpZ2luYWwgd3JhcHBlci5cbiAgICBjb25zdCB3cmFwcGVyID0gZm4uX19zZW50cnlfd3JhcHBlZF9fO1xuICAgIGlmICh3cmFwcGVyKSB7XG4gICAgICByZXR1cm4gd3JhcHBlcjtcbiAgICB9XG5cbiAgICAvLyBXZSBkb24ndCB3YW5uYSB3cmFwIGl0IHR3aWNlXG4gICAgaWYgKGdldE9yaWdpbmFsRnVuY3Rpb24oZm4pKSB7XG4gICAgICByZXR1cm4gZm47XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSnVzdCBhY2Nlc3NpbmcgY3VzdG9tIHByb3BzIGluIHNvbWUgU2VsZW5pdW0gZW52aXJvbm1lbnRzXG4gICAgLy8gY2FuIGNhdXNlIGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGV4Y2VwdGlvbiAoc2VlIHJhdmVuLWpzIzQ5NSkuXG4gICAgLy8gQmFpbCBvbiB3cmFwcGluZyBhbmQgcmV0dXJuIHRoZSBmdW5jdGlvbiBhcy1pcyAoZGVmZXJzIHRvIHdpbmRvdy5vbmVycm9yKS5cbiAgICByZXR1cm4gZm47XG4gIH1cblxuICAvKiBlc2xpbnQtZGlzYWJsZSBwcmVmZXItcmVzdC1wYXJhbXMgKi9cbiAgLy8gSXQgaXMgaW1wb3J0YW50IHRoYXQgYHNlbnRyeVdyYXBwZWRgIGlzIG5vdCBhbiBhcnJvdyBmdW5jdGlvbiB0byBwcmVzZXJ2ZSB0aGUgY29udGV4dCBvZiBgdGhpc2BcbiAgY29uc3Qgc2VudHJ5V3JhcHBlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtcblxuICAgIHRyeSB7XG4gICAgICBpZiAoYmVmb3JlICYmIHR5cGVvZiBiZWZvcmUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgYmVmb3JlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9XG5cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55LCBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgICAgIGNvbnN0IHdyYXBwZWRBcmd1bWVudHMgPSBhcmdzLm1hcCgoYXJnKSA9PiB3cmFwKGFyZywgb3B0aW9ucykpO1xuXG4gICAgICAvLyBBdHRlbXB0IHRvIGludm9rZSB1c2VyLWxhbmQgZnVuY3Rpb25cbiAgICAgIC8vIE5PVEU6IElmIHlvdSBhcmUgYSBTZW50cnkgdXNlciwgYW5kIHlvdSBhcmUgc2VlaW5nIHRoaXMgc3RhY2sgZnJhbWUsIGl0XG4gICAgICAvLyAgICAgICBtZWFucyB0aGUgc2VudHJ5LmphdmFzY3JpcHQgU0RLIGNhdWdodCBhbiBlcnJvciBpbnZva2luZyB5b3VyIGFwcGxpY2F0aW9uIGNvZGUuIFRoaXNcbiAgICAgIC8vICAgICAgIGlzIGV4cGVjdGVkIGJlaGF2aW9yIGFuZCBOT1QgaW5kaWNhdGl2ZSBvZiBhIGJ1ZyB3aXRoIHNlbnRyeS5qYXZhc2NyaXB0LlxuICAgICAgcmV0dXJuIGZuLmFwcGx5KHRoaXMsIHdyYXBwZWRBcmd1bWVudHMpO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICBpZ25vcmVOZXh0T25FcnJvcigpO1xuXG4gICAgICB3aXRoU2NvcGUoKHNjb3BlKSA9PiB7XG4gICAgICAgIHNjb3BlLmFkZEV2ZW50UHJvY2Vzc29yKChldmVudCkgPT4ge1xuICAgICAgICAgIGlmIChvcHRpb25zLm1lY2hhbmlzbSkge1xuICAgICAgICAgICAgYWRkRXhjZXB0aW9uVHlwZVZhbHVlKGV2ZW50LCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7XG4gICAgICAgICAgICBhZGRFeGNlcHRpb25NZWNoYW5pc20oZXZlbnQsIG9wdGlvbnMubWVjaGFuaXNtKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBldmVudC5leHRyYSA9IHtcbiAgICAgICAgICAgIC4uLmV2ZW50LmV4dHJhLFxuICAgICAgICAgICAgYXJndW1lbnRzOiBhcmdzLFxuICAgICAgICAgIH07XG5cbiAgICAgICAgICByZXR1cm4gZXZlbnQ7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNhcHR1cmVFeGNlcHRpb24oZXgpO1xuICAgICAgfSk7XG5cbiAgICAgIHRocm93IGV4O1xuICAgIH1cbiAgfTtcbiAgLyogZXNsaW50LWVuYWJsZSBwcmVmZXItcmVzdC1wYXJhbXMgKi9cblxuICAvLyBBY2Nlc3Npbmcgc29tZSBvYmplY3RzIG1heSB0aHJvd1xuICAvLyByZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzExNjhcbiAgdHJ5IHtcbiAgICBmb3IgKGNvbnN0IHByb3BlcnR5IGluIGZuKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGZuLCBwcm9wZXJ0eSkpIHtcbiAgICAgICAgc2VudHJ5V3JhcHBlZFtwcm9wZXJ0eV0gPSBmbltwcm9wZXJ0eV07XG4gICAgICB9XG4gICAgfVxuICB9IGNhdGNoIChfb08pIHt9IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZW1wdHlcblxuICAvLyBTaWduYWwgdGhhdCB0aGlzIGZ1bmN0aW9uIGhhcyBiZWVuIHdyYXBwZWQvZmlsbGVkIGFscmVhZHlcbiAgLy8gZm9yIGJvdGggZGVidWdnaW5nIGFuZCB0byBwcmV2ZW50IGl0IHRvIGJlaW5nIHdyYXBwZWQvZmlsbGVkIHR3aWNlXG4gIG1hcmtGdW5jdGlvbldyYXBwZWQoc2VudHJ5V3JhcHBlZCwgZm4pO1xuXG4gIGFkZE5vbkVudW1lcmFibGVQcm9wZXJ0eShmbiwgJ19fc2VudHJ5X3dyYXBwZWRfXycsIHNlbnRyeVdyYXBwZWQpO1xuXG4gIC8vIFJlc3RvcmUgb3JpZ2luYWwgZnVuY3Rpb24gbmFtZSAobm90IGFsbCBicm93c2VycyBhbGxvdyB0aGF0KVxuICB0cnkge1xuICAgIGNvbnN0IGRlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNlbnRyeVdyYXBwZWQsICduYW1lJykgO1xuICAgIGlmIChkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSkge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbnRyeVdyYXBwZWQsICduYW1lJywge1xuICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIGZuLm5hbWU7XG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4gIH0gY2F0Y2ggKF9vTykge31cblxuICByZXR1cm4gc2VudHJ5V3JhcHBlZDtcbn1cblxuLyoqXG4gKiBBbGwgcHJvcGVydGllcyB0aGUgcmVwb3J0IGRpYWxvZyBzdXBwb3J0c1xuICovXG5cbmV4cG9ydCB7IFdJTkRPVywgaWdub3JlTmV4dE9uRXJyb3IsIHNob3VsZElnbm9yZU9uRXJyb3IsIHdyYXAgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlbHBlcnMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/helpers.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/index.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Breadcrumbs\": function() { return /* reexport safe */ _integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_30__.Breadcrumbs; },\n/* harmony export */   \"BrowserClient\": function() { return /* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_15__.BrowserClient; },\n/* harmony export */   \"BrowserProfilingIntegration\": function() { return /* reexport safe */ _profiling_integration_js__WEBPACK_IMPORTED_MODULE_27__.BrowserProfilingIntegration; },\n/* harmony export */   \"BrowserTracing\": function() { return /* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_23__.BrowserTracing; },\n/* harmony export */   \"Dedupe\": function() { return /* reexport safe */ _integrations_dedupe_js__WEBPACK_IMPORTED_MODULE_33__.Dedupe; },\n/* harmony export */   \"FunctionToString\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.FunctionToString; },\n/* harmony export */   \"GlobalHandlers\": function() { return /* reexport safe */ _integrations_globalhandlers_js__WEBPACK_IMPORTED_MODULE_28__.GlobalHandlers; },\n/* harmony export */   \"HttpContext\": function() { return /* reexport safe */ _integrations_httpcontext_js__WEBPACK_IMPORTED_MODULE_32__.HttpContext; },\n/* harmony export */   \"Hub\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_1__.Hub; },\n/* harmony export */   \"InboundFilters\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_2__.InboundFilters; },\n/* harmony export */   \"Integrations\": function() { return /* binding */ INTEGRATIONS; },\n/* harmony export */   \"LinkedErrors\": function() { return /* reexport safe */ _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_31__.LinkedErrors; },\n/* harmony export */   \"ModuleMetadata\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.ModuleMetadata; },\n/* harmony export */   \"Replay\": function() { return /* reexport safe */ _sentry_replay__WEBPACK_IMPORTED_MODULE_22__.Replay; },\n/* harmony export */   \"SDK_VERSION\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.SDK_VERSION; },\n/* harmony export */   \"Scope\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_5__.Scope; },\n/* harmony export */   \"TryCatch\": function() { return /* reexport safe */ _integrations_trycatch_js__WEBPACK_IMPORTED_MODULE_29__.TryCatch; },\n/* harmony export */   \"WINDOW\": function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_14__.WINDOW; },\n/* harmony export */   \"addBreadcrumb\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.addBreadcrumb; },\n/* harmony export */   \"addGlobalEventProcessor\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_5__.addGlobalEventProcessor; },\n/* harmony export */   \"addTracingExtensions\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_7__.addTracingExtensions; },\n/* harmony export */   \"captureEvent\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.captureEvent; },\n/* harmony export */   \"captureException\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.captureException; },\n/* harmony export */   \"captureMessage\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.captureMessage; },\n/* harmony export */   \"captureUserFeedback\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_21__.captureUserFeedback; },\n/* harmony export */   \"chromeStackLineParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_18__.chromeStackLineParser; },\n/* harmony export */   \"close\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_21__.close; },\n/* harmony export */   \"configureScope\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.configureScope; },\n/* harmony export */   \"createTransport\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_8__.createTransport; },\n/* harmony export */   \"createUserFeedbackEnvelope\": function() { return /* reexport safe */ _userfeedback_js__WEBPACK_IMPORTED_MODULE_20__.createUserFeedbackEnvelope; },\n/* harmony export */   \"defaultIntegrations\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_21__.defaultIntegrations; },\n/* harmony export */   \"defaultRequestInstrumentationOptions\": function() { return /* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_24__.defaultRequestInstrumentationOptions; },\n/* harmony export */   \"defaultStackLineParsers\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_18__.defaultStackLineParsers; },\n/* harmony export */   \"defaultStackParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_18__.defaultStackParser; },\n/* harmony export */   \"eventFromException\": function() { return /* reexport safe */ _eventbuilder_js__WEBPACK_IMPORTED_MODULE_19__.eventFromException; },\n/* harmony export */   \"eventFromMessage\": function() { return /* reexport safe */ _eventbuilder_js__WEBPACK_IMPORTED_MODULE_19__.eventFromMessage; },\n/* harmony export */   \"extractTraceparentData\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_9__.extractTraceparentData; },\n/* harmony export */   \"flush\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_21__.flush; },\n/* harmony export */   \"forceLoad\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_21__.forceLoad; },\n/* harmony export */   \"geckoStackLineParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_18__.geckoStackLineParser; },\n/* harmony export */   \"getActiveTransaction\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_10__.getActiveTransaction; },\n/* harmony export */   \"getCurrentHub\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub; },\n/* harmony export */   \"getHubFromCarrier\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_1__.getHubFromCarrier; },\n/* harmony export */   \"init\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_21__.init; },\n/* harmony export */   \"instrumentOutgoingRequests\": function() { return /* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_24__.instrumentOutgoingRequests; },\n/* harmony export */   \"lastEventId\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_21__.lastEventId; },\n/* harmony export */   \"makeBrowserOfflineTransport\": function() { return /* reexport safe */ _transports_offline_js__WEBPACK_IMPORTED_MODULE_25__.makeBrowserOfflineTransport; },\n/* harmony export */   \"makeFetchTransport\": function() { return /* reexport safe */ _transports_fetch_js__WEBPACK_IMPORTED_MODULE_16__.makeFetchTransport; },\n/* harmony export */   \"makeMain\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_1__.makeMain; },\n/* harmony export */   \"makeMultiplexedTransport\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_11__.makeMultiplexedTransport; },\n/* harmony export */   \"makeXHRTransport\": function() { return /* reexport safe */ _transports_xhr_js__WEBPACK_IMPORTED_MODULE_17__.makeXHRTransport; },\n/* harmony export */   \"onLoad\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_21__.onLoad; },\n/* harmony export */   \"onProfilingStartRouteTransaction\": function() { return /* reexport safe */ _profiling_hubextensions_js__WEBPACK_IMPORTED_MODULE_26__.onProfilingStartRouteTransaction; },\n/* harmony export */   \"opera10StackLineParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_18__.opera10StackLineParser; },\n/* harmony export */   \"opera11StackLineParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_18__.opera11StackLineParser; },\n/* harmony export */   \"setContext\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.setContext; },\n/* harmony export */   \"setExtra\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.setExtra; },\n/* harmony export */   \"setExtras\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.setExtras; },\n/* harmony export */   \"setTag\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.setTag; },\n/* harmony export */   \"setTags\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.setTags; },\n/* harmony export */   \"setUser\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.setUser; },\n/* harmony export */   \"showReportDialog\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_21__.showReportDialog; },\n/* harmony export */   \"spanStatusfromHttpCode\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_12__.spanStatusfromHttpCode; },\n/* harmony export */   \"startTransaction\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.startTransaction; },\n/* harmony export */   \"trace\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_13__.trace; },\n/* harmony export */   \"winjsStackLineParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_18__.winjsStackLineParser; },\n/* harmony export */   \"withScope\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.withScope; },\n/* harmony export */   \"wrap\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_21__.wrap; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/integrations/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/integrations/functiontostring.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/integrations/inboundfilters.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/integrations/metadata.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/version.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/transports/base.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/utils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/transports/multiplexed.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/span.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./client.js */ \"./node_modules/@sentry/browser/esm/client.js\");\n/* harmony import */ var _transports_fetch_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./transports/fetch.js */ \"./node_modules/@sentry/browser/esm/transports/fetch.js\");\n/* harmony import */ var _transports_xhr_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./transports/xhr.js */ \"./node_modules/@sentry/browser/esm/transports/xhr.js\");\n/* harmony import */ var _stack_parsers_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./stack-parsers.js */ \"./node_modules/@sentry/browser/esm/stack-parsers.js\");\n/* harmony import */ var _eventbuilder_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./eventbuilder.js */ \"./node_modules/@sentry/browser/esm/eventbuilder.js\");\n/* harmony import */ var _userfeedback_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./userfeedback.js */ \"./node_modules/@sentry/browser/esm/userfeedback.js\");\n/* harmony import */ var _sdk_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./sdk.js */ \"./node_modules/@sentry/browser/esm/sdk.js\");\n/* harmony import */ var _integrations_index_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./integrations/index.js */ \"./node_modules/@sentry/browser/esm/integrations/index.js\");\n/* harmony import */ var _sentry_replay__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @sentry/replay */ \"./node_modules/@sentry/replay/esm/index.js\");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @sentry-internal/tracing */ \"./node_modules/@sentry-internal/tracing/esm/browser/browsertracing.js\");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @sentry-internal/tracing */ \"./node_modules/@sentry-internal/tracing/esm/browser/request.js\");\n/* harmony import */ var _transports_offline_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./transports/offline.js */ \"./node_modules/@sentry/browser/esm/transports/offline.js\");\n/* harmony import */ var _profiling_hubextensions_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./profiling/hubextensions.js */ \"./node_modules/@sentry/browser/esm/profiling/hubextensions.js\");\n/* harmony import */ var _profiling_integration_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./profiling/integration.js */ \"./node_modules/@sentry/browser/esm/profiling/integration.js\");\n/* harmony import */ var _integrations_globalhandlers_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./integrations/globalhandlers.js */ \"./node_modules/@sentry/browser/esm/integrations/globalhandlers.js\");\n/* harmony import */ var _integrations_trycatch_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./integrations/trycatch.js */ \"./node_modules/@sentry/browser/esm/integrations/trycatch.js\");\n/* harmony import */ var _integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./integrations/breadcrumbs.js */ \"./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js\");\n/* harmony import */ var _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./integrations/linkederrors.js */ \"./node_modules/@sentry/browser/esm/integrations/linkederrors.js\");\n/* harmony import */ var _integrations_httpcontext_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./integrations/httpcontext.js */ \"./node_modules/@sentry/browser/esm/integrations/httpcontext.js\");\n/* harmony import */ var _integrations_dedupe_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./integrations/dedupe.js */ \"./node_modules/@sentry/browser/esm/integrations/dedupe.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlet windowIntegrations = {};\n\n// This block is needed to add compatibility with the integrations packages when used with a CDN\nif (_helpers_js__WEBPACK_IMPORTED_MODULE_14__.WINDOW.Sentry && _helpers_js__WEBPACK_IMPORTED_MODULE_14__.WINDOW.Sentry.Integrations) {\n  windowIntegrations = _helpers_js__WEBPACK_IMPORTED_MODULE_14__.WINDOW.Sentry.Integrations;\n}\n\nconst INTEGRATIONS = {\n  ...windowIntegrations,\n  ..._sentry_core__WEBPACK_IMPORTED_MODULE_34__,\n  ..._integrations_index_js__WEBPACK_IMPORTED_MODULE_35__,\n};\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE0QztBQUN1YjtBQUM3YjtBQUNBO0FBQ007QUFDZTtBQUNKO0FBQzZJO0FBQzNIO0FBQ1Y7QUFDaUY7QUFDL0Y7QUFDVDtBQUNvRjtBQUN0RDtBQUNVO0FBQ1A7QUFDUDtBQUNaO0FBQ007QUFDRTtBQUNGO0FBQ1Y7O0FBRWxEOztBQUVBO0FBQ0EsSUFBSSx1REFBYSxJQUFJLG9FQUEwQjtBQUMvQyx1QkFBdUIsb0VBQTBCO0FBQ2pEOztBQUVBO0FBQ0E7QUFDQSxLQUFLLDBDQUFZO0FBQ2pCLEtBQUssb0RBQUs7QUFDVjs7QUFFd0M7QUFDeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2Jyb3dzZXIvZXNtL2luZGV4LmpzPzU5MjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW50ZWdyYXRpb25zIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmV4cG9ydCB7IEZ1bmN0aW9uVG9TdHJpbmcsIEh1YiwgSW5ib3VuZEZpbHRlcnMsIE1vZHVsZU1ldGFkYXRhLCBTREtfVkVSU0lPTiwgU2NvcGUsIGFkZEJyZWFkY3J1bWIsIGFkZEdsb2JhbEV2ZW50UHJvY2Vzc29yLCBhZGRUcmFjaW5nRXh0ZW5zaW9ucywgY2FwdHVyZUV2ZW50LCBjYXB0dXJlRXhjZXB0aW9uLCBjYXB0dXJlTWVzc2FnZSwgY29uZmlndXJlU2NvcGUsIGNyZWF0ZVRyYW5zcG9ydCwgZXh0cmFjdFRyYWNlcGFyZW50RGF0YSwgZ2V0QWN0aXZlVHJhbnNhY3Rpb24sIGdldEN1cnJlbnRIdWIsIGdldEh1YkZyb21DYXJyaWVyLCBtYWtlTWFpbiwgbWFrZU11bHRpcGxleGVkVHJhbnNwb3J0LCBzZXRDb250ZXh0LCBzZXRFeHRyYSwgc2V0RXh0cmFzLCBzZXRUYWcsIHNldFRhZ3MsIHNldFVzZXIsIHNwYW5TdGF0dXNmcm9tSHR0cENvZGUsIHN0YXJ0VHJhbnNhY3Rpb24sIHRyYWNlLCB3aXRoU2NvcGUgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcbmV4cG9ydCB7IFdJTkRPVyB9IGZyb20gJy4vaGVscGVycy5qcyc7XG5leHBvcnQgeyBCcm93c2VyQ2xpZW50IH0gZnJvbSAnLi9jbGllbnQuanMnO1xuZXhwb3J0IHsgbWFrZUZldGNoVHJhbnNwb3J0IH0gZnJvbSAnLi90cmFuc3BvcnRzL2ZldGNoLmpzJztcbmV4cG9ydCB7IG1ha2VYSFJUcmFuc3BvcnQgfSBmcm9tICcuL3RyYW5zcG9ydHMveGhyLmpzJztcbmV4cG9ydCB7IGNocm9tZVN0YWNrTGluZVBhcnNlciwgZGVmYXVsdFN0YWNrTGluZVBhcnNlcnMsIGRlZmF1bHRTdGFja1BhcnNlciwgZ2Vja29TdGFja0xpbmVQYXJzZXIsIG9wZXJhMTBTdGFja0xpbmVQYXJzZXIsIG9wZXJhMTFTdGFja0xpbmVQYXJzZXIsIHdpbmpzU3RhY2tMaW5lUGFyc2VyIH0gZnJvbSAnLi9zdGFjay1wYXJzZXJzLmpzJztcbmV4cG9ydCB7IGV2ZW50RnJvbUV4Y2VwdGlvbiwgZXZlbnRGcm9tTWVzc2FnZSB9IGZyb20gJy4vZXZlbnRidWlsZGVyLmpzJztcbmV4cG9ydCB7IGNyZWF0ZVVzZXJGZWVkYmFja0VudmVsb3BlIH0gZnJvbSAnLi91c2VyZmVlZGJhY2suanMnO1xuZXhwb3J0IHsgY2FwdHVyZVVzZXJGZWVkYmFjaywgY2xvc2UsIGRlZmF1bHRJbnRlZ3JhdGlvbnMsIGZsdXNoLCBmb3JjZUxvYWQsIGluaXQsIGxhc3RFdmVudElkLCBvbkxvYWQsIHNob3dSZXBvcnREaWFsb2csIHdyYXAgfSBmcm9tICcuL3Nkay5qcyc7XG5pbXBvcnQgKiBhcyBpbmRleCBmcm9tICcuL2ludGVncmF0aW9ucy9pbmRleC5qcyc7XG5leHBvcnQgeyBSZXBsYXkgfSBmcm9tICdAc2VudHJ5L3JlcGxheSc7XG5leHBvcnQgeyBCcm93c2VyVHJhY2luZywgZGVmYXVsdFJlcXVlc3RJbnN0cnVtZW50YXRpb25PcHRpb25zLCBpbnN0cnVtZW50T3V0Z29pbmdSZXF1ZXN0cyB9IGZyb20gJ0BzZW50cnktaW50ZXJuYWwvdHJhY2luZyc7XG5leHBvcnQgeyBtYWtlQnJvd3Nlck9mZmxpbmVUcmFuc3BvcnQgfSBmcm9tICcuL3RyYW5zcG9ydHMvb2ZmbGluZS5qcyc7XG5leHBvcnQgeyBvblByb2ZpbGluZ1N0YXJ0Um91dGVUcmFuc2FjdGlvbiB9IGZyb20gJy4vcHJvZmlsaW5nL2h1YmV4dGVuc2lvbnMuanMnO1xuZXhwb3J0IHsgQnJvd3NlclByb2ZpbGluZ0ludGVncmF0aW9uIH0gZnJvbSAnLi9wcm9maWxpbmcvaW50ZWdyYXRpb24uanMnO1xuZXhwb3J0IHsgR2xvYmFsSGFuZGxlcnMgfSBmcm9tICcuL2ludGVncmF0aW9ucy9nbG9iYWxoYW5kbGVycy5qcyc7XG5leHBvcnQgeyBUcnlDYXRjaCB9IGZyb20gJy4vaW50ZWdyYXRpb25zL3RyeWNhdGNoLmpzJztcbmV4cG9ydCB7IEJyZWFkY3J1bWJzIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvYnJlYWRjcnVtYnMuanMnO1xuZXhwb3J0IHsgTGlua2VkRXJyb3JzIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvbGlua2VkZXJyb3JzLmpzJztcbmV4cG9ydCB7IEh0dHBDb250ZXh0IH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvaHR0cGNvbnRleHQuanMnO1xuZXhwb3J0IHsgRGVkdXBlIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvZGVkdXBlLmpzJztcblxubGV0IHdpbmRvd0ludGVncmF0aW9ucyA9IHt9O1xuXG4vLyBUaGlzIGJsb2NrIGlzIG5lZWRlZCB0byBhZGQgY29tcGF0aWJpbGl0eSB3aXRoIHRoZSBpbnRlZ3JhdGlvbnMgcGFja2FnZXMgd2hlbiB1c2VkIHdpdGggYSBDRE5cbmlmIChXSU5ET1cuU2VudHJ5ICYmIFdJTkRPVy5TZW50cnkuSW50ZWdyYXRpb25zKSB7XG4gIHdpbmRvd0ludGVncmF0aW9ucyA9IFdJTkRPVy5TZW50cnkuSW50ZWdyYXRpb25zO1xufVxuXG5jb25zdCBJTlRFR1JBVElPTlMgPSB7XG4gIC4uLndpbmRvd0ludGVncmF0aW9ucyxcbiAgLi4uSW50ZWdyYXRpb25zLFxuICAuLi5pbmRleCxcbn07XG5cbmV4cG9ydCB7IElOVEVHUkFUSU9OUyBhcyBJbnRlZ3JhdGlvbnMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/index.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BREADCRUMB_INTEGRATION_ID\": function() { return /* binding */ BREADCRUMB_INTEGRATION_ID; },\n/* harmony export */   \"Breadcrumbs\": function() { return /* binding */ Breadcrumbs; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/instrument.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/severity.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/url.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst BREADCRUMB_INTEGRATION_ID = 'Breadcrumbs';\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nclass Breadcrumbs  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = BREADCRUMB_INTEGRATION_ID;}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Breadcrumbs.id;}\n\n  /**\n   * Options of the breadcrumbs integration.\n   */\n  // This field is public, because we use it in the browser client to check if the `sentry` option is enabled.\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {Breadcrumbs.prototype.__init.call(this);\n    this.options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n   setupOnce() {\n    if (this.options.console) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('console', _consoleBreadcrumb);\n    }\n    if (this.options.dom) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('dom', _domBreadcrumb(this.options.dom));\n    }\n    if (this.options.xhr) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('xhr', _xhrBreadcrumb);\n    }\n    if (this.options.fetch) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('fetch', _fetchBreadcrumb);\n    }\n    if (this.options.history) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('history', _historyBreadcrumb);\n    }\n  }\n\n  /**\n   * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n   */\n   addSentryBreadcrumb(event) {\n    if (this.options.sentry) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().addBreadcrumb(\n        {\n          category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n          event_id: event.event_id,\n          level: event.level,\n          message: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getEventDescription)(event),\n        },\n        {\n          event,\n        },\n      );\n    }\n  }\n} Breadcrumbs.__initStatic();\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _domBreadcrumb(dom) {\n  function _innerDomBreadcrumb(handlerData) {\n    let target;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event ;\n      target = _isEvent(event)\n        ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.htmlTreeAsString)(event.target, { keyAttrs, maxStringLength })\n        : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.htmlTreeAsString)(event, { keyAttrs, maxStringLength });\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  return _innerDomBreadcrumb;\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _consoleBreadcrumb(handlerData) {\n  // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n  // console warnings. This happens when a Vue template is rendered with\n  // an undeclared variable, which we try to stringify, ultimately causing\n  // Vue to issue another warning which repeats indefinitely.\n  // see: https://github.com/getsentry/sentry-javascript/pull/6010\n  // see: https://github.com/getsentry/sentry-javascript/issues/5916\n  for (let i = 0; i < handlerData.args.length; i++) {\n    if (handlerData.args[i] === 'ref=Ref<') {\n      handlerData.args[i + 1] = 'viewRef';\n      break;\n    }\n  }\n  const breadcrumb = {\n    category: 'console',\n    data: {\n      arguments: handlerData.args,\n      logger: 'console',\n    },\n    level: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.severityLevelFromString)(handlerData.level),\n    message: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.safeJoin)(handlerData.args, ' '),\n  };\n\n  if (handlerData.level === 'assert') {\n    if (handlerData.args[0] === false) {\n      breadcrumb.message = `Assertion failed: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.safeJoin)(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n      breadcrumb.data.arguments = handlerData.args.slice(1);\n    } else {\n      // Don't capture a breadcrumb for passed assertions\n      return;\n    }\n  }\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().addBreadcrumb(breadcrumb, {\n    input: handlerData.args,\n    level: handlerData.level,\n  });\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _xhrBreadcrumb(handlerData) {\n  const { startTimestamp, endTimestamp } = handlerData;\n\n  const sentryXhrData = handlerData.xhr[_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SENTRY_XHR_DATA_KEY];\n\n  // We only capture complete, non-sentry requests\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return;\n  }\n\n  const { method, url, status_code, body } = sentryXhrData;\n\n  const data = {\n    method,\n    url,\n    status_code,\n  };\n\n  const hint = {\n    xhr: handlerData.xhr,\n    input: body,\n    startTimestamp,\n    endTimestamp,\n  };\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().addBreadcrumb(\n    {\n      category: 'xhr',\n      data,\n      type: 'http',\n    },\n    hint,\n  );\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _fetchBreadcrumb(handlerData) {\n  const { startTimestamp, endTimestamp } = handlerData;\n\n  // We only capture complete fetch requests\n  if (!endTimestamp) {\n    return;\n  }\n\n  if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n    // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n    return;\n  }\n\n  if (handlerData.error) {\n    const data = handlerData.fetchData;\n    const hint = {\n      data: handlerData.error,\n      input: handlerData.args,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().addBreadcrumb(\n      {\n        category: 'fetch',\n        data,\n        level: 'error',\n        type: 'http',\n      },\n      hint,\n    );\n  } else {\n    const data = {\n      ...handlerData.fetchData,\n      status_code: handlerData.response && handlerData.response.status,\n    };\n    const hint = {\n      input: handlerData.args,\n      response: handlerData.response,\n      startTimestamp,\n      endTimestamp,\n    };\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().addBreadcrumb(\n      {\n        category: 'fetch',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  }\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _historyBreadcrumb(handlerData) {\n  let from = handlerData.from;\n  let to = handlerData.to;\n  const parsedLoc = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.parseUrl)(_helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.location.href);\n  let parsedFrom = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.parseUrl)(from);\n  const parsedTo = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.parseUrl)(to);\n\n  // Initial pushState doesn't provide `from` information\n  if (!parsedFrom.path) {\n    parsedFrom = parsedLoc;\n  }\n\n  // Use only the path component of the URL if the URL matches the current\n  // document (almost all the time when using pushState)\n  if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n    to = parsedTo.relative;\n  }\n  if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n    from = parsedFrom.relative;\n  }\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().addBreadcrumb({\n    category: 'navigation',\n    data: {\n      from,\n      to,\n    },\n  });\n}\n\nfunction _isEvent(event) {\n  return !!event && !!(event ).target;\n}\n\n\n//# sourceMappingURL=breadcrumbs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/dedupe.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/dedupe.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Dedupe\": function() { return /* binding */ Dedupe; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n\n\n/** Deduplication filter */\nclass Dedupe  {constructor() { Dedupe.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Dedupe';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Dedupe.id;}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    const eventProcessor = currentEvent => {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      const self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, self._previousEvent)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n  }\n} Dedupe.__initStatic();\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-ignore Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\n\n//# sourceMappingURL=dedupe.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/dedupe.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/globalhandlers.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/globalhandlers.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GlobalHandlers\": function() { return /* binding */ GlobalHandlers; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/instrument.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _eventbuilder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../eventbuilder.js */ \"./node_modules/@sentry/browser/esm/eventbuilder.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\n\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** Global handlers */\nclass GlobalHandlers  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GlobalHandlers';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = GlobalHandlers.id;}\n\n  /** JSDoc */\n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n   __init2() {this._installFunc = {\n    onerror: _installGlobalOnErrorHandler,\n    onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n  };}\n\n  /** JSDoc */\n   constructor(options) {GlobalHandlers.prototype.__init.call(this);GlobalHandlers.prototype.__init2.call(this);\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    Error.stackTraceLimit = 50;\n    const options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n    // eslint-disable-next-line guard-for-in\n    for (const key in options) {\n      const installFunc = this._installFunc[key ];\n      if (installFunc && options[key ]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key ] = undefined;\n      }\n    }\n  }\n} GlobalHandlers.__initStatic();\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler() {\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)(\n    'error',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (data) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.shouldIgnoreOnError)() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      const event =\n        error === undefined && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isString)(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_3__.eventFromUnknownInput)(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler() {\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)(\n    'unhandledrejection',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (e) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.shouldIgnoreOnError)() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      const event = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isPrimitive)(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_3__.eventFromUnknownInput)(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isErrorEvent)(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isString)(url) && url.length > 0 ? url : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.getLocationHref)();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub, error, event, type) {\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.addExceptionMechanism)(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions() {\n  const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.getCurrentHub)();\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n\n\n//# sourceMappingURL=globalhandlers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/globalhandlers.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/httpcontext.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/httpcontext.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HttpContext\": function() { return /* binding */ HttpContext; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\n/** HttpContext integration collects information about HTTP request headers */\nclass HttpContext  {constructor() { HttpContext.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'HttpContext';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = HttpContext.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.addGlobalEventProcessor)((event) => {\n      if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!_helpers_js__WEBPACK_IMPORTED_MODULE_2__.WINDOW.navigator && !_helpers_js__WEBPACK_IMPORTED_MODULE_2__.WINDOW.location && !_helpers_js__WEBPACK_IMPORTED_MODULE_2__.WINDOW.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = (event.request && event.request.url) || (_helpers_js__WEBPACK_IMPORTED_MODULE_2__.WINDOW.location && _helpers_js__WEBPACK_IMPORTED_MODULE_2__.WINDOW.location.href);\n        const { referrer } = _helpers_js__WEBPACK_IMPORTED_MODULE_2__.WINDOW.document || {};\n        const { userAgent } = _helpers_js__WEBPACK_IMPORTED_MODULE_2__.WINDOW.navigator || {};\n\n        const headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        const request = { ...event.request, ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n} HttpContext.__initStatic();\n\n\n//# sourceMappingURL=httpcontext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbnRlZ3JhdGlvbnMvaHR0cGNvbnRleHQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFzRTtBQUMvQjs7QUFFdkM7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUkscUVBQXVCO0FBQzNCLFVBQVUsMkRBQWE7QUFDdkI7QUFDQSxhQUFhLHlEQUFnQixLQUFLLHdEQUFlLEtBQUssd0RBQWU7QUFDckU7QUFDQTs7QUFFQTtBQUNBLDZEQUE2RCx3REFBZSxJQUFJLDZEQUFvQjtBQUNwRyxnQkFBZ0IsV0FBVyxFQUFFLHdEQUFlO0FBQzVDLGdCQUFnQixZQUFZLEVBQUUseURBQWdCOztBQUU5QztBQUNBO0FBQ0EsNEJBQTRCLG1CQUFtQjtBQUMvQyw2QkFBNkIseUJBQXlCO0FBQ3REO0FBQ0EsMEJBQTBCLCtCQUErQixLQUFLOztBQUU5RCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEVBQUU7O0FBRXFCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbnRlZ3JhdGlvbnMvaHR0cGNvbnRleHQuanM/N2NiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhZGRHbG9iYWxFdmVudFByb2Nlc3NvciwgZ2V0Q3VycmVudEh1YiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBXSU5ET1cgfSBmcm9tICcuLi9oZWxwZXJzLmpzJztcblxuLyoqIEh0dHBDb250ZXh0IGludGVncmF0aW9uIGNvbGxlY3RzIGluZm9ybWF0aW9uIGFib3V0IEhUVFAgcmVxdWVzdCBoZWFkZXJzICovXG5jbGFzcyBIdHRwQ29udGV4dCAge2NvbnN0cnVjdG9yKCkgeyBIdHRwQ29udGV4dC5wcm90b3R5cGUuX19pbml0LmNhbGwodGhpcyk7IH1cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgc3RhdGljIF9faW5pdFN0YXRpYygpIHt0aGlzLmlkID0gJ0h0dHBDb250ZXh0Jzt9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgX19pbml0KCkge3RoaXMubmFtZSA9IEh0dHBDb250ZXh0LmlkO31cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzZXR1cE9uY2UoKSB7XG4gICAgYWRkR2xvYmFsRXZlbnRQcm9jZXNzb3IoKGV2ZW50KSA9PiB7XG4gICAgICBpZiAoZ2V0Q3VycmVudEh1YigpLmdldEludGVncmF0aW9uKEh0dHBDb250ZXh0KSkge1xuICAgICAgICAvLyBpZiBub25lIG9mIHRoZSBpbmZvcm1hdGlvbiB3ZSB3YW50IGV4aXN0cywgZG9uJ3QgYm90aGVyXG4gICAgICAgIGlmICghV0lORE9XLm5hdmlnYXRvciAmJiAhV0lORE9XLmxvY2F0aW9uICYmICFXSU5ET1cuZG9jdW1lbnQpIHtcbiAgICAgICAgICByZXR1cm4gZXZlbnQ7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBncmFiIGFzIG11Y2ggaW5mbyBhcyBleGlzdHMgYW5kIGFkZCBpdCB0byB0aGUgZXZlbnRcbiAgICAgICAgY29uc3QgdXJsID0gKGV2ZW50LnJlcXVlc3QgJiYgZXZlbnQucmVxdWVzdC51cmwpIHx8IChXSU5ET1cubG9jYXRpb24gJiYgV0lORE9XLmxvY2F0aW9uLmhyZWYpO1xuICAgICAgICBjb25zdCB7IHJlZmVycmVyIH0gPSBXSU5ET1cuZG9jdW1lbnQgfHwge307XG4gICAgICAgIGNvbnN0IHsgdXNlckFnZW50IH0gPSBXSU5ET1cubmF2aWdhdG9yIHx8IHt9O1xuXG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSB7XG4gICAgICAgICAgLi4uKGV2ZW50LnJlcXVlc3QgJiYgZXZlbnQucmVxdWVzdC5oZWFkZXJzKSxcbiAgICAgICAgICAuLi4ocmVmZXJyZXIgJiYgeyBSZWZlcmVyOiByZWZlcnJlciB9KSxcbiAgICAgICAgICAuLi4odXNlckFnZW50ICYmIHsgJ1VzZXItQWdlbnQnOiB1c2VyQWdlbnQgfSksXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHJlcXVlc3QgPSB7IC4uLmV2ZW50LnJlcXVlc3QsIC4uLih1cmwgJiYgeyB1cmwgfSksIGhlYWRlcnMgfTtcblxuICAgICAgICByZXR1cm4geyAuLi5ldmVudCwgcmVxdWVzdCB9O1xuICAgICAgfVxuICAgICAgcmV0dXJuIGV2ZW50O1xuICAgIH0pO1xuICB9XG59IEh0dHBDb250ZXh0Ll9faW5pdFN0YXRpYygpO1xuXG5leHBvcnQgeyBIdHRwQ29udGV4dCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHR0cGNvbnRleHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/httpcontext.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Breadcrumbs\": function() { return /* reexport safe */ _breadcrumbs_js__WEBPACK_IMPORTED_MODULE_2__.Breadcrumbs; },\n/* harmony export */   \"Dedupe\": function() { return /* reexport safe */ _dedupe_js__WEBPACK_IMPORTED_MODULE_5__.Dedupe; },\n/* harmony export */   \"GlobalHandlers\": function() { return /* reexport safe */ _globalhandlers_js__WEBPACK_IMPORTED_MODULE_0__.GlobalHandlers; },\n/* harmony export */   \"HttpContext\": function() { return /* reexport safe */ _httpcontext_js__WEBPACK_IMPORTED_MODULE_4__.HttpContext; },\n/* harmony export */   \"LinkedErrors\": function() { return /* reexport safe */ _linkederrors_js__WEBPACK_IMPORTED_MODULE_3__.LinkedErrors; },\n/* harmony export */   \"TryCatch\": function() { return /* reexport safe */ _trycatch_js__WEBPACK_IMPORTED_MODULE_1__.TryCatch; }\n/* harmony export */ });\n/* harmony import */ var _globalhandlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./globalhandlers.js */ \"./node_modules/@sentry/browser/esm/integrations/globalhandlers.js\");\n/* harmony import */ var _trycatch_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./trycatch.js */ \"./node_modules/@sentry/browser/esm/integrations/trycatch.js\");\n/* harmony import */ var _breadcrumbs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./breadcrumbs.js */ \"./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js\");\n/* harmony import */ var _linkederrors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./linkederrors.js */ \"./node_modules/@sentry/browser/esm/integrations/linkederrors.js\");\n/* harmony import */ var _httpcontext_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./httpcontext.js */ \"./node_modules/@sentry/browser/esm/integrations/httpcontext.js\");\n/* harmony import */ var _dedupe_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dedupe.js */ \"./node_modules/@sentry/browser/esm/integrations/dedupe.js\");\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbnRlZ3JhdGlvbnMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXFEO0FBQ1o7QUFDTTtBQUNFO0FBQ0Y7QUFDVjtBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvYnJvd3Nlci9lc20vaW50ZWdyYXRpb25zL2luZGV4LmpzP2UyNDgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgR2xvYmFsSGFuZGxlcnMgfSBmcm9tICcuL2dsb2JhbGhhbmRsZXJzLmpzJztcbmV4cG9ydCB7IFRyeUNhdGNoIH0gZnJvbSAnLi90cnljYXRjaC5qcyc7XG5leHBvcnQgeyBCcmVhZGNydW1icyB9IGZyb20gJy4vYnJlYWRjcnVtYnMuanMnO1xuZXhwb3J0IHsgTGlua2VkRXJyb3JzIH0gZnJvbSAnLi9saW5rZWRlcnJvcnMuanMnO1xuZXhwb3J0IHsgSHR0cENvbnRleHQgfSBmcm9tICcuL2h0dHBjb250ZXh0LmpzJztcbmV4cG9ydCB7IERlZHVwZSB9IGZyb20gJy4vZGVkdXBlLmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/index.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/linkederrors.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/linkederrors.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LinkedErrors\": function() { return /* binding */ LinkedErrors; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/aggregate-errors.js\");\n/* harmony import */ var _eventbuilder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../eventbuilder.js */ \"./node_modules/@sentry/browser/esm/eventbuilder.js\");\n\n\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'LinkedErrors';}\n\n  /**\n   * @inheritDoc\n   */\n    __init() {this.name = LinkedErrors.id;}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {LinkedErrors.prototype.__init.call(this);\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    addGlobalEventProcessor((event, hint) => {\n      const hub = getCurrentHub();\n      const client = hub.getClient();\n      const self = hub.getIntegration(LinkedErrors);\n\n      if (!client || !self) {\n        return event;\n      }\n\n      const options = client.getOptions();\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.applyAggregateErrorsToEvent)(\n        _eventbuilder_js__WEBPACK_IMPORTED_MODULE_1__.exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        self._key,\n        self._limit,\n        event,\n        hint,\n      );\n\n      return event;\n    });\n  }\n} LinkedErrors.__initStatic();\n\n\n//# sourceMappingURL=linkederrors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbnRlZ3JhdGlvbnMvbGlua2VkZXJyb3JzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0RDtBQUNKOztBQUV4RDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBLGNBQWM7O0FBRWQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsR0FBRztBQUM5QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLDBFQUEyQjtBQUNqQyxRQUFRLGdFQUFrQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEVBQUU7O0FBRXNCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbnRlZ3JhdGlvbnMvbGlua2VkZXJyb3JzLmpzPzY0MDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXBwbHlBZ2dyZWdhdGVFcnJvcnNUb0V2ZW50IH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBleGNlcHRpb25Gcm9tRXJyb3IgfSBmcm9tICcuLi9ldmVudGJ1aWxkZXIuanMnO1xuXG5jb25zdCBERUZBVUxUX0tFWSA9ICdjYXVzZSc7XG5jb25zdCBERUZBVUxUX0xJTUlUID0gNTtcblxuLyoqIEFkZHMgU0RLIGluZm8gdG8gYW4gZXZlbnQuICovXG5jbGFzcyBMaW5rZWRFcnJvcnMgIHtcbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgc3RhdGljIF9faW5pdFN0YXRpYygpIHt0aGlzLmlkID0gJ0xpbmtlZEVycm9ycyc7fVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgICBfX2luaXQoKSB7dGhpcy5uYW1lID0gTGlua2VkRXJyb3JzLmlkO31cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIGNvbnN0cnVjdG9yKG9wdGlvbnMgPSB7fSkge0xpbmtlZEVycm9ycy5wcm90b3R5cGUuX19pbml0LmNhbGwodGhpcyk7XG4gICAgdGhpcy5fa2V5ID0gb3B0aW9ucy5rZXkgfHwgREVGQVVMVF9LRVk7XG4gICAgdGhpcy5fbGltaXQgPSBvcHRpb25zLmxpbWl0IHx8IERFRkFVTFRfTElNSVQ7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzZXR1cE9uY2UoYWRkR2xvYmFsRXZlbnRQcm9jZXNzb3IsIGdldEN1cnJlbnRIdWIpIHtcbiAgICBhZGRHbG9iYWxFdmVudFByb2Nlc3NvcigoZXZlbnQsIGhpbnQpID0+IHtcbiAgICAgIGNvbnN0IGh1YiA9IGdldEN1cnJlbnRIdWIoKTtcbiAgICAgIGNvbnN0IGNsaWVudCA9IGh1Yi5nZXRDbGllbnQoKTtcbiAgICAgIGNvbnN0IHNlbGYgPSBodWIuZ2V0SW50ZWdyYXRpb24oTGlua2VkRXJyb3JzKTtcblxuICAgICAgaWYgKCFjbGllbnQgfHwgIXNlbGYpIHtcbiAgICAgICAgcmV0dXJuIGV2ZW50O1xuICAgICAgfVxuXG4gICAgICBjb25zdCBvcHRpb25zID0gY2xpZW50LmdldE9wdGlvbnMoKTtcbiAgICAgIGFwcGx5QWdncmVnYXRlRXJyb3JzVG9FdmVudChcbiAgICAgICAgZXhjZXB0aW9uRnJvbUVycm9yLFxuICAgICAgICBvcHRpb25zLnN0YWNrUGFyc2VyLFxuICAgICAgICBvcHRpb25zLm1heFZhbHVlTGVuZ3RoLFxuICAgICAgICBzZWxmLl9rZXksXG4gICAgICAgIHNlbGYuX2xpbWl0LFxuICAgICAgICBldmVudCxcbiAgICAgICAgaGludCxcbiAgICAgICk7XG5cbiAgICAgIHJldHVybiBldmVudDtcbiAgICB9KTtcbiAgfVxufSBMaW5rZWRFcnJvcnMuX19pbml0U3RhdGljKCk7XG5cbmV4cG9ydCB7IExpbmtlZEVycm9ycyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlua2VkZXJyb3JzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/linkederrors.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/trycatch.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/trycatch.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TryCatch\": function() { return /* binding */ TryCatch; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/stacktrace.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nclass TryCatch  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'TryCatch';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = TryCatch.id;}\n\n  /** JSDoc */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {TryCatch.prototype.__init.call(this);\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n   setupOnce() {\n    if (this._options.setTimeout) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && \"XMLHttpRequest\" in _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    const eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n} TryCatch.__initStatic();\n\n/** JSDoc */\nfunction _wrapTimeFunction(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    const originalCallback = args[0];\n    args[0] = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(originalCallback, {\n      mechanism: {\n        data: { function: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(original) },\n        handled: true,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( callback) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(original),\n          },\n          handled: true,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(original),\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getOriginalFunction)(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW ;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(proto, 'addEventListener', function (original)\n\n {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(fn),\n              target,\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn ;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\n\n//# sourceMappingURL=trycatch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/trycatch.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/profiling/hubextensions.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/profiling/hubextensions.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MAX_PROFILE_DURATION_MS\": function() { return /* binding */ MAX_PROFILE_DURATION_MS; },\n/* harmony export */   \"onProfilingStartRouteTransaction\": function() { return /* binding */ onProfilingStartRouteTransaction; },\n/* harmony export */   \"wrapTransactionWithProfiling\": function() { return /* binding */ wrapTransactionWithProfiling; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry/browser/esm/profiling/utils.js\");\n\n\n\n\n\n/* eslint-disable complexity */\n\nconst MAX_PROFILE_DURATION_MS = 30000;\n// Keep a flag value to avoid re-initializing the profiler constructor. If it fails\n// once, it will always fail and this allows us to early return.\nlet PROFILING_CONSTRUCTOR_FAILED = false;\n\n/**\n * Check if profiler constructor is available.\n * @param maybeProfiler\n */\nfunction isJSProfilerSupported(maybeProfiler) {\n  return typeof maybeProfiler === 'function';\n}\n\n/**\n * Safety wrapper for startTransaction for the unlikely case that transaction starts before tracing is imported -\n * if that happens we want to avoid throwing an error from profiling code.\n * see https://github.com/getsentry/sentry-javascript/issues/4731.\n *\n * @experimental\n */\nfunction onProfilingStartRouteTransaction(transaction) {\n  if (!transaction) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Profiling] Transaction is undefined, skipping profiling');\n    }\n    return transaction;\n  }\n\n  return wrapTransactionWithProfiling(transaction);\n}\n\n/**\n * Wraps startTransaction and stopTransaction with profiling related logic.\n * startProfiling is called after the call to startTransaction in order to avoid our own code from\n * being profiled. Because of that same reason, stopProfiling is called before the call to stopTransaction.\n */\nfunction wrapTransactionWithProfiling(transaction) {\n  // Feature support check first\n  const JSProfilerConstructor = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.Profiler;\n\n  if (!isJSProfilerSupported(JSProfilerConstructor)) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(\n        '[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object.',\n      );\n    }\n    return transaction;\n  }\n\n  // If constructor failed once, it will always fail, so we can early return.\n  if (PROFILING_CONSTRUCTOR_FAILED) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Profiling] Profiling has been disabled for the duration of the current user session.');\n    }\n    return transaction;\n  }\n\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getCurrentHub)().getClient();\n  const options = client && client.getOptions();\n  if (!options) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Profiling] Profiling disabled, no options found.');\n    return transaction;\n  }\n\n  // @ts-ignore profilesSampleRate is not part of the browser options yet\n  const profilesSampleRate = options.profilesSampleRate;\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isValidSampleRate)(profilesSampleRate)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('[Profiling] Discarding profile because of invalid sample rate.');\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `profileSampleRate` is 0, it's a sign the profile should be dropped\n  if (!profilesSampleRate) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(\n        '[Profiling] Discarding profile because a negative sampling decision was inherited or profileSampleRate is set to 0',\n      );\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  const sampled = profilesSampleRate === true ? true : Math.random() < profilesSampleRate;\n  // Check if we should sample this profile\n  if (!sampled) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(\n        `[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(\n          profilesSampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  // From initial testing, it seems that the minimum value for sampleInterval is 10ms.\n  const samplingIntervalMS = 10;\n  // Start the profiler\n  const maxSamples = Math.floor(MAX_PROFILE_DURATION_MS / samplingIntervalMS);\n  let profiler;\n\n  // Attempt to initialize the profiler constructor, if it fails, we disable profiling for the current user session.\n  // This is likely due to a missing 'Document-Policy': 'js-profiling' header. We do not want to throw an error if this happens\n  // as we risk breaking the user's application, so just disable profiling and log an error.\n  try {\n    profiler = new JSProfilerConstructor({ sampleInterval: samplingIntervalMS, maxBufferSize: maxSamples });\n  } catch (e) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(\n        \"[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header.\",\n      );\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Profiling] Disabling profiling for current user session.');\n    }\n    PROFILING_CONSTRUCTOR_FAILED = true;\n  }\n\n  // We failed to construct the profiler, fallback to original transaction - there is no need to log\n  // anything as we already did that in the try/catch block.\n  if (!profiler) {\n    return transaction;\n  }\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`[Profiling] started profiling transaction: ${transaction.name || transaction.description}`);\n  }\n\n  // We create \"unique\" transaction names to avoid concurrent transactions with same names\n  // from being ignored by the profiler. From here on, only this transaction name should be used when\n  // calling the profiler methods. Note: we log the original name to the user to avoid confusion.\n  const profileId = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.uuid4)();\n\n  /**\n   * Idempotent handler for profile stop\n   */\n  async function onProfileHandler() {\n    // Check if the profile exists and return it the behavior has to be idempotent as users may call transaction.finish multiple times.\n    if (!transaction) {\n      return null;\n    }\n    // Satisfy the type checker, but profiler will always be defined here.\n    if (!profiler) {\n      return null;\n    }\n\n    // This is temporary - we will use the collected span data to evaluate\n    // if deferring txn.finish until profiler resolves is a viable approach.\n    const stopProfilerSpan = transaction.startChild({ description: 'profiler.stop', op: 'profiler' });\n\n    return profiler\n      .stop()\n      .then((p) => {\n        stopProfilerSpan.finish();\n\n        if (maxDurationTimeoutID) {\n          _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.clearTimeout(maxDurationTimeoutID);\n          maxDurationTimeoutID = undefined;\n        }\n\n        if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`[Profiling] stopped profiling of transaction: ${transaction.name || transaction.description}`);\n        }\n\n        // In case of an overlapping transaction, stopProfiling may return null and silently ignore the overlapping profile.\n        if (!p) {\n          if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(\n              `[Profiling] profiler returned null profile for: ${transaction.name || transaction.description}`,\n              'this may indicate an overlapping transaction or a call to stopProfiling with a profile title that was never started',\n            );\n          }\n          return null;\n        }\n\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.addProfileToMap)(profileId, p);\n        return null;\n      })\n      .catch(error => {\n        stopProfilerSpan.finish();\n        if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Profiling] error while stopping profiler:', error);\n        }\n        return null;\n      });\n  }\n\n  // Enqueue a timeout to prevent profiles from running over max duration.\n  let maxDurationTimeoutID = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.setTimeout(() => {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(\n        '[Profiling] max profile duration elapsed, stopping profiling for:',\n        transaction.name || transaction.description,\n      );\n    }\n    // If the timeout exceeds, we want to stop profiling, but not finish the transaction\n    void onProfileHandler();\n  }, MAX_PROFILE_DURATION_MS);\n\n  // We need to reference the original finish call to avoid creating an infinite loop\n  const originalFinish = transaction.finish.bind(transaction);\n\n  /**\n   * Wraps startTransaction and stopTransaction with profiling related logic.\n   * startProfiling is called after the call to startTransaction in order to avoid our own code from\n   * being profiled. Because of that same reason, stopProfiling is called before the call to stopTransaction.\n   */\n  function profilingWrappedTransactionFinish() {\n    if (!transaction) {\n      return originalFinish();\n    }\n    // onProfileHandler should always return the same profile even if this is called multiple times.\n    // Always call onProfileHandler to ensure stopProfiling is called and the timeout is cleared.\n    void onProfileHandler().then(\n      () => {\n        transaction.setContext('profile', { profile_id: profileId });\n        originalFinish();\n      },\n      () => {\n        // If onProfileHandler fails, we still want to call the original finish method.\n        originalFinish();\n      },\n    );\n\n    return transaction;\n  }\n\n  transaction.finish = profilingWrappedTransactionFinish;\n  return transaction;\n}\n\n\n//# sourceMappingURL=hubextensions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/profiling/hubextensions.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/profiling/integration.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/profiling/integration.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BrowserProfilingIntegration\": function() { return /* binding */ BrowserProfilingIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _hubextensions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hubextensions.js */ \"./node_modules/@sentry/browser/esm/profiling/hubextensions.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry/browser/esm/profiling/utils.js\");\n\n\n\n\n/**\n * Browser profiling integration. Stores any event that has contexts[\"profile\"][\"profile_id\"]\n * This exists because we do not want to await async profiler.stop calls as transaction.finish is called\n * in a synchronous context. Instead, we handle sending the profile async from the promise callback and\n * rely on being able to pull the event from the cache when we need to construct the envelope. This makes the\n * integration less reliable as we might be dropping profiles when the cache is full.\n *\n * @experimental\n */\nclass BrowserProfilingIntegration  {constructor() { BrowserProfilingIntegration.prototype.__init.call(this);BrowserProfilingIntegration.prototype.__init2.call(this); }\n    __init() {this.name = 'BrowserProfilingIntegration';}\n   __init2() {this.getCurrentHub = undefined;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    this.getCurrentHub = getCurrentHub;\n    const client = this.getCurrentHub().getClient() ;\n\n    if (client && typeof client.on === 'function') {\n      client.on('startTransaction', (transaction) => {\n        (0,_hubextensions_js__WEBPACK_IMPORTED_MODULE_0__.wrapTransactionWithProfiling)(transaction);\n      });\n\n      client.on('beforeEnvelope', (envelope) => {\n        // if not profiles are in queue, there is nothing to add to the envelope.\n        if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.PROFILE_MAP.size) {\n          return;\n        }\n\n        const profiledTransactionEvents = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.findProfiledTransactionsFromEnvelope)(envelope);\n        if (!profiledTransactionEvents.length) {\n          return;\n        }\n\n        const profilesToAddToEnvelope = [];\n\n        for (const profiledTransaction of profiledTransactionEvents) {\n          const context = profiledTransaction && profiledTransaction.contexts;\n          const profile_id = context && context['profile'] && (context['profile']['profile_id'] );\n\n          if (!profile_id) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n              _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('[Profiling] cannot find profile for a transaction without a profile context');\n            continue;\n          }\n\n          // Remove the profile from the transaction context before sending, relay will take care of the rest.\n          if (context && context['profile']) {\n            delete context.profile;\n          }\n\n          const profile = _utils_js__WEBPACK_IMPORTED_MODULE_1__.PROFILE_MAP.get(profile_id);\n          if (!profile) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`[Profiling] Could not retrieve profile for transaction: ${profile_id}`);\n            continue;\n          }\n\n          _utils_js__WEBPACK_IMPORTED_MODULE_1__.PROFILE_MAP[\"delete\"](profile_id);\n          const profileEvent = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createProfilingEvent)(profile_id, profile, profiledTransaction );\n\n          if (profileEvent) {\n            profilesToAddToEnvelope.push(profileEvent);\n          }\n        }\n\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.addProfilesToEnvelope)(envelope, profilesToAddToEnvelope);\n      });\n    } else {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('[Profiling] Client does not support hooks, profiling will be disabled');\n    }\n  }\n}\n\n\n//# sourceMappingURL=integration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9wcm9maWxpbmcvaW50ZWdyYXRpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF1QztBQUMyQjtBQUMwRDs7QUFFNUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLGdCQUFnQix3REFBd0Q7QUFDNUcsY0FBYztBQUNkLGNBQWM7O0FBRWQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxRQUFRLCtFQUE0QjtBQUNwQyxPQUFPOztBQUVQO0FBQ0E7QUFDQSxhQUFhLHVEQUFtQjtBQUNoQztBQUNBOztBQUVBLDBDQUEwQywrRUFBb0M7QUFDOUU7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYyxxREFBVTtBQUN4QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDBCQUEwQixzREFBZTtBQUN6QztBQUNBLDZFQUE2RSxxREFBVSw0REFBNEQsV0FBVztBQUM5SjtBQUNBOztBQUVBLFVBQVUsNERBQWtCO0FBQzVCLCtCQUErQiwrREFBb0I7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFFBQVEsZ0VBQXFCO0FBQzdCLE9BQU87QUFDUCxNQUFNO0FBQ04sTUFBTSxzREFBVztBQUNqQjtBQUNBO0FBQ0E7O0FBRXVDO0FBQ3ZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9wcm9maWxpbmcvaW50ZWdyYXRpb24uanM/NzNiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IHdyYXBUcmFuc2FjdGlvbldpdGhQcm9maWxpbmcgfSBmcm9tICcuL2h1YmV4dGVuc2lvbnMuanMnO1xuaW1wb3J0IHsgUFJPRklMRV9NQVAsIGZpbmRQcm9maWxlZFRyYW5zYWN0aW9uc0Zyb21FbnZlbG9wZSwgY3JlYXRlUHJvZmlsaW5nRXZlbnQsIGFkZFByb2ZpbGVzVG9FbnZlbG9wZSB9IGZyb20gJy4vdXRpbHMuanMnO1xuXG4vKipcbiAqIEJyb3dzZXIgcHJvZmlsaW5nIGludGVncmF0aW9uLiBTdG9yZXMgYW55IGV2ZW50IHRoYXQgaGFzIGNvbnRleHRzW1wicHJvZmlsZVwiXVtcInByb2ZpbGVfaWRcIl1cbiAqIFRoaXMgZXhpc3RzIGJlY2F1c2Ugd2UgZG8gbm90IHdhbnQgdG8gYXdhaXQgYXN5bmMgcHJvZmlsZXIuc3RvcCBjYWxscyBhcyB0cmFuc2FjdGlvbi5maW5pc2ggaXMgY2FsbGVkXG4gKiBpbiBhIHN5bmNocm9ub3VzIGNvbnRleHQuIEluc3RlYWQsIHdlIGhhbmRsZSBzZW5kaW5nIHRoZSBwcm9maWxlIGFzeW5jIGZyb20gdGhlIHByb21pc2UgY2FsbGJhY2sgYW5kXG4gKiByZWx5IG9uIGJlaW5nIGFibGUgdG8gcHVsbCB0aGUgZXZlbnQgZnJvbSB0aGUgY2FjaGUgd2hlbiB3ZSBuZWVkIHRvIGNvbnN0cnVjdCB0aGUgZW52ZWxvcGUuIFRoaXMgbWFrZXMgdGhlXG4gKiBpbnRlZ3JhdGlvbiBsZXNzIHJlbGlhYmxlIGFzIHdlIG1pZ2h0IGJlIGRyb3BwaW5nIHByb2ZpbGVzIHdoZW4gdGhlIGNhY2hlIGlzIGZ1bGwuXG4gKlxuICogQGV4cGVyaW1lbnRhbFxuICovXG5jbGFzcyBCcm93c2VyUHJvZmlsaW5nSW50ZWdyYXRpb24gIHtjb25zdHJ1Y3RvcigpIHsgQnJvd3NlclByb2ZpbGluZ0ludGVncmF0aW9uLnByb3RvdHlwZS5fX2luaXQuY2FsbCh0aGlzKTtCcm93c2VyUHJvZmlsaW5nSW50ZWdyYXRpb24ucHJvdG90eXBlLl9faW5pdDIuY2FsbCh0aGlzKTsgfVxuICAgIF9faW5pdCgpIHt0aGlzLm5hbWUgPSAnQnJvd3NlclByb2ZpbGluZ0ludGVncmF0aW9uJzt9XG4gICBfX2luaXQyKCkge3RoaXMuZ2V0Q3VycmVudEh1YiA9IHVuZGVmaW5lZDt9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgc2V0dXBPbmNlKGFkZEdsb2JhbEV2ZW50UHJvY2Vzc29yLCBnZXRDdXJyZW50SHViKSB7XG4gICAgdGhpcy5nZXRDdXJyZW50SHViID0gZ2V0Q3VycmVudEh1YjtcbiAgICBjb25zdCBjbGllbnQgPSB0aGlzLmdldEN1cnJlbnRIdWIoKS5nZXRDbGllbnQoKSA7XG5cbiAgICBpZiAoY2xpZW50ICYmIHR5cGVvZiBjbGllbnQub24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGNsaWVudC5vbignc3RhcnRUcmFuc2FjdGlvbicsICh0cmFuc2FjdGlvbikgPT4ge1xuICAgICAgICB3cmFwVHJhbnNhY3Rpb25XaXRoUHJvZmlsaW5nKHRyYW5zYWN0aW9uKTtcbiAgICAgIH0pO1xuXG4gICAgICBjbGllbnQub24oJ2JlZm9yZUVudmVsb3BlJywgKGVudmVsb3BlKSA9PiB7XG4gICAgICAgIC8vIGlmIG5vdCBwcm9maWxlcyBhcmUgaW4gcXVldWUsIHRoZXJlIGlzIG5vdGhpbmcgdG8gYWRkIHRvIHRoZSBlbnZlbG9wZS5cbiAgICAgICAgaWYgKCFQUk9GSUxFX01BUFsnc2l6ZSddKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgcHJvZmlsZWRUcmFuc2FjdGlvbkV2ZW50cyA9IGZpbmRQcm9maWxlZFRyYW5zYWN0aW9uc0Zyb21FbnZlbG9wZShlbnZlbG9wZSk7XG4gICAgICAgIGlmICghcHJvZmlsZWRUcmFuc2FjdGlvbkV2ZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBwcm9maWxlc1RvQWRkVG9FbnZlbG9wZSA9IFtdO1xuXG4gICAgICAgIGZvciAoY29uc3QgcHJvZmlsZWRUcmFuc2FjdGlvbiBvZiBwcm9maWxlZFRyYW5zYWN0aW9uRXZlbnRzKSB7XG4gICAgICAgICAgY29uc3QgY29udGV4dCA9IHByb2ZpbGVkVHJhbnNhY3Rpb24gJiYgcHJvZmlsZWRUcmFuc2FjdGlvbi5jb250ZXh0cztcbiAgICAgICAgICBjb25zdCBwcm9maWxlX2lkID0gY29udGV4dCAmJiBjb250ZXh0Wydwcm9maWxlJ10gJiYgKGNvbnRleHRbJ3Byb2ZpbGUnXVsncHJvZmlsZV9pZCddICk7XG5cbiAgICAgICAgICBpZiAoIXByb2ZpbGVfaWQpIHtcbiAgICAgICAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiZcbiAgICAgICAgICAgICAgbG9nZ2VyLmxvZygnW1Byb2ZpbGluZ10gY2Fubm90IGZpbmQgcHJvZmlsZSBmb3IgYSB0cmFuc2FjdGlvbiB3aXRob3V0IGEgcHJvZmlsZSBjb250ZXh0Jyk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBSZW1vdmUgdGhlIHByb2ZpbGUgZnJvbSB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCBiZWZvcmUgc2VuZGluZywgcmVsYXkgd2lsbCB0YWtlIGNhcmUgb2YgdGhlIHJlc3QuXG4gICAgICAgICAgaWYgKGNvbnRleHQgJiYgY29udGV4dFsncHJvZmlsZSddKSB7XG4gICAgICAgICAgICBkZWxldGUgY29udGV4dC5wcm9maWxlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IHByb2ZpbGUgPSBQUk9GSUxFX01BUC5nZXQocHJvZmlsZV9pZCk7XG4gICAgICAgICAgaWYgKCFwcm9maWxlKSB7XG4gICAgICAgICAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5sb2coYFtQcm9maWxpbmddIENvdWxkIG5vdCByZXRyaWV2ZSBwcm9maWxlIGZvciB0cmFuc2FjdGlvbjogJHtwcm9maWxlX2lkfWApO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgUFJPRklMRV9NQVAuZGVsZXRlKHByb2ZpbGVfaWQpO1xuICAgICAgICAgIGNvbnN0IHByb2ZpbGVFdmVudCA9IGNyZWF0ZVByb2ZpbGluZ0V2ZW50KHByb2ZpbGVfaWQsIHByb2ZpbGUsIHByb2ZpbGVkVHJhbnNhY3Rpb24gKTtcblxuICAgICAgICAgIGlmIChwcm9maWxlRXZlbnQpIHtcbiAgICAgICAgICAgIHByb2ZpbGVzVG9BZGRUb0VudmVsb3BlLnB1c2gocHJvZmlsZUV2ZW50KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBhZGRQcm9maWxlc1RvRW52ZWxvcGUoZW52ZWxvcGUsIHByb2ZpbGVzVG9BZGRUb0VudmVsb3BlKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2dnZXIud2FybignW1Byb2ZpbGluZ10gQ2xpZW50IGRvZXMgbm90IHN1cHBvcnQgaG9va3MsIHByb2ZpbGluZyB3aWxsIGJlIGRpc2FibGVkJyk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCB7IEJyb3dzZXJQcm9maWxpbmdJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZWdyYXRpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/profiling/integration.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/profiling/utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/profiling/utils.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PROFILE_MAP\": function() { return /* binding */ PROFILE_MAP; },\n/* harmony export */   \"addProfileToMap\": function() { return /* binding */ addProfileToMap; },\n/* harmony export */   \"addProfilesToEnvelope\": function() { return /* binding */ addProfilesToEnvelope; },\n/* harmony export */   \"applyDebugMetadata\": function() { return /* binding */ applyDebugMetadata; },\n/* harmony export */   \"convertJSSelfProfileToSampledFormat\": function() { return /* binding */ convertJSSelfProfileToSampledFormat; },\n/* harmony export */   \"createProfilePayload\": function() { return /* binding */ createProfilePayload; },\n/* harmony export */   \"createProfilingEvent\": function() { return /* binding */ createProfilingEvent; },\n/* harmony export */   \"enrichWithThreadInformation\": function() { return /* binding */ enrichWithThreadInformation; },\n/* harmony export */   \"findProfiledTransactionsFromEnvelope\": function() { return /* binding */ findProfiledTransactionsFromEnvelope; },\n/* harmony export */   \"isValidSampleRate\": function() { return /* binding */ isValidSampleRate; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\n\n/* eslint-disable max-lines */\n\nconst MS_TO_NS = 1e6;\n// Use 0 as main thread id which is identical to threadId in node:worker_threads\n// where main logs 0 and workers seem to log in increments of 1\nconst THREAD_ID_STRING = String(0);\nconst THREAD_NAME = 'main';\n\n// Machine properties (eval only once)\nlet OS_PLATFORM = '';\nlet OS_PLATFORM_VERSION = '';\nlet OS_ARCH = '';\nlet OS_BROWSER = (_helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.userAgent) || '';\nlet OS_MODEL = '';\nconst OS_LOCALE =\n  (_helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.language) ||\n  (_helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.languages && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.languages[0]) ||\n  '';\n\nfunction isUserAgentData(data) {\n  return typeof data === 'object' && data !== null && 'getHighEntropyValues' in data;\n}\n\n// @ts-ignore userAgentData is not part of the navigator interface yet\nconst userAgentData = _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.userAgentData;\n\nif (isUserAgentData(userAgentData)) {\n  userAgentData\n    .getHighEntropyValues(['architecture', 'model', 'platform', 'platformVersion', 'fullVersionList'])\n    .then((ua) => {\n      OS_PLATFORM = ua.platform || '';\n      OS_ARCH = ua.architecture || '';\n      OS_MODEL = ua.model || '';\n      OS_PLATFORM_VERSION = ua.platformVersion || '';\n\n      if (ua.fullVersionList && ua.fullVersionList.length > 0) {\n        const firstUa = ua.fullVersionList[ua.fullVersionList.length - 1];\n        OS_BROWSER = `${firstUa.brand} ${firstUa.version}`;\n      }\n    })\n    .catch(e => void e);\n}\n\nfunction isProcessedJSSelfProfile(profile) {\n  return !('thread_metadata' in profile);\n}\n\n// Enriches the profile with threadId of the current thread.\n// This is done in node as we seem to not be able to get the info from C native code.\n/**\n *\n */\nfunction enrichWithThreadInformation(profile) {\n  if (!isProcessedJSSelfProfile(profile)) {\n    return profile;\n  }\n\n  return convertJSSelfProfileToSampledFormat(profile);\n}\n\n// Profile is marked as optional because it is deleted from the metadata\n// by the integration before the event is processed by other integrations.\n\nfunction getTraceId(event) {\n  const traceId = event && event.contexts && event.contexts['trace'] && event.contexts['trace']['trace_id'];\n  // Log a warning if the profile has an invalid traceId (should be uuidv4).\n  // All profiles and transactions are rejected if this is the case and we want to\n  // warn users that this is happening if they enable debug flag\n  if (typeof traceId === 'string' && traceId.length !== 32) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[Profiling] Invalid traceId: ${traceId} on profiled event`);\n    }\n  }\n  if (typeof traceId !== 'string') {\n    return '';\n  }\n\n  return traceId;\n}\n/**\n * Creates a profiling event envelope from a Sentry event. If profile does not pass\n * validation, returns null.\n * @param event\n * @param dsn\n * @param metadata\n * @param tunnel\n * @returns {EventEnvelope | null}\n */\n\n/**\n * Creates a profiling event envelope from a Sentry event.\n */\nfunction createProfilePayload(\n  event,\n  processedProfile,\n  profile_id,\n) {\n  if (event.type !== 'transaction') {\n    // createProfilingEventEnvelope should only be called for transactions,\n    // we type guard this behavior with isProfiledTransactionEvent.\n    throw new TypeError('Profiling events may only be attached to transactions, this should never occur.');\n  }\n\n  if (processedProfile === undefined || processedProfile === null) {\n    throw new TypeError(\n      `Cannot construct profiling event envelope without a valid profile. Got ${processedProfile} instead.`,\n    );\n  }\n\n  const traceId = getTraceId(event);\n  const enrichedThreadProfile = enrichWithThreadInformation(processedProfile);\n  const transactionStartMs = typeof event.start_timestamp === 'number' ? event.start_timestamp * 1000 : Date.now();\n  const transactionEndMs = typeof event.timestamp === 'number' ? event.timestamp * 1000 : Date.now();\n\n  const profile = {\n    event_id: profile_id,\n    timestamp: new Date(transactionStartMs).toISOString(),\n    platform: 'javascript',\n    version: '1',\n    release: event.release || '',\n    environment: event.environment || _sentry_core__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_ENVIRONMENT,\n    runtime: {\n      name: 'javascript',\n      version: _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.userAgent,\n    },\n    os: {\n      name: OS_PLATFORM,\n      version: OS_PLATFORM_VERSION,\n      build_number: OS_BROWSER,\n    },\n    device: {\n      locale: OS_LOCALE,\n      model: OS_MODEL,\n      manufacturer: OS_BROWSER,\n      architecture: OS_ARCH,\n      is_emulator: false,\n    },\n    debug_meta: {\n      images: applyDebugMetadata(processedProfile.resources),\n    },\n    profile: enrichedThreadProfile,\n    transactions: [\n      {\n        name: event.transaction || '',\n        id: event.event_id || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.uuid4)(),\n        trace_id: traceId,\n        active_thread_id: THREAD_ID_STRING,\n        relative_start_ns: '0',\n        relative_end_ns: ((transactionEndMs - transactionStartMs) * 1e6).toFixed(0),\n      },\n    ],\n  };\n\n  return profile;\n}\n\n/**\n * Converts a JSSelfProfile to a our sampled format.\n * Does not currently perform stack indexing.\n */\nfunction convertJSSelfProfileToSampledFormat(input) {\n  let EMPTY_STACK_ID = undefined;\n  let STACK_ID = 0;\n\n  // Initialize the profile that we will fill with data\n  const profile = {\n    samples: [],\n    stacks: [],\n    frames: [],\n    thread_metadata: {\n      [THREAD_ID_STRING]: { name: THREAD_NAME },\n    },\n  };\n\n  if (!input.samples.length) {\n    return profile;\n  }\n\n  // We assert samples.length > 0 above and timestamp should always be present\n  const start = input.samples[0].timestamp;\n  // The JS SDK might change it's time origin based on some heuristic (see See packages/utils/src/time.ts)\n  // when that happens, we need to ensure we are correcting the profile timings so the two timelines stay in sync.\n  // Since JS self profiling time origin is always initialized to performance.timeOrigin, we need to adjust for\n  // the drift between the SDK selected value and our profile time origin.\n  const origin =\n    typeof performance.timeOrigin === 'number' ? performance.timeOrigin : _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.browserPerformanceTimeOrigin || 0;\n  const adjustForOriginChange = origin - (_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.browserPerformanceTimeOrigin || origin);\n\n  for (let i = 0; i < input.samples.length; i++) {\n    const jsSample = input.samples[i];\n\n    // If sample has no stack, add an empty sample\n    if (jsSample.stackId === undefined) {\n      if (EMPTY_STACK_ID === undefined) {\n        EMPTY_STACK_ID = STACK_ID;\n        profile.stacks[EMPTY_STACK_ID] = [];\n        STACK_ID++;\n      }\n\n      profile['samples'][i] = {\n        // convert ms timestamp to ns\n        elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n        stack_id: EMPTY_STACK_ID,\n        thread_id: THREAD_ID_STRING,\n      };\n      continue;\n    }\n\n    let stackTop = input.stacks[jsSample.stackId];\n\n    // Functions in top->down order (root is last)\n    // We follow the stackTop.parentId trail and collect each visited frameId\n    const stack = [];\n\n    while (stackTop) {\n      stack.push(stackTop.frameId);\n\n      const frame = input.frames[stackTop.frameId];\n\n      // If our frame has not been indexed yet, index it\n      if (profile.frames[stackTop.frameId] === undefined) {\n        profile.frames[stackTop.frameId] = {\n          function: frame.name,\n          abs_path: typeof frame.resourceId === 'number' ? input.resources[frame.resourceId] : undefined,\n          lineno: frame.line,\n          colno: frame.column,\n        };\n      }\n\n      stackTop = stackTop.parentId === undefined ? undefined : input.stacks[stackTop.parentId];\n    }\n\n    const sample = {\n      // convert ms timestamp to ns\n      elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n      stack_id: STACK_ID,\n      thread_id: THREAD_ID_STRING,\n    };\n\n    profile['stacks'][STACK_ID] = stack;\n    profile['samples'][i] = sample;\n    STACK_ID++;\n  }\n\n  return profile;\n}\n\n/**\n * Adds items to envelope if they are not already present - mutates the envelope.\n * @param envelope\n */\nfunction addProfilesToEnvelope(envelope, profiles) {\n  if (!profiles.length) {\n    return envelope;\n  }\n\n  for (const profile of profiles) {\n    // @ts-ignore untyped envelope\n    envelope[1].push([{ type: 'profile' }, profile]);\n  }\n  return envelope;\n}\n\n/**\n * Finds transactions with profile_id context in the envelope\n * @param envelope\n * @returns\n */\nfunction findProfiledTransactionsFromEnvelope(envelope) {\n  const events = [];\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.forEachEnvelopeItem)(envelope, (item, type) => {\n    if (type !== 'transaction') {\n      return;\n    }\n\n    for (let j = 1; j < item.length; j++) {\n      const event = item[j] ;\n\n      if (event && event.contexts && event.contexts['profile'] && event.contexts['profile']['profile_id']) {\n        events.push(item[j] );\n      }\n    }\n  });\n\n  return events;\n}\n\nconst debugIdStackParserCache = new WeakMap();\n/**\n * Applies debug meta data to an event from a list of paths to resources (sourcemaps)\n */\nfunction applyDebugMetadata(resource_paths) {\n  const debugIdMap = _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return [];\n  }\n\n  const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.getCurrentHub)();\n  if (!hub) {\n    return [];\n  }\n  const client = hub.getClient();\n  if (!client) {\n    return [];\n  }\n  const options = client.getOptions();\n  if (!options) {\n    return [];\n  }\n  const stackParser = options.stackParser;\n  if (!stackParser) {\n    return [];\n  }\n\n  let debugIdStackFramesCache;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {\n    let parsedStack;\n\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      const file = stackFrame && stackFrame.filename;\n\n      if (stackFrame && file) {\n        acc[file] = debugIdMap[debugIdStackTrace] ;\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  const images = [];\n  for (const path of resource_paths) {\n    if (path && filenameDebugIdMap[path]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: path,\n        debug_id: filenameDebugIdMap[path] ,\n      });\n    }\n  }\n\n  return images;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  if ((typeof rate !== 'number' && typeof rate !== 'boolean') || (typeof rate === 'number' && isNaN(rate))) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(\n        `[Profiling] Invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // Boolean sample rates are always valid\n  if (rate === true || rate === false) {\n    return true;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(`[Profiling] Invalid sample rate. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\nfunction isValidProfile(profile) {\n  if (profile.samples.length < 2) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      // Log a warning if the profile has less than 2 samples so users can know why\n      // they are not seeing any profiling data and we cant avoid the back and forth\n      // of asking them to provide us with a dump of the profile data.\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Profiling] Discarding profile because it contains less than 2 samples');\n    }\n    return false;\n  }\n\n  if (!profile.frames.length) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Profiling] Discarding profile because it contains no frames');\n    }\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a profiling envelope item, if the profile does not pass validation, returns null.\n * @param event\n * @returns {Profile | null}\n */\nfunction createProfilingEvent(profile_id, profile, event) {\n  if (!isValidProfile(profile)) {\n    return null;\n  }\n\n  return createProfilePayload(event, profile, profile_id);\n}\n\nconst PROFILE_MAP = new Map();\n/**\n *\n */\nfunction addProfileToMap(profile_id, profile) {\n  PROFILE_MAP.set(profile_id, profile);\n\n  if (PROFILE_MAP.size > 30) {\n    const last = PROFILE_MAP.keys().next().value;\n    PROFILE_MAP.delete(last);\n  }\n}\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9wcm9maWxpbmcvdXRpbHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWtFO0FBQzJDO0FBQ3RFOztBQUV2Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHlEQUFnQixJQUFJLG1FQUEwQjtBQUNoRTtBQUNBO0FBQ0EsR0FBRyx5REFBZ0IsSUFBSSxrRUFBeUI7QUFDaEQsR0FBRyx5REFBZ0IsSUFBSSxtRUFBMEIsSUFBSSxzRUFBNkI7QUFDbEY7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0JBQXNCLHlEQUFnQixJQUFJLHVFQUE4Qjs7QUFFeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esd0JBQXdCLGVBQWUsRUFBRSxnQkFBZ0I7QUFDekQ7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0scURBQVUsaUNBQWlDLFNBQVM7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdGQUFnRixrQkFBa0I7QUFDbEc7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsNkRBQW1CO0FBQ3pEO0FBQ0E7QUFDQSxlQUFlLG1FQUEwQjtBQUN6QyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsb0RBQUs7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixtQkFBbUI7QUFDL0MsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBFQUEwRSx1RUFBNEI7QUFDdEcsMENBQTBDLHVFQUE0Qjs7QUFFdEUsa0JBQWtCLDBCQUEwQjtBQUM1Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHdCQUF3QixpQkFBaUI7QUFDekM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsa0VBQW1CO0FBQ3JCO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0IsaUJBQWlCO0FBQ3JDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIscUVBQTBCOztBQUUvQztBQUNBO0FBQ0E7O0FBRUEsY0FBYywyREFBYTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBLHlDQUF5QyxRQUFRO0FBQ2pEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxJQUFJOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sc0RBQVc7QUFDakIsMkdBQTJHO0FBQzNHO0FBQ0EsV0FBVyxVQUFVLDRCQUE0QjtBQUNqRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTSxzREFBVyw4RUFBOEUsS0FBSztBQUNwRztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHFEQUFVO0FBQ2hCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTSxxREFBVTtBQUNoQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUwUDtBQUMxUCIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvYnJvd3Nlci9lc20vcHJvZmlsaW5nL3V0aWxzLmpzP2NlZDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgREVGQVVMVF9FTlZJUk9OTUVOVCwgZ2V0Q3VycmVudEh1YiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBmb3JFYWNoRW52ZWxvcGVJdGVtLCBsb2dnZXIsIHV1aWQ0LCBHTE9CQUxfT0JKLCBicm93c2VyUGVyZm9ybWFuY2VUaW1lT3JpZ2luIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBXSU5ET1cgfSBmcm9tICcuLi9oZWxwZXJzLmpzJztcblxuLyogZXNsaW50LWRpc2FibGUgbWF4LWxpbmVzICovXG5cbmNvbnN0IE1TX1RPX05TID0gMWU2O1xuLy8gVXNlIDAgYXMgbWFpbiB0aHJlYWQgaWQgd2hpY2ggaXMgaWRlbnRpY2FsIHRvIHRocmVhZElkIGluIG5vZGU6d29ya2VyX3RocmVhZHNcbi8vIHdoZXJlIG1haW4gbG9ncyAwIGFuZCB3b3JrZXJzIHNlZW0gdG8gbG9nIGluIGluY3JlbWVudHMgb2YgMVxuY29uc3QgVEhSRUFEX0lEX1NUUklORyA9IFN0cmluZygwKTtcbmNvbnN0IFRIUkVBRF9OQU1FID0gJ21haW4nO1xuXG4vLyBNYWNoaW5lIHByb3BlcnRpZXMgKGV2YWwgb25seSBvbmNlKVxubGV0IE9TX1BMQVRGT1JNID0gJyc7XG5sZXQgT1NfUExBVEZPUk1fVkVSU0lPTiA9ICcnO1xubGV0IE9TX0FSQ0ggPSAnJztcbmxldCBPU19CUk9XU0VSID0gKFdJTkRPVy5uYXZpZ2F0b3IgJiYgV0lORE9XLm5hdmlnYXRvci51c2VyQWdlbnQpIHx8ICcnO1xubGV0IE9TX01PREVMID0gJyc7XG5jb25zdCBPU19MT0NBTEUgPVxuICAoV0lORE9XLm5hdmlnYXRvciAmJiBXSU5ET1cubmF2aWdhdG9yLmxhbmd1YWdlKSB8fFxuICAoV0lORE9XLm5hdmlnYXRvciAmJiBXSU5ET1cubmF2aWdhdG9yLmxhbmd1YWdlcyAmJiBXSU5ET1cubmF2aWdhdG9yLmxhbmd1YWdlc1swXSkgfHxcbiAgJyc7XG5cbmZ1bmN0aW9uIGlzVXNlckFnZW50RGF0YShkYXRhKSB7XG4gIHJldHVybiB0eXBlb2YgZGF0YSA9PT0gJ29iamVjdCcgJiYgZGF0YSAhPT0gbnVsbCAmJiAnZ2V0SGlnaEVudHJvcHlWYWx1ZXMnIGluIGRhdGE7XG59XG5cbi8vIEB0cy1pZ25vcmUgdXNlckFnZW50RGF0YSBpcyBub3QgcGFydCBvZiB0aGUgbmF2aWdhdG9yIGludGVyZmFjZSB5ZXRcbmNvbnN0IHVzZXJBZ2VudERhdGEgPSBXSU5ET1cubmF2aWdhdG9yICYmIFdJTkRPVy5uYXZpZ2F0b3IudXNlckFnZW50RGF0YTtcblxuaWYgKGlzVXNlckFnZW50RGF0YSh1c2VyQWdlbnREYXRhKSkge1xuICB1c2VyQWdlbnREYXRhXG4gICAgLmdldEhpZ2hFbnRyb3B5VmFsdWVzKFsnYXJjaGl0ZWN0dXJlJywgJ21vZGVsJywgJ3BsYXRmb3JtJywgJ3BsYXRmb3JtVmVyc2lvbicsICdmdWxsVmVyc2lvbkxpc3QnXSlcbiAgICAudGhlbigodWEpID0+IHtcbiAgICAgIE9TX1BMQVRGT1JNID0gdWEucGxhdGZvcm0gfHwgJyc7XG4gICAgICBPU19BUkNIID0gdWEuYXJjaGl0ZWN0dXJlIHx8ICcnO1xuICAgICAgT1NfTU9ERUwgPSB1YS5tb2RlbCB8fCAnJztcbiAgICAgIE9TX1BMQVRGT1JNX1ZFUlNJT04gPSB1YS5wbGF0Zm9ybVZlcnNpb24gfHwgJyc7XG5cbiAgICAgIGlmICh1YS5mdWxsVmVyc2lvbkxpc3QgJiYgdWEuZnVsbFZlcnNpb25MaXN0Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgY29uc3QgZmlyc3RVYSA9IHVhLmZ1bGxWZXJzaW9uTGlzdFt1YS5mdWxsVmVyc2lvbkxpc3QubGVuZ3RoIC0gMV07XG4gICAgICAgIE9TX0JST1dTRVIgPSBgJHtmaXJzdFVhLmJyYW5kfSAke2ZpcnN0VWEudmVyc2lvbn1gO1xuICAgICAgfVxuICAgIH0pXG4gICAgLmNhdGNoKGUgPT4gdm9pZCBlKTtcbn1cblxuZnVuY3Rpb24gaXNQcm9jZXNzZWRKU1NlbGZQcm9maWxlKHByb2ZpbGUpIHtcbiAgcmV0dXJuICEoJ3RocmVhZF9tZXRhZGF0YScgaW4gcHJvZmlsZSk7XG59XG5cbi8vIEVucmljaGVzIHRoZSBwcm9maWxlIHdpdGggdGhyZWFkSWQgb2YgdGhlIGN1cnJlbnQgdGhyZWFkLlxuLy8gVGhpcyBpcyBkb25lIGluIG5vZGUgYXMgd2Ugc2VlbSB0byBub3QgYmUgYWJsZSB0byBnZXQgdGhlIGluZm8gZnJvbSBDIG5hdGl2ZSBjb2RlLlxuLyoqXG4gKlxuICovXG5mdW5jdGlvbiBlbnJpY2hXaXRoVGhyZWFkSW5mb3JtYXRpb24ocHJvZmlsZSkge1xuICBpZiAoIWlzUHJvY2Vzc2VkSlNTZWxmUHJvZmlsZShwcm9maWxlKSkge1xuICAgIHJldHVybiBwcm9maWxlO1xuICB9XG5cbiAgcmV0dXJuIGNvbnZlcnRKU1NlbGZQcm9maWxlVG9TYW1wbGVkRm9ybWF0KHByb2ZpbGUpO1xufVxuXG4vLyBQcm9maWxlIGlzIG1hcmtlZCBhcyBvcHRpb25hbCBiZWNhdXNlIGl0IGlzIGRlbGV0ZWQgZnJvbSB0aGUgbWV0YWRhdGFcbi8vIGJ5IHRoZSBpbnRlZ3JhdGlvbiBiZWZvcmUgdGhlIGV2ZW50IGlzIHByb2Nlc3NlZCBieSBvdGhlciBpbnRlZ3JhdGlvbnMuXG5cbmZ1bmN0aW9uIGdldFRyYWNlSWQoZXZlbnQpIHtcbiAgY29uc3QgdHJhY2VJZCA9IGV2ZW50ICYmIGV2ZW50LmNvbnRleHRzICYmIGV2ZW50LmNvbnRleHRzWyd0cmFjZSddICYmIGV2ZW50LmNvbnRleHRzWyd0cmFjZSddWyd0cmFjZV9pZCddO1xuICAvLyBMb2cgYSB3YXJuaW5nIGlmIHRoZSBwcm9maWxlIGhhcyBhbiBpbnZhbGlkIHRyYWNlSWQgKHNob3VsZCBiZSB1dWlkdjQpLlxuICAvLyBBbGwgcHJvZmlsZXMgYW5kIHRyYW5zYWN0aW9ucyBhcmUgcmVqZWN0ZWQgaWYgdGhpcyBpcyB0aGUgY2FzZSBhbmQgd2Ugd2FudCB0b1xuICAvLyB3YXJuIHVzZXJzIHRoYXQgdGhpcyBpcyBoYXBwZW5pbmcgaWYgdGhleSBlbmFibGUgZGVidWcgZmxhZ1xuICBpZiAodHlwZW9mIHRyYWNlSWQgPT09ICdzdHJpbmcnICYmIHRyYWNlSWQubGVuZ3RoICE9PSAzMikge1xuICAgIGlmICgodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pKSB7XG4gICAgICBsb2dnZXIubG9nKGBbUHJvZmlsaW5nXSBJbnZhbGlkIHRyYWNlSWQ6ICR7dHJhY2VJZH0gb24gcHJvZmlsZWQgZXZlbnRgKTtcbiAgICB9XG4gIH1cbiAgaWYgKHR5cGVvZiB0cmFjZUlkICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIHJldHVybiB0cmFjZUlkO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgcHJvZmlsaW5nIGV2ZW50IGVudmVsb3BlIGZyb20gYSBTZW50cnkgZXZlbnQuIElmIHByb2ZpbGUgZG9lcyBub3QgcGFzc1xuICogdmFsaWRhdGlvbiwgcmV0dXJucyBudWxsLlxuICogQHBhcmFtIGV2ZW50XG4gKiBAcGFyYW0gZHNuXG4gKiBAcGFyYW0gbWV0YWRhdGFcbiAqIEBwYXJhbSB0dW5uZWxcbiAqIEByZXR1cm5zIHtFdmVudEVudmVsb3BlIHwgbnVsbH1cbiAqL1xuXG4vKipcbiAqIENyZWF0ZXMgYSBwcm9maWxpbmcgZXZlbnQgZW52ZWxvcGUgZnJvbSBhIFNlbnRyeSBldmVudC5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlUHJvZmlsZVBheWxvYWQoXG4gIGV2ZW50LFxuICBwcm9jZXNzZWRQcm9maWxlLFxuICBwcm9maWxlX2lkLFxuKSB7XG4gIGlmIChldmVudC50eXBlICE9PSAndHJhbnNhY3Rpb24nKSB7XG4gICAgLy8gY3JlYXRlUHJvZmlsaW5nRXZlbnRFbnZlbG9wZSBzaG91bGQgb25seSBiZSBjYWxsZWQgZm9yIHRyYW5zYWN0aW9ucyxcbiAgICAvLyB3ZSB0eXBlIGd1YXJkIHRoaXMgYmVoYXZpb3Igd2l0aCBpc1Byb2ZpbGVkVHJhbnNhY3Rpb25FdmVudC5cbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdQcm9maWxpbmcgZXZlbnRzIG1heSBvbmx5IGJlIGF0dGFjaGVkIHRvIHRyYW5zYWN0aW9ucywgdGhpcyBzaG91bGQgbmV2ZXIgb2NjdXIuJyk7XG4gIH1cblxuICBpZiAocHJvY2Vzc2VkUHJvZmlsZSA9PT0gdW5kZWZpbmVkIHx8IHByb2Nlc3NlZFByb2ZpbGUgPT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFxuICAgICAgYENhbm5vdCBjb25zdHJ1Y3QgcHJvZmlsaW5nIGV2ZW50IGVudmVsb3BlIHdpdGhvdXQgYSB2YWxpZCBwcm9maWxlLiBHb3QgJHtwcm9jZXNzZWRQcm9maWxlfSBpbnN0ZWFkLmAsXG4gICAgKTtcbiAgfVxuXG4gIGNvbnN0IHRyYWNlSWQgPSBnZXRUcmFjZUlkKGV2ZW50KTtcbiAgY29uc3QgZW5yaWNoZWRUaHJlYWRQcm9maWxlID0gZW5yaWNoV2l0aFRocmVhZEluZm9ybWF0aW9uKHByb2Nlc3NlZFByb2ZpbGUpO1xuICBjb25zdCB0cmFuc2FjdGlvblN0YXJ0TXMgPSB0eXBlb2YgZXZlbnQuc3RhcnRfdGltZXN0YW1wID09PSAnbnVtYmVyJyA/IGV2ZW50LnN0YXJ0X3RpbWVzdGFtcCAqIDEwMDAgOiBEYXRlLm5vdygpO1xuICBjb25zdCB0cmFuc2FjdGlvbkVuZE1zID0gdHlwZW9mIGV2ZW50LnRpbWVzdGFtcCA9PT0gJ251bWJlcicgPyBldmVudC50aW1lc3RhbXAgKiAxMDAwIDogRGF0ZS5ub3coKTtcblxuICBjb25zdCBwcm9maWxlID0ge1xuICAgIGV2ZW50X2lkOiBwcm9maWxlX2lkLFxuICAgIHRpbWVzdGFtcDogbmV3IERhdGUodHJhbnNhY3Rpb25TdGFydE1zKS50b0lTT1N0cmluZygpLFxuICAgIHBsYXRmb3JtOiAnamF2YXNjcmlwdCcsXG4gICAgdmVyc2lvbjogJzEnLFxuICAgIHJlbGVhc2U6IGV2ZW50LnJlbGVhc2UgfHwgJycsXG4gICAgZW52aXJvbm1lbnQ6IGV2ZW50LmVudmlyb25tZW50IHx8IERFRkFVTFRfRU5WSVJPTk1FTlQsXG4gICAgcnVudGltZToge1xuICAgICAgbmFtZTogJ2phdmFzY3JpcHQnLFxuICAgICAgdmVyc2lvbjogV0lORE9XLm5hdmlnYXRvci51c2VyQWdlbnQsXG4gICAgfSxcbiAgICBvczoge1xuICAgICAgbmFtZTogT1NfUExBVEZPUk0sXG4gICAgICB2ZXJzaW9uOiBPU19QTEFURk9STV9WRVJTSU9OLFxuICAgICAgYnVpbGRfbnVtYmVyOiBPU19CUk9XU0VSLFxuICAgIH0sXG4gICAgZGV2aWNlOiB7XG4gICAgICBsb2NhbGU6IE9TX0xPQ0FMRSxcbiAgICAgIG1vZGVsOiBPU19NT0RFTCxcbiAgICAgIG1hbnVmYWN0dXJlcjogT1NfQlJPV1NFUixcbiAgICAgIGFyY2hpdGVjdHVyZTogT1NfQVJDSCxcbiAgICAgIGlzX2VtdWxhdG9yOiBmYWxzZSxcbiAgICB9LFxuICAgIGRlYnVnX21ldGE6IHtcbiAgICAgIGltYWdlczogYXBwbHlEZWJ1Z01ldGFkYXRhKHByb2Nlc3NlZFByb2ZpbGUucmVzb3VyY2VzKSxcbiAgICB9LFxuICAgIHByb2ZpbGU6IGVucmljaGVkVGhyZWFkUHJvZmlsZSxcbiAgICB0cmFuc2FjdGlvbnM6IFtcbiAgICAgIHtcbiAgICAgICAgbmFtZTogZXZlbnQudHJhbnNhY3Rpb24gfHwgJycsXG4gICAgICAgIGlkOiBldmVudC5ldmVudF9pZCB8fCB1dWlkNCgpLFxuICAgICAgICB0cmFjZV9pZDogdHJhY2VJZCxcbiAgICAgICAgYWN0aXZlX3RocmVhZF9pZDogVEhSRUFEX0lEX1NUUklORyxcbiAgICAgICAgcmVsYXRpdmVfc3RhcnRfbnM6ICcwJyxcbiAgICAgICAgcmVsYXRpdmVfZW5kX25zOiAoKHRyYW5zYWN0aW9uRW5kTXMgLSB0cmFuc2FjdGlvblN0YXJ0TXMpICogMWU2KS50b0ZpeGVkKDApLFxuICAgICAgfSxcbiAgICBdLFxuICB9O1xuXG4gIHJldHVybiBwcm9maWxlO1xufVxuXG4vKipcbiAqIENvbnZlcnRzIGEgSlNTZWxmUHJvZmlsZSB0byBhIG91ciBzYW1wbGVkIGZvcm1hdC5cbiAqIERvZXMgbm90IGN1cnJlbnRseSBwZXJmb3JtIHN0YWNrIGluZGV4aW5nLlxuICovXG5mdW5jdGlvbiBjb252ZXJ0SlNTZWxmUHJvZmlsZVRvU2FtcGxlZEZvcm1hdChpbnB1dCkge1xuICBsZXQgRU1QVFlfU1RBQ0tfSUQgPSB1bmRlZmluZWQ7XG4gIGxldCBTVEFDS19JRCA9IDA7XG5cbiAgLy8gSW5pdGlhbGl6ZSB0aGUgcHJvZmlsZSB0aGF0IHdlIHdpbGwgZmlsbCB3aXRoIGRhdGFcbiAgY29uc3QgcHJvZmlsZSA9IHtcbiAgICBzYW1wbGVzOiBbXSxcbiAgICBzdGFja3M6IFtdLFxuICAgIGZyYW1lczogW10sXG4gICAgdGhyZWFkX21ldGFkYXRhOiB7XG4gICAgICBbVEhSRUFEX0lEX1NUUklOR106IHsgbmFtZTogVEhSRUFEX05BTUUgfSxcbiAgICB9LFxuICB9O1xuXG4gIGlmICghaW5wdXQuc2FtcGxlcy5sZW5ndGgpIHtcbiAgICByZXR1cm4gcHJvZmlsZTtcbiAgfVxuXG4gIC8vIFdlIGFzc2VydCBzYW1wbGVzLmxlbmd0aCA+IDAgYWJvdmUgYW5kIHRpbWVzdGFtcCBzaG91bGQgYWx3YXlzIGJlIHByZXNlbnRcbiAgY29uc3Qgc3RhcnQgPSBpbnB1dC5zYW1wbGVzWzBdLnRpbWVzdGFtcDtcbiAgLy8gVGhlIEpTIFNESyBtaWdodCBjaGFuZ2UgaXQncyB0aW1lIG9yaWdpbiBiYXNlZCBvbiBzb21lIGhldXJpc3RpYyAoc2VlIFNlZSBwYWNrYWdlcy91dGlscy9zcmMvdGltZS50cylcbiAgLy8gd2hlbiB0aGF0IGhhcHBlbnMsIHdlIG5lZWQgdG8gZW5zdXJlIHdlIGFyZSBjb3JyZWN0aW5nIHRoZSBwcm9maWxlIHRpbWluZ3Mgc28gdGhlIHR3byB0aW1lbGluZXMgc3RheSBpbiBzeW5jLlxuICAvLyBTaW5jZSBKUyBzZWxmIHByb2ZpbGluZyB0aW1lIG9yaWdpbiBpcyBhbHdheXMgaW5pdGlhbGl6ZWQgdG8gcGVyZm9ybWFuY2UudGltZU9yaWdpbiwgd2UgbmVlZCB0byBhZGp1c3QgZm9yXG4gIC8vIHRoZSBkcmlmdCBiZXR3ZWVuIHRoZSBTREsgc2VsZWN0ZWQgdmFsdWUgYW5kIG91ciBwcm9maWxlIHRpbWUgb3JpZ2luLlxuICBjb25zdCBvcmlnaW4gPVxuICAgIHR5cGVvZiBwZXJmb3JtYW5jZS50aW1lT3JpZ2luID09PSAnbnVtYmVyJyA/IHBlcmZvcm1hbmNlLnRpbWVPcmlnaW4gOiBicm93c2VyUGVyZm9ybWFuY2VUaW1lT3JpZ2luIHx8IDA7XG4gIGNvbnN0IGFkanVzdEZvck9yaWdpbkNoYW5nZSA9IG9yaWdpbiAtIChicm93c2VyUGVyZm9ybWFuY2VUaW1lT3JpZ2luIHx8IG9yaWdpbik7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbnB1dC5zYW1wbGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QganNTYW1wbGUgPSBpbnB1dC5zYW1wbGVzW2ldO1xuXG4gICAgLy8gSWYgc2FtcGxlIGhhcyBubyBzdGFjaywgYWRkIGFuIGVtcHR5IHNhbXBsZVxuICAgIGlmIChqc1NhbXBsZS5zdGFja0lkID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGlmIChFTVBUWV9TVEFDS19JRCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIEVNUFRZX1NUQUNLX0lEID0gU1RBQ0tfSUQ7XG4gICAgICAgIHByb2ZpbGUuc3RhY2tzW0VNUFRZX1NUQUNLX0lEXSA9IFtdO1xuICAgICAgICBTVEFDS19JRCsrO1xuICAgICAgfVxuXG4gICAgICBwcm9maWxlWydzYW1wbGVzJ11baV0gPSB7XG4gICAgICAgIC8vIGNvbnZlcnQgbXMgdGltZXN0YW1wIHRvIG5zXG4gICAgICAgIGVsYXBzZWRfc2luY2Vfc3RhcnRfbnM6ICgoanNTYW1wbGUudGltZXN0YW1wICsgYWRqdXN0Rm9yT3JpZ2luQ2hhbmdlIC0gc3RhcnQpICogTVNfVE9fTlMpLnRvRml4ZWQoMCksXG4gICAgICAgIHN0YWNrX2lkOiBFTVBUWV9TVEFDS19JRCxcbiAgICAgICAgdGhyZWFkX2lkOiBUSFJFQURfSURfU1RSSU5HLFxuICAgICAgfTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGxldCBzdGFja1RvcCA9IGlucHV0LnN0YWNrc1tqc1NhbXBsZS5zdGFja0lkXTtcblxuICAgIC8vIEZ1bmN0aW9ucyBpbiB0b3AtPmRvd24gb3JkZXIgKHJvb3QgaXMgbGFzdClcbiAgICAvLyBXZSBmb2xsb3cgdGhlIHN0YWNrVG9wLnBhcmVudElkIHRyYWlsIGFuZCBjb2xsZWN0IGVhY2ggdmlzaXRlZCBmcmFtZUlkXG4gICAgY29uc3Qgc3RhY2sgPSBbXTtcblxuICAgIHdoaWxlIChzdGFja1RvcCkge1xuICAgICAgc3RhY2sucHVzaChzdGFja1RvcC5mcmFtZUlkKTtcblxuICAgICAgY29uc3QgZnJhbWUgPSBpbnB1dC5mcmFtZXNbc3RhY2tUb3AuZnJhbWVJZF07XG5cbiAgICAgIC8vIElmIG91ciBmcmFtZSBoYXMgbm90IGJlZW4gaW5kZXhlZCB5ZXQsIGluZGV4IGl0XG4gICAgICBpZiAocHJvZmlsZS5mcmFtZXNbc3RhY2tUb3AuZnJhbWVJZF0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBwcm9maWxlLmZyYW1lc1tzdGFja1RvcC5mcmFtZUlkXSA9IHtcbiAgICAgICAgICBmdW5jdGlvbjogZnJhbWUubmFtZSxcbiAgICAgICAgICBhYnNfcGF0aDogdHlwZW9mIGZyYW1lLnJlc291cmNlSWQgPT09ICdudW1iZXInID8gaW5wdXQucmVzb3VyY2VzW2ZyYW1lLnJlc291cmNlSWRdIDogdW5kZWZpbmVkLFxuICAgICAgICAgIGxpbmVubzogZnJhbWUubGluZSxcbiAgICAgICAgICBjb2xubzogZnJhbWUuY29sdW1uLFxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBzdGFja1RvcCA9IHN0YWNrVG9wLnBhcmVudElkID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiBpbnB1dC5zdGFja3Nbc3RhY2tUb3AucGFyZW50SWRdO1xuICAgIH1cblxuICAgIGNvbnN0IHNhbXBsZSA9IHtcbiAgICAgIC8vIGNvbnZlcnQgbXMgdGltZXN0YW1wIHRvIG5zXG4gICAgICBlbGFwc2VkX3NpbmNlX3N0YXJ0X25zOiAoKGpzU2FtcGxlLnRpbWVzdGFtcCArIGFkanVzdEZvck9yaWdpbkNoYW5nZSAtIHN0YXJ0KSAqIE1TX1RPX05TKS50b0ZpeGVkKDApLFxuICAgICAgc3RhY2tfaWQ6IFNUQUNLX0lELFxuICAgICAgdGhyZWFkX2lkOiBUSFJFQURfSURfU1RSSU5HLFxuICAgIH07XG5cbiAgICBwcm9maWxlWydzdGFja3MnXVtTVEFDS19JRF0gPSBzdGFjaztcbiAgICBwcm9maWxlWydzYW1wbGVzJ11baV0gPSBzYW1wbGU7XG4gICAgU1RBQ0tfSUQrKztcbiAgfVxuXG4gIHJldHVybiBwcm9maWxlO1xufVxuXG4vKipcbiAqIEFkZHMgaXRlbXMgdG8gZW52ZWxvcGUgaWYgdGhleSBhcmUgbm90IGFscmVhZHkgcHJlc2VudCAtIG11dGF0ZXMgdGhlIGVudmVsb3BlLlxuICogQHBhcmFtIGVudmVsb3BlXG4gKi9cbmZ1bmN0aW9uIGFkZFByb2ZpbGVzVG9FbnZlbG9wZShlbnZlbG9wZSwgcHJvZmlsZXMpIHtcbiAgaWYgKCFwcm9maWxlcy5sZW5ndGgpIHtcbiAgICByZXR1cm4gZW52ZWxvcGU7XG4gIH1cblxuICBmb3IgKGNvbnN0IHByb2ZpbGUgb2YgcHJvZmlsZXMpIHtcbiAgICAvLyBAdHMtaWdub3JlIHVudHlwZWQgZW52ZWxvcGVcbiAgICBlbnZlbG9wZVsxXS5wdXNoKFt7IHR5cGU6ICdwcm9maWxlJyB9LCBwcm9maWxlXSk7XG4gIH1cbiAgcmV0dXJuIGVudmVsb3BlO1xufVxuXG4vKipcbiAqIEZpbmRzIHRyYW5zYWN0aW9ucyB3aXRoIHByb2ZpbGVfaWQgY29udGV4dCBpbiB0aGUgZW52ZWxvcGVcbiAqIEBwYXJhbSBlbnZlbG9wZVxuICogQHJldHVybnNcbiAqL1xuZnVuY3Rpb24gZmluZFByb2ZpbGVkVHJhbnNhY3Rpb25zRnJvbUVudmVsb3BlKGVudmVsb3BlKSB7XG4gIGNvbnN0IGV2ZW50cyA9IFtdO1xuXG4gIGZvckVhY2hFbnZlbG9wZUl0ZW0oZW52ZWxvcGUsIChpdGVtLCB0eXBlKSA9PiB7XG4gICAgaWYgKHR5cGUgIT09ICd0cmFuc2FjdGlvbicpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBmb3IgKGxldCBqID0gMTsgaiA8IGl0ZW0ubGVuZ3RoOyBqKyspIHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gaXRlbVtqXSA7XG5cbiAgICAgIGlmIChldmVudCAmJiBldmVudC5jb250ZXh0cyAmJiBldmVudC5jb250ZXh0c1sncHJvZmlsZSddICYmIGV2ZW50LmNvbnRleHRzWydwcm9maWxlJ11bJ3Byb2ZpbGVfaWQnXSkge1xuICAgICAgICBldmVudHMucHVzaChpdGVtW2pdICk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gZXZlbnRzO1xufVxuXG5jb25zdCBkZWJ1Z0lkU3RhY2tQYXJzZXJDYWNoZSA9IG5ldyBXZWFrTWFwKCk7XG4vKipcbiAqIEFwcGxpZXMgZGVidWcgbWV0YSBkYXRhIHRvIGFuIGV2ZW50IGZyb20gYSBsaXN0IG9mIHBhdGhzIHRvIHJlc291cmNlcyAoc291cmNlbWFwcylcbiAqL1xuZnVuY3Rpb24gYXBwbHlEZWJ1Z01ldGFkYXRhKHJlc291cmNlX3BhdGhzKSB7XG4gIGNvbnN0IGRlYnVnSWRNYXAgPSBHTE9CQUxfT0JKLl9zZW50cnlEZWJ1Z0lkcztcblxuICBpZiAoIWRlYnVnSWRNYXApIHtcbiAgICByZXR1cm4gW107XG4gIH1cblxuICBjb25zdCBodWIgPSBnZXRDdXJyZW50SHViKCk7XG4gIGlmICghaHViKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG4gIGNvbnN0IGNsaWVudCA9IGh1Yi5nZXRDbGllbnQoKTtcbiAgaWYgKCFjbGllbnQpIHtcbiAgICByZXR1cm4gW107XG4gIH1cbiAgY29uc3Qgb3B0aW9ucyA9IGNsaWVudC5nZXRPcHRpb25zKCk7XG4gIGlmICghb3B0aW9ucykge1xuICAgIHJldHVybiBbXTtcbiAgfVxuICBjb25zdCBzdGFja1BhcnNlciA9IG9wdGlvbnMuc3RhY2tQYXJzZXI7XG4gIGlmICghc3RhY2tQYXJzZXIpIHtcbiAgICByZXR1cm4gW107XG4gIH1cblxuICBsZXQgZGVidWdJZFN0YWNrRnJhbWVzQ2FjaGU7XG4gIGNvbnN0IGNhY2hlZERlYnVnSWRTdGFja0ZyYW1lQ2FjaGUgPSBkZWJ1Z0lkU3RhY2tQYXJzZXJDYWNoZS5nZXQoc3RhY2tQYXJzZXIpO1xuICBpZiAoY2FjaGVkRGVidWdJZFN0YWNrRnJhbWVDYWNoZSkge1xuICAgIGRlYnVnSWRTdGFja0ZyYW1lc0NhY2hlID0gY2FjaGVkRGVidWdJZFN0YWNrRnJhbWVDYWNoZTtcbiAgfSBlbHNlIHtcbiAgICBkZWJ1Z0lkU3RhY2tGcmFtZXNDYWNoZSA9IG5ldyBNYXAoKTtcbiAgICBkZWJ1Z0lkU3RhY2tQYXJzZXJDYWNoZS5zZXQoc3RhY2tQYXJzZXIsIGRlYnVnSWRTdGFja0ZyYW1lc0NhY2hlKTtcbiAgfVxuXG4gIC8vIEJ1aWxkIGEgbWFwIG9mIGZpbGVuYW1lIC0+IGRlYnVnX2lkXG4gIGNvbnN0IGZpbGVuYW1lRGVidWdJZE1hcCA9IE9iamVjdC5rZXlzKGRlYnVnSWRNYXApLnJlZHVjZSgoYWNjLCBkZWJ1Z0lkU3RhY2tUcmFjZSkgPT4ge1xuICAgIGxldCBwYXJzZWRTdGFjaztcblxuICAgIGNvbnN0IGNhY2hlZFBhcnNlZFN0YWNrID0gZGVidWdJZFN0YWNrRnJhbWVzQ2FjaGUuZ2V0KGRlYnVnSWRTdGFja1RyYWNlKTtcbiAgICBpZiAoY2FjaGVkUGFyc2VkU3RhY2spIHtcbiAgICAgIHBhcnNlZFN0YWNrID0gY2FjaGVkUGFyc2VkU3RhY2s7XG4gICAgfSBlbHNlIHtcbiAgICAgIHBhcnNlZFN0YWNrID0gc3RhY2tQYXJzZXIoZGVidWdJZFN0YWNrVHJhY2UpO1xuICAgICAgZGVidWdJZFN0YWNrRnJhbWVzQ2FjaGUuc2V0KGRlYnVnSWRTdGFja1RyYWNlLCBwYXJzZWRTdGFjayk7XG4gICAgfVxuXG4gICAgZm9yIChsZXQgaSA9IHBhcnNlZFN0YWNrLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICBjb25zdCBzdGFja0ZyYW1lID0gcGFyc2VkU3RhY2tbaV07XG4gICAgICBjb25zdCBmaWxlID0gc3RhY2tGcmFtZSAmJiBzdGFja0ZyYW1lLmZpbGVuYW1lO1xuXG4gICAgICBpZiAoc3RhY2tGcmFtZSAmJiBmaWxlKSB7XG4gICAgICAgIGFjY1tmaWxlXSA9IGRlYnVnSWRNYXBbZGVidWdJZFN0YWNrVHJhY2VdIDtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcblxuICBjb25zdCBpbWFnZXMgPSBbXTtcbiAgZm9yIChjb25zdCBwYXRoIG9mIHJlc291cmNlX3BhdGhzKSB7XG4gICAgaWYgKHBhdGggJiYgZmlsZW5hbWVEZWJ1Z0lkTWFwW3BhdGhdKSB7XG4gICAgICBpbWFnZXMucHVzaCh7XG4gICAgICAgIHR5cGU6ICdzb3VyY2VtYXAnLFxuICAgICAgICBjb2RlX2ZpbGU6IHBhdGgsXG4gICAgICAgIGRlYnVnX2lkOiBmaWxlbmFtZURlYnVnSWRNYXBbcGF0aF0gLFxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGltYWdlcztcbn1cblxuLyoqXG4gKiBDaGVja3MgdGhlIGdpdmVuIHNhbXBsZSByYXRlIHRvIG1ha2Ugc3VyZSBpdCBpcyB2YWxpZCB0eXBlIGFuZCB2YWx1ZSAoYSBib29sZWFuLCBvciBhIG51bWJlciBiZXR3ZWVuIDAgYW5kIDEpLlxuICovXG5mdW5jdGlvbiBpc1ZhbGlkU2FtcGxlUmF0ZShyYXRlKSB7XG4gIC8vIHdlIG5lZWQgdG8gY2hlY2sgTmFOIGV4cGxpY2l0bHkgYmVjYXVzZSBpdCdzIG9mIHR5cGUgJ251bWJlcicgYW5kIHRoZXJlZm9yZSB3b3VsZG4ndCBnZXQgY2F1Z2h0IGJ5IHRoaXMgdHlwZWNoZWNrXG4gIGlmICgodHlwZW9mIHJhdGUgIT09ICdudW1iZXInICYmIHR5cGVvZiByYXRlICE9PSAnYm9vbGVhbicpIHx8ICh0eXBlb2YgcmF0ZSA9PT0gJ251bWJlcicgJiYgaXNOYU4ocmF0ZSkpKSB7XG4gICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJlxuICAgICAgbG9nZ2VyLndhcm4oXG4gICAgICAgIGBbUHJvZmlsaW5nXSBJbnZhbGlkIHNhbXBsZSByYXRlLiBTYW1wbGUgcmF0ZSBtdXN0IGJlIGEgYm9vbGVhbiBvciBhIG51bWJlciBiZXR3ZWVuIDAgYW5kIDEuIEdvdCAke0pTT04uc3RyaW5naWZ5KFxuICAgICAgICAgIHJhdGUsXG4gICAgICAgICl9IG9mIHR5cGUgJHtKU09OLnN0cmluZ2lmeSh0eXBlb2YgcmF0ZSl9LmAsXG4gICAgICApO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8vIEJvb2xlYW4gc2FtcGxlIHJhdGVzIGFyZSBhbHdheXMgdmFsaWRcbiAgaWYgKHJhdGUgPT09IHRydWUgfHwgcmF0ZSA9PT0gZmFsc2UpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8vIGluIGNhc2Ugc2FtcGxlUmF0ZSBpcyBhIGJvb2xlYW4sIGl0IHdpbGwgZ2V0IGF1dG9tYXRpY2FsbHkgY2FzdCB0byAxIGlmIGl0J3MgdHJ1ZSBhbmQgMCBpZiBpdCdzIGZhbHNlXG4gIGlmIChyYXRlIDwgMCB8fCByYXRlID4gMSkge1xuICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiZcbiAgICAgIGxvZ2dlci53YXJuKGBbUHJvZmlsaW5nXSBJbnZhbGlkIHNhbXBsZSByYXRlLiBTYW1wbGUgcmF0ZSBtdXN0IGJlIGJldHdlZW4gMCBhbmQgMS4gR290ICR7cmF0ZX0uYCk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBpc1ZhbGlkUHJvZmlsZShwcm9maWxlKSB7XG4gIGlmIChwcm9maWxlLnNhbXBsZXMubGVuZ3RoIDwgMikge1xuICAgIGlmICgodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pKSB7XG4gICAgICAvLyBMb2cgYSB3YXJuaW5nIGlmIHRoZSBwcm9maWxlIGhhcyBsZXNzIHRoYW4gMiBzYW1wbGVzIHNvIHVzZXJzIGNhbiBrbm93IHdoeVxuICAgICAgLy8gdGhleSBhcmUgbm90IHNlZWluZyBhbnkgcHJvZmlsaW5nIGRhdGEgYW5kIHdlIGNhbnQgYXZvaWQgdGhlIGJhY2sgYW5kIGZvcnRoXG4gICAgICAvLyBvZiBhc2tpbmcgdGhlbSB0byBwcm92aWRlIHVzIHdpdGggYSBkdW1wIG9mIHRoZSBwcm9maWxlIGRhdGEuXG4gICAgICBsb2dnZXIubG9nKCdbUHJvZmlsaW5nXSBEaXNjYXJkaW5nIHByb2ZpbGUgYmVjYXVzZSBpdCBjb250YWlucyBsZXNzIHRoYW4gMiBzYW1wbGVzJyk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmICghcHJvZmlsZS5mcmFtZXMubGVuZ3RoKSB7XG4gICAgaWYgKCh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykpIHtcbiAgICAgIGxvZ2dlci5sb2coJ1tQcm9maWxpbmddIERpc2NhcmRpbmcgcHJvZmlsZSBiZWNhdXNlIGl0IGNvbnRhaW5zIG5vIGZyYW1lcycpO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgcHJvZmlsaW5nIGVudmVsb3BlIGl0ZW0sIGlmIHRoZSBwcm9maWxlIGRvZXMgbm90IHBhc3MgdmFsaWRhdGlvbiwgcmV0dXJucyBudWxsLlxuICogQHBhcmFtIGV2ZW50XG4gKiBAcmV0dXJucyB7UHJvZmlsZSB8IG51bGx9XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVByb2ZpbGluZ0V2ZW50KHByb2ZpbGVfaWQsIHByb2ZpbGUsIGV2ZW50KSB7XG4gIGlmICghaXNWYWxpZFByb2ZpbGUocHJvZmlsZSkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiBjcmVhdGVQcm9maWxlUGF5bG9hZChldmVudCwgcHJvZmlsZSwgcHJvZmlsZV9pZCk7XG59XG5cbmNvbnN0IFBST0ZJTEVfTUFQID0gbmV3IE1hcCgpO1xuLyoqXG4gKlxuICovXG5mdW5jdGlvbiBhZGRQcm9maWxlVG9NYXAocHJvZmlsZV9pZCwgcHJvZmlsZSkge1xuICBQUk9GSUxFX01BUC5zZXQocHJvZmlsZV9pZCwgcHJvZmlsZSk7XG5cbiAgaWYgKFBST0ZJTEVfTUFQLnNpemUgPiAzMCkge1xuICAgIGNvbnN0IGxhc3QgPSBQUk9GSUxFX01BUC5rZXlzKCkubmV4dCgpLnZhbHVlO1xuICAgIFBST0ZJTEVfTUFQLmRlbGV0ZShsYXN0KTtcbiAgfVxufVxuXG5leHBvcnQgeyBQUk9GSUxFX01BUCwgYWRkUHJvZmlsZVRvTWFwLCBhZGRQcm9maWxlc1RvRW52ZWxvcGUsIGFwcGx5RGVidWdNZXRhZGF0YSwgY29udmVydEpTU2VsZlByb2ZpbGVUb1NhbXBsZWRGb3JtYXQsIGNyZWF0ZVByb2ZpbGVQYXlsb2FkLCBjcmVhdGVQcm9maWxpbmdFdmVudCwgZW5yaWNoV2l0aFRocmVhZEluZm9ybWF0aW9uLCBmaW5kUHJvZmlsZWRUcmFuc2FjdGlvbnNGcm9tRW52ZWxvcGUsIGlzVmFsaWRTYW1wbGVSYXRlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/profiling/utils.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/sdk.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/sdk.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"captureUserFeedback\": function() { return /* binding */ captureUserFeedback; },\n/* harmony export */   \"close\": function() { return /* binding */ close; },\n/* harmony export */   \"defaultIntegrations\": function() { return /* binding */ defaultIntegrations; },\n/* harmony export */   \"flush\": function() { return /* binding */ flush; },\n/* harmony export */   \"forceLoad\": function() { return /* binding */ forceLoad; },\n/* harmony export */   \"init\": function() { return /* binding */ init; },\n/* harmony export */   \"lastEventId\": function() { return /* binding */ lastEventId; },\n/* harmony export */   \"onLoad\": function() { return /* binding */ onLoad; },\n/* harmony export */   \"showReportDialog\": function() { return /* binding */ showReportDialog; },\n/* harmony export */   \"wrap\": function() { return /* binding */ wrap; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/integrations/inboundfilters.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/integrations/functiontostring.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/sdk.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/api.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/stacktrace.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/supports.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/instrument.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./client.js */ \"./node_modules/@sentry/browser/esm/client.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n/* harmony import */ var _integrations_globalhandlers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./integrations/globalhandlers.js */ \"./node_modules/@sentry/browser/esm/integrations/globalhandlers.js\");\n/* harmony import */ var _integrations_trycatch_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./integrations/trycatch.js */ \"./node_modules/@sentry/browser/esm/integrations/trycatch.js\");\n/* harmony import */ var _integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./integrations/breadcrumbs.js */ \"./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js\");\n/* harmony import */ var _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./integrations/linkederrors.js */ \"./node_modules/@sentry/browser/esm/integrations/linkederrors.js\");\n/* harmony import */ var _integrations_httpcontext_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./integrations/httpcontext.js */ \"./node_modules/@sentry/browser/esm/integrations/httpcontext.js\");\n/* harmony import */ var _integrations_dedupe_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./integrations/dedupe.js */ \"./node_modules/@sentry/browser/esm/integrations/dedupe.js\");\n/* harmony import */ var _stack_parsers_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./stack-parsers.js */ \"./node_modules/@sentry/browser/esm/stack-parsers.js\");\n/* harmony import */ var _transports_fetch_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./transports/fetch.js */ \"./node_modules/@sentry/browser/esm/transports/fetch.js\");\n/* harmony import */ var _transports_xhr_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./transports/xhr.js */ \"./node_modules/@sentry/browser/esm/transports/xhr.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst defaultIntegrations = [\n  new _sentry_core__WEBPACK_IMPORTED_MODULE_0__.InboundFilters(),\n  new _sentry_core__WEBPACK_IMPORTED_MODULE_1__.FunctionToString(),\n  new _integrations_trycatch_js__WEBPACK_IMPORTED_MODULE_2__.TryCatch(),\n  new _integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_3__.Breadcrumbs(),\n  new _integrations_globalhandlers_js__WEBPACK_IMPORTED_MODULE_4__.GlobalHandlers(),\n  new _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_5__.LinkedErrors(),\n  new _integrations_dedupe_js__WEBPACK_IMPORTED_MODULE_6__.Dedupe(),\n  new _integrations_httpcontext_js__WEBPACK_IMPORTED_MODULE_7__.HttpContext(),\n];\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (_helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.SENTRY_RELEASE && _helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.SENTRY_RELEASE.id) {\n      options.release = _helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions = {\n    ...options,\n    stackParser: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.stackParserFromStackParserOptions)(options.stackParser || _stack_parsers_js__WEBPACK_IMPORTED_MODULE_10__.defaultStackParser),\n    integrations: (0,_sentry_core__WEBPACK_IMPORTED_MODULE_11__.getIntegrationsToSetup)(options),\n    transport: options.transport || ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_12__.supportsFetch)() ? _transports_fetch_js__WEBPACK_IMPORTED_MODULE_13__.makeFetchTransport : _transports_xhr_js__WEBPACK_IMPORTED_MODULE_14__.makeXHRTransport),\n  };\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_15__.initAndBind)(_client_js__WEBPACK_IMPORTED_MODULE_16__.BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}, hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_17__.getCurrentHub)()) {\n  // doesn't work without a document (React Native)\n  if (!_helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.document) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_18__.logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_18__.logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = _helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_19__.getReportDialogEndpoint)(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const injectionPoint = _helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.document.head || _helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_18__.logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_17__.getCurrentHub)().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction flush(timeout) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_17__.getCurrentHub)().getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_18__.logger.warn('Cannot flush events. No client defined.');\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_20__.resolvedSyncPromise)(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction close(timeout) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_17__.getCurrentHub)().getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_18__.logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_20__.resolvedSyncPromise)(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrap(fn) {\n  return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_8__.wrap)(fn)();\n}\n\nfunction startSessionOnHub(hub) {\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  if (typeof _helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.document === 'undefined') {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_18__.logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_17__.getCurrentHub)();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (!hub.captureSession) {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSessionOnHub(hub);\n\n  // We want to create a session for every navigation as well\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_21__.addInstrumentationHandler)('history', ({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (!(from === undefined || from === to)) {\n      startSessionOnHub((0,_sentry_core__WEBPACK_IMPORTED_MODULE_17__.getCurrentHub)());\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nfunction captureUserFeedback(feedback) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_17__.getCurrentHub)().getClient();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n\n\n//# sourceMappingURL=sdk.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/sdk.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/stack-parsers.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/stack-parsers.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"chromeStackLineParser\": function() { return /* binding */ chromeStackLineParser; },\n/* harmony export */   \"defaultStackLineParsers\": function() { return /* binding */ defaultStackLineParsers; },\n/* harmony export */   \"defaultStackParser\": function() { return /* binding */ defaultStackParser; },\n/* harmony export */   \"geckoStackLineParser\": function() { return /* binding */ geckoStackLineParser; },\n/* harmony export */   \"opera10StackLineParser\": function() { return /* binding */ opera10StackLineParser; },\n/* harmony export */   \"opera11StackLineParser\": function() { return /* binding */ opera11StackLineParser; },\n/* harmony export */   \"winjsStackLineParser\": function() { return /* binding */ winjsStackLineParser; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/stacktrace.js\");\n\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  const frame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nconst chrome = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nconst chromeStackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nconst geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nconst winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10 = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nconst opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11 = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nconst opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nconst defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nconst defaultStackParser = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createStackParser)(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func, filename) => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\n\n//# sourceMappingURL=stack-parsers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/stack-parsers.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/transports/fetch.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/transports/fetch.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeFetchTransport\": function() { return /* binding */ makeFetchTransport; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/transports/base.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry/browser/esm/transports/utils.js\");\n\n\n\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getNativeFetchImplementation)(),\n) {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request) {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.clearCachedFetchImplementation)();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.rejectedSyncPromise)(e);\n    }\n  }\n\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.createTransport)(options, makeRequest);\n}\n\n\n//# sourceMappingURL=fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS90cmFuc3BvcnRzL2ZldGNoLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBK0M7QUFDSztBQUNzQzs7QUFFMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix1RUFBNEI7QUFDNUM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUCxNQUFNO0FBQ04sTUFBTSx5RUFBOEI7QUFDcEM7QUFDQTtBQUNBLGFBQWEsa0VBQW1CO0FBQ2hDO0FBQ0E7O0FBRUEsU0FBUyw2REFBZTtBQUN4Qjs7QUFFOEI7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2Jyb3dzZXIvZXNtL3RyYW5zcG9ydHMvZmV0Y2guanM/ZDhlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVUcmFuc3BvcnQgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgcmVqZWN0ZWRTeW5jUHJvbWlzZSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZ2V0TmF0aXZlRmV0Y2hJbXBsZW1lbnRhdGlvbiwgY2xlYXJDYWNoZWRGZXRjaEltcGxlbWVudGF0aW9uIH0gZnJvbSAnLi91dGlscy5qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIFRyYW5zcG9ydCB0aGF0IHVzZXMgdGhlIEZldGNoIEFQSSB0byBzZW5kIGV2ZW50cyB0byBTZW50cnkuXG4gKi9cbmZ1bmN0aW9uIG1ha2VGZXRjaFRyYW5zcG9ydChcbiAgb3B0aW9ucyxcbiAgbmF0aXZlRmV0Y2ggPSBnZXROYXRpdmVGZXRjaEltcGxlbWVudGF0aW9uKCksXG4pIHtcbiAgbGV0IHBlbmRpbmdCb2R5U2l6ZSA9IDA7XG4gIGxldCBwZW5kaW5nQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIG1ha2VSZXF1ZXN0KHJlcXVlc3QpIHtcbiAgICBjb25zdCByZXF1ZXN0U2l6ZSA9IHJlcXVlc3QuYm9keS5sZW5ndGg7XG4gICAgcGVuZGluZ0JvZHlTaXplICs9IHJlcXVlc3RTaXplO1xuICAgIHBlbmRpbmdDb3VudCsrO1xuXG4gICAgY29uc3QgcmVxdWVzdE9wdGlvbnMgPSB7XG4gICAgICBib2R5OiByZXF1ZXN0LmJvZHksXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIHJlZmVycmVyUG9saWN5OiAnb3JpZ2luJyxcbiAgICAgIGhlYWRlcnM6IG9wdGlvbnMuaGVhZGVycyxcbiAgICAgIC8vIE91dGdvaW5nIHJlcXVlc3RzIGFyZSB1c3VhbGx5IGNhbmNlbGxlZCB3aGVuIG5hdmlnYXRpbmcgdG8gYSBkaWZmZXJlbnQgcGFnZSwgY2F1c2luZyBhIFwiVHlwZUVycm9yOiBGYWlsZWQgdG9cbiAgICAgIC8vIGZldGNoXCIgZXJyb3IgYW5kIHNlbmRpbmcgYSBcIm5ldHdvcmtfZXJyb3JcIiBjbGllbnQtb3V0Y29tZSAtIGluIENocm9tZSwgdGhlIHJlcXVlc3Qgc3RhdHVzIHNob3dzIFwiKGNhbmNlbGxlZClcIi5cbiAgICAgIC8vIFRoZSBga2VlcGFsaXZlYCBmbGFnIGtlZXBzIG91dGdvaW5nIHJlcXVlc3RzIGFsaXZlLCBldmVuIHdoZW4gc3dpdGNoaW5nIHBhZ2VzLiBXZSB3YW50IHRoaXMgc2luY2Ugd2UncmVcbiAgICAgIC8vIGZyZXF1ZW50bHkgc2VuZGluZyBldmVudHMgcmlnaHQgYmVmb3JlIHRoZSB1c2VyIGlzIHN3aXRjaGluZyBwYWdlcyAoZWcuIHdoZW5maW5pc2hpbmcgbmF2aWdhdGlvbiB0cmFuc2FjdGlvbnMpLlxuICAgICAgLy8gR290Y2hhczpcbiAgICAgIC8vIC0gYGtlZXBhbGl2ZWAgaXNuJ3Qgc3VwcG9ydGVkIGJ5IEZpcmVmb3hcbiAgICAgIC8vIC0gQXMgcGVyIHNwZWMgKGh0dHBzOi8vZmV0Y2guc3BlYy53aGF0d2cub3JnLyNodHRwLW5ldHdvcmstb3ItY2FjaGUtZmV0Y2gpOlxuICAgICAgLy8gICBJZiB0aGUgc3VtIG9mIGNvbnRlbnRMZW5ndGggYW5kIGluZmxpZ2h0S2VlcGFsaXZlQnl0ZXMgaXMgZ3JlYXRlciB0aGFuIDY0IGtpYmlieXRlcywgdGhlbiByZXR1cm4gYSBuZXR3b3JrIGVycm9yLlxuICAgICAgLy8gICBXZSB3aWxsIHRoZXJlZm9yZSBvbmx5IGFjdGl2YXRlIHRoZSBmbGFnIHdoZW4gd2UncmUgYmVsb3cgdGhhdCBsaW1pdC5cbiAgICAgIC8vIFRoZXJlIGlzIGFsc28gYSBsaW1pdCBvZiByZXF1ZXN0cyB0aGF0IGNhbiBiZSBvcGVuIGF0IHRoZSBzYW1lIHRpbWUsIHNvIHdlIGFsc28gbGltaXQgdGhpcyB0byAxNVxuICAgICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvcHVsbC83NTUzIGZvciBkZXRhaWxzXG4gICAgICBrZWVwYWxpdmU6IHBlbmRpbmdCb2R5U2l6ZSA8PSA2MDAwMCAmJiBwZW5kaW5nQ291bnQgPCAxNSxcbiAgICAgIC4uLm9wdGlvbnMuZmV0Y2hPcHRpb25zLFxuICAgIH07XG5cbiAgICB0cnkge1xuICAgICAgcmV0dXJuIG5hdGl2ZUZldGNoKG9wdGlvbnMudXJsLCByZXF1ZXN0T3B0aW9ucykudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgIHBlbmRpbmdCb2R5U2l6ZSAtPSByZXF1ZXN0U2l6ZTtcbiAgICAgICAgcGVuZGluZ0NvdW50LS07XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgc3RhdHVzQ29kZTogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICd4LXNlbnRyeS1yYXRlLWxpbWl0cyc6IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdYLVNlbnRyeS1SYXRlLUxpbWl0cycpLFxuICAgICAgICAgICAgJ3JldHJ5LWFmdGVyJzogcmVzcG9uc2UuaGVhZGVycy5nZXQoJ1JldHJ5LUFmdGVyJyksXG4gICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNsZWFyQ2FjaGVkRmV0Y2hJbXBsZW1lbnRhdGlvbigpO1xuICAgICAgcGVuZGluZ0JvZHlTaXplIC09IHJlcXVlc3RTaXplO1xuICAgICAgcGVuZGluZ0NvdW50LS07XG4gICAgICByZXR1cm4gcmVqZWN0ZWRTeW5jUHJvbWlzZShlKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gY3JlYXRlVHJhbnNwb3J0KG9wdGlvbnMsIG1ha2VSZXF1ZXN0KTtcbn1cblxuZXhwb3J0IHsgbWFrZUZldGNoVHJhbnNwb3J0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mZXRjaC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/transports/fetch.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/transports/offline.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/transports/offline.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createStore\": function() { return /* binding */ createStore; },\n/* harmony export */   \"insert\": function() { return /* binding */ insert; },\n/* harmony export */   \"makeBrowserOfflineTransport\": function() { return /* binding */ makeBrowserOfflineTransport; },\n/* harmony export */   \"pop\": function() { return /* binding */ pop; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/transports/offline.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n\n\n\n// 'Store', 'promisifyRequest' and 'createStore' were originally copied from the 'idb-keyval' package before being\n// modified and simplified: https://github.com/jakearchibald/idb-keyval\n//\n// At commit: 0420a704fd6cbb4225429c536b1f61112d012fca\n// Original licence:\n\n// Copyright 2016, Jake Archibald\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nfunction promisifyRequest(request) {\n  return new Promise((resolve, reject) => {\n    // @ts-ignore - file size hacks\n    request.oncomplete = request.onsuccess = () => resolve(request.result);\n    // @ts-ignore - file size hacks\n    request.onabort = request.onerror = () => reject(request.error);\n  });\n}\n\n/** Create or open an IndexedDb store */\nfunction createStore(dbName, storeName) {\n  const request = indexedDB.open(dbName);\n  request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n  const dbp = promisifyRequest(request);\n\n  return callback => dbp.then(db => callback(db.transaction(storeName, 'readwrite').objectStore(storeName)));\n}\n\nfunction keys(store) {\n  return promisifyRequest(store.getAllKeys() );\n}\n\n/** Insert into the store */\nfunction insert(store, value, maxQueueSize) {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length >= maxQueueSize) {\n        return;\n      }\n\n      // We insert with an incremented key so that the entries are popped in order\n      store.put(value, Math.max(...keys, 0) + 1);\n      return promisifyRequest(store.transaction);\n    });\n  });\n}\n\n/** Pop the oldest value from the store */\nfunction pop(store) {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length === 0) {\n        return undefined;\n      }\n\n      return promisifyRequest(store.get(keys[0])).then(value => {\n        store.delete(keys[0]);\n        return promisifyRequest(store.transaction).then(() => value);\n      });\n    });\n  });\n}\n\nfunction createIndexedDbStore(options) {\n  let store;\n\n  // Lazily create the store only when it's needed\n  function getStore() {\n    if (store == undefined) {\n      store = createStore(options.dbName || 'sentry-offline', options.storeName || 'queue');\n    }\n\n    return store;\n  }\n\n  return {\n    insert: async (env) => {\n      try {\n        const serialized = await (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.serializeEnvelope)(env, options.textEncoder);\n        await insert(getStore(), serialized, options.maxQueueSize || 30);\n      } catch (_) {\n        //\n      }\n    },\n    pop: async () => {\n      try {\n        const deserialized = await pop(getStore());\n        if (deserialized) {\n          return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.parseEnvelope)(\n            deserialized,\n            options.textEncoder || new TextEncoder(),\n            options.textDecoder || new TextDecoder(),\n          );\n        }\n      } catch (_) {\n        //\n      }\n\n      return undefined;\n    },\n  };\n}\n\nfunction makeIndexedDbOfflineTransport(\n  createTransport,\n) {\n  return options => createTransport({ ...options, createStore: createIndexedDbStore });\n}\n\n/**\n * Creates a transport that uses IndexedDb to store events when offline.\n */\nfunction makeBrowserOfflineTransport(\n  createTransport,\n) {\n  return makeIndexedDbOfflineTransport((0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.makeOfflineTransport)(createTransport));\n}\n\n\n//# sourceMappingURL=offline.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS90cmFuc3BvcnRzL29mZmxpbmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9EO0FBQ2E7O0FBRWpFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsZ0VBQWlCO0FBQ2xEO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNERBQWE7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLCtDQUErQztBQUNyRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsa0VBQW9CO0FBQzNEOztBQUVpRTtBQUNqRSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvYnJvd3Nlci9lc20vdHJhbnNwb3J0cy9vZmZsaW5lLmpzPzA3YWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWFrZU9mZmxpbmVUcmFuc3BvcnQgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgc2VyaWFsaXplRW52ZWxvcGUsIHBhcnNlRW52ZWxvcGUgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLy8gJ1N0b3JlJywgJ3Byb21pc2lmeVJlcXVlc3QnIGFuZCAnY3JlYXRlU3RvcmUnIHdlcmUgb3JpZ2luYWxseSBjb3BpZWQgZnJvbSB0aGUgJ2lkYi1rZXl2YWwnIHBhY2thZ2UgYmVmb3JlIGJlaW5nXG4vLyBtb2RpZmllZCBhbmQgc2ltcGxpZmllZDogaHR0cHM6Ly9naXRodWIuY29tL2pha2VhcmNoaWJhbGQvaWRiLWtleXZhbFxuLy9cbi8vIEF0IGNvbW1pdDogMDQyMGE3MDRmZDZjYmI0MjI1NDI5YzUzNmIxZjYxMTEyZDAxMmZjYVxuLy8gT3JpZ2luYWwgbGljZW5jZTpcblxuLy8gQ29weXJpZ2h0IDIwMTYsIEpha2UgQXJjaGliYWxkXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuZnVuY3Rpb24gcHJvbWlzaWZ5UmVxdWVzdChyZXF1ZXN0KSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgLy8gQHRzLWlnbm9yZSAtIGZpbGUgc2l6ZSBoYWNrc1xuICAgIHJlcXVlc3Qub25jb21wbGV0ZSA9IHJlcXVlc3Qub25zdWNjZXNzID0gKCkgPT4gcmVzb2x2ZShyZXF1ZXN0LnJlc3VsdCk7XG4gICAgLy8gQHRzLWlnbm9yZSAtIGZpbGUgc2l6ZSBoYWNrc1xuICAgIHJlcXVlc3Qub25hYm9ydCA9IHJlcXVlc3Qub25lcnJvciA9ICgpID0+IHJlamVjdChyZXF1ZXN0LmVycm9yKTtcbiAgfSk7XG59XG5cbi8qKiBDcmVhdGUgb3Igb3BlbiBhbiBJbmRleGVkRGIgc3RvcmUgKi9cbmZ1bmN0aW9uIGNyZWF0ZVN0b3JlKGRiTmFtZSwgc3RvcmVOYW1lKSB7XG4gIGNvbnN0IHJlcXVlc3QgPSBpbmRleGVkREIub3BlbihkYk5hbWUpO1xuICByZXF1ZXN0Lm9udXBncmFkZW5lZWRlZCA9ICgpID0+IHJlcXVlc3QucmVzdWx0LmNyZWF0ZU9iamVjdFN0b3JlKHN0b3JlTmFtZSk7XG4gIGNvbnN0IGRicCA9IHByb21pc2lmeVJlcXVlc3QocmVxdWVzdCk7XG5cbiAgcmV0dXJuIGNhbGxiYWNrID0+IGRicC50aGVuKGRiID0+IGNhbGxiYWNrKGRiLnRyYW5zYWN0aW9uKHN0b3JlTmFtZSwgJ3JlYWR3cml0ZScpLm9iamVjdFN0b3JlKHN0b3JlTmFtZSkpKTtcbn1cblxuZnVuY3Rpb24ga2V5cyhzdG9yZSkge1xuICByZXR1cm4gcHJvbWlzaWZ5UmVxdWVzdChzdG9yZS5nZXRBbGxLZXlzKCkgKTtcbn1cblxuLyoqIEluc2VydCBpbnRvIHRoZSBzdG9yZSAqL1xuZnVuY3Rpb24gaW5zZXJ0KHN0b3JlLCB2YWx1ZSwgbWF4UXVldWVTaXplKSB7XG4gIHJldHVybiBzdG9yZShzdG9yZSA9PiB7XG4gICAgcmV0dXJuIGtleXMoc3RvcmUpLnRoZW4oa2V5cyA9PiB7XG4gICAgICBpZiAoa2V5cy5sZW5ndGggPj0gbWF4UXVldWVTaXplKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gV2UgaW5zZXJ0IHdpdGggYW4gaW5jcmVtZW50ZWQga2V5IHNvIHRoYXQgdGhlIGVudHJpZXMgYXJlIHBvcHBlZCBpbiBvcmRlclxuICAgICAgc3RvcmUucHV0KHZhbHVlLCBNYXRoLm1heCguLi5rZXlzLCAwKSArIDEpO1xuICAgICAgcmV0dXJuIHByb21pc2lmeVJlcXVlc3Qoc3RvcmUudHJhbnNhY3Rpb24pO1xuICAgIH0pO1xuICB9KTtcbn1cblxuLyoqIFBvcCB0aGUgb2xkZXN0IHZhbHVlIGZyb20gdGhlIHN0b3JlICovXG5mdW5jdGlvbiBwb3Aoc3RvcmUpIHtcbiAgcmV0dXJuIHN0b3JlKHN0b3JlID0+IHtcbiAgICByZXR1cm4ga2V5cyhzdG9yZSkudGhlbihrZXlzID0+IHtcbiAgICAgIGlmIChrZXlzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcHJvbWlzaWZ5UmVxdWVzdChzdG9yZS5nZXQoa2V5c1swXSkpLnRoZW4odmFsdWUgPT4ge1xuICAgICAgICBzdG9yZS5kZWxldGUoa2V5c1swXSk7XG4gICAgICAgIHJldHVybiBwcm9taXNpZnlSZXF1ZXN0KHN0b3JlLnRyYW5zYWN0aW9uKS50aGVuKCgpID0+IHZhbHVlKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlSW5kZXhlZERiU3RvcmUob3B0aW9ucykge1xuICBsZXQgc3RvcmU7XG5cbiAgLy8gTGF6aWx5IGNyZWF0ZSB0aGUgc3RvcmUgb25seSB3aGVuIGl0J3MgbmVlZGVkXG4gIGZ1bmN0aW9uIGdldFN0b3JlKCkge1xuICAgIGlmIChzdG9yZSA9PSB1bmRlZmluZWQpIHtcbiAgICAgIHN0b3JlID0gY3JlYXRlU3RvcmUob3B0aW9ucy5kYk5hbWUgfHwgJ3NlbnRyeS1vZmZsaW5lJywgb3B0aW9ucy5zdG9yZU5hbWUgfHwgJ3F1ZXVlJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0b3JlO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBpbnNlcnQ6IGFzeW5jIChlbnYpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHNlcmlhbGl6ZWQgPSBhd2FpdCBzZXJpYWxpemVFbnZlbG9wZShlbnYsIG9wdGlvbnMudGV4dEVuY29kZXIpO1xuICAgICAgICBhd2FpdCBpbnNlcnQoZ2V0U3RvcmUoKSwgc2VyaWFsaXplZCwgb3B0aW9ucy5tYXhRdWV1ZVNpemUgfHwgMzApO1xuICAgICAgfSBjYXRjaCAoXykge1xuICAgICAgICAvL1xuICAgICAgfVxuICAgIH0sXG4gICAgcG9wOiBhc3luYyAoKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBkZXNlcmlhbGl6ZWQgPSBhd2FpdCBwb3AoZ2V0U3RvcmUoKSk7XG4gICAgICAgIGlmIChkZXNlcmlhbGl6ZWQpIHtcbiAgICAgICAgICByZXR1cm4gcGFyc2VFbnZlbG9wZShcbiAgICAgICAgICAgIGRlc2VyaWFsaXplZCxcbiAgICAgICAgICAgIG9wdGlvbnMudGV4dEVuY29kZXIgfHwgbmV3IFRleHRFbmNvZGVyKCksXG4gICAgICAgICAgICBvcHRpb25zLnRleHREZWNvZGVyIHx8IG5ldyBUZXh0RGVjb2RlcigpLFxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKF8pIHtcbiAgICAgICAgLy9cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9LFxuICB9O1xufVxuXG5mdW5jdGlvbiBtYWtlSW5kZXhlZERiT2ZmbGluZVRyYW5zcG9ydChcbiAgY3JlYXRlVHJhbnNwb3J0LFxuKSB7XG4gIHJldHVybiBvcHRpb25zID0+IGNyZWF0ZVRyYW5zcG9ydCh7IC4uLm9wdGlvbnMsIGNyZWF0ZVN0b3JlOiBjcmVhdGVJbmRleGVkRGJTdG9yZSB9KTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgdHJhbnNwb3J0IHRoYXQgdXNlcyBJbmRleGVkRGIgdG8gc3RvcmUgZXZlbnRzIHdoZW4gb2ZmbGluZS5cbiAqL1xuZnVuY3Rpb24gbWFrZUJyb3dzZXJPZmZsaW5lVHJhbnNwb3J0KFxuICBjcmVhdGVUcmFuc3BvcnQsXG4pIHtcbiAgcmV0dXJuIG1ha2VJbmRleGVkRGJPZmZsaW5lVHJhbnNwb3J0KG1ha2VPZmZsaW5lVHJhbnNwb3J0KGNyZWF0ZVRyYW5zcG9ydCkpO1xufVxuXG5leHBvcnQgeyBjcmVhdGVTdG9yZSwgaW5zZXJ0LCBtYWtlQnJvd3Nlck9mZmxpbmVUcmFuc3BvcnQsIHBvcCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2ZmbGluZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/transports/offline.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/transports/utils.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/transports/utils.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"clearCachedFetchImplementation\": function() { return /* binding */ clearCachedFetchImplementation; },\n/* harmony export */   \"getNativeFetchImplementation\": function() { return /* binding */ getNativeFetchImplementation; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/supports.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\nlet cachedFetchImpl = undefined;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation() {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isNativeFetch)(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.fetch)) {\n    return (cachedFetchImpl = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.fetch.bind(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW));\n  }\n\n  const document = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document;\n  let fetchImpl = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nfunction clearCachedFetchImplementation() {\n  cachedFetchImpl = undefined;\n}\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS90cmFuc3BvcnRzL3V0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXNEO0FBQ2Y7O0FBRXZDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixLQUFLO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLE1BQU0sNERBQWEsQ0FBQyxxREFBWTtBQUNoQyw4QkFBOEIsMERBQWlCLENBQUMsK0NBQU07QUFDdEQ7O0FBRUEsbUJBQW1CLHdEQUFlO0FBQ2xDLGtCQUFrQixxREFBWTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsUUFBUSxzREFBVztBQUNuQjtBQUNBOztBQUVBLDJDQUEyQywrQ0FBTTtBQUNqRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUV3RTtBQUN4RSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvYnJvd3Nlci9lc20vdHJhbnNwb3J0cy91dGlscy5qcz9kOTM4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzTmF0aXZlRmV0Y2gsIGxvZ2dlciB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnLi4vaGVscGVycy5qcyc7XG5cbmxldCBjYWNoZWRGZXRjaEltcGwgPSB1bmRlZmluZWQ7XG5cbi8qKlxuICogQSBzcGVjaWFsIHVzZWNhc2UgZm9yIGluY29ycmVjdGx5IHdyYXBwZWQgRmV0Y2ggQVBJcyBpbiBjb25qdW5jdGlvbiB3aXRoIGFkLWJsb2NrZXJzLlxuICogV2hlbmV2ZXIgc29tZW9uZSB3cmFwcyB0aGUgRmV0Y2ggQVBJIGFuZCByZXR1cm5zIHRoZSB3cm9uZyBwcm9taXNlIGNoYWluLFxuICogdGhpcyBjaGFpbiBiZWNvbWVzIG9ycGhhbmVkIGFuZCB0aGVyZSBpcyBubyBwb3NzaWJsZSB3YXkgdG8gY2FwdHVyZSBpdCdzIHJlamVjdGlvbnNcbiAqIG90aGVyIHRoYW4gYWxsb3dpbmcgaXQgYnViYmxlIHVwIHRvIHRoaXMgdmVyeSBoYW5kbGVyLiBlZy5cbiAqXG4gKiBjb25zdCBmID0gd2luZG93LmZldGNoO1xuICogd2luZG93LmZldGNoID0gZnVuY3Rpb24gKCkge1xuICogICBjb25zdCBwID0gZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICpcbiAqICAgcC50aGVuKGZ1bmN0aW9uKCkge1xuICogICAgIGNvbnNvbGUubG9nKCdoaS4nKTtcbiAqICAgfSk7XG4gKlxuICogICByZXR1cm4gcDtcbiAqIH1cbiAqXG4gKiBgcC50aGVuKGZ1bmN0aW9uICgpIHsgLi4uIH0pYCBpcyBwcm9kdWNpbmcgYSBjb21wbGV0ZWx5IHNlcGFyYXRlIHByb21pc2UgY2hhaW4sXG4gKiBob3dldmVyLCB3aGF0J3MgcmV0dXJuZWQgaXMgYHBgIC0gdGhlIHJlc3VsdCBvZiBvcmlnaW5hbCBgZmV0Y2hgIGNhbGwuXG4gKlxuICogVGhpcyBtZWFuLCB0aGF0IHdoZW5ldmVyIHdlIHVzZSB0aGUgRmV0Y2ggQVBJIHRvIHNlbmQgb3VyIG93biByZXF1ZXN0cywgX2FuZF9cbiAqIHNvbWUgYWQtYmxvY2tlciBibG9ja3MgaXQsIHRoaXMgb3JwaGFuZWQgY2hhaW4gd2lsbCBfYWx3YXlzXyByZWplY3QsXG4gKiBlZmZlY3RpdmVseSBjYXVzaW5nIGFub3RoZXIgZXZlbnQgdG8gYmUgY2FwdHVyZWQuXG4gKiBUaGlzIG1ha2VzIGEgd2hvbGUgcHJvY2VzcyBiZWNvbWUgYW4gaW5maW5pdGUgbG9vcCwgd2hpY2ggd2UgbmVlZCB0byBzb21laG93XG4gKiBkZWFsIHdpdGgsIGFuZCBicmVhayBpdCBpbiBvbmUgd2F5IG9yIGFub3RoZXIuXG4gKlxuICogVG8gZGVhbCB3aXRoIHRoaXMgaXNzdWUsIHdlIGFyZSBtYWtpbmcgc3VyZSB0aGF0IHdlIF9hbHdheXNfIHVzZSB0aGUgcmVhbFxuICogYnJvd3NlciBGZXRjaCBBUEksIGluc3RlYWQgb2YgcmVseWluZyBvbiB3aGF0IGB3aW5kb3cuZmV0Y2hgIGV4cG9zZXMuXG4gKiBUaGUgb25seSBkb3duc2lkZSB0byB0aGlzIHdvdWxkIGJlIG1pc3Npbmcgb3VyIG93biByZXF1ZXN0cyBhcyBicmVhZGNydW1icyxcbiAqIGJ1dCBiZWNhdXNlIHdlIGFyZSBhbHJlYWR5IG5vdCBkb2luZyB0aGlzLCBpdCBzaG91bGQgYmUganVzdCBmaW5lLlxuICpcbiAqIFBvc3NpYmxlIGZhaWxlZCBmZXRjaCBlcnJvciBtZXNzYWdlcyBwZXItYnJvd3NlcjpcbiAqXG4gKiBDaHJvbWU6ICBGYWlsZWQgdG8gZmV0Y2hcbiAqIEVkZ2U6ICAgIEZhaWxlZCB0byBGZXRjaFxuICogRmlyZWZveDogTmV0d29ya0Vycm9yIHdoZW4gYXR0ZW1wdGluZyB0byBmZXRjaCByZXNvdXJjZVxuICogU2FmYXJpOiAgcmVzb3VyY2UgYmxvY2tlZCBieSBjb250ZW50IGJsb2NrZXJcbiAqL1xuZnVuY3Rpb24gZ2V0TmF0aXZlRmV0Y2hJbXBsZW1lbnRhdGlvbigpIHtcbiAgaWYgKGNhY2hlZEZldGNoSW1wbCkge1xuICAgIHJldHVybiBjYWNoZWRGZXRjaEltcGw7XG4gIH1cblxuICAvKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvdW5ib3VuZC1tZXRob2QgKi9cblxuICAvLyBGYXN0IHBhdGggdG8gYXZvaWQgRE9NIEkvT1xuICBpZiAoaXNOYXRpdmVGZXRjaChXSU5ET1cuZmV0Y2gpKSB7XG4gICAgcmV0dXJuIChjYWNoZWRGZXRjaEltcGwgPSBXSU5ET1cuZmV0Y2guYmluZChXSU5ET1cpKTtcbiAgfVxuXG4gIGNvbnN0IGRvY3VtZW50ID0gV0lORE9XLmRvY3VtZW50O1xuICBsZXQgZmV0Y2hJbXBsID0gV0lORE9XLmZldGNoO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgaWYgKGRvY3VtZW50ICYmIHR5cGVvZiBkb2N1bWVudC5jcmVhdGVFbGVtZW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHNhbmRib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTtcbiAgICAgIHNhbmRib3guaGlkZGVuID0gdHJ1ZTtcbiAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2FuZGJveCk7XG4gICAgICBjb25zdCBjb250ZW50V2luZG93ID0gc2FuZGJveC5jb250ZW50V2luZG93O1xuICAgICAgaWYgKGNvbnRlbnRXaW5kb3cgJiYgY29udGVudFdpbmRvdy5mZXRjaCkge1xuICAgICAgICBmZXRjaEltcGwgPSBjb250ZW50V2luZG93LmZldGNoO1xuICAgICAgfVxuICAgICAgZG9jdW1lbnQuaGVhZC5yZW1vdmVDaGlsZChzYW5kYm94KTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmXG4gICAgICAgIGxvZ2dlci53YXJuKCdDb3VsZCBub3QgY3JlYXRlIHNhbmRib3ggaWZyYW1lIGZvciBwdXJlIGZldGNoIGNoZWNrLCBiYWlsaW5nIHRvIHdpbmRvdy5mZXRjaDogJywgZSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIChjYWNoZWRGZXRjaEltcGwgPSBmZXRjaEltcGwuYmluZChXSU5ET1cpKTtcbiAgLyogZXNsaW50LWVuYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvdW5ib3VuZC1tZXRob2QgKi9cbn1cblxuLyoqIENsZWFycyBjYWNoZWQgZmV0Y2ggaW1wbCAqL1xuZnVuY3Rpb24gY2xlYXJDYWNoZWRGZXRjaEltcGxlbWVudGF0aW9uKCkge1xuICBjYWNoZWRGZXRjaEltcGwgPSB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCB7IGNsZWFyQ2FjaGVkRmV0Y2hJbXBsZW1lbnRhdGlvbiwgZ2V0TmF0aXZlRmV0Y2hJbXBsZW1lbnRhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/transports/utils.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/transports/xhr.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/transports/xhr.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeXHRTransport\": function() { return /* binding */ makeXHRTransport; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/transports/base.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n\n\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.createTransport)(options, makeRequest);\n}\n\n\n//# sourceMappingURL=xhr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS90cmFuc3BvcnRzL3hoci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBK0M7QUFDSDs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVc7QUFDMUI7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsV0FBVztBQUNYO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDs7QUFFQSxTQUFTLDZEQUFlO0FBQ3hCOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvYnJvd3Nlci9lc20vdHJhbnNwb3J0cy94aHIuanM/MzEzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVUcmFuc3BvcnQgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgU3luY1Byb21pc2UgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLyoqXG4gKiBUaGUgRE9ORSByZWFkeSBzdGF0ZSBmb3IgWG1sSHR0cFJlcXVlc3RcbiAqXG4gKiBEZWZpbmluZyBpdCBoZXJlIGFzIGEgY29uc3RhbnQgYi9jIFhNTEh0dHBSZXF1ZXN0LkRPTkUgaXMgbm90IGFsd2F5cyBkZWZpbmVkXG4gKiAoZS5nLiBkdXJpbmcgdGVzdGluZywgaXQgaXMgYHVuZGVmaW5lZGApXG4gKlxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1hNTEh0dHBSZXF1ZXN0L3JlYWR5U3RhdGV9XG4gKi9cbmNvbnN0IFhIUl9SRUFEWVNUQVRFX0RPTkUgPSA0O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBUcmFuc3BvcnQgdGhhdCB1c2VzIHRoZSBYTUxIdHRwUmVxdWVzdCBBUEkgdG8gc2VuZCBldmVudHMgdG8gU2VudHJ5LlxuICovXG5mdW5jdGlvbiBtYWtlWEhSVHJhbnNwb3J0KG9wdGlvbnMpIHtcbiAgZnVuY3Rpb24gbWFrZVJlcXVlc3QocmVxdWVzdCkge1xuICAgIHJldHVybiBuZXcgU3luY1Byb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgY29uc3QgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cbiAgICAgIHhoci5vbmVycm9yID0gcmVqZWN0O1xuXG4gICAgICB4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gKCkgPT4ge1xuICAgICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgPT09IFhIUl9SRUFEWVNUQVRFX0RPTkUpIHtcbiAgICAgICAgICByZXNvbHZlKHtcbiAgICAgICAgICAgIHN0YXR1c0NvZGU6IHhoci5zdGF0dXMsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICd4LXNlbnRyeS1yYXRlLWxpbWl0cyc6IHhoci5nZXRSZXNwb25zZUhlYWRlcignWC1TZW50cnktUmF0ZS1MaW1pdHMnKSxcbiAgICAgICAgICAgICAgJ3JldHJ5LWFmdGVyJzogeGhyLmdldFJlc3BvbnNlSGVhZGVyKCdSZXRyeS1BZnRlcicpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgeGhyLm9wZW4oJ1BPU1QnLCBvcHRpb25zLnVybCk7XG5cbiAgICAgIGZvciAoY29uc3QgaGVhZGVyIGluIG9wdGlvbnMuaGVhZGVycykge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9wdGlvbnMuaGVhZGVycywgaGVhZGVyKSkge1xuICAgICAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKGhlYWRlciwgb3B0aW9ucy5oZWFkZXJzW2hlYWRlcl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHhoci5zZW5kKHJlcXVlc3QuYm9keSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gY3JlYXRlVHJhbnNwb3J0KG9wdGlvbnMsIG1ha2VSZXF1ZXN0KTtcbn1cblxuZXhwb3J0IHsgbWFrZVhIUlRyYW5zcG9ydCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9eGhyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/transports/xhr.js\n");

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/userfeedback.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/userfeedback.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createUserFeedbackEnvelope\": function() { return /* binding */ createUserFeedbackEnvelope; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n\n\n/**\n * Creates an envelope from a user feedback.\n */\nfunction createUserFeedbackEnvelope(\n  feedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }\n\n,\n) {\n  const headers = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnToString)(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.createEnvelope)(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback) {\n  const feedbackHeaders = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n\n\n//# sourceMappingURL=userfeedback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS91c2VyZmVlZGJhY2suanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTREOztBQUU1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1AsK0JBQStCLEtBQUssMERBQVcsT0FBTztBQUN0RDtBQUNBOztBQUVBLFNBQVMsNkRBQWM7QUFDdkI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzQztBQUN0QyIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvYnJvd3Nlci9lc20vdXNlcmZlZWRiYWNrLmpzP2U4MDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZHNuVG9TdHJpbmcsIGNyZWF0ZUVudmVsb3BlIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBlbnZlbG9wZSBmcm9tIGEgdXNlciBmZWVkYmFjay5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlVXNlckZlZWRiYWNrRW52ZWxvcGUoXG4gIGZlZWRiYWNrLFxuICB7XG4gICAgbWV0YWRhdGEsXG4gICAgdHVubmVsLFxuICAgIGRzbixcbiAgfVxuXG4sXG4pIHtcbiAgY29uc3QgaGVhZGVycyA9IHtcbiAgICBldmVudF9pZDogZmVlZGJhY2suZXZlbnRfaWQsXG4gICAgc2VudF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgIC4uLihtZXRhZGF0YSAmJlxuICAgICAgbWV0YWRhdGEuc2RrICYmIHtcbiAgICAgICAgc2RrOiB7XG4gICAgICAgICAgbmFtZTogbWV0YWRhdGEuc2RrLm5hbWUsXG4gICAgICAgICAgdmVyc2lvbjogbWV0YWRhdGEuc2RrLnZlcnNpb24sXG4gICAgICAgIH0sXG4gICAgICB9KSxcbiAgICAuLi4oISF0dW5uZWwgJiYgISFkc24gJiYgeyBkc246IGRzblRvU3RyaW5nKGRzbikgfSksXG4gIH07XG4gIGNvbnN0IGl0ZW0gPSBjcmVhdGVVc2VyRmVlZGJhY2tFbnZlbG9wZUl0ZW0oZmVlZGJhY2spO1xuXG4gIHJldHVybiBjcmVhdGVFbnZlbG9wZShoZWFkZXJzLCBbaXRlbV0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVVc2VyRmVlZGJhY2tFbnZlbG9wZUl0ZW0oZmVlZGJhY2spIHtcbiAgY29uc3QgZmVlZGJhY2tIZWFkZXJzID0ge1xuICAgIHR5cGU6ICd1c2VyX3JlcG9ydCcsXG4gIH07XG4gIHJldHVybiBbZmVlZGJhY2tIZWFkZXJzLCBmZWVkYmFja107XG59XG5cbmV4cG9ydCB7IGNyZWF0ZVVzZXJGZWVkYmFja0VudmVsb3BlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VyZmVlZGJhY2suanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/userfeedback.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/api.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/core/esm/api.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getEnvelopeEndpointWithUrlEncodedAuth\": function() { return /* binding */ getEnvelopeEndpointWithUrlEncodedAuth; },\n/* harmony export */   \"getReportDialogEndpoint\": function() { return /* binding */ getReportDialogEndpoint; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/dsn.js\");\n\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.urlEncode)({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions = {} ,\n) {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.makeDsn)(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dsnToString)(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\n\n//# sourceMappingURL=api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9hcGkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnRTs7QUFFaEU7O0FBRUE7QUFDQTtBQUNBLHFDQUFxQyxhQUFhO0FBQ2xELDhCQUE4QixTQUFTO0FBQ3ZDLFlBQVksU0FBUyxJQUFJLFNBQVMsRUFBRSxLQUFLLEVBQUUsZUFBZSxTQUFTLE9BQU87QUFDMUU7O0FBRUE7QUFDQTtBQUNBLFlBQVksd0JBQXdCLEVBQUUsY0FBYztBQUNwRDs7QUFFQTtBQUNBO0FBQ0EsU0FBUyx3REFBUztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixrQkFBa0IsYUFBYSxHQUFHLGdCQUFnQixHQUFHO0FBQzFFLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0EsYUFBYSx5QkFBeUI7QUFDdEMsaUNBQWlDLHdCQUF3QixHQUFHLGlDQUFpQzs7QUFFN0Y7QUFDQTtBQUNBOztBQUVBLDhCQUE4Qix3QkFBd0IsR0FBRywyQkFBMkI7QUFDcEY7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGNBQWMsc0RBQU87QUFDckI7QUFDQTtBQUNBOztBQUVBLHNCQUFzQix3QkFBd0I7O0FBRTlDLDhCQUE4QiwwREFBVyxNQUFNO0FBQy9DO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyw4QkFBOEI7QUFDakU7QUFDQTtBQUNBLG9DQUFvQywrQkFBK0I7QUFDbkU7QUFDQSxNQUFNO0FBQ04sNEJBQTRCLHdCQUF3QixHQUFHLHdDQUF3QztBQUMvRjtBQUNBOztBQUVBLFlBQVksU0FBUyxHQUFHLGVBQWU7QUFDdkM7O0FBRTBFO0FBQzFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9hcGkuanM/ZGNjYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYWtlRHNuLCBkc25Ub1N0cmluZywgdXJsRW5jb2RlIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmNvbnN0IFNFTlRSWV9BUElfVkVSU0lPTiA9ICc3JztcblxuLyoqIFJldHVybnMgdGhlIHByZWZpeCB0byBjb25zdHJ1Y3QgU2VudHJ5IGluZ2VzdGlvbiBBUEkgZW5kcG9pbnRzLiAqL1xuZnVuY3Rpb24gZ2V0QmFzZUFwaUVuZHBvaW50KGRzbikge1xuICBjb25zdCBwcm90b2NvbCA9IGRzbi5wcm90b2NvbCA/IGAke2Rzbi5wcm90b2NvbH06YCA6ICcnO1xuICBjb25zdCBwb3J0ID0gZHNuLnBvcnQgPyBgOiR7ZHNuLnBvcnR9YCA6ICcnO1xuICByZXR1cm4gYCR7cHJvdG9jb2x9Ly8ke2Rzbi5ob3N0fSR7cG9ydH0ke2Rzbi5wYXRoID8gYC8ke2Rzbi5wYXRofWAgOiAnJ30vYXBpL2A7XG59XG5cbi8qKiBSZXR1cm5zIHRoZSBpbmdlc3QgQVBJIGVuZHBvaW50IGZvciB0YXJnZXQuICovXG5mdW5jdGlvbiBfZ2V0SW5nZXN0RW5kcG9pbnQoZHNuKSB7XG4gIHJldHVybiBgJHtnZXRCYXNlQXBpRW5kcG9pbnQoZHNuKX0ke2Rzbi5wcm9qZWN0SWR9L2VudmVsb3BlL2A7XG59XG5cbi8qKiBSZXR1cm5zIGEgVVJMLWVuY29kZWQgc3RyaW5nIHdpdGggYXV0aCBjb25maWcgc3VpdGFibGUgZm9yIGEgcXVlcnkgc3RyaW5nLiAqL1xuZnVuY3Rpb24gX2VuY29kZWRBdXRoKGRzbiwgc2RrSW5mbykge1xuICByZXR1cm4gdXJsRW5jb2RlKHtcbiAgICAvLyBXZSBzZW5kIG9ubHkgdGhlIG1pbmltdW0gc2V0IG9mIHJlcXVpcmVkIGluZm9ybWF0aW9uLiBTZWVcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3NlbnRyeS1qYXZhc2NyaXB0L2lzc3Vlcy8yNTcyLlxuICAgIHNlbnRyeV9rZXk6IGRzbi5wdWJsaWNLZXksXG4gICAgc2VudHJ5X3ZlcnNpb246IFNFTlRSWV9BUElfVkVSU0lPTixcbiAgICAuLi4oc2RrSW5mbyAmJiB7IHNlbnRyeV9jbGllbnQ6IGAke3Nka0luZm8ubmFtZX0vJHtzZGtJbmZvLnZlcnNpb259YCB9KSxcbiAgfSk7XG59XG5cbi8qKlxuICogUmV0dXJucyB0aGUgZW52ZWxvcGUgZW5kcG9pbnQgVVJMIHdpdGggYXV0aCBpbiB0aGUgcXVlcnkgc3RyaW5nLlxuICpcbiAqIFNlbmRpbmcgYXV0aCBhcyBwYXJ0IG9mIHRoZSBxdWVyeSBzdHJpbmcgYW5kIG5vdCBhcyBjdXN0b20gSFRUUCBoZWFkZXJzIGF2b2lkcyBDT1JTIHByZWZsaWdodCByZXF1ZXN0cy5cbiAqL1xuZnVuY3Rpb24gZ2V0RW52ZWxvcGVFbmRwb2ludFdpdGhVcmxFbmNvZGVkQXV0aChcbiAgZHNuLFxuICAvLyBUT0RPICh2OCk6IFJlbW92ZSBgdHVubmVsT3JPcHRpb25zYCBpbiBmYXZvciBvZiBgb3B0aW9uc2AsIGFuZCB1c2UgdGhlIHN1YnN0aXR1dGUgY29kZSBiZWxvd1xuICAvLyBvcHRpb25zOiBDbGllbnRPcHRpb25zID0ge30gYXMgQ2xpZW50T3B0aW9ucyxcbiAgdHVubmVsT3JPcHRpb25zID0ge30gLFxuKSB7XG4gIC8vIFRPRE8gKHY4KTogVXNlIHRoaXMgY29kZSBpbnN0ZWFkXG4gIC8vIGNvbnN0IHsgdHVubmVsLCBfbWV0YWRhdGEgPSB7fSB9ID0gb3B0aW9ucztcbiAgLy8gcmV0dXJuIHR1bm5lbCA/IHR1bm5lbCA6IGAke19nZXRJbmdlc3RFbmRwb2ludChkc24pfT8ke19lbmNvZGVkQXV0aChkc24sIF9tZXRhZGF0YS5zZGspfWA7XG5cbiAgY29uc3QgdHVubmVsID0gdHlwZW9mIHR1bm5lbE9yT3B0aW9ucyA9PT0gJ3N0cmluZycgPyB0dW5uZWxPck9wdGlvbnMgOiB0dW5uZWxPck9wdGlvbnMudHVubmVsO1xuICBjb25zdCBzZGtJbmZvID1cbiAgICB0eXBlb2YgdHVubmVsT3JPcHRpb25zID09PSAnc3RyaW5nJyB8fCAhdHVubmVsT3JPcHRpb25zLl9tZXRhZGF0YSA/IHVuZGVmaW5lZCA6IHR1bm5lbE9yT3B0aW9ucy5fbWV0YWRhdGEuc2RrO1xuXG4gIHJldHVybiB0dW5uZWwgPyB0dW5uZWwgOiBgJHtfZ2V0SW5nZXN0RW5kcG9pbnQoZHNuKX0/JHtfZW5jb2RlZEF1dGgoZHNuLCBzZGtJbmZvKX1gO1xufVxuXG4vKiogUmV0dXJucyB0aGUgdXJsIHRvIHRoZSByZXBvcnQgZGlhbG9nIGVuZHBvaW50LiAqL1xuZnVuY3Rpb24gZ2V0UmVwb3J0RGlhbG9nRW5kcG9pbnQoXG4gIGRzbkxpa2UsXG4gIGRpYWxvZ09wdGlvbnNcblxuLFxuKSB7XG4gIGNvbnN0IGRzbiA9IG1ha2VEc24oZHNuTGlrZSk7XG4gIGlmICghZHNuKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgY29uc3QgZW5kcG9pbnQgPSBgJHtnZXRCYXNlQXBpRW5kcG9pbnQoZHNuKX1lbWJlZC9lcnJvci1wYWdlL2A7XG5cbiAgbGV0IGVuY29kZWRPcHRpb25zID0gYGRzbj0ke2RzblRvU3RyaW5nKGRzbil9YDtcbiAgZm9yIChjb25zdCBrZXkgaW4gZGlhbG9nT3B0aW9ucykge1xuICAgIGlmIChrZXkgPT09ICdkc24nKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAoa2V5ID09PSAndXNlcicpIHtcbiAgICAgIGNvbnN0IHVzZXIgPSBkaWFsb2dPcHRpb25zLnVzZXI7XG4gICAgICBpZiAoIXVzZXIpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodXNlci5uYW1lKSB7XG4gICAgICAgIGVuY29kZWRPcHRpb25zICs9IGAmbmFtZT0ke2VuY29kZVVSSUNvbXBvbmVudCh1c2VyLm5hbWUpfWA7XG4gICAgICB9XG4gICAgICBpZiAodXNlci5lbWFpbCkge1xuICAgICAgICBlbmNvZGVkT3B0aW9ucyArPSBgJmVtYWlsPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHVzZXIuZW1haWwpfWA7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGVuY29kZWRPcHRpb25zICs9IGAmJHtlbmNvZGVVUklDb21wb25lbnQoa2V5KX09JHtlbmNvZGVVUklDb21wb25lbnQoZGlhbG9nT3B0aW9uc1trZXldICl9YDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYCR7ZW5kcG9pbnR9PyR7ZW5jb2RlZE9wdGlvbnN9YDtcbn1cblxuZXhwb3J0IHsgZ2V0RW52ZWxvcGVFbmRwb2ludFdpdGhVcmxFbmNvZGVkQXV0aCwgZ2V0UmVwb3J0RGlhbG9nRW5kcG9pbnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwaS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/api.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/baseclient.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/core/esm/baseclient.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseClient\": function() { return /* binding */ BaseClient; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/error.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api.js */ \"./node_modules/@sentry/core/esm/api.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./envelope.js */ \"./node_modules/@sentry/core/esm/envelope.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./session.js */ \"./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./tracing/dynamicSamplingContext.js */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/prepareEvent.js */ \"./node_modules/@sentry/core/esm/utils/prepareEvent.js\");\n\n\n\n\n\n\n\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n   __init() {this._integrations = {};}\n\n  /** Indicates whether this client's integrations have been set up. */\n   __init2() {this._integrationsInitialized = false;}\n\n  /** Number of calls being processed */\n   __init3() {this._numProcessing = 0;}\n\n  /** Holds flushable  */\n   __init4() {this._outcomes = {};}\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n   __init5() {this._hooks = {};}\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {BaseClient.prototype.__init.call(this);BaseClient.prototype.__init2.call(this);BaseClient.prototype.__init3.call(this);BaseClient.prototype.__init4.call(this);BaseClient.prototype.__init5.call(this);\n    this._options = options;\n\n    if (options.dsn) {\n      this._dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makeDsn)(options.dsn);\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('No DSN provided, client will not do anything.');\n    }\n\n    if (this._dsn) {\n      const url = (0,_api_js__WEBPACK_IMPORTED_MODULE_2__.getEnvelopeEndpointWithUrlEncodedAuth)(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.checkOrSetAlreadyCaught)(exception)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    const promisedEvent = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isPrimitive)(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.checkOrSetAlreadyCaught)(hint.originalException)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_5__.updateSession)(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.resolvedSyncPromise)(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n   setupIntegrations() {\n    if (this._isEnabled() && !this._integrationsInitialized) {\n      this._integrations = (0,_integration_js__WEBPACK_IMPORTED_MODULE_7__.setupIntegrations)(this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n   getIntegrationById(integrationId) {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    (0,_integration_js__WEBPACK_IMPORTED_MODULE_7__.setupIntegration)(integration, this._integrations);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    if (this._dsn) {\n      let env = (0,_envelope_js__WEBPACK_IMPORTED_MODULE_8__.createEventEnvelope)(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n      for (const attachment of hint.attachments || []) {\n        env = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.addItemToEnvelope)(\n          env,\n          (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.createAttachmentEnvelopeItem)(\n            attachment,\n            this._options.transportOptions && this._options.transportOptions.textEncoder,\n          ),\n        );\n      }\n\n      const promise = this._sendEnvelope(env);\n      if (promise) {\n        promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    if (this._dsn) {\n      const env = (0,_envelope_js__WEBPACK_IMPORTED_MODULE_8__.createSessionEnvelope)(session, this._dsn, this._options._metadata, this._options.tunnel);\n      void this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, _event) {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-ignore We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    if (this._hooks[hook]) {\n      // @ts-ignore we cannot enforce the callback to match the hook\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_5__.updateSession)(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n    return (0,_utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_10__.prepareEvent)(options, event, hint, scope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      // If a trace context is not set on the event, we use the propagationContext set on the event to\n      // generate a trace context. If the propagationContext does not have a dynamic sampling context, we\n      // also generate one for it.\n      const { propagationContext } = evt.sdkProcessingMetadata || {};\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext ;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : (0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_11__.getDynamicSamplingContextFromClient)(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(sentryError.message);\n          } else {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    if (!this._isEnabled()) {\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.rejectedSyncPromise)(new _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError('SDK not enabled, will not capture event.', 'log'));\n    }\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.rejectedSyncPromise)(\n        new _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    if (this._transport && this._dsn) {\n      this.emit('beforeEnvelope', envelope);\n\n      return this._transport.send(envelope).then(null, reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error('Error while sending event:', reason);\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isThenable)(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isPlainObject)(event) && event !== null) {\n          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isPlainObject)(beforeSendResult) && beforeSendResult !== null) {\n    throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n\n//# sourceMappingURL=baseclient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/baseclient.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/constants.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/core/esm/constants.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_ENVIRONMENT\": function() { return /* binding */ DEFAULT_ENVIRONMENT; }\n/* harmony export */ });\nconst DEFAULT_ENVIRONMENT = 'production';\n\n\n//# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9jb25zdGFudHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUUrQjtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vY29uc3RhbnRzLmpzP2E5NDYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgREVGQVVMVF9FTlZJUk9OTUVOVCA9ICdwcm9kdWN0aW9uJztcblxuZXhwb3J0IHsgREVGQVVMVF9FTlZJUk9OTUVOVCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/constants.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/envelope.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/core/esm/envelope.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createEventEnvelope\": function() { return /* binding */ createEventEnvelope; },\n/* harmony export */   \"createSessionEnvelope\": function() { return /* binding */ createSessionEnvelope; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/dsn.js\");\n\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getSdkMetadataForEnvelopeHeader)(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dsnToString)(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getSdkMetadataForEnvelopeHeader)(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjut a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEventEnvelopeHeaders)(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(envelopeHeaders, [eventItem]);\n}\n\n\n//# sourceMappingURL=envelope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9lbnZlbG9wZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlIOztBQUV6SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsOEVBQStCO0FBQ2pEO0FBQ0E7QUFDQSxxQkFBcUIsY0FBYztBQUNuQyxzQkFBc0IsS0FBSywwREFBVyxPQUFPO0FBQzdDOztBQUVBO0FBQ0EsaUNBQWlDLGtCQUFrQixnQkFBZ0IsaUJBQWlCOztBQUVwRixTQUFTLDZEQUFjO0FBQ3ZCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw4RUFBK0I7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsMEJBQTBCLHlFQUEwQjs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx1QkFBdUIsaUJBQWlCO0FBQ3hDLFNBQVMsNkRBQWM7QUFDdkI7O0FBRXNEO0FBQ3REIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9lbnZlbG9wZS5qcz9jMWRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFNka01ldGFkYXRhRm9yRW52ZWxvcGVIZWFkZXIsIGRzblRvU3RyaW5nLCBjcmVhdGVFbnZlbG9wZSwgY3JlYXRlRXZlbnRFbnZlbG9wZUhlYWRlcnMgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLyoqXG4gKiBBcHBseSBTZGtJbmZvIChuYW1lLCB2ZXJzaW9uLCBwYWNrYWdlcywgaW50ZWdyYXRpb25zKSB0byB0aGUgY29ycmVzcG9uZGluZyBldmVudCBrZXkuXG4gKiBNZXJnZSB3aXRoIGV4aXN0aW5nIGRhdGEgaWYgYW55LlxuICoqL1xuZnVuY3Rpb24gZW5oYW5jZUV2ZW50V2l0aFNka0luZm8oZXZlbnQsIHNka0luZm8pIHtcbiAgaWYgKCFzZGtJbmZvKSB7XG4gICAgcmV0dXJuIGV2ZW50O1xuICB9XG4gIGV2ZW50LnNkayA9IGV2ZW50LnNkayB8fCB7fTtcbiAgZXZlbnQuc2RrLm5hbWUgPSBldmVudC5zZGsubmFtZSB8fCBzZGtJbmZvLm5hbWU7XG4gIGV2ZW50LnNkay52ZXJzaW9uID0gZXZlbnQuc2RrLnZlcnNpb24gfHwgc2RrSW5mby52ZXJzaW9uO1xuICBldmVudC5zZGsuaW50ZWdyYXRpb25zID0gWy4uLihldmVudC5zZGsuaW50ZWdyYXRpb25zIHx8IFtdKSwgLi4uKHNka0luZm8uaW50ZWdyYXRpb25zIHx8IFtdKV07XG4gIGV2ZW50LnNkay5wYWNrYWdlcyA9IFsuLi4oZXZlbnQuc2RrLnBhY2thZ2VzIHx8IFtdKSwgLi4uKHNka0luZm8ucGFja2FnZXMgfHwgW10pXTtcbiAgcmV0dXJuIGV2ZW50O1xufVxuXG4vKiogQ3JlYXRlcyBhbiBlbnZlbG9wZSBmcm9tIGEgU2Vzc2lvbiAqL1xuZnVuY3Rpb24gY3JlYXRlU2Vzc2lvbkVudmVsb3BlKFxuICBzZXNzaW9uLFxuICBkc24sXG4gIG1ldGFkYXRhLFxuICB0dW5uZWwsXG4pIHtcbiAgY29uc3Qgc2RrSW5mbyA9IGdldFNka01ldGFkYXRhRm9yRW52ZWxvcGVIZWFkZXIobWV0YWRhdGEpO1xuICBjb25zdCBlbnZlbG9wZUhlYWRlcnMgPSB7XG4gICAgc2VudF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgIC4uLihzZGtJbmZvICYmIHsgc2RrOiBzZGtJbmZvIH0pLFxuICAgIC4uLighIXR1bm5lbCAmJiB7IGRzbjogZHNuVG9TdHJpbmcoZHNuKSB9KSxcbiAgfTtcblxuICBjb25zdCBlbnZlbG9wZUl0ZW0gPVxuICAgICdhZ2dyZWdhdGVzJyBpbiBzZXNzaW9uID8gW3sgdHlwZTogJ3Nlc3Npb25zJyB9LCBzZXNzaW9uXSA6IFt7IHR5cGU6ICdzZXNzaW9uJyB9LCBzZXNzaW9uLnRvSlNPTigpXTtcblxuICByZXR1cm4gY3JlYXRlRW52ZWxvcGUoZW52ZWxvcGVIZWFkZXJzLCBbZW52ZWxvcGVJdGVtXSk7XG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIEVudmVsb3BlIGZyb20gYW4gZXZlbnQuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50RW52ZWxvcGUoXG4gIGV2ZW50LFxuICBkc24sXG4gIG1ldGFkYXRhLFxuICB0dW5uZWwsXG4pIHtcbiAgY29uc3Qgc2RrSW5mbyA9IGdldFNka01ldGFkYXRhRm9yRW52ZWxvcGVIZWFkZXIobWV0YWRhdGEpO1xuXG4gIC8qXG4gICAgTm90ZTogRHVlIHRvIFRTLCBldmVudC50eXBlIG1heSBiZSBgcmVwbGF5X2V2ZW50YCwgdGhlb3JldGljYWxseS5cbiAgICBJbiBwcmFjdGljZSwgd2UgbmV2ZXIgY2FsbCBgY3JlYXRlRXZlbnRFbnZlbG9wZWAgd2l0aCBgcmVwbGF5X2V2ZW50YCB0eXBlLFxuICAgIGFuZCB3ZSdkIGhhdmUgdG8gYWRqdXQgYSBsb29vdCBvZiB0eXBlcyB0byBtYWtlIHRoaXMgd29yayBwcm9wZXJseS5cbiAgICBXZSB3YW50IHRvIGF2b2lkIGNhc3RpbmcgdGhpcyBhcm91bmQsIGFzIHRoYXQgY291bGQgbGVhZCB0byBidWdzIChlLmcuIHdoZW4gd2UgYWRkIGFub3RoZXIgdHlwZSlcbiAgICBTbyB0aGUgc2FmZSBjaG9pY2UgaXMgdG8gcmVhbGx5IGd1YXJkIGFnYWluc3QgdGhlIHJlcGxheV9ldmVudCB0eXBlIGhlcmUuXG4gICovXG4gIGNvbnN0IGV2ZW50VHlwZSA9IGV2ZW50LnR5cGUgJiYgZXZlbnQudHlwZSAhPT0gJ3JlcGxheV9ldmVudCcgPyBldmVudC50eXBlIDogJ2V2ZW50JztcblxuICBlbmhhbmNlRXZlbnRXaXRoU2RrSW5mbyhldmVudCwgbWV0YWRhdGEgJiYgbWV0YWRhdGEuc2RrKTtcblxuICBjb25zdCBlbnZlbG9wZUhlYWRlcnMgPSBjcmVhdGVFdmVudEVudmVsb3BlSGVhZGVycyhldmVudCwgc2RrSW5mbywgdHVubmVsLCBkc24pO1xuXG4gIC8vIFByZXZlbnQgdGhpcyBkYXRhICh3aGljaCwgaWYgaXQgZXhpc3RzLCB3YXMgdXNlZCBpbiBlYXJsaWVyIHN0ZXBzIGluIHRoZSBwcm9jZXNzaW5nIHBpcGVsaW5lKSBmcm9tIGJlaW5nIHNlbnQgdG9cbiAgLy8gc2VudHJ5LiAoTm90ZTogT3VyIHVzZSBvZiB0aGlzIHByb3BlcnR5IGNvbWVzIGFuZCBnb2VzIHdpdGggd2hhdGV2ZXIgd2UgbWlnaHQgYmUgZGVidWdnaW5nLCB3aGF0ZXZlciBoYWNrcyB3ZSBtYXlcbiAgLy8gaGF2ZSB0ZW1wb3JhcmlseSBhZGRlZCwgZXRjLiBFdmVuIGlmIHdlIGRvbid0IGhhcHBlbiB0byBiZSB1c2luZyBpdCBhdCBzb21lIHBvaW50IGluIHRoZSBmdXR1cmUsIGxldCdzIG5vdCBnZXQgcmlkXG4gIC8vIG9mIHRoaXMgYGRlbGV0ZWAsIGxlc3Qgd2UgbWlzcyBwdXR0aW5nIGl0IGJhY2sgaW4gdGhlIG5leHQgdGltZSB0aGUgcHJvcGVydHkgaXMgaW4gdXNlLilcbiAgZGVsZXRlIGV2ZW50LnNka1Byb2Nlc3NpbmdNZXRhZGF0YTtcblxuICBjb25zdCBldmVudEl0ZW0gPSBbeyB0eXBlOiBldmVudFR5cGUgfSwgZXZlbnRdO1xuICByZXR1cm4gY3JlYXRlRW52ZWxvcGUoZW52ZWxvcGVIZWFkZXJzLCBbZXZlbnRJdGVtXSk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUV2ZW50RW52ZWxvcGUsIGNyZWF0ZVNlc3Npb25FbnZlbG9wZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW52ZWxvcGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/envelope.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/exports.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/exports.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addBreadcrumb\": function() { return /* binding */ addBreadcrumb; },\n/* harmony export */   \"captureCheckIn\": function() { return /* binding */ captureCheckIn; },\n/* harmony export */   \"captureEvent\": function() { return /* binding */ captureEvent; },\n/* harmony export */   \"captureException\": function() { return /* binding */ captureException; },\n/* harmony export */   \"captureMessage\": function() { return /* binding */ captureMessage; },\n/* harmony export */   \"configureScope\": function() { return /* binding */ configureScope; },\n/* harmony export */   \"setContext\": function() { return /* binding */ setContext; },\n/* harmony export */   \"setExtra\": function() { return /* binding */ setExtra; },\n/* harmony export */   \"setExtras\": function() { return /* binding */ setExtras; },\n/* harmony export */   \"setTag\": function() { return /* binding */ setTag; },\n/* harmony export */   \"setTags\": function() { return /* binding */ setTags; },\n/* harmony export */   \"setUser\": function() { return /* binding */ setUser; },\n/* harmony export */   \"startTransaction\": function() { return /* binding */ startTransaction; },\n/* harmony export */   \"withScope\": function() { return /* binding */ withScope; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n\n\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction captureException(exception, captureContext) {\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setContext(name, context) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction captureCheckIn(checkIn, upsertMonitorConfig) {\n  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n  const scope = hub.getScope();\n  const client = hub.getClient();\n  if (!client) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.uuid4)();\n}\n\n\n//# sourceMappingURL=exports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/exports.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/hub.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/core/esm/hub.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"API_VERSION\": function() { return /* binding */ API_VERSION; },\n/* harmony export */   \"Hub\": function() { return /* binding */ Hub; },\n/* harmony export */   \"ensureHubOnCarrier\": function() { return /* binding */ ensureHubOnCarrier; },\n/* harmony export */   \"getCurrentHub\": function() { return /* binding */ getCurrentHub; },\n/* harmony export */   \"getHubFromCarrier\": function() { return /* binding */ getHubFromCarrier; },\n/* harmony export */   \"getMainCarrier\": function() { return /* binding */ getMainCarrier; },\n/* harmony export */   \"makeMain\": function() { return /* binding */ makeMain; },\n/* harmony export */   \"runWithAsyncContext\": function() { return /* binding */ runWithAsyncContext; },\n/* harmony export */   \"setAsyncContextStrategy\": function() { return /* binding */ setAsyncContextStrategy; },\n/* harmony export */   \"setHubOnCarrier\": function() { return /* binding */ setHubOnCarrier; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scope.js */ \"./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./session.js */ \"./node_modules/@sentry/core/esm/session.js\");\n\n\n\n\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new _scope_js__WEBPACK_IMPORTED_MODULE_0__.Scope(),   _version = API_VERSION) {this._version = _version;\n    this._stack = [{ scope }];\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    const scope = _scope_js__WEBPACK_IMPORTED_MODULE_0__.Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)());\n    const syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)());\n    const syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dateTimestampInSeconds)();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.consoleSandbox)(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this.getScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this.getScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this.getScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.getScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this.getScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    this.getScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    const result = this._callExtensionMethod('startTransaction', context, customSamplingContext);\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && !result) {\n      // eslint-disable-next-line no-console\n      console.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_4__.closeSession)(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment = _constants_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.GLOBAL_OBJ.navigator || {};\n\n    const session = (0,_session_js__WEBPACK_IMPORTED_MODULE_4__.makeSession)({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_4__.updateSession)(currentSession, { status: 'exited' });\n    }\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.GLOBAL_OBJ.__SENTRY__ = _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\nfunction getGlobalHub(registry = getMainCarrier()) {\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\nfunction ensureHubOnCarrier(carrier, parent = getGlobalHub()) {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (!hasHubOnCarrier(carrier) || getHubFromCarrier(carrier).isOlderThan(API_VERSION)) {\n    const globalHubTopStack = parent.getStackTop();\n    setHubOnCarrier(carrier, new Hub(globalHubTopStack.client, _scope_js__WEBPACK_IMPORTED_MODULE_0__.Scope.clone(globalHubTopStack.scope)));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nfunction runWithAsyncContext(callback, options = {}) {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.getGlobalSingleton)('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\n\n//# sourceMappingURL=hub.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/hub.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integration.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integration.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getIntegrationsToSetup\": function() { return /* binding */ getIntegrationsToSetup; },\n/* harmony export */   \"installedIntegrations\": function() { return /* binding */ installedIntegrations; },\n/* harmony export */   \"setupIntegration\": function() { return /* binding */ setupIntegration; },\n/* harmony export */   \"setupIntegrations\": function() { return /* binding */ setupIntegrations; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scope.js */ \"./node_modules/@sentry/core/esm/scope.js\");\n\n\n\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.arrayify)(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(integration, integrationIndex) {\n  integrationIndex[integration.name] = integration;\n\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    integration.setupOnce(_scope_js__WEBPACK_IMPORTED_MODULE_1__.addGlobalEventProcessor, _hub_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentHub);\n    installedIntegrations.push(integration.name);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(`Integration installed: ${integration.name}`);\n  }\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex(arr, callback) {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n\n//# sourceMappingURL=integration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFpRDtBQUNSO0FBQ1k7O0FBRXJEOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxZQUFZLE9BQU87O0FBRW5COztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKLG1CQUFtQix1REFBUTtBQUMzQixJQUFJO0FBQ0o7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCLDhEQUF1QixFQUFFLGtEQUFhO0FBQ2hFO0FBQ0EscUVBQXFFLHFEQUFVLDJCQUEyQixpQkFBaUI7QUFDM0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLGdCQUFnQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUU4RjtBQUM5RiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vaW50ZWdyYXRpb24uanM/MzA0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhcnJheWlmeSwgbG9nZ2VyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBnZXRDdXJyZW50SHViIH0gZnJvbSAnLi9odWIuanMnO1xuaW1wb3J0IHsgYWRkR2xvYmFsRXZlbnRQcm9jZXNzb3IgfSBmcm9tICcuL3Njb3BlLmpzJztcblxuY29uc3QgaW5zdGFsbGVkSW50ZWdyYXRpb25zID0gW107XG5cbi8qKiBNYXAgb2YgaW50ZWdyYXRpb25zIGFzc2lnbmVkIHRvIGEgY2xpZW50ICovXG5cbi8qKlxuICogUmVtb3ZlIGR1cGxpY2F0ZXMgZnJvbSB0aGUgZ2l2ZW4gYXJyYXksIHByZWZlcnJpbmcgdGhlIGxhc3QgaW5zdGFuY2Ugb2YgYW55IGR1cGxpY2F0ZS4gTm90IGd1YXJhbnRlZWQgdG9cbiAqIHByZXNldmUgdGhlIG9yZGVyIG9mIGludGVncmF0aW9ucyBpbiB0aGUgYXJyYXkuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gZmlsdGVyRHVwbGljYXRlcyhpbnRlZ3JhdGlvbnMpIHtcbiAgY29uc3QgaW50ZWdyYXRpb25zQnlOYW1lID0ge307XG5cbiAgaW50ZWdyYXRpb25zLmZvckVhY2goY3VycmVudEluc3RhbmNlID0+IHtcbiAgICBjb25zdCB7IG5hbWUgfSA9IGN1cnJlbnRJbnN0YW5jZTtcblxuICAgIGNvbnN0IGV4aXN0aW5nSW5zdGFuY2UgPSBpbnRlZ3JhdGlvbnNCeU5hbWVbbmFtZV07XG5cbiAgICAvLyBXZSB3YW50IGludGVncmF0aW9ucyBsYXRlciBpbiB0aGUgYXJyYXkgdG8gb3ZlcndyaXRlIGVhcmxpZXIgb25lcyBvZiB0aGUgc2FtZSB0eXBlLCBleGNlcHQgdGhhdCB3ZSBuZXZlciB3YW50IGFcbiAgICAvLyBkZWZhdWx0IGluc3RhbmNlIHRvIG92ZXJ3cml0ZSBhbiBleGlzdGluZyB1c2VyIGluc3RhbmNlXG4gICAgaWYgKGV4aXN0aW5nSW5zdGFuY2UgJiYgIWV4aXN0aW5nSW5zdGFuY2UuaXNEZWZhdWx0SW5zdGFuY2UgJiYgY3VycmVudEluc3RhbmNlLmlzRGVmYXVsdEluc3RhbmNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaW50ZWdyYXRpb25zQnlOYW1lW25hbWVdID0gY3VycmVudEluc3RhbmNlO1xuICB9KTtcblxuICByZXR1cm4gT2JqZWN0LmtleXMoaW50ZWdyYXRpb25zQnlOYW1lKS5tYXAoayA9PiBpbnRlZ3JhdGlvbnNCeU5hbWVba10pO1xufVxuXG4vKiogR2V0cyBpbnRlZ3JhdGlvbnMgdG8gaW5zdGFsbCAqL1xuZnVuY3Rpb24gZ2V0SW50ZWdyYXRpb25zVG9TZXR1cChvcHRpb25zKSB7XG4gIGNvbnN0IGRlZmF1bHRJbnRlZ3JhdGlvbnMgPSBvcHRpb25zLmRlZmF1bHRJbnRlZ3JhdGlvbnMgfHwgW107XG4gIGNvbnN0IHVzZXJJbnRlZ3JhdGlvbnMgPSBvcHRpb25zLmludGVncmF0aW9ucztcblxuICAvLyBXZSBmbGFnIGRlZmF1bHQgaW5zdGFuY2VzLCBzbyB0aGF0IGxhdGVyIHdlIGNhbiB0ZWxsIHRoZW0gYXBhcnQgZnJvbSBhbnkgdXNlci1jcmVhdGVkIGluc3RhbmNlcyBvZiB0aGUgc2FtZSBjbGFzc1xuICBkZWZhdWx0SW50ZWdyYXRpb25zLmZvckVhY2goaW50ZWdyYXRpb24gPT4ge1xuICAgIGludGVncmF0aW9uLmlzRGVmYXVsdEluc3RhbmNlID0gdHJ1ZTtcbiAgfSk7XG5cbiAgbGV0IGludGVncmF0aW9ucztcblxuICBpZiAoQXJyYXkuaXNBcnJheSh1c2VySW50ZWdyYXRpb25zKSkge1xuICAgIGludGVncmF0aW9ucyA9IFsuLi5kZWZhdWx0SW50ZWdyYXRpb25zLCAuLi51c2VySW50ZWdyYXRpb25zXTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgdXNlckludGVncmF0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGludGVncmF0aW9ucyA9IGFycmF5aWZ5KHVzZXJJbnRlZ3JhdGlvbnMoZGVmYXVsdEludGVncmF0aW9ucykpO1xuICB9IGVsc2Uge1xuICAgIGludGVncmF0aW9ucyA9IGRlZmF1bHRJbnRlZ3JhdGlvbnM7XG4gIH1cblxuICBjb25zdCBmaW5hbEludGVncmF0aW9ucyA9IGZpbHRlckR1cGxpY2F0ZXMoaW50ZWdyYXRpb25zKTtcblxuICAvLyBUaGUgYERlYnVnYCBpbnRlZ3JhdGlvbiBwcmludHMgY29waWVzIG9mIHRoZSBgZXZlbnRgIGFuZCBgaGludGAgd2hpY2ggd2lsbCBiZSBwYXNzZWQgdG8gYGJlZm9yZVNlbmRgIG9yXG4gIC8vIGBiZWZvcmVTZW5kVHJhbnNhY3Rpb25gLiBJdCB0aGVyZWZvcmUgaGFzIHRvIHJ1biBhZnRlciBhbGwgb3RoZXIgaW50ZWdyYXRpb25zLCBzbyB0aGF0IHRoZSBjaGFuZ2VzIG9mIGFsbCBldmVudFxuICAvLyBwcm9jZXNzb3JzIHdpbGwgYmUgcmVmbGVjdGVkIGluIHRoZSBwcmludGVkIHZhbHVlcy4gRm9yIGxhY2sgb2YgYSBtb3JlIGVsZWdhbnQgd2F5IHRvIGd1YXJhbnRlZSB0aGF0LCB3ZSB0aGVyZWZvcmVcbiAgLy8gbG9jYXRlIGl0IGFuZCwgYXNzdW1pbmcgaXQgZXhpc3RzLCBwb3AgaXQgb3V0IG9mIGl0cyBjdXJyZW50IHNwb3QgYW5kIHNob3ZlIGl0IG9udG8gdGhlIGVuZCBvZiB0aGUgYXJyYXkuXG4gIGNvbnN0IGRlYnVnSW5kZXggPSBmaW5kSW5kZXgoZmluYWxJbnRlZ3JhdGlvbnMsIGludGVncmF0aW9uID0+IGludGVncmF0aW9uLm5hbWUgPT09ICdEZWJ1ZycpO1xuICBpZiAoZGVidWdJbmRleCAhPT0gLTEpIHtcbiAgICBjb25zdCBbZGVidWdJbnN0YW5jZV0gPSBmaW5hbEludGVncmF0aW9ucy5zcGxpY2UoZGVidWdJbmRleCwgMSk7XG4gICAgZmluYWxJbnRlZ3JhdGlvbnMucHVzaChkZWJ1Z0luc3RhbmNlKTtcbiAgfVxuXG4gIHJldHVybiBmaW5hbEludGVncmF0aW9ucztcbn1cblxuLyoqXG4gKiBHaXZlbiBhIGxpc3Qgb2YgaW50ZWdyYXRpb24gaW5zdGFuY2VzIHRoaXMgaW5zdGFsbHMgdGhlbSBhbGwuIFdoZW4gYHdpdGhEZWZhdWx0c2AgaXMgc2V0IHRvIGB0cnVlYCB0aGVuIGFsbCBkZWZhdWx0XG4gKiBpbnRlZ3JhdGlvbnMgYXJlIGFkZGVkIHVubGVzcyB0aGV5IHdlcmUgYWxyZWFkeSBwcm92aWRlZCBiZWZvcmUuXG4gKiBAcGFyYW0gaW50ZWdyYXRpb25zIGFycmF5IG9mIGludGVncmF0aW9uIGluc3RhbmNlc1xuICogQHBhcmFtIHdpdGhEZWZhdWx0IHNob3VsZCBlbmFibGUgZGVmYXVsdCBpbnRlZ3JhdGlvbnNcbiAqL1xuZnVuY3Rpb24gc2V0dXBJbnRlZ3JhdGlvbnMoaW50ZWdyYXRpb25zKSB7XG4gIGNvbnN0IGludGVncmF0aW9uSW5kZXggPSB7fTtcblxuICBpbnRlZ3JhdGlvbnMuZm9yRWFjaChpbnRlZ3JhdGlvbiA9PiB7XG4gICAgLy8gZ3VhcmQgYWdhaW5zdCBlbXB0eSBwcm92aWRlZCBpbnRlZ3JhdGlvbnNcbiAgICBpZiAoaW50ZWdyYXRpb24pIHtcbiAgICAgIHNldHVwSW50ZWdyYXRpb24oaW50ZWdyYXRpb24sIGludGVncmF0aW9uSW5kZXgpO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGludGVncmF0aW9uSW5kZXg7XG59XG5cbi8qKiBTZXR1cCBhIHNpbmdsZSBpbnRlZ3JhdGlvbi4gICovXG5mdW5jdGlvbiBzZXR1cEludGVncmF0aW9uKGludGVncmF0aW9uLCBpbnRlZ3JhdGlvbkluZGV4KSB7XG4gIGludGVncmF0aW9uSW5kZXhbaW50ZWdyYXRpb24ubmFtZV0gPSBpbnRlZ3JhdGlvbjtcblxuICBpZiAoaW5zdGFsbGVkSW50ZWdyYXRpb25zLmluZGV4T2YoaW50ZWdyYXRpb24ubmFtZSkgPT09IC0xKSB7XG4gICAgaW50ZWdyYXRpb24uc2V0dXBPbmNlKGFkZEdsb2JhbEV2ZW50UHJvY2Vzc29yLCBnZXRDdXJyZW50SHViKTtcbiAgICBpbnN0YWxsZWRJbnRlZ3JhdGlvbnMucHVzaChpbnRlZ3JhdGlvbi5uYW1lKTtcbiAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5sb2coYEludGVncmF0aW9uIGluc3RhbGxlZDogJHtpbnRlZ3JhdGlvbi5uYW1lfWApO1xuICB9XG59XG5cbi8vIFBvbHlmaWxsIGZvciBBcnJheS5maW5kSW5kZXgoKSwgd2hpY2ggaXMgbm90IHN1cHBvcnRlZCBpbiBFUzVcbmZ1bmN0aW9uIGZpbmRJbmRleChhcnIsIGNhbGxiYWNrKSB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGNhbGxiYWNrKGFycltpXSkgPT09IHRydWUpIHtcbiAgICAgIHJldHVybiBpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAtMTtcbn1cblxuZXhwb3J0IHsgZ2V0SW50ZWdyYXRpb25zVG9TZXR1cCwgaW5zdGFsbGVkSW50ZWdyYXRpb25zLCBzZXR1cEludGVncmF0aW9uLCBzZXR1cEludGVncmF0aW9ucyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZWdyYXRpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integration.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/functiontostring.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/functiontostring.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FunctionToString\": function() { return /* binding */ FunctionToString; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n\n\nlet originalFunctionToString;\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass FunctionToString  {constructor() { FunctionToString.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'FunctionToString';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = FunctionToString.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // intrinsics (like Function.prototype) might be immutable in some environments\n    // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Function.prototype.toString = function ( ...args) {\n        const context = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getOriginalFunction)(this) || this;\n        return originalFunctionToString.apply(context, args);\n      };\n    } catch (e) {\n      // ignore errors here, just don't patch this\n    }\n  }\n} FunctionToString.__initStatic();\n\n\n//# sourceMappingURL=functiontostring.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvZnVuY3Rpb250b3N0cmluZy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvRDs7QUFFcEQ7O0FBRUE7QUFDQSx5QkFBeUIsZ0JBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixrRUFBbUI7QUFDM0M7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUUwQjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vaW50ZWdyYXRpb25zL2Z1bmN0aW9udG9zdHJpbmcuanM/NDQzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRPcmlnaW5hbEZ1bmN0aW9uIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmxldCBvcmlnaW5hbEZ1bmN0aW9uVG9TdHJpbmc7XG5cbi8qKiBQYXRjaCB0b1N0cmluZyBjYWxscyB0byByZXR1cm4gcHJvcGVyIG5hbWUgZm9yIHdyYXBwZWQgZnVuY3Rpb25zICovXG5jbGFzcyBGdW5jdGlvblRvU3RyaW5nICB7Y29uc3RydWN0b3IoKSB7IEZ1bmN0aW9uVG9TdHJpbmcucHJvdG90eXBlLl9faW5pdC5jYWxsKHRoaXMpOyB9XG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHN0YXRpYyBfX2luaXRTdGF0aWMoKSB7dGhpcy5pZCA9ICdGdW5jdGlvblRvU3RyaW5nJzt9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgX19pbml0KCkge3RoaXMubmFtZSA9IEZ1bmN0aW9uVG9TdHJpbmcuaWQ7fVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHNldHVwT25jZSgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3VuYm91bmQtbWV0aG9kXG4gICAgb3JpZ2luYWxGdW5jdGlvblRvU3RyaW5nID0gRnVuY3Rpb24ucHJvdG90eXBlLnRvU3RyaW5nO1xuXG4gICAgLy8gaW50cmluc2ljcyAobGlrZSBGdW5jdGlvbi5wcm90b3R5cGUpIG1pZ2h0IGJlIGltbXV0YWJsZSBpbiBzb21lIGVudmlyb25tZW50c1xuICAgIC8vIGUuZy4gTm9kZSB3aXRoIC0tZnJvemVuLWludHJpbnNpY3MsIFhTIChhbiBlbWJlZGRlZCBKYXZhU2NyaXB0IGVuZ2luZSkgb3IgU0VTIChhIEphdmFTY3JpcHQgcHJvcG9zYWwpXG4gICAgdHJ5IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgICBGdW5jdGlvbi5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiAoIC4uLmFyZ3MpIHtcbiAgICAgICAgY29uc3QgY29udGV4dCA9IGdldE9yaWdpbmFsRnVuY3Rpb24odGhpcykgfHwgdGhpcztcbiAgICAgICAgcmV0dXJuIG9yaWdpbmFsRnVuY3Rpb25Ub1N0cmluZy5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgLy8gaWdub3JlIGVycm9ycyBoZXJlLCBqdXN0IGRvbid0IHBhdGNoIHRoaXNcbiAgICB9XG4gIH1cbn0gRnVuY3Rpb25Ub1N0cmluZy5fX2luaXRTdGF0aWMoKTtcblxuZXhwb3J0IHsgRnVuY3Rpb25Ub1N0cmluZyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZnVuY3Rpb250b3N0cmluZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/functiontostring.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/inboundfilters.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/inboundfilters.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"InboundFilters\": function() { return /* binding */ InboundFilters; },\n/* harmony export */   \"_mergeOptions\": function() { return /* binding */ _mergeOptions; },\n/* harmony export */   \"_shouldDropEvent\": function() { return /* binding */ _shouldDropEvent; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/string.js\");\n\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*healthcheck.*$/,\n  /^.*healthy.*$/,\n  /^.*live.*$/,\n  /^.*ready.*$/,\n  /^.*heartbeat.*$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\n\n/** Inbound filters configurable by the user */\nclass InboundFilters  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'InboundFilters';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = InboundFilters.id;}\n\n   constructor(  _options = {}) {this._options = _options;InboundFilters.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    const eventProcess = (event) => {\n      const hub = getCurrentHub();\n      if (hub) {\n        const self = hub.getIntegration(InboundFilters);\n        if (self) {\n          const client = hub.getClient();\n          const clientOptions = client ? client.getOptions() : {};\n          const options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    };\n\n    eventProcess.id = this.name;\n    addGlobalEventProcessor(eventProcess);\n  }\n} InboundFilters.__initStatic();\n\n/** JSDoc */\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getEventDescription)(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getEventDescription)(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getEventDescription)(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getEventDescription)(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getEventDescription)(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.stringMatchesSomePattern)(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.stringMatchesSomePattern)(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.stringMatchesSomePattern)(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.stringMatchesSomePattern)(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    const { values } = event.exception;\n    try {\n      const { type = '', value = '' } = (values && values[values.length - 1]) || {};\n      return [`${value}`, `${type}: ${value}`];\n    } catch (oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Cannot extract message for event ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getEventDescription)(event)}`);\n      return [];\n    }\n  }\n  return [];\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Cannot extract url for event ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getEventDescription)(event)}`);\n    return null;\n  }\n}\n\n\n//# sourceMappingURL=inboundfilters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/inboundfilters.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FunctionToString\": function() { return /* reexport safe */ _functiontostring_js__WEBPACK_IMPORTED_MODULE_0__.FunctionToString; },\n/* harmony export */   \"InboundFilters\": function() { return /* reexport safe */ _inboundfilters_js__WEBPACK_IMPORTED_MODULE_1__.InboundFilters; }\n/* harmony export */ });\n/* harmony import */ var _functiontostring_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functiontostring.js */ \"./node_modules/@sentry/core/esm/integrations/functiontostring.js\");\n/* harmony import */ var _inboundfilters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inboundfilters.js */ \"./node_modules/@sentry/core/esm/integrations/inboundfilters.js\");\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5RDtBQUNKO0FBQ3JEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvaW5kZXguanM/YTMxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBGdW5jdGlvblRvU3RyaW5nIH0gZnJvbSAnLi9mdW5jdGlvbnRvc3RyaW5nLmpzJztcbmV4cG9ydCB7IEluYm91bmRGaWx0ZXJzIH0gZnJvbSAnLi9pbmJvdW5kZmlsdGVycy5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/index.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/metadata.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/metadata.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ModuleMetadata\": function() { return /* binding */ ModuleMetadata; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _metadata_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../metadata.js */ \"./node_modules/@sentry/core/esm/metadata.js\");\n\n\n\n/**\n * Adds module metadata to stack frames.\n *\n * Metadata can be injected by the Sentry bundler plugins using the `_experiments.moduleMetadata` config option.\n *\n * When this integration is added, the metadata passed to the bundler plugin is added to the stack frames of all events\n * under the `module_metadata` property. This can be used to help in tagging or routing of events from different teams\n * our sources\n */\nclass ModuleMetadata  {constructor() { ModuleMetadata.prototype.__init.call(this); }\n  /*\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'ModuleMetadata';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = ModuleMetadata.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    const client = getCurrentHub().getClient();\n\n    if (!client || typeof client.on !== 'function') {\n      return;\n    }\n\n    // We need to strip metadata from stack frames before sending them to Sentry since these are client side only.\n    client.on('beforeEnvelope', envelope => {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.forEachEnvelopeItem)(envelope, (item, type) => {\n        if (type === 'event') {\n          const event = Array.isArray(item) ? (item )[1] : undefined;\n\n          if (event) {\n            (0,_metadata_js__WEBPACK_IMPORTED_MODULE_1__.stripMetadataFromStackFrames)(event);\n            item[1] = event;\n          }\n        }\n      });\n    });\n\n    const stackParser = client.getOptions().stackParser;\n\n    addGlobalEventProcessor(event => {\n      (0,_metadata_js__WEBPACK_IMPORTED_MODULE_1__.addMetadataToStackFrames)(stackParser, event);\n      return event;\n    });\n  }\n} ModuleMetadata.__initStatic();\n\n\n//# sourceMappingURL=metadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvbWV0YWRhdGEuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9EO0FBQ29DOztBQUV4RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsZ0JBQWdCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTSxrRUFBbUI7QUFDekI7QUFDQTs7QUFFQTtBQUNBLFlBQVksMEVBQTRCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLOztBQUVMOztBQUVBO0FBQ0EsTUFBTSxzRUFBd0I7QUFDOUI7QUFDQSxLQUFLO0FBQ0w7QUFDQSxFQUFFOztBQUV3QjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vaW50ZWdyYXRpb25zL21ldGFkYXRhLmpzPzgxOGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm9yRWFjaEVudmVsb3BlSXRlbSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgc3RyaXBNZXRhZGF0YUZyb21TdGFja0ZyYW1lcywgYWRkTWV0YWRhdGFUb1N0YWNrRnJhbWVzIH0gZnJvbSAnLi4vbWV0YWRhdGEuanMnO1xuXG4vKipcbiAqIEFkZHMgbW9kdWxlIG1ldGFkYXRhIHRvIHN0YWNrIGZyYW1lcy5cbiAqXG4gKiBNZXRhZGF0YSBjYW4gYmUgaW5qZWN0ZWQgYnkgdGhlIFNlbnRyeSBidW5kbGVyIHBsdWdpbnMgdXNpbmcgdGhlIGBfZXhwZXJpbWVudHMubW9kdWxlTWV0YWRhdGFgIGNvbmZpZyBvcHRpb24uXG4gKlxuICogV2hlbiB0aGlzIGludGVncmF0aW9uIGlzIGFkZGVkLCB0aGUgbWV0YWRhdGEgcGFzc2VkIHRvIHRoZSBidW5kbGVyIHBsdWdpbiBpcyBhZGRlZCB0byB0aGUgc3RhY2sgZnJhbWVzIG9mIGFsbCBldmVudHNcbiAqIHVuZGVyIHRoZSBgbW9kdWxlX21ldGFkYXRhYCBwcm9wZXJ0eS4gVGhpcyBjYW4gYmUgdXNlZCB0byBoZWxwIGluIHRhZ2dpbmcgb3Igcm91dGluZyBvZiBldmVudHMgZnJvbSBkaWZmZXJlbnQgdGVhbXNcbiAqIG91ciBzb3VyY2VzXG4gKi9cbmNsYXNzIE1vZHVsZU1ldGFkYXRhICB7Y29uc3RydWN0b3IoKSB7IE1vZHVsZU1ldGFkYXRhLnByb3RvdHlwZS5fX2luaXQuY2FsbCh0aGlzKTsgfVxuICAvKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHN0YXRpYyBfX2luaXRTdGF0aWMoKSB7dGhpcy5pZCA9ICdNb2R1bGVNZXRhZGF0YSc7fVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIF9faW5pdCgpIHt0aGlzLm5hbWUgPSBNb2R1bGVNZXRhZGF0YS5pZDt9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgc2V0dXBPbmNlKGFkZEdsb2JhbEV2ZW50UHJvY2Vzc29yLCBnZXRDdXJyZW50SHViKSB7XG4gICAgY29uc3QgY2xpZW50ID0gZ2V0Q3VycmVudEh1YigpLmdldENsaWVudCgpO1xuXG4gICAgaWYgKCFjbGllbnQgfHwgdHlwZW9mIGNsaWVudC5vbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFdlIG5lZWQgdG8gc3RyaXAgbWV0YWRhdGEgZnJvbSBzdGFjayBmcmFtZXMgYmVmb3JlIHNlbmRpbmcgdGhlbSB0byBTZW50cnkgc2luY2UgdGhlc2UgYXJlIGNsaWVudCBzaWRlIG9ubHkuXG4gICAgY2xpZW50Lm9uKCdiZWZvcmVFbnZlbG9wZScsIGVudmVsb3BlID0+IHtcbiAgICAgIGZvckVhY2hFbnZlbG9wZUl0ZW0oZW52ZWxvcGUsIChpdGVtLCB0eXBlKSA9PiB7XG4gICAgICAgIGlmICh0eXBlID09PSAnZXZlbnQnKSB7XG4gICAgICAgICAgY29uc3QgZXZlbnQgPSBBcnJheS5pc0FycmF5KGl0ZW0pID8gKGl0ZW0gKVsxXSA6IHVuZGVmaW5lZDtcblxuICAgICAgICAgIGlmIChldmVudCkge1xuICAgICAgICAgICAgc3RyaXBNZXRhZGF0YUZyb21TdGFja0ZyYW1lcyhldmVudCk7XG4gICAgICAgICAgICBpdGVtWzFdID0gZXZlbnQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIGNvbnN0IHN0YWNrUGFyc2VyID0gY2xpZW50LmdldE9wdGlvbnMoKS5zdGFja1BhcnNlcjtcblxuICAgIGFkZEdsb2JhbEV2ZW50UHJvY2Vzc29yKGV2ZW50ID0+IHtcbiAgICAgIGFkZE1ldGFkYXRhVG9TdGFja0ZyYW1lcyhzdGFja1BhcnNlciwgZXZlbnQpO1xuICAgICAgcmV0dXJuIGV2ZW50O1xuICAgIH0pO1xuICB9XG59IE1vZHVsZU1ldGFkYXRhLl9faW5pdFN0YXRpYygpO1xuXG5leHBvcnQgeyBNb2R1bGVNZXRhZGF0YSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWV0YWRhdGEuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/metadata.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/metadata.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metadata.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addMetadataToStackFrames\": function() { return /* binding */ addMetadataToStackFrames; },\n/* harmony export */   \"getMetadataForUrl\": function() { return /* binding */ getMetadataForUrl; },\n/* harmony export */   \"stripMetadataFromStackFrames\": function() { return /* binding */ stripMetadataFromStackFrames; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n/** Keys are source filename/url, values are metadata objects. */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst filenameMetadataMap = new Map();\n/** Set of stack strings that have already been parsed. */\nconst parsedStacks = new Set();\n\nfunction ensureMetadataStacksAreParsed(parser) {\n  if (!_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ._sentryModuleMetadata) {\n    return;\n  }\n\n  for (const stack of Object.keys(_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ._sentryModuleMetadata)) {\n    const metadata = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ._sentryModuleMetadata[stack];\n\n    if (parsedStacks.has(stack)) {\n      continue;\n    }\n\n    // Ensure this stack doesn't get parsed again\n    parsedStacks.add(stack);\n\n    const frames = parser(stack);\n\n    // Go through the frames starting from the top of the stack and find the first one with a filename\n    for (const frame of frames.reverse()) {\n      if (frame.filename) {\n        // Save the metadata for this filename\n        filenameMetadataMap.set(frame.filename, metadata);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Retrieve metadata for a specific JavaScript file URL.\n *\n * Metadata is injected by the Sentry bundler plugins using the `_experiments.moduleMetadata` config option.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getMetadataForUrl(parser, filename) {\n  ensureMetadataStacksAreParsed(parser);\n  return filenameMetadataMap.get(filename);\n}\n\n/**\n * Adds metadata to stack frames.\n *\n * Metadata is injected by the Sentry bundler plugins using the `_experiments.moduleMetadata` config option.\n */\nfunction addMetadataToStackFrames(parser, event) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      if (!exception.stacktrace) {\n        return;\n      }\n\n      for (const frame of exception.stacktrace.frames || []) {\n        if (!frame.filename) {\n          continue;\n        }\n\n        const metadata = getMetadataForUrl(parser, frame.filename);\n\n        if (metadata) {\n          frame.module_metadata = metadata;\n        }\n      }\n    });\n  } catch (_) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Strips metadata from stack frames.\n */\nfunction stripMetadataFromStackFrames(event) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      if (!exception.stacktrace) {\n        return;\n      }\n\n      for (const frame of exception.stacktrace.frames || []) {\n        delete frame.module_metadata;\n      }\n    });\n  } catch (_) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n\n//# sourceMappingURL=metadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRhZGF0YS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTJDOztBQUUzQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTywyRUFBZ0M7QUFDdkM7QUFDQTs7QUFFQSxrQ0FBa0MsMkVBQWdDO0FBQ2xFLHFCQUFxQiwyRUFBZ0M7O0FBRXJEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVxRjtBQUNyRiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vbWV0YWRhdGEuanM/MDE5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHTE9CQUxfT0JKIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKiBLZXlzIGFyZSBzb3VyY2UgZmlsZW5hbWUvdXJsLCB2YWx1ZXMgYXJlIG1ldGFkYXRhIG9iamVjdHMuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuY29uc3QgZmlsZW5hbWVNZXRhZGF0YU1hcCA9IG5ldyBNYXAoKTtcbi8qKiBTZXQgb2Ygc3RhY2sgc3RyaW5ncyB0aGF0IGhhdmUgYWxyZWFkeSBiZWVuIHBhcnNlZC4gKi9cbmNvbnN0IHBhcnNlZFN0YWNrcyA9IG5ldyBTZXQoKTtcblxuZnVuY3Rpb24gZW5zdXJlTWV0YWRhdGFTdGFja3NBcmVQYXJzZWQocGFyc2VyKSB7XG4gIGlmICghR0xPQkFMX09CSi5fc2VudHJ5TW9kdWxlTWV0YWRhdGEpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBmb3IgKGNvbnN0IHN0YWNrIG9mIE9iamVjdC5rZXlzKEdMT0JBTF9PQkouX3NlbnRyeU1vZHVsZU1ldGFkYXRhKSkge1xuICAgIGNvbnN0IG1ldGFkYXRhID0gR0xPQkFMX09CSi5fc2VudHJ5TW9kdWxlTWV0YWRhdGFbc3RhY2tdO1xuXG4gICAgaWYgKHBhcnNlZFN0YWNrcy5oYXMoc3RhY2spKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBFbnN1cmUgdGhpcyBzdGFjayBkb2Vzbid0IGdldCBwYXJzZWQgYWdhaW5cbiAgICBwYXJzZWRTdGFja3MuYWRkKHN0YWNrKTtcblxuICAgIGNvbnN0IGZyYW1lcyA9IHBhcnNlcihzdGFjayk7XG5cbiAgICAvLyBHbyB0aHJvdWdoIHRoZSBmcmFtZXMgc3RhcnRpbmcgZnJvbSB0aGUgdG9wIG9mIHRoZSBzdGFjayBhbmQgZmluZCB0aGUgZmlyc3Qgb25lIHdpdGggYSBmaWxlbmFtZVxuICAgIGZvciAoY29uc3QgZnJhbWUgb2YgZnJhbWVzLnJldmVyc2UoKSkge1xuICAgICAgaWYgKGZyYW1lLmZpbGVuYW1lKSB7XG4gICAgICAgIC8vIFNhdmUgdGhlIG1ldGFkYXRhIGZvciB0aGlzIGZpbGVuYW1lXG4gICAgICAgIGZpbGVuYW1lTWV0YWRhdGFNYXAuc2V0KGZyYW1lLmZpbGVuYW1lLCBtZXRhZGF0YSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIFJldHJpZXZlIG1ldGFkYXRhIGZvciBhIHNwZWNpZmljIEphdmFTY3JpcHQgZmlsZSBVUkwuXG4gKlxuICogTWV0YWRhdGEgaXMgaW5qZWN0ZWQgYnkgdGhlIFNlbnRyeSBidW5kbGVyIHBsdWdpbnMgdXNpbmcgdGhlIGBfZXhwZXJpbWVudHMubW9kdWxlTWV0YWRhdGFgIGNvbmZpZyBvcHRpb24uXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5mdW5jdGlvbiBnZXRNZXRhZGF0YUZvclVybChwYXJzZXIsIGZpbGVuYW1lKSB7XG4gIGVuc3VyZU1ldGFkYXRhU3RhY2tzQXJlUGFyc2VkKHBhcnNlcik7XG4gIHJldHVybiBmaWxlbmFtZU1ldGFkYXRhTWFwLmdldChmaWxlbmFtZSk7XG59XG5cbi8qKlxuICogQWRkcyBtZXRhZGF0YSB0byBzdGFjayBmcmFtZXMuXG4gKlxuICogTWV0YWRhdGEgaXMgaW5qZWN0ZWQgYnkgdGhlIFNlbnRyeSBidW5kbGVyIHBsdWdpbnMgdXNpbmcgdGhlIGBfZXhwZXJpbWVudHMubW9kdWxlTWV0YWRhdGFgIGNvbmZpZyBvcHRpb24uXG4gKi9cbmZ1bmN0aW9uIGFkZE1ldGFkYXRhVG9TdGFja0ZyYW1lcyhwYXJzZXIsIGV2ZW50KSB7XG4gIHRyeSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cbiAgICBldmVudC5leGNlcHRpb24udmFsdWVzLmZvckVhY2goZXhjZXB0aW9uID0+IHtcbiAgICAgIGlmICghZXhjZXB0aW9uLnN0YWNrdHJhY2UpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGNvbnN0IGZyYW1lIG9mIGV4Y2VwdGlvbi5zdGFja3RyYWNlLmZyYW1lcyB8fCBbXSkge1xuICAgICAgICBpZiAoIWZyYW1lLmZpbGVuYW1lKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBtZXRhZGF0YSA9IGdldE1ldGFkYXRhRm9yVXJsKHBhcnNlciwgZnJhbWUuZmlsZW5hbWUpO1xuXG4gICAgICAgIGlmIChtZXRhZGF0YSkge1xuICAgICAgICAgIGZyYW1lLm1vZHVsZV9tZXRhZGF0YSA9IG1ldGFkYXRhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH0gY2F0Y2ggKF8pIHtcbiAgICAvLyBUbyBzYXZlIGJ1bmRsZSBzaXplIHdlJ3JlIGp1c3QgdHJ5IGNhdGNoaW5nIGhlcmUgaW5zdGVhZCBvZiBjaGVja2luZyBmb3IgdGhlIGV4aXN0ZW5jZSBvZiBhbGwgdGhlIGRpZmZlcmVudCBvYmplY3RzLlxuICB9XG59XG5cbi8qKlxuICogU3RyaXBzIG1ldGFkYXRhIGZyb20gc3RhY2sgZnJhbWVzLlxuICovXG5mdW5jdGlvbiBzdHJpcE1ldGFkYXRhRnJvbVN0YWNrRnJhbWVzKGV2ZW50KSB7XG4gIHRyeSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cbiAgICBldmVudC5leGNlcHRpb24udmFsdWVzLmZvckVhY2goZXhjZXB0aW9uID0+IHtcbiAgICAgIGlmICghZXhjZXB0aW9uLnN0YWNrdHJhY2UpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGNvbnN0IGZyYW1lIG9mIGV4Y2VwdGlvbi5zdGFja3RyYWNlLmZyYW1lcyB8fCBbXSkge1xuICAgICAgICBkZWxldGUgZnJhbWUubW9kdWxlX21ldGFkYXRhO1xuICAgICAgfVxuICAgIH0pO1xuICB9IGNhdGNoIChfKSB7XG4gICAgLy8gVG8gc2F2ZSBidW5kbGUgc2l6ZSB3ZSdyZSBqdXN0IHRyeSBjYXRjaGluZyBoZXJlIGluc3RlYWQgb2YgY2hlY2tpbmcgZm9yIHRoZSBleGlzdGVuY2Ugb2YgYWxsIHRoZSBkaWZmZXJlbnQgb2JqZWN0cy5cbiAgfVxufVxuXG5leHBvcnQgeyBhZGRNZXRhZGF0YVRvU3RhY2tGcmFtZXMsIGdldE1ldGFkYXRhRm9yVXJsLCBzdHJpcE1ldGFkYXRhRnJvbVN0YWNrRnJhbWVzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXRhZGF0YS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/metadata.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/scope.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/core/esm/scope.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Scope\": function() { return /* binding */ Scope; },\n/* harmony export */   \"addGlobalEventProcessor\": function() { return /* binding */ addGlobalEventProcessor; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./session.js */ \"./node_modules/@sentry/core/esm/session.js\");\n\n\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /** Propagation Context for distributed tracing */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /** Transaction Name */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n      newScope._sdkProcessingMetadata = { ...scope._sdkProcessingMetadata };\n      newScope._propagationContext = { ...scope._propagationContext };\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_0__.updateSession)(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n      if (captureContext._propagationContext) {\n        this._propagationContext = captureContext._propagationContext;\n      }\n    } else if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n      if (captureContext.propagationContext) {\n        this._propagationContext = captureContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dateTimestampInSeconds)(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transaction = this._span.transaction;\n      if (transaction) {\n        event.sdkProcessingMetadata = {\n          dynamicSamplingContext: transaction.getDynamicSamplingContext(),\n          ...event.sdkProcessingMetadata,\n        };\n        const transactionName = transaction.name;\n        if (transactionName) {\n          event.tags = { transaction: transactionName, ...event.tags };\n        }\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = {\n      ...event.sdkProcessingMetadata,\n      ...this._sdkProcessingMetadata,\n      propagationContext: this._propagationContext,\n    };\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setPropagationContext(context) {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getPropagationContext() {\n    return this._propagationContext;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.SyncPromise((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) ;\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          processor.id &&\n          result === null &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isThenable)(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.arrayify)(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.getGlobalSingleton)('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\nfunction generatePropagationContext() {\n  return {\n    traceId: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)(),\n    spanId: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)().substring(16),\n    sampled: false,\n  };\n}\n\n\n//# sourceMappingURL=scope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/scope.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/sdk.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/core/esm/sdk.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initAndBind\": function() { return /* binding */ initAndBind; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n\n\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      // eslint-disable-next-line no-console\n      console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n  const scope = hub.getScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  hub.bindClient(client);\n}\n\n\n//# sourceMappingURL=sdk.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZGsuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXVDO0FBQ0U7O0FBRXpDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSx3REFBYTtBQUNuQixNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsc0RBQWE7QUFDM0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZGsuanM/NDEwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGdldEN1cnJlbnRIdWIgfSBmcm9tICcuL2h1Yi5qcyc7XG5cbi8qKiBBIGNsYXNzIG9iamVjdCB0aGF0IGNhbiBpbnN0YW50aWF0ZSBDbGllbnQgb2JqZWN0cy4gKi9cblxuLyoqXG4gKiBJbnRlcm5hbCBmdW5jdGlvbiB0byBjcmVhdGUgYSBuZXcgU0RLIGNsaWVudCBpbnN0YW5jZS4gVGhlIGNsaWVudCBpc1xuICogaW5zdGFsbGVkIGFuZCB0aGVuIGJvdW5kIHRvIHRoZSBjdXJyZW50IHNjb3BlLlxuICpcbiAqIEBwYXJhbSBjbGllbnRDbGFzcyBUaGUgY2xpZW50IGNsYXNzIHRvIGluc3RhbnRpYXRlLlxuICogQHBhcmFtIG9wdGlvbnMgT3B0aW9ucyB0byBwYXNzIHRvIHRoZSBjbGllbnQuXG4gKi9cbmZ1bmN0aW9uIGluaXRBbmRCaW5kKFxuICBjbGllbnRDbGFzcyxcbiAgb3B0aW9ucyxcbikge1xuICBpZiAob3B0aW9ucy5kZWJ1ZyA9PT0gdHJ1ZSkge1xuICAgIGlmICgodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pKSB7XG4gICAgICBsb2dnZXIuZW5hYmxlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHVzZSBgY29uc29sZS53YXJuYCByYXRoZXIgdGhhbiBgbG9nZ2VyLndhcm5gIHNpbmNlIGJ5IG5vbi1kZWJ1ZyBidW5kbGVzIGhhdmUgYWxsIGBsb2dnZXIueGAgc3RhdGVtZW50cyBzdHJpcHBlZFxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUud2FybignW1NlbnRyeV0gQ2Fubm90IGluaXRpYWxpemUgU0RLIHdpdGggYGRlYnVnYCBvcHRpb24gdXNpbmcgYSBub24tZGVidWcgYnVuZGxlLicpO1xuICAgIH1cbiAgfVxuICBjb25zdCBodWIgPSBnZXRDdXJyZW50SHViKCk7XG4gIGNvbnN0IHNjb3BlID0gaHViLmdldFNjb3BlKCk7XG4gIHNjb3BlLnVwZGF0ZShvcHRpb25zLmluaXRpYWxTY29wZSk7XG5cbiAgY29uc3QgY2xpZW50ID0gbmV3IGNsaWVudENsYXNzKG9wdGlvbnMpO1xuICBodWIuYmluZENsaWVudChjbGllbnQpO1xufVxuXG5leHBvcnQgeyBpbml0QW5kQmluZCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2RrLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/sdk.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/session.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/session.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"closeSession\": function() { return /* binding */ closeSession; },\n/* harmony export */   \"makeSession\": function() { return /* binding */ makeSession; },\n/* harmony export */   \"updateSession\": function() { return /* binding */ updateSession; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n\n  const session = {\n    sid: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dropUndefinedKeys)({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\n\n//# sourceMappingURL=session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZXNzaW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE2RTs7QUFFN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsaUVBQWtCOztBQUV6QztBQUNBLFNBQVMsb0RBQUs7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDJDQUEyQyxpRUFBa0I7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsb0RBQUs7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixZQUFZO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLElBQUk7QUFDSixnQkFBZ0I7QUFDaEI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsZ0VBQWlCO0FBQzFCLFlBQVksWUFBWTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRkFBaUYsWUFBWTtBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVvRDtBQUNwRCIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vc2Vzc2lvbi5qcz9iZmZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHRpbWVzdGFtcEluU2Vjb25kcywgdXVpZDQsIGRyb3BVbmRlZmluZWRLZXlzIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBgU2Vzc2lvbmAgb2JqZWN0IGJ5IHNldHRpbmcgY2VydGFpbiBkZWZhdWx0IHBhcmFtZXRlcnMuIElmIG9wdGlvbmFsIEBwYXJhbSBjb250ZXh0XG4gKiBpcyBwYXNzZWQsIHRoZSBwYXNzZWQgcHJvcGVydGllcyBhcmUgYXBwbGllZCB0byB0aGUgc2Vzc2lvbiBvYmplY3QuXG4gKlxuICogQHBhcmFtIGNvbnRleHQgKG9wdGlvbmFsKSBhZGRpdGlvbmFsIHByb3BlcnRpZXMgdG8gYmUgYXBwbGllZCB0byB0aGUgcmV0dXJuZWQgc2Vzc2lvbiBvYmplY3RcbiAqXG4gKiBAcmV0dXJucyBhIG5ldyBgU2Vzc2lvbmAgb2JqZWN0XG4gKi9cbmZ1bmN0aW9uIG1ha2VTZXNzaW9uKGNvbnRleHQpIHtcbiAgLy8gQm90aCB0aW1lc3RhbXAgYW5kIHN0YXJ0ZWQgYXJlIGluIHNlY29uZHMgc2luY2UgdGhlIFVOSVggZXBvY2guXG4gIGNvbnN0IHN0YXJ0aW5nVGltZSA9IHRpbWVzdGFtcEluU2Vjb25kcygpO1xuXG4gIGNvbnN0IHNlc3Npb24gPSB7XG4gICAgc2lkOiB1dWlkNCgpLFxuICAgIGluaXQ6IHRydWUsXG4gICAgdGltZXN0YW1wOiBzdGFydGluZ1RpbWUsXG4gICAgc3RhcnRlZDogc3RhcnRpbmdUaW1lLFxuICAgIGR1cmF0aW9uOiAwLFxuICAgIHN0YXR1czogJ29rJyxcbiAgICBlcnJvcnM6IDAsXG4gICAgaWdub3JlRHVyYXRpb246IGZhbHNlLFxuICAgIHRvSlNPTjogKCkgPT4gc2Vzc2lvblRvSlNPTihzZXNzaW9uKSxcbiAgfTtcblxuICBpZiAoY29udGV4dCkge1xuICAgIHVwZGF0ZVNlc3Npb24oc2Vzc2lvbiwgY29udGV4dCk7XG4gIH1cblxuICByZXR1cm4gc2Vzc2lvbjtcbn1cblxuLyoqXG4gKiBVcGRhdGVzIGEgc2Vzc2lvbiBvYmplY3Qgd2l0aCB0aGUgcHJvcGVydGllcyBwYXNzZWQgaW4gdGhlIGNvbnRleHQuXG4gKlxuICogTm90ZSB0aGF0IHRoaXMgZnVuY3Rpb24gbXV0YXRlcyB0aGUgcGFzc2VkIG9iamVjdCBhbmQgcmV0dXJucyB2b2lkLlxuICogKEhhZCB0byBkbyB0aGlzIGluc3RlYWQgb2YgcmV0dXJuaW5nIGEgbmV3IGFuZCB1cGRhdGVkIHNlc3Npb24gYmVjYXVzZSBjbG9zaW5nIGFuZCBzZW5kaW5nIGEgc2Vzc2lvblxuICogbWFrZXMgYW4gdXBkYXRlIHRvIHRoZSBzZXNzaW9uIGFmdGVyIGl0IHdhcyBwYXNzZWQgdG8gdGhlIHNlbmRpbmcgbG9naWMuXG4gKiBAc2VlIEJhc2VDbGllbnQuY2FwdHVyZVNlc3Npb24gKVxuICpcbiAqIEBwYXJhbSBzZXNzaW9uIHRoZSBgU2Vzc2lvbmAgdG8gdXBkYXRlXG4gKiBAcGFyYW0gY29udGV4dCB0aGUgYFNlc3Npb25Db250ZXh0YCBob2xkaW5nIHRoZSBwcm9wZXJ0aWVzIHRoYXQgc2hvdWxkIGJlIHVwZGF0ZWQgaW4gQHBhcmFtIHNlc3Npb25cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbXBsZXhpdHlcbmZ1bmN0aW9uIHVwZGF0ZVNlc3Npb24oc2Vzc2lvbiwgY29udGV4dCA9IHt9KSB7XG4gIGlmIChjb250ZXh0LnVzZXIpIHtcbiAgICBpZiAoIXNlc3Npb24uaXBBZGRyZXNzICYmIGNvbnRleHQudXNlci5pcF9hZGRyZXNzKSB7XG4gICAgICBzZXNzaW9uLmlwQWRkcmVzcyA9IGNvbnRleHQudXNlci5pcF9hZGRyZXNzO1xuICAgIH1cblxuICAgIGlmICghc2Vzc2lvbi5kaWQgJiYgIWNvbnRleHQuZGlkKSB7XG4gICAgICBzZXNzaW9uLmRpZCA9IGNvbnRleHQudXNlci5pZCB8fCBjb250ZXh0LnVzZXIuZW1haWwgfHwgY29udGV4dC51c2VyLnVzZXJuYW1lO1xuICAgIH1cbiAgfVxuXG4gIHNlc3Npb24udGltZXN0YW1wID0gY29udGV4dC50aW1lc3RhbXAgfHwgdGltZXN0YW1wSW5TZWNvbmRzKCk7XG5cbiAgaWYgKGNvbnRleHQuaWdub3JlRHVyYXRpb24pIHtcbiAgICBzZXNzaW9uLmlnbm9yZUR1cmF0aW9uID0gY29udGV4dC5pZ25vcmVEdXJhdGlvbjtcbiAgfVxuICBpZiAoY29udGV4dC5zaWQpIHtcbiAgICAvLyBHb29kIGVub3VnaCB1dWlkIHZhbGlkYXRpb24uIOKAlCBLYW1pbFxuICAgIHNlc3Npb24uc2lkID0gY29udGV4dC5zaWQubGVuZ3RoID09PSAzMiA/IGNvbnRleHQuc2lkIDogdXVpZDQoKTtcbiAgfVxuICBpZiAoY29udGV4dC5pbml0ICE9PSB1bmRlZmluZWQpIHtcbiAgICBzZXNzaW9uLmluaXQgPSBjb250ZXh0LmluaXQ7XG4gIH1cbiAgaWYgKCFzZXNzaW9uLmRpZCAmJiBjb250ZXh0LmRpZCkge1xuICAgIHNlc3Npb24uZGlkID0gYCR7Y29udGV4dC5kaWR9YDtcbiAgfVxuICBpZiAodHlwZW9mIGNvbnRleHQuc3RhcnRlZCA9PT0gJ251bWJlcicpIHtcbiAgICBzZXNzaW9uLnN0YXJ0ZWQgPSBjb250ZXh0LnN0YXJ0ZWQ7XG4gIH1cbiAgaWYgKHNlc3Npb24uaWdub3JlRHVyYXRpb24pIHtcbiAgICBzZXNzaW9uLmR1cmF0aW9uID0gdW5kZWZpbmVkO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBjb250ZXh0LmR1cmF0aW9uID09PSAnbnVtYmVyJykge1xuICAgIHNlc3Npb24uZHVyYXRpb24gPSBjb250ZXh0LmR1cmF0aW9uO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGR1cmF0aW9uID0gc2Vzc2lvbi50aW1lc3RhbXAgLSBzZXNzaW9uLnN0YXJ0ZWQ7XG4gICAgc2Vzc2lvbi5kdXJhdGlvbiA9IGR1cmF0aW9uID49IDAgPyBkdXJhdGlvbiA6IDA7XG4gIH1cbiAgaWYgKGNvbnRleHQucmVsZWFzZSkge1xuICAgIHNlc3Npb24ucmVsZWFzZSA9IGNvbnRleHQucmVsZWFzZTtcbiAgfVxuICBpZiAoY29udGV4dC5lbnZpcm9ubWVudCkge1xuICAgIHNlc3Npb24uZW52aXJvbm1lbnQgPSBjb250ZXh0LmVudmlyb25tZW50O1xuICB9XG4gIGlmICghc2Vzc2lvbi5pcEFkZHJlc3MgJiYgY29udGV4dC5pcEFkZHJlc3MpIHtcbiAgICBzZXNzaW9uLmlwQWRkcmVzcyA9IGNvbnRleHQuaXBBZGRyZXNzO1xuICB9XG4gIGlmICghc2Vzc2lvbi51c2VyQWdlbnQgJiYgY29udGV4dC51c2VyQWdlbnQpIHtcbiAgICBzZXNzaW9uLnVzZXJBZ2VudCA9IGNvbnRleHQudXNlckFnZW50O1xuICB9XG4gIGlmICh0eXBlb2YgY29udGV4dC5lcnJvcnMgPT09ICdudW1iZXInKSB7XG4gICAgc2Vzc2lvbi5lcnJvcnMgPSBjb250ZXh0LmVycm9ycztcbiAgfVxuICBpZiAoY29udGV4dC5zdGF0dXMpIHtcbiAgICBzZXNzaW9uLnN0YXR1cyA9IGNvbnRleHQuc3RhdHVzO1xuICB9XG59XG5cbi8qKlxuICogQ2xvc2VzIGEgc2Vzc2lvbiBieSBzZXR0aW5nIGl0cyBzdGF0dXMgYW5kIHVwZGF0aW5nIHRoZSBzZXNzaW9uIG9iamVjdCB3aXRoIGl0LlxuICogSW50ZXJuYWxseSBjYWxscyBgdXBkYXRlU2Vzc2lvbmAgdG8gdXBkYXRlIHRoZSBwYXNzZWQgc2Vzc2lvbiBvYmplY3QuXG4gKlxuICogTm90ZSB0aGF0IHRoaXMgZnVuY3Rpb24gbXV0YXRlcyB0aGUgcGFzc2VkIHNlc3Npb24gKEBzZWUgdXBkYXRlU2Vzc2lvbiBmb3IgZXhwbGFuYXRpb24pLlxuICpcbiAqIEBwYXJhbSBzZXNzaW9uIHRoZSBgU2Vzc2lvbmAgb2JqZWN0IHRvIGJlIGNsb3NlZFxuICogQHBhcmFtIHN0YXR1cyB0aGUgYFNlc3Npb25TdGF0dXNgIHdpdGggd2hpY2ggdGhlIHNlc3Npb24gd2FzIGNsb3NlZC4gSWYgeW91IGRvbid0IHBhc3MgYSBzdGF0dXMsXG4gKiAgICAgICAgICAgICAgIHRoaXMgZnVuY3Rpb24gd2lsbCBrZWVwIHRoZSBwcmV2aW91c2x5IHNldCBzdGF0dXMsIHVubGVzcyBpdCB3YXMgYCdvaydgIGluIHdoaWNoIGNhc2VcbiAqICAgICAgICAgICAgICAgaXQgaXMgY2hhbmdlZCB0byBgJ2V4aXRlZCdgLlxuICovXG5mdW5jdGlvbiBjbG9zZVNlc3Npb24oc2Vzc2lvbiwgc3RhdHVzKSB7XG4gIGxldCBjb250ZXh0ID0ge307XG4gIGlmIChzdGF0dXMpIHtcbiAgICBjb250ZXh0ID0geyBzdGF0dXMgfTtcbiAgfSBlbHNlIGlmIChzZXNzaW9uLnN0YXR1cyA9PT0gJ29rJykge1xuICAgIGNvbnRleHQgPSB7IHN0YXR1czogJ2V4aXRlZCcgfTtcbiAgfVxuXG4gIHVwZGF0ZVNlc3Npb24oc2Vzc2lvbiwgY29udGV4dCk7XG59XG5cbi8qKlxuICogU2VyaWFsaXplcyBhIHBhc3NlZCBzZXNzaW9uIG9iamVjdCB0byBhIEpTT04gb2JqZWN0IHdpdGggYSBzbGlnaHRseSBkaWZmZXJlbnQgc3RydWN0dXJlLlxuICogVGhpcyBpcyBuZWNlc3NhcnkgYmVjYXVzZSB0aGUgU2VudHJ5IGJhY2tlbmQgcmVxdWlyZXMgYSBzbGlnaHRseSBkaWZmZXJlbnQgc2NoZW1hIG9mIGEgc2Vzc2lvblxuICogdGhhbiB0aGUgb25lIHRoZSBKUyBTREtzIHVzZSBpbnRlcm5hbGx5LlxuICpcbiAqIEBwYXJhbSBzZXNzaW9uIHRoZSBzZXNzaW9uIHRvIGJlIGNvbnZlcnRlZFxuICpcbiAqIEByZXR1cm5zIGEgSlNPTiBvYmplY3Qgb2YgdGhlIHBhc3NlZCBzZXNzaW9uXG4gKi9cbmZ1bmN0aW9uIHNlc3Npb25Ub0pTT04oc2Vzc2lvbikge1xuICByZXR1cm4gZHJvcFVuZGVmaW5lZEtleXMoe1xuICAgIHNpZDogYCR7c2Vzc2lvbi5zaWR9YCxcbiAgICBpbml0OiBzZXNzaW9uLmluaXQsXG4gICAgLy8gTWFrZSBzdXJlIHRoYXQgc2VjIGlzIGNvbnZlcnRlZCB0byBtcyBmb3IgZGF0ZSBjb25zdHJ1Y3RvclxuICAgIHN0YXJ0ZWQ6IG5ldyBEYXRlKHNlc3Npb24uc3RhcnRlZCAqIDEwMDApLnRvSVNPU3RyaW5nKCksXG4gICAgdGltZXN0YW1wOiBuZXcgRGF0ZShzZXNzaW9uLnRpbWVzdGFtcCAqIDEwMDApLnRvSVNPU3RyaW5nKCksXG4gICAgc3RhdHVzOiBzZXNzaW9uLnN0YXR1cyxcbiAgICBlcnJvcnM6IHNlc3Npb24uZXJyb3JzLFxuICAgIGRpZDogdHlwZW9mIHNlc3Npb24uZGlkID09PSAnbnVtYmVyJyB8fCB0eXBlb2Ygc2Vzc2lvbi5kaWQgPT09ICdzdHJpbmcnID8gYCR7c2Vzc2lvbi5kaWR9YCA6IHVuZGVmaW5lZCxcbiAgICBkdXJhdGlvbjogc2Vzc2lvbi5kdXJhdGlvbixcbiAgICBhdHRyczoge1xuICAgICAgcmVsZWFzZTogc2Vzc2lvbi5yZWxlYXNlLFxuICAgICAgZW52aXJvbm1lbnQ6IHNlc3Npb24uZW52aXJvbm1lbnQsXG4gICAgICBpcF9hZGRyZXNzOiBzZXNzaW9uLmlwQWRkcmVzcyxcbiAgICAgIHVzZXJfYWdlbnQ6IHNlc3Npb24udXNlckFnZW50LFxuICAgIH0sXG4gIH0pO1xufVxuXG5leHBvcnQgeyBjbG9zZVNlc3Npb24sIG1ha2VTZXNzaW9uLCB1cGRhdGVTZXNzaW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXNzaW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/session.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getDynamicSamplingContextFromClient\": function() { return /* binding */ getDynamicSamplingContextFromClient; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@sentry/core/esm/constants.js\");\n\n\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatchs the `createDsc` lifecycle hook as a side effect.\n */\nfunction getDynamicSamplingContextFromClient(\n  trace_id,\n  client,\n  scope,\n) {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n    environment: options.environment || _constants_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) ;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n\n//# sourceMappingURL=dynamicSamplingContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL2R5bmFtaWNTYW1wbGluZ0NvbnRleHQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtEO0FBQ0k7O0FBRXREO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsVUFBVSx3QkFBd0I7QUFDbEMsVUFBVSx3QkFBd0I7O0FBRWxDLGNBQWMsZ0VBQWlCO0FBQy9CLHdDQUF3Qyw4REFBbUI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIOztBQUVBO0FBQ0E7O0FBRStDO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL2R5bmFtaWNTYW1wbGluZ0NvbnRleHQuanM/ZGZmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkcm9wVW5kZWZpbmVkS2V5cyB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgREVGQVVMVF9FTlZJUk9OTUVOVCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGR5bmFtaWMgc2FtcGxpbmcgY29udGV4dCBmcm9tIGEgY2xpZW50LlxuICpcbiAqIERpc3BhdGNocyB0aGUgYGNyZWF0ZURzY2AgbGlmZWN5Y2xlIGhvb2sgYXMgYSBzaWRlIGVmZmVjdC5cbiAqL1xuZnVuY3Rpb24gZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dEZyb21DbGllbnQoXG4gIHRyYWNlX2lkLFxuICBjbGllbnQsXG4gIHNjb3BlLFxuKSB7XG4gIGNvbnN0IG9wdGlvbnMgPSBjbGllbnQuZ2V0T3B0aW9ucygpO1xuXG4gIGNvbnN0IHsgcHVibGljS2V5OiBwdWJsaWNfa2V5IH0gPSBjbGllbnQuZ2V0RHNuKCkgfHwge307XG4gIGNvbnN0IHsgc2VnbWVudDogdXNlcl9zZWdtZW50IH0gPSAoc2NvcGUgJiYgc2NvcGUuZ2V0VXNlcigpKSB8fCB7fTtcblxuICBjb25zdCBkc2MgPSBkcm9wVW5kZWZpbmVkS2V5cyh7XG4gICAgZW52aXJvbm1lbnQ6IG9wdGlvbnMuZW52aXJvbm1lbnQgfHwgREVGQVVMVF9FTlZJUk9OTUVOVCxcbiAgICByZWxlYXNlOiBvcHRpb25zLnJlbGVhc2UsXG4gICAgdXNlcl9zZWdtZW50LFxuICAgIHB1YmxpY19rZXksXG4gICAgdHJhY2VfaWQsXG4gIH0pIDtcblxuICBjbGllbnQuZW1pdCAmJiBjbGllbnQuZW1pdCgnY3JlYXRlRHNjJywgZHNjKTtcblxuICByZXR1cm4gZHNjO1xufVxuXG5leHBvcnQgeyBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbUNsaWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZHluYW1pY1NhbXBsaW5nQ29udGV4dC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/errors.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/errors.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"registerErrorInstrumentation\": function() { return /* binding */ registerErrorInstrumentation; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/instrument.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry/core/esm/tracing/utils.js\");\n\n\n\nlet errorsInstrumented = false;\n\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('error', errorCallback);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('unhandledrejection', errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n  const activeTransaction = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getActiveTransaction)();\n  if (activeTransaction) {\n    const status = 'internal_error';\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n\n\n//# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL2Vycm9ycy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWtFO0FBQ2hCOztBQUVsRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEVBQUUsd0VBQXlCO0FBQzNCLEVBQUUsd0VBQXlCO0FBQzNCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLCtEQUFvQjtBQUNoRDtBQUNBO0FBQ0EscUVBQXFFLHFEQUFVLDJCQUEyQixRQUFRO0FBQ2xIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRXdDO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL2Vycm9ycy5qcz82ZTZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZEluc3RydW1lbnRhdGlvbkhhbmRsZXIsIGxvZ2dlciB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZ2V0QWN0aXZlVHJhbnNhY3Rpb24gfSBmcm9tICcuL3V0aWxzLmpzJztcblxubGV0IGVycm9yc0luc3RydW1lbnRlZCA9IGZhbHNlO1xuXG4vKipcbiAqIENvbmZpZ3VyZXMgZ2xvYmFsIGVycm9yIGxpc3RlbmVyc1xuICovXG5mdW5jdGlvbiByZWdpc3RlckVycm9ySW5zdHJ1bWVudGF0aW9uKCkge1xuICBpZiAoZXJyb3JzSW5zdHJ1bWVudGVkKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgZXJyb3JzSW5zdHJ1bWVudGVkID0gdHJ1ZTtcbiAgYWRkSW5zdHJ1bWVudGF0aW9uSGFuZGxlcignZXJyb3InLCBlcnJvckNhbGxiYWNrKTtcbiAgYWRkSW5zdHJ1bWVudGF0aW9uSGFuZGxlcigndW5oYW5kbGVkcmVqZWN0aW9uJywgZXJyb3JDYWxsYmFjayk7XG59XG5cbi8qKlxuICogSWYgYW4gZXJyb3Igb3IgdW5oYW5kbGVkIHByb21pc2Ugb2NjdXJzLCB3ZSBtYXJrIHRoZSBhY3RpdmUgdHJhbnNhY3Rpb24gYXMgZmFpbGVkXG4gKi9cbmZ1bmN0aW9uIGVycm9yQ2FsbGJhY2soKSB7XG4gIGNvbnN0IGFjdGl2ZVRyYW5zYWN0aW9uID0gZ2V0QWN0aXZlVHJhbnNhY3Rpb24oKTtcbiAgaWYgKGFjdGl2ZVRyYW5zYWN0aW9uKSB7XG4gICAgY29uc3Qgc3RhdHVzID0gJ2ludGVybmFsX2Vycm9yJztcbiAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5sb2coYFtUcmFjaW5nXSBUcmFuc2FjdGlvbjogJHtzdGF0dXN9IC0+IEdsb2JhbCBlcnJvciBvY2N1cmVkYCk7XG4gICAgYWN0aXZlVHJhbnNhY3Rpb24uc2V0U3RhdHVzKHN0YXR1cyk7XG4gIH1cbn1cblxuLy8gVGhlIGZ1bmN0aW9uIG5hbWUgd2lsbCBiZSBsb3N0IHdoZW4gYnVuZGxpbmcgYnV0IHdlIG5lZWQgdG8gYmUgYWJsZSB0byBpZGVudGlmeSB0aGlzIGxpc3RlbmVyIGxhdGVyIHRvIG1haW50YWluIHRoZVxuLy8gbm9kZS5qcyBkZWZhdWx0IGV4aXQgYmVoYXZpb3VyXG5lcnJvckNhbGxiYWNrLnRhZyA9ICdzZW50cnlfdHJhY2luZ0Vycm9yQ2FsbGJhY2snO1xuXG5leHBvcnQgeyByZWdpc3RlckVycm9ySW5zdHJ1bWVudGF0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/errors.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/hubextensions.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/hubextensions.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addTracingExtensions\": function() { return /* binding */ addTracingExtensions; },\n/* harmony export */   \"startIdleTransaction\": function() { return /* binding */ startIdleTransaction; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/hasTracingEnabled.js */ \"./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/@sentry/core/esm/tracing/errors.js\");\n/* harmony import */ var _idletransaction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./idletransaction.js */ \"./node_modules/@sentry/core/esm/tracing/idletransaction.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transaction.js */ \"./node_modules/@sentry/core/esm/tracing/transaction.js\");\n\n\n\n\n\n\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n  const scope = this.getScope();\n  const span = scope.getSpan();\n\n  return span\n    ? {\n        'sentry-trace': span.toTraceparent(),\n      }\n    : {};\n}\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param transaction: The transaction needing a sampling decision\n * @param options: The current client's options, so we can access `tracesSampleRate` and/or `tracesSampler`\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample(\n  transaction,\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!(0,_utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_0__.hasTracingEnabled)(options)) {\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  if (transaction.sampled !== undefined) {\n    transaction.setMetadata({\n      sampleRate: Number(transaction.sampled),\n    });\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n    transaction.setMetadata({\n      sampleRate,\n    });\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  transaction.sampled = Math.random() < (sampleRate );\n\n  // if we're not going to keep it, we're done\n  if (!transaction.sampled) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[Tracing] starting ${transaction.op} transaction - ${transaction.name}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isNaN)(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n\n  transactionContext,\n  customSamplingContext,\n) {\n  const client = this.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    transactionContext.sampled = false;\n  }\n\n  let transaction = new _transaction_js__WEBPACK_IMPORTED_MODULE_3__.Transaction(transactionContext, this);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n  heartbeatInterval,\n) {\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  let transaction = new _idletransaction_js__WEBPACK_IMPORTED_MODULE_4__.IdleTransaction(transactionContext, hub, idleTimeout, finalTimeout, heartbeatInterval, onScope);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nfunction addTracingExtensions() {\n  const carrier = (0,_hub_js__WEBPACK_IMPORTED_MODULE_5__.getMainCarrier)();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n\n  (0,_errors_js__WEBPACK_IMPORTED_MODULE_6__.registerErrorInstrumentation)();\n}\n\n\n//# sourceMappingURL=hubextensions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/hubextensions.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/idletransaction.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/idletransaction.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IdleTransaction\": function() { return /* binding */ IdleTransaction; },\n/* harmony export */   \"IdleTransactionSpanRecorder\": function() { return /* binding */ IdleTransactionSpanRecorder; },\n/* harmony export */   \"TRACING_DEFAULTS\": function() { return /* binding */ TRACING_DEFAULTS; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _span_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./span.js */ \"./node_modules/@sentry/core/esm/tracing/span.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transaction.js */ \"./node_modules/@sentry/core/esm/tracing/transaction.js\");\n\n\n\n\nconst TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  heartbeatInterval: 5000,\n};\n\nconst FINISH_REASON_TAG = 'finishReason';\n\nconst IDLE_TRANSACTION_FINISH_REASONS = [\n  'heartbeatFailed',\n  'idleTimeout',\n  'documentHidden',\n  'finalTimeout',\n  'externalFinish',\n  'cancelled',\n];\n\n/**\n * @inheritDoc\n */\nclass IdleTransactionSpanRecorder extends _span_js__WEBPACK_IMPORTED_MODULE_0__.SpanRecorder {\n   constructor(\n      _pushActivity,\n      _popActivity,\n     transactionSpanId,\n    maxlen,\n  ) {\n    super(maxlen);this._pushActivity = _pushActivity;this._popActivity = _popActivity;this.transactionSpanId = transactionSpanId;  }\n\n  /**\n   * @inheritDoc\n   */\n   add(span) {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanId !== this.transactionSpanId) {\n      // We patch span.finish() to pop an activity after setting an endTimestamp.\n      span.finish = (endTimestamp) => {\n        span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)();\n        this._popActivity(span.spanId);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (span.endTimestamp === undefined) {\n        this._pushActivity(span.spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nclass IdleTransaction extends _transaction_js__WEBPACK_IMPORTED_MODULE_2__.Transaction {\n  // Activities store a list of active spans\n   __init() {this.activities = {};}\n\n  // Track state of activities in previous heartbeat\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n   __init2() {this._heartbeatCounter = 0;}\n\n  // We should not use heartbeat if we finished a transaction\n   __init3() {this._finished = false;}\n\n  // Idle timeout was canceled and we should finish the transaction with the last span end.\n   __init4() {this._idleTimeoutCanceledPermanently = false;}\n\n    __init5() {this._beforeFinishCallbacks = [];}\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n\n   __init6() {this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[4];}\n\n   constructor(\n    transactionContext,\n      _idleHub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n      _idleTimeout = TRACING_DEFAULTS.idleTimeout,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n      _finalTimeout = TRACING_DEFAULTS.finalTimeout,\n      _heartbeatInterval = TRACING_DEFAULTS.heartbeatInterval,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n      _onScope = false,\n  ) {\n    super(transactionContext, _idleHub);this._idleHub = _idleHub;this._idleTimeout = _idleTimeout;this._finalTimeout = _finalTimeout;this._heartbeatInterval = _heartbeatInterval;this._onScope = _onScope;IdleTransaction.prototype.__init.call(this);IdleTransaction.prototype.__init2.call(this);IdleTransaction.prototype.__init3.call(this);IdleTransaction.prototype.__init4.call(this);IdleTransaction.prototype.__init5.call(this);IdleTransaction.prototype.__init6.call(this);\n    if (_onScope) {\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`);\n      _idleHub.configureScope(scope => scope.setSpan(this));\n    }\n\n    this._restartIdleTimeout();\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[3];\n        this.finish();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n   finish(endTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)()) {\n    this._finished = true;\n    this.activities = {};\n\n    if (this.op === 'ui.action.click') {\n      this.setTag(FINISH_REASON_TAG, this._finishReason);\n    }\n\n    if (this.spanRecorder) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n\n      for (const callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestamp);\n      }\n\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanId === this.spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!span.endTimestamp) {\n          span.endTimestamp = endTimestamp;\n          span.setStatus('cancelled');\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        const keepSpan = span.startTimestamp < endTimestamp;\n        if (!keepSpan) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(\n              '[Tracing] discarding Span since it happened after Transaction was finished',\n              JSON.stringify(span, undefined, 2),\n            );\n        }\n        return keepSpan;\n      });\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      const scope = this._idleHub.getScope();\n      if (scope.getTransaction() === this) {\n        scope.setSpan(undefined);\n      }\n    }\n\n    return super.finish(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets excecuted before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n   registerBeforeFinishCallback(callback) {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   initSpanRecorder(maxlen) {\n    if (!this.spanRecorder) {\n      const pushActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      const popActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   * @param restartOnChildSpanChange Default is `true`.\n   *                                 If set to false the transaction will end\n   *                                 with the last child span.\n   */\n   cancelIdleTimeout(\n    endTimestamp,\n    {\n      restartOnChildSpanChange,\n    }\n\n = {\n      restartOnChildSpanChange: true,\n    },\n  ) {\n    this._idleTimeoutCanceledPermanently = restartOnChildSpanChange === false;\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n\n      if (Object.keys(this.activities).length === 0 && this._idleTimeoutCanceledPermanently) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n        this.finish(endTimestamp);\n      }\n    }\n  }\n\n  /**\n   * Temporary method used to externally set the transaction's `finishReason`\n   *\n   * ** WARNING**\n   * This is for the purpose of experimentation only and will be removed in the near future, do not use!\n   *\n   * @internal\n   *\n   */\n   setFinishReason(reason) {\n    this._finishReason = reason;\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n   _restartIdleTimeout(endTimestamp) {\n    this.cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[1];\n        this.finish(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n   _pushActivity(spanId) {\n    this.cancelIdleTimeout(undefined, { restartOnChildSpanChange: !this._idleTimeoutCanceledPermanently });\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n   _popActivity(spanId) {\n    if (this.activities[spanId]) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      const endTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)();\n      if (this._idleTimeoutCanceledPermanently) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n        this.finish(endTimestamp);\n      } else {\n        // We need to add the timeout here to have the real endtimestamp of the transaction\n        // Remember timestampInSeconds is in seconds, timeout is in ms\n        this._restartIdleTimeout(endTimestamp + this._idleTimeout / 1000);\n      }\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n   _beat() {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    const heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter++;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n      this.setStatus('deadline_exceeded');\n      this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[0];\n      this.finish();\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n   _pingHeartbeat() {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, this._heartbeatInterval);\n  }\n}\n\n\n//# sourceMappingURL=idletransaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/idletransaction.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/span.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/span.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Span\": function() { return /* binding */ Span; },\n/* harmony export */   \"SpanRecorder\": function() { return /* binding */ SpanRecorder; },\n/* harmony export */   \"spanStatusfromHttpCode\": function() { return /* binding */ spanStatusfromHttpCode; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nclass SpanRecorder {\n   __init() {this.spans = [];}\n\n   constructor(maxlen = 1000) {SpanRecorder.prototype.__init.call(this);\n    this._maxlen = maxlen;\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n   add(span) {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nclass Span  {\n  /**\n   * @inheritDoc\n   */\n   __init2() {this.traceId = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();}\n\n  /**\n   * @inheritDoc\n   */\n   __init3() {this.spanId = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)().substring(16);}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Internal keeper of the status\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n   __init4() {this.startTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)();}\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   __init5() {this.tags = {};}\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   __init6() {this.data = {};}\n\n  /**\n   * List of spans that were finalized\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * The instrumenter that created this span.\n   */\n   __init7() {this.instrumenter = 'sentry';}\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext) {Span.prototype.__init2.call(this);Span.prototype.__init3.call(this);Span.prototype.__init4.call(this);Span.prototype.__init5.call(this);Span.prototype.__init6.call(this);Span.prototype.__init7.call(this);\n    if (!spanContext) {\n      return this;\n    }\n    if (spanContext.traceId) {\n      this.traceId = spanContext.traceId;\n    }\n    if (spanContext.spanId) {\n      this.spanId = spanContext.spanId;\n    }\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.data) {\n      this.data = spanContext.data;\n    }\n    if (spanContext.tags) {\n      this.tags = spanContext.tags;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.startTimestamp) {\n      this.startTimestamp = spanContext.startTimestamp;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n    if (spanContext.instrumenter) {\n      this.instrumenter = spanContext.instrumenter;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startChild(\n    spanContext,\n  ) {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && childSpan.transaction) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = childSpan.transaction.name || '< unknown name >';\n      const idStr = childSpan.transaction.spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      childSpan.transaction.metadata.spanMetadata[childSpan.spanId] = { logMessage };\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(logMessage);\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   setData(key, value) {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setHttpStatus(httpStatus) {\n    this.setTag('http.status_code', String(httpStatus));\n    this.setData('http.response.status_code', httpStatus);\n    const spanStatus = spanStatusfromHttpCode(httpStatus);\n    if (spanStatus !== 'unknown_error') {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isSuccess() {\n    return this.status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    if (\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      // Don't call this for transactions\n      this.transaction &&\n      this.transaction.spanId !== this.spanId\n    ) {\n      const { logMessage } = this.transaction.metadata.spanMetadata[this.spanId];\n      if (logMessage) {\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log((logMessage ).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toTraceparent() {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.generateSentryTraceHeader)(this.traceId, this.spanId, this.sampled);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.dropUndefinedKeys)({\n      data: this.data,\n      description: this.description,\n      endTimestamp: this.endTimestamp,\n      op: this.op,\n      parentSpanId: this.parentSpanId,\n      sampled: this.sampled,\n      spanId: this.spanId,\n      startTimestamp: this.startTimestamp,\n      status: this.status,\n      tags: this.tags,\n      traceId: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(spanContext) {\n    this.data = spanContext.data || {};\n    this.description = spanContext.description;\n    this.endTimestamp = spanContext.endTimestamp;\n    this.op = spanContext.op;\n    this.parentSpanId = spanContext.parentSpanId;\n    this.sampled = spanContext.sampled;\n    this.spanId = spanContext.spanId || this.spanId;\n    this.startTimestamp = spanContext.startTimestamp || this.startTimestamp;\n    this.status = spanContext.status;\n    this.tags = spanContext.tags || {};\n    this.traceId = spanContext.traceId || this.traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTraceContext() {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.dropUndefinedKeys)({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toJSON()\n\n {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.dropUndefinedKeys)({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n    });\n  }\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nfunction spanStatusfromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\n\n//# sourceMappingURL=span.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/span.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/trace.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/trace.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"trace\": function() { return /* binding */ trace; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/hasTracingEnabled.js */ \"./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n\n\n\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n *\n * This function is meant to be used internally and may break at any time. Use at your own risk.\n *\n * @internal\n * @private\n */\nfunction trace(\n  context,\n  callback,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onError = () => {},\n) {\n  const ctx = { ...context };\n  // If a name is set and a description is not, set the description to the name.\n  if (ctx.name !== undefined && ctx.description === undefined) {\n    ctx.description = ctx.name;\n  }\n\n  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n  const scope = hub.getScope();\n\n  const parentSpan = scope.getSpan();\n\n  function getActiveSpan() {\n    if (!(0,_utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_1__.hasTracingEnabled)()) {\n      return undefined;\n    }\n    return parentSpan ? parentSpan.startChild(ctx) : hub.startTransaction(ctx);\n  }\n\n  const activeSpan = getActiveSpan();\n  scope.setSpan(activeSpan);\n\n  function finishAndSetSpan() {\n    activeSpan && activeSpan.finish();\n    hub.getScope().setSpan(parentSpan);\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback(activeSpan);\n  } catch (e) {\n    activeSpan && activeSpan.setStatus('internal_error');\n    onError(e);\n    finishAndSetSpan();\n    throw e;\n  }\n\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isThenable)(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishAndSetSpan();\n      },\n      e => {\n        activeSpan && activeSpan.setStatus('internal_error');\n        onError(e);\n        finishAndSetSpan();\n      },\n    );\n  } else {\n    finishAndSetSpan();\n  }\n\n  return maybePromiseResult;\n}\n\n\n//# sourceMappingURL=trace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL3RyYWNlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkM7QUFDRDtBQUN3Qjs7QUFFbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYyxzREFBYTtBQUMzQjs7QUFFQTs7QUFFQTtBQUNBLFNBQVMsOEVBQWlCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTSx5REFBVTtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVpQjtBQUNqQiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdHJhY2luZy90cmFjZS5qcz8xNDYzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzVGhlbmFibGUgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGdldEN1cnJlbnRIdWIgfSBmcm9tICcuLi9odWIuanMnO1xuaW1wb3J0IHsgaGFzVHJhY2luZ0VuYWJsZWQgfSBmcm9tICcuLi91dGlscy9oYXNUcmFjaW5nRW5hYmxlZC5qcyc7XG5cbi8qKlxuICogV3JhcHMgYSBmdW5jdGlvbiB3aXRoIGEgdHJhbnNhY3Rpb24vc3BhbiBhbmQgZmluaXNoZXMgdGhlIHNwYW4gYWZ0ZXIgdGhlIGZ1bmN0aW9uIGlzIGRvbmUuXG4gKlxuICogTm90ZSB0aGF0IGlmIHlvdSBoYXZlIG5vdCBlbmFibGVkIHRyYWNpbmcgZXh0ZW5zaW9ucyB2aWEgYGFkZFRyYWNpbmdFeHRlbnNpb25zYFxuICogb3IgeW91IGRpZG4ndCBzZXQgYHRyYWNlc1NhbXBsZVJhdGVgLCB0aGlzIGZ1bmN0aW9uIHdpbGwgbm90IGdlbmVyYXRlIHNwYW5zXG4gKiBhbmQgdGhlIGBzcGFuYCByZXR1cm5lZCBmcm9tIHRoZSBjYWxsYmFjayB3aWxsIGJlIHVuZGVmaW5lZC5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGlzIG1lYW50IHRvIGJlIHVzZWQgaW50ZXJuYWxseSBhbmQgbWF5IGJyZWFrIGF0IGFueSB0aW1lLiBVc2UgYXQgeW91ciBvd24gcmlzay5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHRyYWNlKFxuICBjb250ZXh0LFxuICBjYWxsYmFjayxcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1mdW5jdGlvblxuICBvbkVycm9yID0gKCkgPT4ge30sXG4pIHtcbiAgY29uc3QgY3R4ID0geyAuLi5jb250ZXh0IH07XG4gIC8vIElmIGEgbmFtZSBpcyBzZXQgYW5kIGEgZGVzY3JpcHRpb24gaXMgbm90LCBzZXQgdGhlIGRlc2NyaXB0aW9uIHRvIHRoZSBuYW1lLlxuICBpZiAoY3R4Lm5hbWUgIT09IHVuZGVmaW5lZCAmJiBjdHguZGVzY3JpcHRpb24gPT09IHVuZGVmaW5lZCkge1xuICAgIGN0eC5kZXNjcmlwdGlvbiA9IGN0eC5uYW1lO1xuICB9XG5cbiAgY29uc3QgaHViID0gZ2V0Q3VycmVudEh1YigpO1xuICBjb25zdCBzY29wZSA9IGh1Yi5nZXRTY29wZSgpO1xuXG4gIGNvbnN0IHBhcmVudFNwYW4gPSBzY29wZS5nZXRTcGFuKCk7XG5cbiAgZnVuY3Rpb24gZ2V0QWN0aXZlU3BhbigpIHtcbiAgICBpZiAoIWhhc1RyYWNpbmdFbmFibGVkKCkpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiBwYXJlbnRTcGFuID8gcGFyZW50U3Bhbi5zdGFydENoaWxkKGN0eCkgOiBodWIuc3RhcnRUcmFuc2FjdGlvbihjdHgpO1xuICB9XG5cbiAgY29uc3QgYWN0aXZlU3BhbiA9IGdldEFjdGl2ZVNwYW4oKTtcbiAgc2NvcGUuc2V0U3BhbihhY3RpdmVTcGFuKTtcblxuICBmdW5jdGlvbiBmaW5pc2hBbmRTZXRTcGFuKCkge1xuICAgIGFjdGl2ZVNwYW4gJiYgYWN0aXZlU3Bhbi5maW5pc2goKTtcbiAgICBodWIuZ2V0U2NvcGUoKS5zZXRTcGFuKHBhcmVudFNwYW4pO1xuICB9XG5cbiAgbGV0IG1heWJlUHJvbWlzZVJlc3VsdDtcbiAgdHJ5IHtcbiAgICBtYXliZVByb21pc2VSZXN1bHQgPSBjYWxsYmFjayhhY3RpdmVTcGFuKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGFjdGl2ZVNwYW4gJiYgYWN0aXZlU3Bhbi5zZXRTdGF0dXMoJ2ludGVybmFsX2Vycm9yJyk7XG4gICAgb25FcnJvcihlKTtcbiAgICBmaW5pc2hBbmRTZXRTcGFuKCk7XG4gICAgdGhyb3cgZTtcbiAgfVxuXG4gIGlmIChpc1RoZW5hYmxlKG1heWJlUHJvbWlzZVJlc3VsdCkpIHtcbiAgICBQcm9taXNlLnJlc29sdmUobWF5YmVQcm9taXNlUmVzdWx0KS50aGVuKFxuICAgICAgKCkgPT4ge1xuICAgICAgICBmaW5pc2hBbmRTZXRTcGFuKCk7XG4gICAgICB9LFxuICAgICAgZSA9PiB7XG4gICAgICAgIGFjdGl2ZVNwYW4gJiYgYWN0aXZlU3Bhbi5zZXRTdGF0dXMoJ2ludGVybmFsX2Vycm9yJyk7XG4gICAgICAgIG9uRXJyb3IoZSk7XG4gICAgICAgIGZpbmlzaEFuZFNldFNwYW4oKTtcbiAgICAgIH0sXG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICBmaW5pc2hBbmRTZXRTcGFuKCk7XG4gIH1cblxuICByZXR1cm4gbWF5YmVQcm9taXNlUmVzdWx0O1xufVxuXG5leHBvcnQgeyB0cmFjZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhY2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/trace.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/transaction.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/transaction.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Transaction\": function() { return /* binding */ Transaction; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dynamicSamplingContext.js */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _span_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./span.js */ \"./node_modules/@sentry/core/esm/tracing/span.js\");\n\n\n\n\n\n/** JSDoc */\nclass Transaction extends _span_js__WEBPACK_IMPORTED_MODULE_0__.Span  {\n\n  /**\n   * The reference to the current hub.\n   */\n\n   __init() {this._measurements = {};}\n\n   __init2() {this._contexts = {};}\n\n   __init3() {this._frozenDynamicSamplingContext = undefined;}\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(transactionContext, hub) {\n    super(transactionContext);Transaction.prototype.__init.call(this);Transaction.prototype.__init2.call(this);Transaction.prototype.__init3.call(this);\n    this._hub = hub || (0,_hub_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n\n    this._name = transactionContext.name || '';\n\n    this.metadata = {\n      source: 'custom',\n      ...transactionContext.metadata,\n      spanMetadata: {},\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    const incomingDynamicSamplingContext = this.metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  /** Getter for `name` property */\n   get name() {\n    return this._name;\n  }\n\n  /** Setter for `name` property, which also sets `source` as custom */\n   set name(newName) {\n    this.setName(newName);\n  }\n\n  /**\n   * JSDoc\n   */\n   setName(name, source = 'custom') {\n    this._name = name;\n    this.metadata.source = source;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n   initSpanRecorder(maxlen = 1000) {\n    if (!this.spanRecorder) {\n      this.spanRecorder = new _span_js__WEBPACK_IMPORTED_MODULE_0__.SpanRecorder(maxlen);\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMeasurement(name, value, unit = '') {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMetadata(newMetadata) {\n    this.metadata = { ...this.metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    // This transaction is already finished, so we should not flush it again.\n    if (this.endTimestamp !== undefined) {\n      return undefined;\n    }\n\n    if (!this.name) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this.name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.finish(endTimestamp);\n\n    const client = this._hub.getClient();\n    if (client && client.emit) {\n      client.emit('finishTransaction', this);\n    }\n\n    if (this.sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    const finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(s => s !== this && s.endTimestamp) : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      this.endTimestamp = finishedSpans.reduce((prev, current) => {\n        if (prev.endTimestamp && current.endTimestamp) {\n          return prev.endTimestamp > current.endTimestamp ? prev : current;\n        }\n        return prev;\n      }).endTimestamp;\n    }\n\n    const metadata = this.metadata;\n\n    const transaction = {\n      contexts: {\n        ...this._contexts,\n        // We don't want to override trace context\n        trace: this.getTraceContext(),\n      },\n      spans: finishedSpans,\n      start_timestamp: this.startTimestamp,\n      tags: this.tags,\n      timestamp: this.endTimestamp,\n      transaction: this.name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        dynamicSamplingContext: this.getDynamicSamplingContext(),\n      },\n      ...(metadata.source && {\n        transaction_info: {\n          source: metadata.source,\n        },\n      }),\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`);\n\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    const spanContext = super.toContext();\n\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.dropUndefinedKeys)({\n      ...spanContext,\n      name: this.name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(transactionContext) {\n    super.updateWithContext(transactionContext);\n\n    this.name = transactionContext.name || '';\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   */\n   getDynamicSamplingContext() {\n    if (this._frozenDynamicSamplingContext) {\n      return this._frozenDynamicSamplingContext;\n    }\n\n    const hub = this._hub || (0,_hub_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n    const client = hub.getClient();\n\n    if (!client) return {};\n\n    const scope = hub.getScope();\n    const dsc = (0,_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_4__.getDynamicSamplingContextFromClient)(this.traceId, client, scope);\n\n    const maybeSampleRate = this.metadata.sampleRate;\n    if (maybeSampleRate !== undefined) {\n      dsc.sample_rate = `${maybeSampleRate}`;\n    }\n\n    // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n    const source = this.metadata.source;\n    if (source && source !== 'url') {\n      dsc.transaction = this.name;\n    }\n\n    if (this.sampled !== undefined) {\n      dsc.sampled = String(this.sampled);\n    }\n\n    // Uncomment if we want to make DSC immutable\n    // this._frozenDynamicSamplingContext = dsc;\n\n    return dsc;\n  }\n\n  /**\n   * Override the current hub with a new one.\n   * Used if you want another hub to finish the transaction.\n   *\n   * @internal\n   */\n   setHub(hub) {\n    this._hub = hub;\n  }\n}\n\n\n//# sourceMappingURL=transaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/transaction.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/utils.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TRACEPARENT_REGEXP\": function() { return /* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.TRACEPARENT_REGEXP; },\n/* harmony export */   \"extractTraceparentData\": function() { return /* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.extractTraceparentData; },\n/* harmony export */   \"getActiveTransaction\": function() { return /* binding */ getActiveTransaction; },\n/* harmony export */   \"stripUrlQueryAndFragment\": function() { return /* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.stripUrlQueryAndFragment; }\n/* harmony export */ });\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/url.js\");\n\n\n\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(maybeHub) {\n  const hub = maybeHub || (0,_hub_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentHub)();\n  const scope = hub.getScope();\n  return scope.getTransaction() ;\n}\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL3V0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMEM7QUFDMkQ7O0FBRXJHO0FBQ0E7QUFDQSwwQkFBMEIsc0RBQWE7QUFDdkM7QUFDQTtBQUNBOztBQUVnQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdHJhY2luZy91dGlscy5qcz9kOGI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEN1cnJlbnRIdWIgfSBmcm9tICcuLi9odWIuanMnO1xuZXhwb3J0IHsgVFJBQ0VQQVJFTlRfUkVHRVhQLCBleHRyYWN0VHJhY2VwYXJlbnREYXRhLCBzdHJpcFVybFF1ZXJ5QW5kRnJhZ21lbnQgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLyoqIEdyYWJzIGFjdGl2ZSB0cmFuc2FjdGlvbiBvZmYgc2NvcGUsIGlmIGFueSAqL1xuZnVuY3Rpb24gZ2V0QWN0aXZlVHJhbnNhY3Rpb24obWF5YmVIdWIpIHtcbiAgY29uc3QgaHViID0gbWF5YmVIdWIgfHwgZ2V0Q3VycmVudEh1YigpO1xuICBjb25zdCBzY29wZSA9IGh1Yi5nZXRTY29wZSgpO1xuICByZXR1cm4gc2NvcGUuZ2V0VHJhbnNhY3Rpb24oKSA7XG59XG5cbmV4cG9ydCB7IGdldEFjdGl2ZVRyYW5zYWN0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/utils.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/transports/base.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/transports/base.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_TRANSPORT_BUFFER_SIZE\": function() { return /* binding */ DEFAULT_TRANSPORT_BUFFER_SIZE; },\n/* harmony export */   \"createTransport\": function() { return /* binding */ createTransport; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/promisebuffer.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/ratelimit.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/error.js\");\n\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makePromiseBuffer)(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.forEachEnvelopeItem)(envelope, (item, type) => {\n      const envelopeItemDataCategory = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.envelopeItemTypeToDataCategory)(type);\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isRateLimited)(rateLimits, envelopeItemDataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.resolvedSyncPromise)();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.createEnvelope)(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.forEachEnvelopeItem)(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.envelopeItemTypeToDataCategory)(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.serializeEnvelope)(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.updateRateLimits)(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.SentryError) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.resolvedSyncPromise)();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\n\n//# sourceMappingURL=base.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL2Jhc2UuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBcU47O0FBRXJOOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0VBQWlCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLElBQUksa0VBQW1CO0FBQ3ZCLHVDQUF1Qyw2RUFBOEI7QUFDckUsVUFBVSw0REFBYTtBQUN2QjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxhQUFhLGtFQUFtQjtBQUNoQzs7QUFFQTtBQUNBLDZCQUE2Qiw2REFBYzs7QUFFM0M7QUFDQTtBQUNBLE1BQU0sa0VBQW1CO0FBQ3pCO0FBQ0EsMkNBQTJDLDZFQUE4QjtBQUN6RSxPQUFPO0FBQ1A7O0FBRUE7QUFDQSxvQkFBb0IsTUFBTSxnRUFBaUIseUNBQXlDO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSxzREFBVyxzQ0FBc0MscUJBQXFCO0FBQ25KOztBQUVBLHVCQUF1QiwrREFBZ0I7QUFDdkM7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixzREFBVztBQUN4QywyRUFBMkUsdURBQVk7QUFDdkY7QUFDQSxpQkFBaUIsa0VBQW1CO0FBQ3BDLFVBQVU7QUFDVjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFMEQ7QUFDMUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL3RyYW5zcG9ydHMvYmFzZS5qcz8xN2VlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1ha2VQcm9taXNlQnVmZmVyLCBmb3JFYWNoRW52ZWxvcGVJdGVtLCBlbnZlbG9wZUl0ZW1UeXBlVG9EYXRhQ2F0ZWdvcnksIGlzUmF0ZUxpbWl0ZWQsIHJlc29sdmVkU3luY1Byb21pc2UsIGNyZWF0ZUVudmVsb3BlLCBTZW50cnlFcnJvciwgbG9nZ2VyLCBzZXJpYWxpemVFbnZlbG9wZSwgdXBkYXRlUmF0ZUxpbWl0cyB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG5jb25zdCBERUZBVUxUX1RSQU5TUE9SVF9CVUZGRVJfU0laRSA9IDMwO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgYSBTZW50cnkgYFRyYW5zcG9ydGBcbiAqXG4gKiBAcGFyYW0gb3B0aW9uc1xuICogQHBhcmFtIG1ha2VSZXF1ZXN0XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zcG9ydChcbiAgb3B0aW9ucyxcbiAgbWFrZVJlcXVlc3QsXG4gIGJ1ZmZlciA9IG1ha2VQcm9taXNlQnVmZmVyKFxuICAgIG9wdGlvbnMuYnVmZmVyU2l6ZSB8fCBERUZBVUxUX1RSQU5TUE9SVF9CVUZGRVJfU0laRSxcbiAgKSxcbikge1xuICBsZXQgcmF0ZUxpbWl0cyA9IHt9O1xuICBjb25zdCBmbHVzaCA9ICh0aW1lb3V0KSA9PiBidWZmZXIuZHJhaW4odGltZW91dCk7XG5cbiAgZnVuY3Rpb24gc2VuZChlbnZlbG9wZSkge1xuICAgIGNvbnN0IGZpbHRlcmVkRW52ZWxvcGVJdGVtcyA9IFtdO1xuXG4gICAgLy8gRHJvcCByYXRlIGxpbWl0ZWQgaXRlbXMgZnJvbSBlbnZlbG9wZVxuICAgIGZvckVhY2hFbnZlbG9wZUl0ZW0oZW52ZWxvcGUsIChpdGVtLCB0eXBlKSA9PiB7XG4gICAgICBjb25zdCBlbnZlbG9wZUl0ZW1EYXRhQ2F0ZWdvcnkgPSBlbnZlbG9wZUl0ZW1UeXBlVG9EYXRhQ2F0ZWdvcnkodHlwZSk7XG4gICAgICBpZiAoaXNSYXRlTGltaXRlZChyYXRlTGltaXRzLCBlbnZlbG9wZUl0ZW1EYXRhQ2F0ZWdvcnkpKSB7XG4gICAgICAgIGNvbnN0IGV2ZW50ID0gZ2V0RXZlbnRGb3JFbnZlbG9wZUl0ZW0oaXRlbSwgdHlwZSk7XG4gICAgICAgIG9wdGlvbnMucmVjb3JkRHJvcHBlZEV2ZW50KCdyYXRlbGltaXRfYmFja29mZicsIGVudmVsb3BlSXRlbURhdGFDYXRlZ29yeSwgZXZlbnQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZmlsdGVyZWRFbnZlbG9wZUl0ZW1zLnB1c2goaXRlbSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBTa2lwIHNlbmRpbmcgaWYgZW52ZWxvcGUgaXMgZW1wdHkgYWZ0ZXIgZmlsdGVyaW5nIG91dCByYXRlIGxpbWl0ZWQgZXZlbnRzXG4gICAgaWYgKGZpbHRlcmVkRW52ZWxvcGVJdGVtcy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiByZXNvbHZlZFN5bmNQcm9taXNlKCk7XG4gICAgfVxuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBjb25zdCBmaWx0ZXJlZEVudmVsb3BlID0gY3JlYXRlRW52ZWxvcGUoZW52ZWxvcGVbMF0sIGZpbHRlcmVkRW52ZWxvcGVJdGVtcyApO1xuXG4gICAgLy8gQ3JlYXRlcyBjbGllbnQgcmVwb3J0IGZvciBlYWNoIGl0ZW0gaW4gYW4gZW52ZWxvcGVcbiAgICBjb25zdCByZWNvcmRFbnZlbG9wZUxvc3MgPSAocmVhc29uKSA9PiB7XG4gICAgICBmb3JFYWNoRW52ZWxvcGVJdGVtKGZpbHRlcmVkRW52ZWxvcGUsIChpdGVtLCB0eXBlKSA9PiB7XG4gICAgICAgIGNvbnN0IGV2ZW50ID0gZ2V0RXZlbnRGb3JFbnZlbG9wZUl0ZW0oaXRlbSwgdHlwZSk7XG4gICAgICAgIG9wdGlvbnMucmVjb3JkRHJvcHBlZEV2ZW50KHJlYXNvbiwgZW52ZWxvcGVJdGVtVHlwZVRvRGF0YUNhdGVnb3J5KHR5cGUpLCBldmVudCk7XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgY29uc3QgcmVxdWVzdFRhc2sgPSAoKSA9PlxuICAgICAgbWFrZVJlcXVlc3QoeyBib2R5OiBzZXJpYWxpemVFbnZlbG9wZShmaWx0ZXJlZEVudmVsb3BlLCBvcHRpb25zLnRleHRFbmNvZGVyKSB9KS50aGVuKFxuICAgICAgICByZXNwb25zZSA9PiB7XG4gICAgICAgICAgLy8gV2UgZG9uJ3Qgd2FudCB0byB0aHJvdyBvbiBOT0sgcmVzcG9uc2VzLCBidXQgd2Ugd2FudCB0byBhdCBsZWFzdCBsb2cgdGhlbVxuICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXNDb2RlICE9PSB1bmRlZmluZWQgJiYgKHJlc3BvbnNlLnN0YXR1c0NvZGUgPCAyMDAgfHwgcmVzcG9uc2Uuc3RhdHVzQ29kZSA+PSAzMDApKSB7XG4gICAgICAgICAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci53YXJuKGBTZW50cnkgcmVzcG9uZGVkIHdpdGggc3RhdHVzIGNvZGUgJHtyZXNwb25zZS5zdGF0dXNDb2RlfSB0byBzZW50IGV2ZW50LmApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJhdGVMaW1pdHMgPSB1cGRhdGVSYXRlTGltaXRzKHJhdGVMaW1pdHMsIHJlc3BvbnNlKTtcbiAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICByZWNvcmRFbnZlbG9wZUxvc3MoJ25ldHdvcmtfZXJyb3InKTtcbiAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfSxcbiAgICAgICk7XG5cbiAgICByZXR1cm4gYnVmZmVyLmFkZChyZXF1ZXN0VGFzaykudGhlbihcbiAgICAgIHJlc3VsdCA9PiByZXN1bHQsXG4gICAgICBlcnJvciA9PiB7XG4gICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIFNlbnRyeUVycm9yKSB7XG4gICAgICAgICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBsb2dnZXIuZXJyb3IoJ1NraXBwZWQgc2VuZGluZyBldmVudCBiZWNhdXNlIGJ1ZmZlciBpcyBmdWxsLicpO1xuICAgICAgICAgIHJlY29yZEVudmVsb3BlTG9zcygncXVldWVfb3ZlcmZsb3cnKTtcbiAgICAgICAgICByZXR1cm4gcmVzb2x2ZWRTeW5jUHJvbWlzZSgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICk7XG4gIH1cblxuICAvLyBXZSB1c2UgdGhpcyB0byBpZGVudGlmaWZ5IGlmIHRoZSB0cmFuc3BvcnQgaXMgdGhlIGJhc2UgdHJhbnNwb3J0XG4gIC8vIFRPRE8gKHY4KTogUmVtb3ZlIHRoaXMgYWdhaW4gYXMgd2UnbGwgbm8gbG9uZ2VyIG5lZWQgaXRcbiAgc2VuZC5fX3NlbnRyeV9fYmFzZVRyYW5zcG9ydF9fID0gdHJ1ZTtcblxuICByZXR1cm4ge1xuICAgIHNlbmQsXG4gICAgZmx1c2gsXG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldEV2ZW50Rm9yRW52ZWxvcGVJdGVtKGl0ZW0sIHR5cGUpIHtcbiAgaWYgKHR5cGUgIT09ICdldmVudCcgJiYgdHlwZSAhPT0gJ3RyYW5zYWN0aW9uJykge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICByZXR1cm4gQXJyYXkuaXNBcnJheShpdGVtKSA/IChpdGVtIClbMV0gOiB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCB7IERFRkFVTFRfVFJBTlNQT1JUX0JVRkZFUl9TSVpFLCBjcmVhdGVUcmFuc3BvcnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/transports/base.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/transports/multiplexed.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/transports/multiplexed.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"eventFromEnvelope\": function() { return /* binding */ eventFromEnvelope; },\n/* harmony export */   \"makeMultiplexedTransport\": function() { return /* binding */ makeMultiplexedTransport; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../api.js */ \"./node_modules/@sentry/core/esm/api.js\");\n\n\n\n/**\n * Gets an event from an envelope.\n *\n * This is only exported for use in the tests\n */\nfunction eventFromEnvelope(env, types) {\n  let event;\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.forEachEnvelopeItem)(env, (item, type) => {\n    if (types.includes(type)) {\n      event = Array.isArray(item) ? (item )[1] : undefined;\n    }\n    // bail out if we found an event\n    return !!event;\n  });\n\n  return event;\n}\n\n/**\n * Creates a transport that overrides the release on all events.\n */\nfunction makeOverrideReleaseTransport(\n  createTransport,\n  release,\n) {\n  return options => {\n    const transport = createTransport(options);\n\n    return {\n      send: async (envelope) => {\n        const event = eventFromEnvelope(envelope, ['event', 'transaction', 'profile', 'replay_event']);\n\n        if (event) {\n          event.release = release;\n        }\n        return transport.send(envelope);\n      },\n      flush: timeout => transport.flush(timeout),\n    };\n  };\n}\n\n/**\n * Creates a transport that can send events to different DSNs depending on the envelope contents.\n */\nfunction makeMultiplexedTransport(\n  createTransport,\n  matcher,\n) {\n  return options => {\n    const fallbackTransport = createTransport(options);\n    const otherTransports = {};\n\n    function getTransport(dsn, release) {\n      // We create a transport for every unique dsn/release combination as there may be code from multiple releases in\n      // use at the same time\n      const key = release ? `${dsn}:${release}` : dsn;\n\n      if (!otherTransports[key]) {\n        const validatedDsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dsnFromString)(dsn);\n        if (!validatedDsn) {\n          return undefined;\n        }\n        const url = (0,_api_js__WEBPACK_IMPORTED_MODULE_2__.getEnvelopeEndpointWithUrlEncodedAuth)(validatedDsn);\n\n        otherTransports[key] = release\n          ? makeOverrideReleaseTransport(createTransport, release)({ ...options, url })\n          : createTransport({ ...options, url });\n      }\n\n      return otherTransports[key];\n    }\n\n    async function send(envelope) {\n      function getEvent(types) {\n        const eventTypes = types && types.length ? types : ['event'];\n        return eventFromEnvelope(envelope, eventTypes);\n      }\n\n      const transports = matcher({ envelope, getEvent })\n        .map(result => {\n          if (typeof result === 'string') {\n            return getTransport(result, undefined);\n          } else {\n            return getTransport(result.dsn, result.release);\n          }\n        })\n        .filter((t) => !!t);\n\n      // If we have no transports to send to, use the fallback transport\n      if (transports.length === 0) {\n        transports.push(fallbackTransport);\n      }\n\n      const results = await Promise.all(transports.map(transport => transport.send(envelope)));\n\n      return results[0];\n    }\n\n    async function flush(timeout) {\n      const allTransports = [...Object.keys(otherTransports).map(dsn => otherTransports[dsn]), fallbackTransport];\n      const results = await Promise.all(allTransports.map(transport => transport.flush(timeout)));\n      return results.every(r => r);\n    }\n\n    return {\n      send,\n      flush,\n    };\n  };\n}\n\n\n//# sourceMappingURL=multiplexed.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL211bHRpcGxleGVkLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW1FO0FBQ0Q7O0FBRWxFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsa0VBQW1CO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsSUFBSSxHQUFHLFFBQVE7O0FBRTlDO0FBQ0EsNkJBQTZCLDREQUFhO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw4RUFBcUM7O0FBRXpEO0FBQ0EscUVBQXFFLGlCQUFpQjtBQUN0Riw4QkFBOEIsaUJBQWlCO0FBQy9DOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtQ0FBbUMsb0JBQW9CO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXVEO0FBQ3ZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL211bHRpcGxleGVkLmpzPzU5NWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZHNuRnJvbVN0cmluZywgZm9yRWFjaEVudmVsb3BlSXRlbSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZ2V0RW52ZWxvcGVFbmRwb2ludFdpdGhVcmxFbmNvZGVkQXV0aCB9IGZyb20gJy4uL2FwaS5qcyc7XG5cbi8qKlxuICogR2V0cyBhbiBldmVudCBmcm9tIGFuIGVudmVsb3BlLlxuICpcbiAqIFRoaXMgaXMgb25seSBleHBvcnRlZCBmb3IgdXNlIGluIHRoZSB0ZXN0c1xuICovXG5mdW5jdGlvbiBldmVudEZyb21FbnZlbG9wZShlbnYsIHR5cGVzKSB7XG4gIGxldCBldmVudDtcblxuICBmb3JFYWNoRW52ZWxvcGVJdGVtKGVudiwgKGl0ZW0sIHR5cGUpID0+IHtcbiAgICBpZiAodHlwZXMuaW5jbHVkZXModHlwZSkpIHtcbiAgICAgIGV2ZW50ID0gQXJyYXkuaXNBcnJheShpdGVtKSA/IChpdGVtIClbMV0gOiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIC8vIGJhaWwgb3V0IGlmIHdlIGZvdW5kIGFuIGV2ZW50XG4gICAgcmV0dXJuICEhZXZlbnQ7XG4gIH0pO1xuXG4gIHJldHVybiBldmVudDtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgdHJhbnNwb3J0IHRoYXQgb3ZlcnJpZGVzIHRoZSByZWxlYXNlIG9uIGFsbCBldmVudHMuXG4gKi9cbmZ1bmN0aW9uIG1ha2VPdmVycmlkZVJlbGVhc2VUcmFuc3BvcnQoXG4gIGNyZWF0ZVRyYW5zcG9ydCxcbiAgcmVsZWFzZSxcbikge1xuICByZXR1cm4gb3B0aW9ucyA9PiB7XG4gICAgY29uc3QgdHJhbnNwb3J0ID0gY3JlYXRlVHJhbnNwb3J0KG9wdGlvbnMpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHNlbmQ6IGFzeW5jIChlbnZlbG9wZSkgPT4ge1xuICAgICAgICBjb25zdCBldmVudCA9IGV2ZW50RnJvbUVudmVsb3BlKGVudmVsb3BlLCBbJ2V2ZW50JywgJ3RyYW5zYWN0aW9uJywgJ3Byb2ZpbGUnLCAncmVwbGF5X2V2ZW50J10pO1xuXG4gICAgICAgIGlmIChldmVudCkge1xuICAgICAgICAgIGV2ZW50LnJlbGVhc2UgPSByZWxlYXNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cmFuc3BvcnQuc2VuZChlbnZlbG9wZSk7XG4gICAgICB9LFxuICAgICAgZmx1c2g6IHRpbWVvdXQgPT4gdHJhbnNwb3J0LmZsdXNoKHRpbWVvdXQpLFxuICAgIH07XG4gIH07XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHRyYW5zcG9ydCB0aGF0IGNhbiBzZW5kIGV2ZW50cyB0byBkaWZmZXJlbnQgRFNOcyBkZXBlbmRpbmcgb24gdGhlIGVudmVsb3BlIGNvbnRlbnRzLlxuICovXG5mdW5jdGlvbiBtYWtlTXVsdGlwbGV4ZWRUcmFuc3BvcnQoXG4gIGNyZWF0ZVRyYW5zcG9ydCxcbiAgbWF0Y2hlcixcbikge1xuICByZXR1cm4gb3B0aW9ucyA9PiB7XG4gICAgY29uc3QgZmFsbGJhY2tUcmFuc3BvcnQgPSBjcmVhdGVUcmFuc3BvcnQob3B0aW9ucyk7XG4gICAgY29uc3Qgb3RoZXJUcmFuc3BvcnRzID0ge307XG5cbiAgICBmdW5jdGlvbiBnZXRUcmFuc3BvcnQoZHNuLCByZWxlYXNlKSB7XG4gICAgICAvLyBXZSBjcmVhdGUgYSB0cmFuc3BvcnQgZm9yIGV2ZXJ5IHVuaXF1ZSBkc24vcmVsZWFzZSBjb21iaW5hdGlvbiBhcyB0aGVyZSBtYXkgYmUgY29kZSBmcm9tIG11bHRpcGxlIHJlbGVhc2VzIGluXG4gICAgICAvLyB1c2UgYXQgdGhlIHNhbWUgdGltZVxuICAgICAgY29uc3Qga2V5ID0gcmVsZWFzZSA/IGAke2Rzbn06JHtyZWxlYXNlfWAgOiBkc247XG5cbiAgICAgIGlmICghb3RoZXJUcmFuc3BvcnRzW2tleV0pIHtcbiAgICAgICAgY29uc3QgdmFsaWRhdGVkRHNuID0gZHNuRnJvbVN0cmluZyhkc24pO1xuICAgICAgICBpZiAoIXZhbGlkYXRlZERzbikge1xuICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdXJsID0gZ2V0RW52ZWxvcGVFbmRwb2ludFdpdGhVcmxFbmNvZGVkQXV0aCh2YWxpZGF0ZWREc24pO1xuXG4gICAgICAgIG90aGVyVHJhbnNwb3J0c1trZXldID0gcmVsZWFzZVxuICAgICAgICAgID8gbWFrZU92ZXJyaWRlUmVsZWFzZVRyYW5zcG9ydChjcmVhdGVUcmFuc3BvcnQsIHJlbGVhc2UpKHsgLi4ub3B0aW9ucywgdXJsIH0pXG4gICAgICAgICAgOiBjcmVhdGVUcmFuc3BvcnQoeyAuLi5vcHRpb25zLCB1cmwgfSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBvdGhlclRyYW5zcG9ydHNba2V5XTtcbiAgICB9XG5cbiAgICBhc3luYyBmdW5jdGlvbiBzZW5kKGVudmVsb3BlKSB7XG4gICAgICBmdW5jdGlvbiBnZXRFdmVudCh0eXBlcykge1xuICAgICAgICBjb25zdCBldmVudFR5cGVzID0gdHlwZXMgJiYgdHlwZXMubGVuZ3RoID8gdHlwZXMgOiBbJ2V2ZW50J107XG4gICAgICAgIHJldHVybiBldmVudEZyb21FbnZlbG9wZShlbnZlbG9wZSwgZXZlbnRUeXBlcyk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHRyYW5zcG9ydHMgPSBtYXRjaGVyKHsgZW52ZWxvcGUsIGdldEV2ZW50IH0pXG4gICAgICAgIC5tYXAocmVzdWx0ID0+IHtcbiAgICAgICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiBnZXRUcmFuc3BvcnQocmVzdWx0LCB1bmRlZmluZWQpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0VHJhbnNwb3J0KHJlc3VsdC5kc24sIHJlc3VsdC5yZWxlYXNlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5maWx0ZXIoKHQpID0+ICEhdCk7XG5cbiAgICAgIC8vIElmIHdlIGhhdmUgbm8gdHJhbnNwb3J0cyB0byBzZW5kIHRvLCB1c2UgdGhlIGZhbGxiYWNrIHRyYW5zcG9ydFxuICAgICAgaWYgKHRyYW5zcG9ydHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRyYW5zcG9ydHMucHVzaChmYWxsYmFja1RyYW5zcG9ydCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHJlc3VsdHMgPSBhd2FpdCBQcm9taXNlLmFsbCh0cmFuc3BvcnRzLm1hcCh0cmFuc3BvcnQgPT4gdHJhbnNwb3J0LnNlbmQoZW52ZWxvcGUpKSk7XG5cbiAgICAgIHJldHVybiByZXN1bHRzWzBdO1xuICAgIH1cblxuICAgIGFzeW5jIGZ1bmN0aW9uIGZsdXNoKHRpbWVvdXQpIHtcbiAgICAgIGNvbnN0IGFsbFRyYW5zcG9ydHMgPSBbLi4uT2JqZWN0LmtleXMob3RoZXJUcmFuc3BvcnRzKS5tYXAoZHNuID0+IG90aGVyVHJhbnNwb3J0c1tkc25dKSwgZmFsbGJhY2tUcmFuc3BvcnRdO1xuICAgICAgY29uc3QgcmVzdWx0cyA9IGF3YWl0IFByb21pc2UuYWxsKGFsbFRyYW5zcG9ydHMubWFwKHRyYW5zcG9ydCA9PiB0cmFuc3BvcnQuZmx1c2godGltZW91dCkpKTtcbiAgICAgIHJldHVybiByZXN1bHRzLmV2ZXJ5KHIgPT4gcik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHNlbmQsXG4gICAgICBmbHVzaCxcbiAgICB9O1xuICB9O1xufVxuXG5leHBvcnQgeyBldmVudEZyb21FbnZlbG9wZSwgbWFrZU11bHRpcGxleGVkVHJhbnNwb3J0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdWx0aXBsZXhlZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/transports/multiplexed.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/transports/offline.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/transports/offline.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MIN_DELAY\": function() { return /* binding */ MIN_DELAY; },\n/* harmony export */   \"START_DELAY\": function() { return /* binding */ START_DELAY; },\n/* harmony export */   \"makeOfflineTransport\": function() { return /* binding */ makeOfflineTransport; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/ratelimit.js\");\n\n\nconst MIN_DELAY = 100; // 100 ms\nconst START_DELAY = 5000; // 5 seconds\nconst MAX_DELAY = 3.6e6; // 1 hour\n\nfunction log(msg, error) {\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.info(`[Offline]: ${msg}`, error);\n}\n\n/**\n * Wraps a transport and stores and retries events when they fail to send.\n *\n * @param createTransport The transport to wrap.\n */\nfunction makeOfflineTransport(\n  createTransport,\n) {\n  return options => {\n    const transport = createTransport(options);\n    const store = options.createStore ? options.createStore(options) : undefined;\n\n    let retryDelay = START_DELAY;\n    let flushTimer;\n\n    function shouldQueue(env, error, retryDelay) {\n      // We don't queue Session Replay envelopes because they are:\n      // - Ordered and Replay relies on the response status to know when they're successfully sent.\n      // - Likely to fill the queue quickly and block other events from being sent.\n      // We also want to drop client reports because they can be generated when we retry sending events while offline.\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.envelopeContainsItemType)(env, ['replay_event', 'replay_recording', 'client_report'])) {\n        return false;\n      }\n\n      if (options.shouldStore) {\n        return options.shouldStore(env, error, retryDelay);\n      }\n\n      return true;\n    }\n\n    function flushIn(delay) {\n      if (!store) {\n        return;\n      }\n\n      if (flushTimer) {\n        clearTimeout(flushTimer );\n      }\n\n      flushTimer = setTimeout(async () => {\n        flushTimer = undefined;\n\n        const found = await store.pop();\n        if (found) {\n          log('Attempting to send previously queued event');\n          void send(found).catch(e => {\n            log('Failed to retry sending', e);\n          });\n        }\n      }, delay) ;\n\n      // We need to unref the timer in node.js, otherwise the node process never exit.\n      if (typeof flushTimer !== 'number' && flushTimer.unref) {\n        flushTimer.unref();\n      }\n    }\n\n    function flushWithBackOff() {\n      if (flushTimer) {\n        return;\n      }\n\n      flushIn(retryDelay);\n\n      retryDelay = Math.min(retryDelay * 2, MAX_DELAY);\n    }\n\n    async function send(envelope) {\n      try {\n        const result = await transport.send(envelope);\n\n        let delay = MIN_DELAY;\n\n        if (result) {\n          // If there's a retry-after header, use that as the next delay.\n          if (result.headers && result.headers['retry-after']) {\n            delay = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.parseRetryAfterHeader)(result.headers['retry-after']);\n          } // If we have a server error, return now so we don't flush the queue.\n          else if ((result.statusCode || 0) >= 400) {\n            return result;\n          }\n        }\n\n        flushIn(delay);\n        retryDelay = START_DELAY;\n        return result;\n      } catch (e) {\n        if (store && (await shouldQueue(envelope, e , retryDelay))) {\n          await store.insert(envelope);\n          flushWithBackOff();\n          log('Error sending. Event queued', e );\n          return {};\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    if (options.flushAtStartup) {\n      flushWithBackOff();\n    }\n\n    return {\n      send,\n      flush: t => transport.flush(t),\n    };\n  };\n}\n\n\n//# sourceMappingURL=offline.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL29mZmxpbmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXdGOztBQUV4Rix1QkFBdUI7QUFDdkIsMEJBQTBCO0FBQzFCLHlCQUF5Qjs7QUFFekI7QUFDQSxtRUFBbUUsc0RBQVcsZUFBZSxJQUFJO0FBQ2pHOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx1RUFBd0I7QUFDbEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixvRUFBcUI7QUFDekMsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXdEO0FBQ3hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL29mZmxpbmUuanM/MzE5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZVJldHJ5QWZ0ZXJIZWFkZXIsIGxvZ2dlciwgZW52ZWxvcGVDb250YWluc0l0ZW1UeXBlIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmNvbnN0IE1JTl9ERUxBWSA9IDEwMDsgLy8gMTAwIG1zXG5jb25zdCBTVEFSVF9ERUxBWSA9IDUwMDA7IC8vIDUgc2Vjb25kc1xuY29uc3QgTUFYX0RFTEFZID0gMy42ZTY7IC8vIDEgaG91clxuXG5mdW5jdGlvbiBsb2cobXNnLCBlcnJvcikge1xuICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5pbmZvKGBbT2ZmbGluZV06ICR7bXNnfWAsIGVycm9yKTtcbn1cblxuLyoqXG4gKiBXcmFwcyBhIHRyYW5zcG9ydCBhbmQgc3RvcmVzIGFuZCByZXRyaWVzIGV2ZW50cyB3aGVuIHRoZXkgZmFpbCB0byBzZW5kLlxuICpcbiAqIEBwYXJhbSBjcmVhdGVUcmFuc3BvcnQgVGhlIHRyYW5zcG9ydCB0byB3cmFwLlxuICovXG5mdW5jdGlvbiBtYWtlT2ZmbGluZVRyYW5zcG9ydChcbiAgY3JlYXRlVHJhbnNwb3J0LFxuKSB7XG4gIHJldHVybiBvcHRpb25zID0+IHtcbiAgICBjb25zdCB0cmFuc3BvcnQgPSBjcmVhdGVUcmFuc3BvcnQob3B0aW9ucyk7XG4gICAgY29uc3Qgc3RvcmUgPSBvcHRpb25zLmNyZWF0ZVN0b3JlID8gb3B0aW9ucy5jcmVhdGVTdG9yZShvcHRpb25zKSA6IHVuZGVmaW5lZDtcblxuICAgIGxldCByZXRyeURlbGF5ID0gU1RBUlRfREVMQVk7XG4gICAgbGV0IGZsdXNoVGltZXI7XG5cbiAgICBmdW5jdGlvbiBzaG91bGRRdWV1ZShlbnYsIGVycm9yLCByZXRyeURlbGF5KSB7XG4gICAgICAvLyBXZSBkb24ndCBxdWV1ZSBTZXNzaW9uIFJlcGxheSBlbnZlbG9wZXMgYmVjYXVzZSB0aGV5IGFyZTpcbiAgICAgIC8vIC0gT3JkZXJlZCBhbmQgUmVwbGF5IHJlbGllcyBvbiB0aGUgcmVzcG9uc2Ugc3RhdHVzIHRvIGtub3cgd2hlbiB0aGV5J3JlIHN1Y2Nlc3NmdWxseSBzZW50LlxuICAgICAgLy8gLSBMaWtlbHkgdG8gZmlsbCB0aGUgcXVldWUgcXVpY2tseSBhbmQgYmxvY2sgb3RoZXIgZXZlbnRzIGZyb20gYmVpbmcgc2VudC5cbiAgICAgIC8vIFdlIGFsc28gd2FudCB0byBkcm9wIGNsaWVudCByZXBvcnRzIGJlY2F1c2UgdGhleSBjYW4gYmUgZ2VuZXJhdGVkIHdoZW4gd2UgcmV0cnkgc2VuZGluZyBldmVudHMgd2hpbGUgb2ZmbGluZS5cbiAgICAgIGlmIChlbnZlbG9wZUNvbnRhaW5zSXRlbVR5cGUoZW52LCBbJ3JlcGxheV9ldmVudCcsICdyZXBsYXlfcmVjb3JkaW5nJywgJ2NsaWVudF9yZXBvcnQnXSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBpZiAob3B0aW9ucy5zaG91bGRTdG9yZSkge1xuICAgICAgICByZXR1cm4gb3B0aW9ucy5zaG91bGRTdG9yZShlbnYsIGVycm9yLCByZXRyeURlbGF5KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZmx1c2hJbihkZWxheSkge1xuICAgICAgaWYgKCFzdG9yZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChmbHVzaFRpbWVyKSB7XG4gICAgICAgIGNsZWFyVGltZW91dChmbHVzaFRpbWVyICk7XG4gICAgICB9XG5cbiAgICAgIGZsdXNoVGltZXIgPSBzZXRUaW1lb3V0KGFzeW5jICgpID0+IHtcbiAgICAgICAgZmx1c2hUaW1lciA9IHVuZGVmaW5lZDtcblxuICAgICAgICBjb25zdCBmb3VuZCA9IGF3YWl0IHN0b3JlLnBvcCgpO1xuICAgICAgICBpZiAoZm91bmQpIHtcbiAgICAgICAgICBsb2coJ0F0dGVtcHRpbmcgdG8gc2VuZCBwcmV2aW91c2x5IHF1ZXVlZCBldmVudCcpO1xuICAgICAgICAgIHZvaWQgc2VuZChmb3VuZCkuY2F0Y2goZSA9PiB7XG4gICAgICAgICAgICBsb2coJ0ZhaWxlZCB0byByZXRyeSBzZW5kaW5nJywgZSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0sIGRlbGF5KSA7XG5cbiAgICAgIC8vIFdlIG5lZWQgdG8gdW5yZWYgdGhlIHRpbWVyIGluIG5vZGUuanMsIG90aGVyd2lzZSB0aGUgbm9kZSBwcm9jZXNzIG5ldmVyIGV4aXQuXG4gICAgICBpZiAodHlwZW9mIGZsdXNoVGltZXIgIT09ICdudW1iZXInICYmIGZsdXNoVGltZXIudW5yZWYpIHtcbiAgICAgICAgZmx1c2hUaW1lci51bnJlZigpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGZsdXNoV2l0aEJhY2tPZmYoKSB7XG4gICAgICBpZiAoZmx1c2hUaW1lcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGZsdXNoSW4ocmV0cnlEZWxheSk7XG5cbiAgICAgIHJldHJ5RGVsYXkgPSBNYXRoLm1pbihyZXRyeURlbGF5ICogMiwgTUFYX0RFTEFZKTtcbiAgICB9XG5cbiAgICBhc3luYyBmdW5jdGlvbiBzZW5kKGVudmVsb3BlKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0cmFuc3BvcnQuc2VuZChlbnZlbG9wZSk7XG5cbiAgICAgICAgbGV0IGRlbGF5ID0gTUlOX0RFTEFZO1xuXG4gICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAvLyBJZiB0aGVyZSdzIGEgcmV0cnktYWZ0ZXIgaGVhZGVyLCB1c2UgdGhhdCBhcyB0aGUgbmV4dCBkZWxheS5cbiAgICAgICAgICBpZiAocmVzdWx0LmhlYWRlcnMgJiYgcmVzdWx0LmhlYWRlcnNbJ3JldHJ5LWFmdGVyJ10pIHtcbiAgICAgICAgICAgIGRlbGF5ID0gcGFyc2VSZXRyeUFmdGVySGVhZGVyKHJlc3VsdC5oZWFkZXJzWydyZXRyeS1hZnRlciddKTtcbiAgICAgICAgICB9IC8vIElmIHdlIGhhdmUgYSBzZXJ2ZXIgZXJyb3IsIHJldHVybiBub3cgc28gd2UgZG9uJ3QgZmx1c2ggdGhlIHF1ZXVlLlxuICAgICAgICAgIGVsc2UgaWYgKChyZXN1bHQuc3RhdHVzQ29kZSB8fCAwKSA+PSA0MDApIHtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZmx1c2hJbihkZWxheSk7XG4gICAgICAgIHJldHJ5RGVsYXkgPSBTVEFSVF9ERUxBWTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKHN0b3JlICYmIChhd2FpdCBzaG91bGRRdWV1ZShlbnZlbG9wZSwgZSAsIHJldHJ5RGVsYXkpKSkge1xuICAgICAgICAgIGF3YWl0IHN0b3JlLmluc2VydChlbnZlbG9wZSk7XG4gICAgICAgICAgZmx1c2hXaXRoQmFja09mZigpO1xuICAgICAgICAgIGxvZygnRXJyb3Igc2VuZGluZy4gRXZlbnQgcXVldWVkJywgZSApO1xuICAgICAgICAgIHJldHVybiB7fTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMuZmx1c2hBdFN0YXJ0dXApIHtcbiAgICAgIGZsdXNoV2l0aEJhY2tPZmYoKTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgc2VuZCxcbiAgICAgIGZsdXNoOiB0ID0+IHRyYW5zcG9ydC5mbHVzaCh0KSxcbiAgICB9O1xuICB9O1xufVxuXG5leHBvcnQgeyBNSU5fREVMQVksIFNUQVJUX0RFTEFZLCBtYWtlT2ZmbGluZVRyYW5zcG9ydCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2ZmbGluZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/transports/offline.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hasTracingEnabled\": function() { return /* binding */ hasTracingEnabled; }\n/* harmony export */ });\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n\n\n// Treeshakable guard to remove all code related to tracing\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\n\n//# sourceMappingURL=hasTracingEnabled.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9oYXNUcmFjaW5nRW5hYmxlZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQzs7QUFFMUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsc0RBQWE7QUFDOUI7QUFDQTtBQUNBOztBQUU2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdXRpbHMvaGFzVHJhY2luZ0VuYWJsZWQuanM/MTVkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDdXJyZW50SHViIH0gZnJvbSAnLi4vaHViLmpzJztcblxuLy8gVHJlZXNoYWthYmxlIGd1YXJkIHRvIHJlbW92ZSBhbGwgY29kZSByZWxhdGVkIHRvIHRyYWNpbmdcblxuLyoqXG4gKiBEZXRlcm1pbmVzIGlmIHRyYWNpbmcgaXMgY3VycmVudGx5IGVuYWJsZWQuXG4gKlxuICogVHJhY2luZyBpcyBlbmFibGVkIHdoZW4gYXQgbGVhc3Qgb25lIG9mIGB0cmFjZXNTYW1wbGVSYXRlYCBhbmQgYHRyYWNlc1NhbXBsZXJgIGlzIGRlZmluZWQgaW4gdGhlIFNESyBjb25maWcuXG4gKi9cbmZ1bmN0aW9uIGhhc1RyYWNpbmdFbmFibGVkKFxuICBtYXliZU9wdGlvbnMsXG4pIHtcbiAgaWYgKHR5cGVvZiBfX1NFTlRSWV9UUkFDSU5HX18gPT09ICdib29sZWFuJyAmJiAhX19TRU5UUllfVFJBQ0lOR19fKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgY29uc3QgY2xpZW50ID0gZ2V0Q3VycmVudEh1YigpLmdldENsaWVudCgpO1xuICBjb25zdCBvcHRpb25zID0gbWF5YmVPcHRpb25zIHx8IChjbGllbnQgJiYgY2xpZW50LmdldE9wdGlvbnMoKSk7XG4gIHJldHVybiAhIW9wdGlvbnMgJiYgKG9wdGlvbnMuZW5hYmxlVHJhY2luZyB8fCAndHJhY2VzU2FtcGxlUmF0ZScgaW4gb3B0aW9ucyB8fCAndHJhY2VzU2FtcGxlcicgaW4gb3B0aW9ucyk7XG59XG5cbmV4cG9ydCB7IGhhc1RyYWNpbmdFbmFibGVkIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXNUcmFjaW5nRW5hYmxlZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/prepareEvent.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/prepareEvent.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"applyDebugIds\": function() { return /* binding */ applyDebugIds; },\n/* harmony export */   \"applyDebugMeta\": function() { return /* binding */ applyDebugMeta; },\n/* harmony export */   \"prepareEvent\": function() { return /* binding */ prepareEvent; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scope.js */ \"./node_modules/@sentry/core/esm/scope.js\");\n\n\n\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nfunction prepareEvent(\n  options,\n  event,\n  hint,\n  scope,\n) {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;\n  const prepared = {\n    ...event,\n    event_id: event.event_id || hint.event_id || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)(),\n    timestamp: event.timestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dateTimestampInSeconds)(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  let finalScope = scope;\n  if (hint.captureContext) {\n    finalScope = _scope_js__WEBPACK_IMPORTED_MODULE_2__.Scope.clone(finalScope).update(hint.captureContext);\n  }\n\n  // We prepare the result here with a resolved Event.\n  let result = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.resolvedSyncPromise)(prepared);\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  //\n  // We need to check for the existence of `finalScope.getAttachments`\n  // because `getAttachments` can be undefined if users are using an older version\n  // of `@sentry/core` that does not have the `getAttachments` method.\n  // See: https://github.com/getsentry/sentry-javascript/issues/5229\n  if (finalScope) {\n    // Collect attachments from the hint and scope\n    if (finalScope.getAttachments) {\n      const attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n    }\n\n    // In case we have a hub we reassign it.\n    result = finalScope.applyToEvent(prepared, hint);\n  }\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event, options) {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : _constants_js__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.truncate)(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.truncate)(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.truncate)(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nfunction applyDebugIds(event, stackParser) {\n  const debugIdMap = _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {\n    let parsedStack;\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nfunction applyDebugMeta(event) {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event, integrationNames) {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event, depth, maxBreadth) {\n  if (!event) {\n    return null;\n  }\n\n  const normalized = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.normalize)(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.normalize)(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.normalize)(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.normalize)(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.normalize)(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n      if (span.data) {\n        span.data = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.normalize)(span.data, depth, maxBreadth);\n      }\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\n\n//# sourceMappingURL=prepareEvent.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/utils/prepareEvent.js\n");

/***/ }),

/***/ "./node_modules/@sentry/core/esm/version.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/version.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SDK_VERSION\": function() { return /* binding */ SDK_VERSION; }\n/* harmony export */ });\nconst SDK_VERSION = '7.60.1';\n\n\n//# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS92ZXJzaW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL3ZlcnNpb24uanM/ZjhhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTREtfVkVSU0lPTiA9ICc3LjYwLjEnO1xuXG5leHBvcnQgeyBTREtfVkVSU0lPTiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/version.js\n");

/***/ }),

/***/ "./node_modules/@sentry/replay/esm/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/replay/esm/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Replay\": function() { return /* binding */ Replay; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/utils/prepareEvent.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/instrument.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/node.js\");\n\n\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\nconst REPLAY_SESSION_KEY = 'sentryReplaySession';\nconst REPLAY_EVENT_NAME = 'replay_event';\nconst UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nconst SESSION_IDLE_PAUSE_DURATION = 300000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nconst SESSION_IDLE_EXPIRE_DURATION = 900000; // 15 minutes in ms\n\n// The maximum length of a session\nconst MAX_SESSION_LIFE = 3600000; // 60 minutes in ms\n\n/** Default flush delays */\nconst DEFAULT_FLUSH_MIN_DELAY = 5000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nconst DEFAULT_FLUSH_MAX_DELAY = 5500;\n\n/* How long to wait for error checkouts */\nconst BUFFER_CHECKOUT_TIME = 60000;\n\nconst RETRY_BASE_INTERVAL = 5000;\nconst RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nconst NETWORK_BODY_MAX_SIZE = 150000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nconst CONSOLE_ARG_MAX_SIZE = 5000;\n\n/* Min. time to wait before we consider something a slow click. */\nconst SLOW_CLICK_THRESHOLD = 3000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nconst SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nconst REPLAY_MAX_EVENT_BUFFER_SIZE = 20000000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nconst MIN_REPLAY_DURATION = 4999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nconst MIN_REPLAY_DURATION_LIMIT = 15000;\n\nvar NodeType$1;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType$1 || (NodeType$1 = {}));\n\nfunction isElement(n) {\n    return n.nodeType === n.ELEMENT_NODE;\n}\nfunction isShadowRoot(n) {\n    const host = n === null || n === void 0 ? void 0 : n.host;\n    return Boolean(host && host.shadowRoot && host.shadowRoot === n);\n}\nfunction isInputTypeMasked({ maskInputOptions, tagName, type, }) {\n    if (tagName.toLowerCase() === 'option') {\n        tagName = 'select';\n    }\n    const actualType = typeof type === 'string' ? type.toLowerCase() : undefined;\n    return (maskInputOptions[tagName.toLowerCase()] ||\n        (actualType && maskInputOptions[actualType]) ||\n        actualType === 'password' ||\n        (tagName === 'input' && !type && maskInputOptions['text']));\n}\nfunction hasInputMaskOptions({ tagName, type, maskInputOptions, maskInputSelector, }) {\n    return (maskInputSelector || isInputTypeMasked({ maskInputOptions, tagName, type }));\n}\nfunction maskInputValue({ input, maskInputSelector, unmaskInputSelector, maskInputOptions, tagName, type, value, maskInputFn, }) {\n    let text = value || '';\n    if (unmaskInputSelector && input.matches(unmaskInputSelector)) {\n        return text;\n    }\n    if (input.hasAttribute('data-rr-is-password')) {\n        type = 'password';\n    }\n    if (isInputTypeMasked({ maskInputOptions, tagName, type }) ||\n        (maskInputSelector && input.matches(maskInputSelector))) {\n        if (maskInputFn) {\n            text = maskInputFn(text);\n        }\n        else {\n            text = '*'.repeat(text.length);\n        }\n    }\n    return text;\n}\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\nfunction is2DCanvasBlank(canvas) {\n    const ctx = canvas.getContext('2d');\n    if (!ctx)\n        return true;\n    const chunkSize = 50;\n    for (let x = 0; x < canvas.width; x += chunkSize) {\n        for (let y = 0; y < canvas.height; y += chunkSize) {\n            const getImageData = ctx.getImageData;\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\n                : getImageData;\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\n            if (pixelBuffer.some((pixel) => pixel !== 0))\n                return false;\n        }\n    }\n    return true;\n}\nfunction getInputType(element) {\n    const type = element.type;\n    return element.hasAttribute('data-rr-is-password')\n        ? 'password'\n        : type\n            ? type.toLowerCase()\n            : null;\n}\nfunction getInputValue(el, tagName, type) {\n    typeof type === 'string' ? type.toLowerCase() : '';\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\n        return el.getAttribute('value') || '';\n    }\n    return el.value;\n}\n\nlet _id = 1;\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\nconst IGNORED_NODE = -2;\nfunction defaultMaskFn(str) {\n    return str ? str.replace(/[\\S]/g, '*') : '';\n}\nfunction genId() {\n    return _id++;\n}\nfunction getValidTagName(element) {\n    if (element instanceof HTMLFormElement) {\n        return 'form';\n    }\n    const processedTagName = element.tagName.toLowerCase().trim();\n    if (tagNameRegex.test(processedTagName)) {\n        return 'div';\n    }\n    return processedTagName;\n}\nfunction getCssRulesString(s) {\n    try {\n        const rules = s.rules || s.cssRules;\n        return rules ? Array.from(rules).map(getCssRuleString).join('') : null;\n    }\n    catch (error) {\n        return null;\n    }\n}\nfunction getCssRuleString(rule) {\n    let cssStringified = rule.cssText;\n    if (isCSSImportRule(rule)) {\n        try {\n            cssStringified = getCssRulesString(rule.styleSheet) || cssStringified;\n        }\n        catch (_a) {\n        }\n    }\n    return validateStringifiedCssRule(cssStringified);\n}\nfunction validateStringifiedCssRule(cssStringified) {\n    if (cssStringified.indexOf(':') > -1) {\n        const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\n        return cssStringified.replace(regex, '$1\\\\$2');\n    }\n    return cssStringified;\n}\nfunction isCSSImportRule(rule) {\n    return 'styleSheet' in rule;\n}\nfunction stringifyStyleSheet(sheet) {\n    return sheet.cssRules\n        ? Array.from(sheet.cssRules)\n            .map((rule) => rule.cssText ? validateStringifiedCssRule(rule.cssText) : '')\n            .join('')\n        : '';\n}\nfunction extractOrigin(url) {\n    let origin = '';\n    if (url.indexOf('//') > -1) {\n        origin = url.split('/').slice(0, 3).join('/');\n    }\n    else {\n        origin = url.split('/')[0];\n    }\n    origin = origin.split('?')[0];\n    return origin;\n}\nlet canvasService;\nlet canvasCtx;\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\nconst RELATIVE_PATH = /^(?!www\\.|(?:http|ftp)s?:\\/\\/|[A-Za-z]:\\\\|\\/\\/|#).*/;\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\nfunction absoluteToStylesheet(cssText, href) {\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\n        const filePath = path1 || path2 || path3;\n        const maybeQuote = quote1 || quote2 || '';\n        if (!filePath) {\n            return origin;\n        }\n        if (!RELATIVE_PATH.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (DATA_URI.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (filePath[0] === '/') {\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\n        }\n        const stack = href.split('/');\n        const parts = filePath.split('/');\n        stack.pop();\n        for (const part of parts) {\n            if (part === '.') {\n                continue;\n            }\n            else if (part === '..') {\n                stack.pop();\n            }\n            else {\n                stack.push(part);\n            }\n        }\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\n    });\n}\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\n    if (attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    let pos = 0;\n    function collectCharacters(regEx) {\n        let chars;\n        let match = regEx.exec(attributeValue.substring(pos));\n        if (match) {\n            chars = match[0];\n            pos += chars.length;\n            return chars;\n        }\n        return '';\n    }\n    let output = [];\n    while (true) {\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\n        if (pos >= attributeValue.length) {\n            break;\n        }\n        let url = collectCharacters(SRCSET_NOT_SPACES);\n        if (url.slice(-1) === ',') {\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\n            output.push(url);\n        }\n        else {\n            let descriptorsStr = '';\n            url = absoluteToDoc(doc, url);\n            let inParens = false;\n            while (true) {\n                let c = attributeValue.charAt(pos);\n                if (c === '') {\n                    output.push((url + descriptorsStr).trim());\n                    break;\n                }\n                else if (!inParens) {\n                    if (c === ',') {\n                        pos += 1;\n                        output.push((url + descriptorsStr).trim());\n                        break;\n                    }\n                    else if (c === '(') {\n                        inParens = true;\n                    }\n                }\n                else {\n                    if (c === ')') {\n                        inParens = false;\n                    }\n                }\n                descriptorsStr += c;\n                pos += 1;\n            }\n        }\n    }\n    return output.join(', ');\n}\nfunction absoluteToDoc(doc, attributeValue) {\n    if (!attributeValue || attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    const a = doc.createElement('a');\n    a.href = attributeValue;\n    return a.href;\n}\nfunction isSVGElement(el) {\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\n}\nfunction getHref() {\n    const a = document.createElement('a');\n    a.href = '';\n    return a.href;\n}\nfunction transformAttribute(doc, element, _tagName, _name, value, maskAllText, unmaskTextSelector, maskTextFn) {\n    if (!value) {\n        return value;\n    }\n    const name = _name.toLowerCase();\n    const tagName = _tagName.toLowerCase();\n    if (name === 'src' || name === 'href') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'xlink:href' && value[0] !== '#') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'background' &&\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'srcset') {\n        return getAbsoluteSrcsetString(doc, value);\n    }\n    else if (name === 'style') {\n        return absoluteToStylesheet(value, getHref());\n    }\n    else if (tagName === 'object' && name === 'data') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (maskAllText &&\n        _shouldMaskAttribute(element, name, tagName, unmaskTextSelector)) {\n        return maskTextFn ? maskTextFn(value) : defaultMaskFn(value);\n    }\n    return value;\n}\nfunction _shouldMaskAttribute(element, attribute, tagName, unmaskTextSelector) {\n    if (unmaskTextSelector && element.matches(unmaskTextSelector)) {\n        return false;\n    }\n    return (['placeholder', 'title', 'aria-label'].indexOf(attribute) > -1 ||\n        (tagName === 'input' &&\n            attribute === 'value' &&\n            element.hasAttribute('type') &&\n            ['submit', 'button'].indexOf(element.getAttribute('type').toLowerCase()) > -1));\n}\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\n    if (unblockSelector && element.matches(unblockSelector)) {\n        return false;\n    }\n    if (typeof blockClass === 'string') {\n        if (element.classList.contains(blockClass)) {\n            return true;\n        }\n    }\n    else {\n        for (let eIndex = 0; eIndex < element.classList.length; eIndex++) {\n            const className = element.classList[eIndex];\n            if (blockClass.test(className)) {\n                return true;\n            }\n        }\n    }\n    if (blockSelector) {\n        return element.matches(blockSelector);\n    }\n    return false;\n}\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextSelector, maskAllText) {\n    if (!node) {\n        return false;\n    }\n    if (node.nodeType !== node.ELEMENT_NODE) {\n        return needMaskingText(node.parentNode, maskTextClass, maskTextSelector, unmaskTextSelector, maskAllText);\n    }\n    if (unmaskTextSelector) {\n        if (node.matches(unmaskTextSelector) ||\n            node.closest(unmaskTextSelector)) {\n            return false;\n        }\n    }\n    if (maskAllText) {\n        return true;\n    }\n    if (typeof maskTextClass === 'string') {\n        if (node.classList.contains(maskTextClass)) {\n            return true;\n        }\n    }\n    else {\n        for (let eIndex = 0; eIndex < node.classList.length; eIndex++) {\n            const className = node.classList[eIndex];\n            if (maskTextClass.test(className)) {\n                return true;\n            }\n        }\n    }\n    if (maskTextSelector) {\n        if (node.matches(maskTextSelector)) {\n            return true;\n        }\n    }\n    return needMaskingText(node.parentNode, maskTextClass, maskTextSelector, unmaskTextSelector, maskAllText);\n}\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\n    const win = iframeEl.contentWindow;\n    if (!win) {\n        return;\n    }\n    let fired = false;\n    let readyState;\n    try {\n        readyState = win.document.readyState;\n    }\n    catch (error) {\n        return;\n    }\n    if (readyState !== 'complete') {\n        const timer = setTimeout(() => {\n            if (!fired) {\n                listener();\n                fired = true;\n            }\n        }, iframeLoadTimeout);\n        iframeEl.addEventListener('load', () => {\n            clearTimeout(timer);\n            fired = true;\n            listener();\n        });\n        return;\n    }\n    const blankUrl = 'about:blank';\n    if (win.location.href !== blankUrl ||\n        iframeEl.src === blankUrl ||\n        iframeEl.src === '') {\n        setTimeout(listener, 0);\n        return;\n    }\n    iframeEl.addEventListener('load', listener);\n}\nfunction serializeNode(n, options) {\n    var _a;\n    const { doc, blockClass, blockSelector, unblockSelector, maskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputSelector, unmaskInputSelector, maskAllText, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, } = options;\n    let rootId;\n    if (doc.__sn) {\n        const docId = doc.__sn.id;\n        rootId = docId === 1 ? undefined : docId;\n    }\n    switch (n.nodeType) {\n        case n.DOCUMENT_NODE:\n            if (n.compatMode !== 'CSS1Compat') {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                    compatMode: n.compatMode,\n                    rootId,\n                };\n            }\n            else {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                    rootId,\n                };\n            }\n        case n.DOCUMENT_TYPE_NODE:\n            return {\n                type: NodeType$1.DocumentType,\n                name: n.name,\n                publicId: n.publicId,\n                systemId: n.systemId,\n                rootId,\n            };\n        case n.ELEMENT_NODE:\n            const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\n            const tagName = getValidTagName(n);\n            let attributes = {};\n            for (const { name, value } of Array.from(n.attributes)) {\n                if (!skipAttribute(tagName, name)) {\n                    attributes[name] = transformAttribute(doc, n, tagName, name, value, maskAllText, unmaskTextSelector, maskTextFn);\n                }\n            }\n            if (tagName === 'link' && inlineStylesheet) {\n                const stylesheet = Array.from(doc.styleSheets).find((s) => {\n                    return s.href === n.href;\n                });\n                let cssText = null;\n                if (stylesheet) {\n                    cssText = getCssRulesString(stylesheet);\n                }\n                if (cssText) {\n                    delete attributes.rel;\n                    delete attributes.href;\n                    attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\n                }\n            }\n            if (tagName === 'style' &&\n                n.sheet &&\n                !(n.innerText ||\n                    n.textContent ||\n                    '').trim().length) {\n                const cssText = getCssRulesString(n.sheet);\n                if (cssText) {\n                    attributes._cssText = absoluteToStylesheet(cssText, getHref());\n                }\n            }\n            if (tagName === 'input' ||\n                tagName === 'textarea' ||\n                tagName === 'select' ||\n                tagName === 'option') {\n                const el = n;\n                const type = getInputType(el);\n                const value = getInputValue(el, tagName.toUpperCase(), type);\n                const checked = n.checked;\n                if (type !== 'submit' &&\n                    type !== 'button' &&\n                    value) {\n                    attributes.value = maskInputValue({\n                        input: el,\n                        type,\n                        tagName,\n                        value,\n                        maskInputSelector,\n                        unmaskInputSelector,\n                        maskInputOptions,\n                        maskInputFn,\n                    });\n                }\n                if (checked) {\n                    attributes.checked = checked;\n                }\n            }\n            if (tagName === 'option') {\n                if (n.selected && !maskInputOptions['select']) {\n                    attributes.selected = true;\n                }\n                else {\n                    delete attributes.selected;\n                }\n            }\n            if (tagName === 'canvas' && recordCanvas) {\n                if (n.__context === '2d') {\n                    if (!is2DCanvasBlank(n)) {\n                        attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n                    }\n                }\n                else if (!('__context' in n)) {\n                    const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n                    const blankCanvas = document.createElement('canvas');\n                    blankCanvas.width = n.width;\n                    blankCanvas.height = n.height;\n                    const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n                    if (canvasDataURL !== blankCanvasDataURL) {\n                        attributes.rr_dataURL = canvasDataURL;\n                    }\n                }\n            }\n            if (tagName === 'img' && inlineImages) {\n                if (!canvasService) {\n                    canvasService = doc.createElement('canvas');\n                    canvasCtx = canvasService.getContext('2d');\n                }\n                const image = n;\n                const oldValue = image.crossOrigin;\n                image.crossOrigin = 'anonymous';\n                const recordInlineImage = () => {\n                    try {\n                        canvasService.width = image.naturalWidth;\n                        canvasService.height = image.naturalHeight;\n                        canvasCtx.drawImage(image, 0, 0);\n                        attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n                    }\n                    catch (err) {\n                        console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\n                    }\n                    oldValue\n                        ? (attributes.crossOrigin = oldValue)\n                        : delete attributes.crossOrigin;\n                };\n                if (image.complete && image.naturalWidth !== 0)\n                    recordInlineImage();\n                else\n                    image.onload = recordInlineImage;\n            }\n            if (tagName === 'audio' || tagName === 'video') {\n                attributes.rr_mediaState = n.paused\n                    ? 'paused'\n                    : 'played';\n                attributes.rr_mediaCurrentTime = n.currentTime;\n            }\n            if (n.scrollLeft) {\n                attributes.rr_scrollLeft = n.scrollLeft;\n            }\n            if (n.scrollTop) {\n                attributes.rr_scrollTop = n.scrollTop;\n            }\n            if (needBlock) {\n                const { width, height } = n.getBoundingClientRect();\n                attributes = {\n                    class: attributes.class,\n                    rr_width: `${width}px`,\n                    rr_height: `${height}px`,\n                };\n            }\n            if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\n                if (!n.contentDocument) {\n                    attributes.rr_src = attributes.src;\n                }\n                delete attributes.src;\n            }\n            return {\n                type: NodeType$1.Element,\n                tagName,\n                attributes,\n                childNodes: [],\n                isSVG: isSVGElement(n) || undefined,\n                needBlock,\n                rootId,\n            };\n        case n.TEXT_NODE:\n            const parentTagName = n.parentNode && n.parentNode.tagName;\n            let textContent = n.textContent;\n            const isStyle = parentTagName === 'STYLE' ? true : undefined;\n            const isScript = parentTagName === 'SCRIPT' ? true : undefined;\n            if (isStyle && textContent) {\n                try {\n                    if (n.nextSibling || n.previousSibling) {\n                    }\n                    else if ((_a = n.parentNode.sheet) === null || _a === void 0 ? void 0 : _a.cssRules) {\n                        textContent = stringifyStyleSheet(n.parentNode.sheet);\n                    }\n                }\n                catch (err) {\n                    console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\n                }\n                textContent = absoluteToStylesheet(textContent, getHref());\n            }\n            if (isScript) {\n                textContent = 'SCRIPT_PLACEHOLDER';\n            }\n            if (parentTagName === 'TEXTAREA' && textContent) {\n                textContent = '';\n            }\n            else if (parentTagName === 'OPTION' && textContent) {\n                const option = n.parentNode;\n                textContent = maskInputValue({\n                    input: option,\n                    type: null,\n                    tagName: parentTagName,\n                    value: textContent,\n                    maskInputSelector,\n                    unmaskInputSelector,\n                    maskInputOptions,\n                    maskInputFn,\n                });\n            }\n            else if (!isStyle &&\n                !isScript &&\n                needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextSelector, maskAllText) &&\n                textContent) {\n                textContent = maskTextFn\n                    ? maskTextFn(textContent)\n                    : defaultMaskFn(textContent);\n            }\n            return {\n                type: NodeType$1.Text,\n                textContent: textContent || '',\n                isStyle,\n                rootId,\n            };\n        case n.CDATA_SECTION_NODE:\n            return {\n                type: NodeType$1.CDATA,\n                textContent: '',\n                rootId,\n            };\n        case n.COMMENT_NODE:\n            return {\n                type: NodeType$1.Comment,\n                textContent: n.textContent || '',\n                rootId,\n            };\n        default:\n            return false;\n    }\n}\nfunction lowerIfExists(maybeAttr) {\n    if (maybeAttr === undefined || maybeAttr === null) {\n        return '';\n    }\n    else {\n        return maybeAttr.toLowerCase();\n    }\n}\nfunction slimDOMExcluded(sn, slimDOMOptions) {\n    if (slimDOMOptions.comment && sn.type === NodeType$1.Comment) {\n        return true;\n    }\n    else if (sn.type === NodeType$1.Element) {\n        if (slimDOMOptions.script &&\n            (sn.tagName === 'script' ||\n                (sn.tagName === 'link' &&\n                    (sn.attributes.rel === 'preload' ||\n                        sn.attributes.rel === 'modulepreload') &&\n                    sn.attributes.as === 'script') ||\n                (sn.tagName === 'link' &&\n                    sn.attributes.rel === 'prefetch' &&\n                    typeof sn.attributes.href === 'string' &&\n                    sn.attributes.href.endsWith('.js')))) {\n            return true;\n        }\n        else if (slimDOMOptions.headFavicon &&\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\n                (sn.tagName === 'meta' &&\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\n            return true;\n        }\n        else if (sn.tagName === 'meta') {\n            if (slimDOMOptions.headMetaDescKeywords &&\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaSocial &&\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaRobots &&\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaHttpEquiv &&\n                sn.attributes['http-equiv'] !== undefined) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaAuthorship &&\n                (lowerIfExists(sn.attributes.name) === 'author' ||\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaVerification &&\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction serializeNodeWithId(n, options) {\n    const { doc, map, blockClass, blockSelector, unblockSelector, maskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputSelector, unmaskInputSelector, maskAllText, maskInputOptions = {}, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, keepIframeSrcFn = () => false, } = options;\n    let { preserveWhiteSpace = true } = options;\n    const _serializedNode = serializeNode(n, {\n        doc,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        maskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        inlineStylesheet,\n        maskInputSelector,\n        unmaskInputSelector,\n        maskAllText,\n        maskInputOptions,\n        maskTextFn,\n        maskInputFn,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        keepIframeSrcFn,\n    });\n    if (!_serializedNode) {\n        console.warn(n, 'not serialized');\n        return null;\n    }\n    let id;\n    if ('__sn' in n) {\n        id = n.__sn.id;\n    }\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\n        (!preserveWhiteSpace &&\n            _serializedNode.type === NodeType$1.Text &&\n            !_serializedNode.isStyle &&\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\n        id = IGNORED_NODE;\n    }\n    else {\n        id = genId();\n    }\n    const serializedNode = Object.assign(_serializedNode, { id });\n    n.__sn = serializedNode;\n    if (id === IGNORED_NODE) {\n        return null;\n    }\n    map[id] = n;\n    if (onSerialize) {\n        onSerialize(n);\n    }\n    let recordChild = !skipChild;\n    if (serializedNode.type === NodeType$1.Element) {\n        recordChild = recordChild && !serializedNode.needBlock;\n        delete serializedNode.needBlock;\n        if (n.shadowRoot)\n            serializedNode.isShadowHost = true;\n    }\n    if ((serializedNode.type === NodeType$1.Document ||\n        serializedNode.type === NodeType$1.Element) &&\n        recordChild) {\n        if (slimDOMOptions.headWhitespace &&\n            _serializedNode.type === NodeType$1.Element &&\n            _serializedNode.tagName === 'head') {\n            preserveWhiteSpace = false;\n        }\n        const bypassOptions = {\n            doc,\n            map,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild,\n            inlineStylesheet,\n            maskInputSelector,\n            unmaskInputSelector,\n            maskAllText,\n            maskInputOptions,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            keepIframeSrcFn,\n        };\n        for (const childN of Array.from(n.childNodes)) {\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n            if (serializedChildNode) {\n                serializedNode.childNodes.push(serializedChildNode);\n            }\n        }\n        if (isElement(n) && n.shadowRoot) {\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n                if (serializedChildNode) {\n                    serializedChildNode.isShadow = true;\n                    serializedNode.childNodes.push(serializedChildNode);\n                }\n            }\n        }\n    }\n    if (n.parentNode && isShadowRoot(n.parentNode)) {\n        serializedNode.isShadow = true;\n    }\n    if (serializedNode.type === NodeType$1.Element &&\n        serializedNode.tagName === 'iframe') {\n        onceIframeLoaded(n, () => {\n            const iframeDoc = n.contentDocument;\n            if (iframeDoc && onIframeLoad) {\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\n                    doc: iframeDoc,\n                    map,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputSelector,\n                    unmaskInputSelector,\n                    maskAllText,\n                    maskInputOptions,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedIframeNode) {\n                    onIframeLoad(n, serializedIframeNode);\n                }\n            }\n        }, iframeLoadTimeout);\n    }\n    return serializedNode;\n}\nfunction snapshot(n, options) {\n    const { blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskTextClass = 'rr-mask', maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskInputSelector = null, unmaskInputSelector = null, maskAllText = false, maskAllInputs = false, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\n    const idNodeMap = {};\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n        }\n        : maskAllInputs === false\n            ? {}\n            : maskAllInputs;\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\n        ?\n            {\n                script: true,\n                comment: true,\n                headFavicon: true,\n                headWhitespace: true,\n                headMetaDescKeywords: slimDOM === 'all',\n                headMetaSocial: true,\n                headMetaRobots: true,\n                headMetaHttpEquiv: true,\n                headMetaAuthorship: true,\n                headMetaVerification: true,\n            }\n        : slimDOM === false\n            ? {}\n            : slimDOM;\n    return [\n        serializeNodeWithId(n, {\n            doc: n,\n            map: idNodeMap,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild: false,\n            inlineStylesheet,\n            maskInputSelector,\n            unmaskInputSelector,\n            maskAllText,\n            maskInputOptions,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            keepIframeSrcFn,\n        }),\n        idNodeMap,\n    ];\n}\nfunction skipAttribute(tagName, attributeName, value) {\n    return ((tagName === 'video' || tagName === 'audio') && attributeName === 'autoplay');\n}\n\nvar EventType;\n(function (EventType) {\n    EventType[EventType[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n    EventType[EventType[\"Load\"] = 1] = \"Load\";\n    EventType[EventType[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n    EventType[EventType[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n    EventType[EventType[\"Meta\"] = 4] = \"Meta\";\n    EventType[EventType[\"Custom\"] = 5] = \"Custom\";\n    EventType[EventType[\"Plugin\"] = 6] = \"Plugin\";\n})(EventType || (EventType = {}));\nvar IncrementalSource;\n(function (IncrementalSource) {\n    IncrementalSource[IncrementalSource[\"Mutation\"] = 0] = \"Mutation\";\n    IncrementalSource[IncrementalSource[\"MouseMove\"] = 1] = \"MouseMove\";\n    IncrementalSource[IncrementalSource[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n    IncrementalSource[IncrementalSource[\"Scroll\"] = 3] = \"Scroll\";\n    IncrementalSource[IncrementalSource[\"ViewportResize\"] = 4] = \"ViewportResize\";\n    IncrementalSource[IncrementalSource[\"Input\"] = 5] = \"Input\";\n    IncrementalSource[IncrementalSource[\"TouchMove\"] = 6] = \"TouchMove\";\n    IncrementalSource[IncrementalSource[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n    IncrementalSource[IncrementalSource[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n    IncrementalSource[IncrementalSource[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n    IncrementalSource[IncrementalSource[\"Font\"] = 10] = \"Font\";\n    IncrementalSource[IncrementalSource[\"Log\"] = 11] = \"Log\";\n    IncrementalSource[IncrementalSource[\"Drag\"] = 12] = \"Drag\";\n    IncrementalSource[IncrementalSource[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n})(IncrementalSource || (IncrementalSource = {}));\nvar MouseInteractions;\n(function (MouseInteractions) {\n    MouseInteractions[MouseInteractions[\"MouseUp\"] = 0] = \"MouseUp\";\n    MouseInteractions[MouseInteractions[\"MouseDown\"] = 1] = \"MouseDown\";\n    MouseInteractions[MouseInteractions[\"Click\"] = 2] = \"Click\";\n    MouseInteractions[MouseInteractions[\"ContextMenu\"] = 3] = \"ContextMenu\";\n    MouseInteractions[MouseInteractions[\"DblClick\"] = 4] = \"DblClick\";\n    MouseInteractions[MouseInteractions[\"Focus\"] = 5] = \"Focus\";\n    MouseInteractions[MouseInteractions[\"Blur\"] = 6] = \"Blur\";\n    MouseInteractions[MouseInteractions[\"TouchStart\"] = 7] = \"TouchStart\";\n    MouseInteractions[MouseInteractions[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n    MouseInteractions[MouseInteractions[\"TouchEnd\"] = 9] = \"TouchEnd\";\n    MouseInteractions[MouseInteractions[\"TouchCancel\"] = 10] = \"TouchCancel\";\n})(MouseInteractions || (MouseInteractions = {}));\nvar CanvasContext;\n(function (CanvasContext) {\n    CanvasContext[CanvasContext[\"2D\"] = 0] = \"2D\";\n    CanvasContext[CanvasContext[\"WebGL\"] = 1] = \"WebGL\";\n    CanvasContext[CanvasContext[\"WebGL2\"] = 2] = \"WebGL2\";\n})(CanvasContext || (CanvasContext = {}));\nvar MediaInteractions;\n(function (MediaInteractions) {\n    MediaInteractions[MediaInteractions[\"Play\"] = 0] = \"Play\";\n    MediaInteractions[MediaInteractions[\"Pause\"] = 1] = \"Pause\";\n    MediaInteractions[MediaInteractions[\"Seeked\"] = 2] = \"Seeked\";\n    MediaInteractions[MediaInteractions[\"VolumeChange\"] = 3] = \"VolumeChange\";\n})(MediaInteractions || (MediaInteractions = {}));\nvar ReplayerEvents;\n(function (ReplayerEvents) {\n    ReplayerEvents[\"Start\"] = \"start\";\n    ReplayerEvents[\"Pause\"] = \"pause\";\n    ReplayerEvents[\"Resume\"] = \"resume\";\n    ReplayerEvents[\"Resize\"] = \"resize\";\n    ReplayerEvents[\"Finish\"] = \"finish\";\n    ReplayerEvents[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n    ReplayerEvents[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n    ReplayerEvents[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n    ReplayerEvents[\"SkipStart\"] = \"skip-start\";\n    ReplayerEvents[\"SkipEnd\"] = \"skip-end\";\n    ReplayerEvents[\"MouseInteraction\"] = \"mouse-interaction\";\n    ReplayerEvents[\"EventCast\"] = \"event-cast\";\n    ReplayerEvents[\"CustomEvent\"] = \"custom-event\";\n    ReplayerEvents[\"Flush\"] = \"flush\";\n    ReplayerEvents[\"StateChange\"] = \"state-change\";\n    ReplayerEvents[\"PlayBack\"] = \"play-back\";\n})(ReplayerEvents || (ReplayerEvents = {}));\n\nfunction on(type, fn, target = document) {\n    const options = { capture: true, passive: true };\n    target.addEventListener(type, fn, options);\n    return () => target.removeEventListener(type, fn, options);\n}\nfunction createMirror() {\n    return {\n        map: {},\n        getId(n) {\n            if (!n || !n.__sn) {\n                return -1;\n            }\n            return n.__sn.id;\n        },\n        getNode(id) {\n            return this.map[id] || null;\n        },\n        removeNodeFromMap(n) {\n            const id = n.__sn && n.__sn.id;\n            delete this.map[id];\n            if (n.childNodes) {\n                n.childNodes.forEach((child) => this.removeNodeFromMap(child));\n            }\n        },\n        has(id) {\n            return this.map.hasOwnProperty(id);\n        },\n        reset() {\n            this.map = {};\n        },\n    };\n}\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\n    '\\r\\n' +\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\n    '\\r\\n' +\n    'or you can use record.mirror to access the mirror instance during recording.';\nlet _mirror = {\n    map: {},\n    getId() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return -1;\n    },\n    getNode() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return null;\n    },\n    removeNodeFromMap() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n    has() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return false;\n    },\n    reset() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n    _mirror = new Proxy(_mirror, {\n        get(target, prop, receiver) {\n            if (prop === 'map') {\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\nfunction throttle$1(func, wait, options = {}) {\n    let timeout = null;\n    let previous = 0;\n    return function (arg) {\n        let now = Date.now();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        let remaining = wait - (now - previous);\n        let context = this;\n        let args = arguments;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(() => {\n                previous = options.leading === false ? 0 : Date.now();\n                timeout = null;\n                func.apply(context, args);\n            }, remaining);\n        }\n    };\n}\nfunction hookSetter(target, key, d, isRevoked, win = window) {\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\n    win.Object.defineProperty(target, key, isRevoked\n        ? d\n        : {\n            set(value) {\n                setTimeout(() => {\n                    d.set.call(this, value);\n                }, 0);\n                if (original && original.set) {\n                    original.set.call(this, value);\n                }\n            },\n        });\n    return () => hookSetter(target, key, original || {}, true);\n}\nfunction patch(source, name, replacement) {\n    try {\n        if (!(name in source)) {\n            return () => { };\n        }\n        const original = source[name];\n        const wrapped = replacement(original);\n        if (typeof wrapped === 'function') {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __rrweb_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n            });\n        }\n        source[name] = wrapped;\n        return () => {\n            source[name] = original;\n        };\n    }\n    catch (_a) {\n        return () => { };\n    }\n}\nfunction getWindowHeight() {\n    return (window.innerHeight ||\n        (document.documentElement && document.documentElement.clientHeight) ||\n        (document.body && document.body.clientHeight));\n}\nfunction getWindowWidth() {\n    return (window.innerWidth ||\n        (document.documentElement && document.documentElement.clientWidth) ||\n        (document.body && document.body.clientWidth));\n}\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector) {\n    if (!node) {\n        return false;\n    }\n    if (node.nodeType === node.ELEMENT_NODE) {\n        let needBlock = false;\n        const needUnblock = unblockSelector && node.matches(unblockSelector);\n        if (typeof blockClass === 'string') {\n            if (node.closest !== undefined) {\n                needBlock =\n                    !needUnblock &&\n                        node.closest('.' + blockClass) !== null;\n            }\n            else {\n                needBlock =\n                    !needUnblock && node.classList.contains(blockClass);\n            }\n        }\n        else {\n            !needUnblock &&\n                node.classList.forEach((className) => {\n                    if (blockClass.test(className)) {\n                        needBlock = true;\n                    }\n                });\n        }\n        if (!needBlock && blockSelector) {\n            needBlock = node.matches(blockSelector);\n        }\n        return ((!needUnblock && needBlock) ||\n            isBlocked(node.parentNode, blockClass, blockSelector, unblockSelector));\n    }\n    if (node.nodeType === node.TEXT_NODE) {\n        return isBlocked(node.parentNode, blockClass, blockSelector, unblockSelector);\n    }\n    return isBlocked(node.parentNode, blockClass, blockSelector, unblockSelector);\n}\nfunction isIgnored(n) {\n    if ('__sn' in n) {\n        return n.__sn.id === IGNORED_NODE;\n    }\n    return false;\n}\nfunction isAncestorRemoved(target, mirror) {\n    if (isShadowRoot(target)) {\n        return false;\n    }\n    const id = mirror.getId(target);\n    if (!mirror.has(id)) {\n        return true;\n    }\n    if (target.parentNode &&\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\n        return false;\n    }\n    if (!target.parentNode) {\n        return true;\n    }\n    return isAncestorRemoved(target.parentNode, mirror);\n}\nfunction isTouchEvent(event) {\n    return Boolean(event.changedTouches);\n}\nfunction polyfill(win = window) {\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\n        win.NodeList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\n        win.DOMTokenList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if (!Node.prototype.contains) {\n        Node.prototype.contains = function contains(node) {\n            if (!(0 in arguments)) {\n                throw new TypeError('1 argument is required');\n            }\n            do {\n                if (this === node) {\n                    return true;\n                }\n            } while ((node = node && node.parentNode));\n            return false;\n        };\n    }\n}\nfunction isIframeINode(node) {\n    if ('__sn' in node) {\n        return (node.__sn.type === NodeType$1.Element && node.__sn.tagName === 'iframe');\n    }\n    return false;\n}\nfunction hasShadowRoot(n) {\n    return Boolean(n === null || n === void 0 ? void 0 : n.shadowRoot);\n}\n\nfunction isNodeInLinkedList(n) {\n    return '__ln' in n;\n}\nclass DoubleLinkedList {\n    constructor() {\n        this.length = 0;\n        this.head = null;\n    }\n    get(position) {\n        if (position >= this.length) {\n            throw new Error('Position outside of list range');\n        }\n        let current = this.head;\n        for (let index = 0; index < position; index++) {\n            current = (current === null || current === void 0 ? void 0 : current.next) || null;\n        }\n        return current;\n    }\n    addNode(n) {\n        const node = {\n            value: n,\n            previous: null,\n            next: null,\n        };\n        n.__ln = node;\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\n            const current = n.previousSibling.__ln.next;\n            node.next = current;\n            node.previous = n.previousSibling.__ln;\n            n.previousSibling.__ln.next = node;\n            if (current) {\n                current.previous = node;\n            }\n        }\n        else if (n.nextSibling &&\n            isNodeInLinkedList(n.nextSibling) &&\n            n.nextSibling.__ln.previous) {\n            const current = n.nextSibling.__ln.previous;\n            node.previous = current;\n            node.next = n.nextSibling.__ln;\n            n.nextSibling.__ln.previous = node;\n            if (current) {\n                current.next = node;\n            }\n        }\n        else {\n            if (this.head) {\n                this.head.previous = node;\n            }\n            node.next = this.head;\n            this.head = node;\n        }\n        this.length++;\n    }\n    removeNode(n) {\n        const current = n.__ln;\n        if (!this.head) {\n            return;\n        }\n        if (!current.previous) {\n            this.head = current.next;\n            if (this.head) {\n                this.head.previous = null;\n            }\n        }\n        else {\n            current.previous.next = current.next;\n            if (current.next) {\n                current.next.previous = current.previous;\n            }\n        }\n        if (n.__ln) {\n            delete n.__ln;\n        }\n        this.length--;\n    }\n}\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\nfunction isINode(n) {\n    return '__sn' in n;\n}\nclass MutationBuffer {\n    constructor() {\n        this.frozen = false;\n        this.locked = false;\n        this.texts = [];\n        this.attributes = [];\n        this.removes = [];\n        this.mapRemoves = [];\n        this.movedMap = {};\n        this.addedSet = new Set();\n        this.movedSet = new Set();\n        this.droppedSet = new Set();\n        this.processMutations = (mutations) => {\n            mutations.forEach(this.processMutation);\n            this.emit();\n        };\n        this.emit = () => {\n            if (this.frozen || this.locked) {\n                return;\n            }\n            const adds = [];\n            const addList = new DoubleLinkedList();\n            const getNextId = (n) => {\n                let ns = n;\n                let nextId = IGNORED_NODE;\n                while (nextId === IGNORED_NODE) {\n                    ns = ns && ns.nextSibling;\n                    nextId = ns && this.mirror.getId(ns);\n                }\n                return nextId;\n            };\n            const pushAdd = (n) => {\n                var _a, _b, _c, _d, _e;\n                const shadowHost = n.getRootNode\n                    ? (_a = n.getRootNode()) === null || _a === void 0 ? void 0 : _a.host\n                    : null;\n                let rootShadowHost = shadowHost;\n                while ((_c = (_b = rootShadowHost === null || rootShadowHost === void 0 ? void 0 : rootShadowHost.getRootNode) === null || _b === void 0 ? void 0 : _b.call(rootShadowHost)) === null || _c === void 0 ? void 0 : _c.host)\n                    rootShadowHost =\n                        ((_e = (_d = rootShadowHost === null || rootShadowHost === void 0 ? void 0 : rootShadowHost.getRootNode) === null || _d === void 0 ? void 0 : _d.call(rootShadowHost)) === null || _e === void 0 ? void 0 : _e.host) ||\n                            null;\n                const notInDoc = !this.doc.contains(n) &&\n                    (!rootShadowHost || !this.doc.contains(rootShadowHost));\n                if (!n.parentNode || notInDoc) {\n                    return;\n                }\n                const parentId = isShadowRoot(n.parentNode)\n                    ? this.mirror.getId(shadowHost)\n                    : this.mirror.getId(n.parentNode);\n                const nextId = getNextId(n);\n                if (parentId === -1 || nextId === -1) {\n                    return addList.addNode(n);\n                }\n                let sn = serializeNodeWithId(n, {\n                    doc: this.doc,\n                    map: this.mirror.map,\n                    blockClass: this.blockClass,\n                    blockSelector: this.blockSelector,\n                    unblockSelector: this.unblockSelector,\n                    maskTextClass: this.maskTextClass,\n                    maskTextSelector: this.maskTextSelector,\n                    unmaskTextSelector: this.unmaskTextSelector,\n                    maskInputSelector: this.maskInputSelector,\n                    unmaskInputSelector: this.unmaskInputSelector,\n                    skipChild: true,\n                    inlineStylesheet: this.inlineStylesheet,\n                    maskAllText: this.maskAllText,\n                    maskInputOptions: this.maskInputOptions,\n                    maskTextFn: this.maskTextFn,\n                    maskInputFn: this.maskInputFn,\n                    slimDOMOptions: this.slimDOMOptions,\n                    recordCanvas: this.recordCanvas,\n                    inlineImages: this.inlineImages,\n                    onSerialize: (currentN) => {\n                        if (isIframeINode(currentN)) {\n                            this.iframeManager.addIframe(currentN);\n                        }\n                        if (hasShadowRoot(n)) {\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, document);\n                        }\n                    },\n                    onIframeLoad: (iframe, childSn) => {\n                        this.iframeManager.attachIframe(iframe, childSn);\n                        this.shadowDomManager.observeAttachShadow(iframe);\n                    },\n                });\n                if (sn) {\n                    adds.push({\n                        parentId,\n                        nextId,\n                        node: sn,\n                    });\n                }\n            };\n            while (this.mapRemoves.length) {\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\n            }\n            for (const n of this.movedSet) {\n                if (isParentRemoved(this.removes, n, this.mirror) &&\n                    !this.movedSet.has(n.parentNode)) {\n                    continue;\n                }\n                pushAdd(n);\n            }\n            for (const n of this.addedSet) {\n                if (!isAncestorInSet(this.droppedSet, n) &&\n                    !isParentRemoved(this.removes, n, this.mirror)) {\n                    pushAdd(n);\n                }\n                else if (isAncestorInSet(this.movedSet, n)) {\n                    pushAdd(n);\n                }\n                else {\n                    this.droppedSet.add(n);\n                }\n            }\n            let candidate = null;\n            while (addList.length) {\n                let node = null;\n                if (candidate) {\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\n                    const nextId = getNextId(candidate.value);\n                    if (parentId !== -1 && nextId !== -1) {\n                        node = candidate;\n                    }\n                }\n                if (!node) {\n                    for (let index = addList.length - 1; index >= 0; index--) {\n                        const _node = addList.get(index);\n                        if (_node) {\n                            const parentId = this.mirror.getId(_node.value.parentNode);\n                            const nextId = getNextId(_node.value);\n                            if (parentId !== -1 && nextId !== -1) {\n                                node = _node;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!node) {\n                    while (addList.head) {\n                        addList.removeNode(addList.head.value);\n                    }\n                    break;\n                }\n                candidate = node.previous;\n                addList.removeNode(node.value);\n                pushAdd(node.value);\n            }\n            const payload = {\n                texts: this.texts\n                    .map((text) => ({\n                    id: this.mirror.getId(text.node),\n                    value: text.value,\n                }))\n                    .filter((text) => this.mirror.has(text.id)),\n                attributes: this.attributes\n                    .map((attribute) => ({\n                    id: this.mirror.getId(attribute.node),\n                    attributes: attribute.attributes,\n                }))\n                    .filter((attribute) => this.mirror.has(attribute.id)),\n                removes: this.removes,\n                adds,\n            };\n            if (!payload.texts.length &&\n                !payload.attributes.length &&\n                !payload.removes.length &&\n                !payload.adds.length) {\n                return;\n            }\n            this.texts = [];\n            this.attributes = [];\n            this.removes = [];\n            this.addedSet = new Set();\n            this.movedSet = new Set();\n            this.droppedSet = new Set();\n            this.movedMap = {};\n            this.mutationCb(payload);\n        };\n        this.processMutation = (m) => {\n            if (isIgnored(m.target)) {\n                return;\n            }\n            switch (m.type) {\n                case 'characterData': {\n                    const value = m.target.textContent;\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector) && value !== m.oldValue) {\n                        this.texts.push({\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextSelector, this.maskAllText) && value\n                                ? this.maskTextFn\n                                    ? this.maskTextFn(value)\n                                    : value.replace(/[\\S]/g, '*')\n                                : value,\n                            node: m.target,\n                        });\n                    }\n                    break;\n                }\n                case 'attributes': {\n                    const target = m.target;\n                    let value = target.getAttribute(m.attributeName);\n                    if (m.attributeName === 'value') {\n                        value = maskInputValue({\n                            input: target,\n                            maskInputSelector: this.maskInputSelector,\n                            unmaskInputSelector: this.unmaskInputSelector,\n                            maskInputOptions: this.maskInputOptions,\n                            tagName: target.tagName,\n                            type: target.getAttribute('type'),\n                            value,\n                            maskInputFn: this.maskInputFn,\n                        });\n                    }\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector) || value === m.oldValue) {\n                        return;\n                    }\n                    let item = this.attributes.find((a) => a.node === m.target);\n                    if (!item) {\n                        item = {\n                            node: m.target,\n                            attributes: {},\n                        };\n                        this.attributes.push(item);\n                    }\n                    if (m.attributeName === 'type' &&\n                        target.tagName === 'INPUT' &&\n                        (m.oldValue || '').toLowerCase() === 'password') {\n                        target.setAttribute('data-rr-is-password', 'true');\n                    }\n                    if (m.attributeName === 'style') {\n                        const old = this.doc.createElement('span');\n                        if (m.oldValue) {\n                            old.setAttribute('style', m.oldValue);\n                        }\n                        if (item.attributes.style === undefined ||\n                            item.attributes.style === null) {\n                            item.attributes.style = {};\n                        }\n                        try {\n                            const styleObj = item.attributes.style;\n                            for (const pname of Array.from(target.style)) {\n                                const newValue = target.style.getPropertyValue(pname);\n                                const newPriority = target.style.getPropertyPriority(pname);\n                                if (newValue !== old.style.getPropertyValue(pname) ||\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\n                                    if (newPriority === '') {\n                                        styleObj[pname] = newValue;\n                                    }\n                                    else {\n                                        styleObj[pname] = [newValue, newPriority];\n                                    }\n                                }\n                            }\n                            for (const pname of Array.from(old.style)) {\n                                if (target.style.getPropertyValue(pname) === '') {\n                                    styleObj[pname] = false;\n                                }\n                            }\n                        }\n                        catch (error) {\n                            console.warn('[rrweb] Error when parsing update to style attribute:', error);\n                        }\n                    }\n                    else {\n                        const element = m.target;\n                        item.attributes[m.attributeName] = transformAttribute(this.doc, element, element.tagName, m.attributeName, value, this.maskAllText, this.unmaskTextSelector, this.maskTextFn);\n                    }\n                    break;\n                }\n                case 'childList': {\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\n                    m.removedNodes.forEach((n) => {\n                        const nodeId = this.mirror.getId(n);\n                        const parentId = isShadowRoot(m.target)\n                            ? this.mirror.getId(m.target.host)\n                            : this.mirror.getId(m.target);\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector) || isIgnored(n)) {\n                            return;\n                        }\n                        if (this.addedSet.has(n)) {\n                            deepDelete(this.addedSet, n);\n                            this.droppedSet.add(n);\n                        }\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\n                        else if (this.movedSet.has(n) &&\n                            this.movedMap[moveKey(nodeId, parentId)]) {\n                            deepDelete(this.movedSet, n);\n                        }\n                        else {\n                            this.removes.push({\n                                parentId,\n                                id: nodeId,\n                                isShadow: isShadowRoot(m.target) ? true : undefined,\n                            });\n                        }\n                        this.mapRemoves.push(n);\n                    });\n                    break;\n                }\n            }\n        };\n        this.genAdds = (n, target) => {\n            if (target && isBlocked(target, this.blockClass, this.blockSelector, this.unblockSelector)) {\n                return;\n            }\n            if (isINode(n)) {\n                if (isIgnored(n)) {\n                    return;\n                }\n                this.movedSet.add(n);\n                let targetId = null;\n                if (target && isINode(target)) {\n                    targetId = target.__sn.id;\n                }\n                if (targetId) {\n                    this.movedMap[moveKey(n.__sn.id, targetId)] = true;\n                }\n            }\n            else {\n                this.addedSet.add(n);\n                this.droppedSet.delete(n);\n            }\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector))\n                n.childNodes.forEach((childN) => this.genAdds(childN));\n        };\n    }\n    init(options) {\n        [\n            'mutationCb',\n            'blockClass',\n            'blockSelector',\n            'unblockSelector',\n            'maskTextClass',\n            'maskTextSelector',\n            'unmaskTextSelector',\n            'maskInputSelector',\n            'unmaskInputSelector',\n            'inlineStylesheet',\n            'maskAllText',\n            'maskInputOptions',\n            'maskTextFn',\n            'maskInputFn',\n            'recordCanvas',\n            'inlineImages',\n            'slimDOMOptions',\n            'doc',\n            'mirror',\n            'iframeManager',\n            'shadowDomManager',\n            'canvasManager',\n        ].forEach((key) => {\n            this[key] = options[key];\n        });\n    }\n    freeze() {\n        this.frozen = true;\n        this.canvasManager.freeze();\n    }\n    unfreeze() {\n        this.frozen = false;\n        this.canvasManager.unfreeze();\n        this.emit();\n    }\n    isFrozen() {\n        return this.frozen;\n    }\n    lock() {\n        this.locked = true;\n        this.canvasManager.lock();\n    }\n    unlock() {\n        this.locked = false;\n        this.canvasManager.unlock();\n        this.emit();\n    }\n    reset() {\n        this.shadowDomManager.reset();\n        this.canvasManager.reset();\n    }\n}\nfunction deepDelete(addsSet, n) {\n    addsSet.delete(n);\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\n}\nfunction isParentRemoved(removes, n, mirror) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    const parentId = mirror.getId(parentNode);\n    if (removes.some((r) => r.id === parentId)) {\n        return true;\n    }\n    return isParentRemoved(removes, parentNode, mirror);\n}\nfunction isAncestorInSet(set, n) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    if (set.has(parentNode)) {\n        return true;\n    }\n    return isAncestorInSet(set, parentNode);\n}\n\nconst callbackWrapper = (cb) => {\n    const rrwebWrapped = (...rest) => {\n        try {\n            return cb(...rest);\n        }\n        catch (error) {\n            try {\n                error.__rrweb__ = true;\n            }\n            catch (_a) {\n            }\n            throw error;\n        }\n    };\n    return rrwebWrapped;\n};\n\nconst mutationBuffers = [];\nfunction getEventTarget(event) {\n    try {\n        if ('composedPath' in event) {\n            const path = event.composedPath();\n            if (path.length) {\n                return path[0];\n            }\n        }\n        else if ('path' in event && event.path.length) {\n            return event.path[0];\n        }\n    }\n    catch (_a) { }\n    return event && event.target;\n}\nfunction initMutationObserver(options, rootEl) {\n    var _a, _b;\n    const mutationBuffer = new MutationBuffer();\n    mutationBuffers.push(mutationBuffer);\n    mutationBuffer.init(options);\n    let mutationObserverCtor = window.MutationObserver ||\n        window.__rrMutationObserver;\n    const angularZoneSymbol = (_b = (_a = window === null || window === void 0 ? void 0 : window.Zone) === null || _a === void 0 ? void 0 : _a.__symbol__) === null || _b === void 0 ? void 0 : _b.call(_a, 'MutationObserver');\n    if (angularZoneSymbol &&\n        window[angularZoneSymbol]) {\n        mutationObserverCtor = window[angularZoneSymbol];\n    }\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\n        if (options.onMutation && options.onMutation(mutations) === false) {\n            return;\n        }\n        mutationBuffer.processMutations(mutations);\n    }));\n    observer.observe(rootEl, {\n        attributes: true,\n        attributeOldValue: true,\n        characterData: true,\n        characterDataOldValue: true,\n        childList: true,\n        subtree: true,\n    });\n    return observer;\n}\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\n    if (sampling.mousemove === false) {\n        return () => { };\n    }\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\n        ? sampling.mousemoveCallback\n        : 500;\n    let positions = [];\n    let timeBaseline;\n    const wrappedCb = throttle$1((source) => {\n        const totalOffset = Date.now() - timeBaseline;\n        callbackWrapper(mousemoveCb)(positions.map((p) => {\n            p.timeOffset -= totalOffset;\n            return p;\n        }), source);\n        positions = [];\n        timeBaseline = null;\n    }, callbackThreshold);\n    const updatePosition = throttle$1((evt) => {\n        const target = getEventTarget(evt);\n        const { clientX, clientY } = isTouchEvent(evt)\n            ? evt.changedTouches[0]\n            : evt;\n        if (!timeBaseline) {\n            timeBaseline = Date.now();\n        }\n        positions.push({\n            x: clientX,\n            y: clientY,\n            id: mirror.getId(target),\n            timeOffset: Date.now() - timeBaseline,\n        });\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\n            ? IncrementalSource.Drag\n            : evt instanceof MouseEvent\n                ? IncrementalSource.MouseMove\n                : IncrementalSource.TouchMove);\n    }, threshold, {\n        trailing: false,\n    });\n    const handlers = [\n        on('mousemove', callbackWrapper(updatePosition), doc),\n        on('touchmove', callbackWrapper(updatePosition), doc),\n        on('drag', callbackWrapper(updatePosition), doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    if (sampling.mouseInteraction === false) {\n        return () => { };\n    }\n    const disableMap = sampling.mouseInteraction === true ||\n        sampling.mouseInteraction === undefined\n        ? {}\n        : sampling.mouseInteraction;\n    const handlers = [];\n    const getHandler = (eventKey) => {\n        return (event) => {\n            const target = getEventTarget(event);\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector)) {\n                return;\n            }\n            const e = isTouchEvent(event) ? event.changedTouches[0] : event;\n            if (!e) {\n                return;\n            }\n            const id = mirror.getId(target);\n            const { clientX, clientY } = e;\n            callbackWrapper(mouseInteractionCb)({\n                type: MouseInteractions[eventKey],\n                id,\n                x: clientX,\n                y: clientY,\n            });\n        };\n    };\n    Object.keys(MouseInteractions)\n        .filter((key) => Number.isNaN(Number(key)) &&\n        !key.endsWith('_Departed') &&\n        disableMap[key] !== false)\n        .forEach((eventKey) => {\n        const eventName = eventKey.toLowerCase();\n        const handler = callbackWrapper(getHandler(eventKey));\n        handlers.push(on(eventName, handler, doc));\n    });\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    const updatePosition = throttle$1((evt) => {\n        const target = getEventTarget(evt);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector)) {\n            return;\n        }\n        const id = mirror.getId(target);\n        if (target === doc) {\n            const scrollEl = (doc.scrollingElement || doc.documentElement);\n            callbackWrapper(scrollCb)({\n                id,\n                x: scrollEl.scrollLeft,\n                y: scrollEl.scrollTop,\n            });\n        }\n        else {\n            callbackWrapper(scrollCb)({\n                id,\n                x: target.scrollLeft,\n                y: target.scrollTop,\n            });\n        }\n    }, sampling.scroll || 100);\n    return on('scroll', callbackWrapper(updatePosition), doc);\n}\nfunction initViewportResizeObserver({ viewportResizeCb, }) {\n    let lastH = -1;\n    let lastW = -1;\n    const updateDimension = throttle$1(() => {\n        const height = getWindowHeight();\n        const width = getWindowWidth();\n        if (lastH !== height || lastW !== width) {\n            callbackWrapper(viewportResizeCb)({\n                width: Number(width),\n                height: Number(height),\n            });\n            lastH = height;\n            lastW = width;\n        }\n    }, 200);\n    return on('resize', callbackWrapper(updateDimension), window);\n}\nfunction wrapEventWithUserTriggeredFlag(v, enable) {\n    const value = Object.assign({}, v);\n    if (!enable)\n        delete value.userTriggered;\n    return value;\n}\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nconst lastInputValueMap = new WeakMap();\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputSelector, unmaskInputSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, }) {\n    function eventHandler(event) {\n        let target = getEventTarget(event);\n        const tagName = target && target.tagName;\n        const userTriggered = event.isTrusted;\n        if (tagName === 'OPTION')\n            target = target.parentElement;\n        if (!target ||\n            !tagName ||\n            INPUT_TAGS.indexOf(tagName) < 0 ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector)) {\n            return;\n        }\n        const el = target;\n        const type = getInputType(el);\n        if (el.classList.contains(ignoreClass) ||\n            (ignoreSelector && el.matches(ignoreSelector))) {\n            return;\n        }\n        let text = getInputValue(el, tagName, type);\n        let isChecked = false;\n        if (type === 'radio' || type === 'checkbox') {\n            isChecked = target.checked;\n        }\n        if (hasInputMaskOptions({\n            maskInputOptions,\n            maskInputSelector,\n            tagName,\n            type,\n        })) {\n            text = maskInputValue({\n                input: el,\n                maskInputOptions,\n                maskInputSelector,\n                unmaskInputSelector,\n                tagName,\n                type,\n                value: text,\n                maskInputFn,\n            });\n        }\n        cbWithDedup(target, callbackWrapper(wrapEventWithUserTriggeredFlag)({ text, isChecked, userTriggered }, userTriggeredOnInput));\n        const name = target.name;\n        if (type === 'radio' && name && isChecked) {\n            doc\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\n                .forEach((el) => {\n                if (el !== target) {\n                    const text = maskInputValue({\n                        input: el,\n                        maskInputOptions,\n                        maskInputSelector,\n                        unmaskInputSelector,\n                        tagName,\n                        type,\n                        value: getInputValue(el, tagName, type),\n                        maskInputFn,\n                    });\n                    cbWithDedup(el, callbackWrapper(wrapEventWithUserTriggeredFlag)({\n                        text,\n                        isChecked: !isChecked,\n                        userTriggered: false,\n                    }, userTriggeredOnInput));\n                }\n            });\n        }\n    }\n    function cbWithDedup(target, v) {\n        const lastInputValue = lastInputValueMap.get(target);\n        if (!lastInputValue ||\n            lastInputValue.text !== v.text ||\n            lastInputValue.isChecked !== v.isChecked) {\n            lastInputValueMap.set(target, v);\n            const id = mirror.getId(target);\n            inputCb(Object.assign(Object.assign({}, v), { id }));\n        }\n    }\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\n    const propertyDescriptor = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, 'value');\n    const hookProperties = [\n        [HTMLInputElement.prototype, 'value'],\n        [HTMLInputElement.prototype, 'checked'],\n        [HTMLSelectElement.prototype, 'value'],\n        [HTMLTextAreaElement.prototype, 'value'],\n        [HTMLSelectElement.prototype, 'selectedIndex'],\n        [HTMLOptionElement.prototype, 'selected'],\n    ];\n    if (propertyDescriptor && propertyDescriptor.set) {\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\n            set() {\n                callbackWrapper(eventHandler)({ target: this });\n            },\n        })));\n    }\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction getNestedCSSRulePositions(rule) {\n    const positions = [];\n    function recurse(childRule, pos) {\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\n            childRule.parentRule instanceof CSSGroupingRule) ||\n            (hasNestedCSSRule('CSSMediaRule') &&\n                childRule.parentRule instanceof CSSMediaRule) ||\n            (hasNestedCSSRule('CSSSupportsRule') &&\n                childRule.parentRule instanceof CSSSupportsRule) ||\n            (hasNestedCSSRule('CSSConditionRule') &&\n                childRule.parentRule instanceof CSSConditionRule)) {\n            const rules = Array.from(childRule.parentRule.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        else {\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        return pos;\n    }\n    return recurse(rule, positions);\n}\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror }, { win }) {\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\n        return () => { };\n    }\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [rule, index] = argumentsList;\n            const id = mirror.getId(thisArg.ownerNode);\n            if (id !== -1) {\n                styleSheetRuleCb({\n                    id,\n                    adds: [{ rule, index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [index] = argumentsList;\n            const id = mirror.getId(thisArg.ownerNode);\n            if (id !== -1) {\n                styleSheetRuleCb({\n                    id,\n                    removes: [{ index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const supportedNestedCSSRuleTypes = {};\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\n    }\n    else {\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\n        }\n    }\n    const unmodifiedFunctions = {};\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n        unmodifiedFunctions[typeKey] = {\n            insertRule: type.prototype.insertRule,\n            deleteRule: type.prototype.deleteRule,\n        };\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [rule, index] = argumentsList;\n                const id = mirror.getId(thisArg.parentStyleSheet.ownerNode);\n                if (id !== -1) {\n                    styleSheetRuleCb({\n                        id,\n                        adds: [\n                            {\n                                rule,\n                                index: [\n                                    ...getNestedCSSRulePositions(thisArg),\n                                    index || 0,\n                                ],\n                            },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [index] = argumentsList;\n                const id = mirror.getId(thisArg.parentStyleSheet.ownerNode);\n                if (id !== -1) {\n                    styleSheetRuleCb({\n                        id,\n                        removes: [\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\n        });\n    });\n}\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror }, { win }) {\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            var _a, _b;\n            const [property, value, priority] = argumentsList;\n            const id = mirror.getId((_b = (_a = thisArg.parentRule) === null || _a === void 0 ? void 0 : _a.parentStyleSheet) === null || _b === void 0 ? void 0 : _b.ownerNode);\n            if (id !== -1) {\n                styleDeclarationCb({\n                    id,\n                    set: {\n                        property,\n                        value,\n                        priority,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            var _a, _b;\n            const [property] = argumentsList;\n            const id = mirror.getId((_b = (_a = thisArg.parentRule) === null || _a === void 0 ? void 0 : _a.parentStyleSheet) === null || _b === void 0 ? void 0 : _b.ownerNode);\n            if (id !== -1) {\n                styleDeclarationCb({\n                    id,\n                    remove: {\n                        property,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\n    });\n}\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, }) {\n    const handler = (type) => throttle$1(callbackWrapper((event) => {\n        const target = getEventTarget(event);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector)) {\n            return;\n        }\n        const { currentTime, volume, muted } = target;\n        mediaInteractionCb({\n            type,\n            id: mirror.getId(target),\n            currentTime,\n            volume,\n            muted,\n        });\n    }), sampling.media || 500);\n    const handlers = [\n        on('play', handler(0)),\n        on('pause', handler(1)),\n        on('seeked', handler(2)),\n        on('volumechange', handler(3)),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initFontObserver({ fontCb, doc }) {\n    const win = doc.defaultView;\n    if (!win) {\n        return () => { };\n    }\n    const handlers = [];\n    const fontMap = new WeakMap();\n    const originalFontFace = win.FontFace;\n    win.FontFace = function FontFace(family, source, descriptors) {\n        const fontFace = new originalFontFace(family, source, descriptors);\n        fontMap.set(fontFace, {\n            family,\n            buffer: typeof source !== 'string',\n            descriptors,\n            fontSource: typeof source === 'string'\n                ? source\n                :\n                    JSON.stringify(Array.from(new Uint8Array(source))),\n        });\n        return fontFace;\n    };\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\n        return function (fontFace) {\n            setTimeout(() => {\n                const p = fontMap.get(fontFace);\n                if (p) {\n                    fontCb(p);\n                    fontMap.delete(fontFace);\n                }\n            }, 0);\n            return original.apply(this, [fontFace]);\n        };\n    });\n    handlers.push(() => {\n        win.FontFace = originalFontFace;\n    });\n    handlers.push(restoreHandler);\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction mergeHooks(o, hooks) {\n    const { mutationCb, mousemoveCb, mouseInteractionCb, scrollCb, viewportResizeCb, inputCb, mediaInteractionCb, styleSheetRuleCb, styleDeclarationCb, canvasMutationCb, fontCb, } = o;\n    o.mutationCb = (...p) => {\n        if (hooks.mutation) {\n            hooks.mutation(...p);\n        }\n        mutationCb(...p);\n    };\n    o.mousemoveCb = (...p) => {\n        if (hooks.mousemove) {\n            hooks.mousemove(...p);\n        }\n        mousemoveCb(...p);\n    };\n    o.mouseInteractionCb = (...p) => {\n        if (hooks.mouseInteraction) {\n            hooks.mouseInteraction(...p);\n        }\n        mouseInteractionCb(...p);\n    };\n    o.scrollCb = (...p) => {\n        if (hooks.scroll) {\n            hooks.scroll(...p);\n        }\n        scrollCb(...p);\n    };\n    o.viewportResizeCb = (...p) => {\n        if (hooks.viewportResize) {\n            hooks.viewportResize(...p);\n        }\n        viewportResizeCb(...p);\n    };\n    o.inputCb = (...p) => {\n        if (hooks.input) {\n            hooks.input(...p);\n        }\n        inputCb(...p);\n    };\n    o.mediaInteractionCb = (...p) => {\n        if (hooks.mediaInteaction) {\n            hooks.mediaInteaction(...p);\n        }\n        mediaInteractionCb(...p);\n    };\n    o.styleSheetRuleCb = (...p) => {\n        if (hooks.styleSheetRule) {\n            hooks.styleSheetRule(...p);\n        }\n        styleSheetRuleCb(...p);\n    };\n    o.styleDeclarationCb = (...p) => {\n        if (hooks.styleDeclaration) {\n            hooks.styleDeclaration(...p);\n        }\n        styleDeclarationCb(...p);\n    };\n    o.canvasMutationCb = (...p) => {\n        if (hooks.canvasMutation) {\n            hooks.canvasMutation(...p);\n        }\n        canvasMutationCb(...p);\n    };\n    o.fontCb = (...p) => {\n        if (hooks.font) {\n            hooks.font(...p);\n        }\n        fontCb(...p);\n    };\n}\nfunction initObservers(o, hooks = {}) {\n    const currentWindow = o.doc.defaultView;\n    if (!currentWindow) {\n        return () => { };\n    }\n    mergeHooks(o, hooks);\n    const mutationObserver = initMutationObserver(o, o.doc);\n    const mousemoveHandler = initMoveObserver(o);\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\n    const scrollHandler = initScrollObserver(o);\n    const viewportResizeHandler = initViewportResizeObserver(o);\n    const inputHandler = initInputObserver(o);\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\n        win: currentWindow,\n    });\n    const fontObserver = o.collectFonts ? initFontObserver(o) : () => { };\n    const pluginHandlers = [];\n    for (const plugin of o.plugins) {\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\n    }\n    return callbackWrapper(() => {\n        mutationBuffers.forEach((b) => b.reset());\n        mutationObserver.disconnect();\n        mousemoveHandler();\n        mouseInteractionHandler();\n        scrollHandler();\n        viewportResizeHandler();\n        inputHandler();\n        mediaInteractionHandler();\n        try {\n            styleSheetObserver();\n            styleDeclarationObserver();\n        }\n        catch (e) {\n        }\n        fontObserver();\n        pluginHandlers.forEach((h) => h());\n    });\n}\nfunction hasNestedCSSRule(prop) {\n    return typeof window[prop] !== 'undefined';\n}\nfunction canMonkeyPatchNestedCSSRule(prop) {\n    return Boolean(typeof window[prop] !== 'undefined' &&\n        window[prop].prototype &&\n        'insertRule' in window[prop].prototype &&\n        'deleteRule' in window[prop].prototype);\n}\n\nclass IframeManager {\n    constructor(options) {\n        this.iframes = new WeakMap();\n        this.mutationCb = options.mutationCb;\n    }\n    addIframe(iframeEl) {\n        this.iframes.set(iframeEl, true);\n    }\n    addLoadListener(cb) {\n        this.loadListener = cb;\n    }\n    attachIframe(iframeEl, childSn) {\n        var _a;\n        this.mutationCb({\n            adds: [\n                {\n                    parentId: iframeEl.__sn.id,\n                    nextId: null,\n                    node: childSn,\n                },\n            ],\n            removes: [],\n            texts: [],\n            attributes: [],\n            isAttachIframe: true,\n        });\n        (_a = this.loadListener) === null || _a === void 0 ? void 0 : _a.call(this, iframeEl);\n    }\n}\n\nclass ShadowDomManager {\n    constructor(options) {\n        this.restorePatches = [];\n        this.mutationCb = options.mutationCb;\n        this.scrollCb = options.scrollCb;\n        this.bypassOptions = options.bypassOptions;\n        this.mirror = options.mirror;\n        const manager = this;\n        this.restorePatches.push(patch(HTMLElement.prototype, 'attachShadow', function (original) {\n            return function () {\n                const shadowRoot = original.apply(this, arguments);\n                if (this.shadowRoot)\n                    manager.addShadowRoot(this.shadowRoot, this.ownerDocument);\n                return shadowRoot;\n            };\n        }));\n    }\n    addShadowRoot(shadowRoot, doc) {\n        initMutationObserver(Object.assign(Object.assign({}, this.bypassOptions), { doc, mutationCb: this.mutationCb, mirror: this.mirror, shadowDomManager: this }), shadowRoot);\n        initScrollObserver(Object.assign(Object.assign({}, this.bypassOptions), { scrollCb: this.scrollCb, doc: shadowRoot, mirror: this.mirror }));\n    }\n    observeAttachShadow(iframeElement) {\n        if (iframeElement.contentWindow) {\n            const manager = this;\n            this.restorePatches.push(patch(iframeElement.contentWindow.HTMLElement.prototype, 'attachShadow', function (original) {\n                return function () {\n                    const shadowRoot = original.apply(this, arguments);\n                    if (this.shadowRoot)\n                        manager.addShadowRoot(this.shadowRoot, iframeElement.contentDocument);\n                    return shadowRoot;\n                };\n            }));\n        }\n    }\n    reset() {\n        this.restorePatches.forEach((restorePatch) => restorePatch());\n    }\n}\n\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n\nfunction __rest(s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n}\n\nfunction initCanvas2DMutationObserver(cb, win, blockClass, unblockSelector, blockSelector, mirror) {\n    const handlers = [];\n    const props2D = Object.getOwnPropertyNames(win.CanvasRenderingContext2D.prototype);\n    for (const prop of props2D) {\n        try {\n            if (typeof win.CanvasRenderingContext2D.prototype[prop] !== 'function') {\n                continue;\n            }\n            const restoreHandler = patch(win.CanvasRenderingContext2D.prototype, prop, function (original) {\n                return function (...args) {\n                    if (!isBlocked(this.canvas, blockClass, blockSelector, unblockSelector)) {\n                        setTimeout(() => {\n                            const recordArgs = [...args];\n                            if (prop === 'drawImage') {\n                                if (recordArgs[0] &&\n                                    recordArgs[0] instanceof HTMLCanvasElement) {\n                                    const canvas = recordArgs[0];\n                                    const ctx = canvas.getContext('2d');\n                                    let imgd = ctx === null || ctx === void 0 ? void 0 : ctx.getImageData(0, 0, canvas.width, canvas.height);\n                                    let pix = imgd === null || imgd === void 0 ? void 0 : imgd.data;\n                                    recordArgs[0] = JSON.stringify(pix);\n                                }\n                            }\n                            cb(this.canvas, {\n                                type: CanvasContext['2D'],\n                                property: prop,\n                                args: recordArgs,\n                            });\n                        }, 0);\n                    }\n                    return original.apply(this, args);\n                };\n            });\n            handlers.push(restoreHandler);\n        }\n        catch (_a) {\n            const hookHandler = hookSetter(win.CanvasRenderingContext2D.prototype, prop, {\n                set(v) {\n                    cb(this.canvas, {\n                        type: CanvasContext['2D'],\n                        property: prop,\n                        args: [v],\n                        setter: true,\n                    });\n                },\n            });\n            handlers.push(hookHandler);\n        }\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nfunction initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector) {\n    const handlers = [];\n    try {\n        const restoreHandler = patch(win.HTMLCanvasElement.prototype, 'getContext', function (original) {\n            return function (contextType, ...args) {\n                if (!isBlocked(this, blockClass, blockSelector, unblockSelector)) {\n                    if (!('__context' in this))\n                        this.__context = contextType;\n                }\n                return original.apply(this, [contextType, ...args]);\n            };\n        });\n        handlers.push(restoreHandler);\n    }\n    catch (_a) {\n        console.error('failed to patch HTMLCanvasElement.prototype.getContext');\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\n/*\n * base64-arraybuffer 1.0.2 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2022 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\n\nconst webGLVarMap = new Map();\nfunction variableListFor(ctx, ctor) {\n    let contextMap = webGLVarMap.get(ctx);\n    if (!contextMap) {\n        contextMap = new Map();\n        webGLVarMap.set(ctx, contextMap);\n    }\n    if (!contextMap.has(ctor)) {\n        contextMap.set(ctor, []);\n    }\n    return contextMap.get(ctor);\n}\nconst saveWebGLVar = (value, win, ctx) => {\n    if (!value ||\n        !(isInstanceOfWebGLObject(value, win) || typeof value === 'object'))\n        return;\n    const name = value.constructor.name;\n    const list = variableListFor(ctx, name);\n    let index = list.indexOf(value);\n    if (index === -1) {\n        index = list.length;\n        list.push(value);\n    }\n    return index;\n};\nfunction serializeArg(value, win, ctx) {\n    if (value instanceof Array) {\n        return value.map((arg) => serializeArg(arg, win, ctx));\n    }\n    else if (value === null) {\n        return value;\n    }\n    else if (value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int16Array ||\n        value instanceof Int8Array ||\n        value instanceof Uint8ClampedArray) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [Object.values(value)],\n        };\n    }\n    else if (value instanceof ArrayBuffer) {\n        const name = value.constructor.name;\n        const base64 = encode(value);\n        return {\n            rr_type: name,\n            base64,\n        };\n    }\n    else if (value instanceof DataView) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [\n                serializeArg(value.buffer, win, ctx),\n                value.byteOffset,\n                value.byteLength,\n            ],\n        };\n    }\n    else if (value instanceof HTMLImageElement) {\n        const name = value.constructor.name;\n        const { src } = value;\n        return {\n            rr_type: name,\n            src,\n        };\n    }\n    else if (value instanceof ImageData) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [serializeArg(value.data, win, ctx), value.width, value.height],\n        };\n    }\n    else if (isInstanceOfWebGLObject(value, win) || typeof value === 'object') {\n        const name = value.constructor.name;\n        const index = saveWebGLVar(value, win, ctx);\n        return {\n            rr_type: name,\n            index: index,\n        };\n    }\n    return value;\n}\nconst serializeArgs = (args, win, ctx) => {\n    return [...args].map((arg) => serializeArg(arg, win, ctx));\n};\nconst isInstanceOfWebGLObject = (value, win) => {\n    const webGLConstructorNames = [\n        'WebGLActiveInfo',\n        'WebGLBuffer',\n        'WebGLFramebuffer',\n        'WebGLProgram',\n        'WebGLRenderbuffer',\n        'WebGLShader',\n        'WebGLShaderPrecisionFormat',\n        'WebGLTexture',\n        'WebGLUniformLocation',\n        'WebGLVertexArrayObject',\n        'WebGLVertexArrayObjectOES',\n    ];\n    const supportedWebGLConstructorNames = webGLConstructorNames.filter((name) => typeof win[name] === 'function');\n    return Boolean(supportedWebGLConstructorNames.find((name) => value instanceof win[name]));\n};\n\nfunction patchGLPrototype(prototype, type, cb, blockClass, unblockSelector, blockSelector, mirror, win) {\n    const handlers = [];\n    const props = Object.getOwnPropertyNames(prototype);\n    for (const prop of props) {\n        try {\n            if (typeof prototype[prop] !== 'function') {\n                continue;\n            }\n            const restoreHandler = patch(prototype, prop, function (original) {\n                return function (...args) {\n                    const result = original.apply(this, args);\n                    saveWebGLVar(result, win, prototype);\n                    if (!isBlocked(this.canvas, blockClass, blockSelector, unblockSelector)) {\n                        const id = mirror.getId(this.canvas);\n                        const recordArgs = serializeArgs([...args], win, prototype);\n                        const mutation = {\n                            type,\n                            property: prop,\n                            args: recordArgs,\n                        };\n                        cb(this.canvas, mutation);\n                    }\n                    return result;\n                };\n            });\n            handlers.push(restoreHandler);\n        }\n        catch (_a) {\n            const hookHandler = hookSetter(prototype, prop, {\n                set(v) {\n                    cb(this.canvas, {\n                        type,\n                        property: prop,\n                        args: [v],\n                        setter: true,\n                    });\n                },\n            });\n            handlers.push(hookHandler);\n        }\n    }\n    return handlers;\n}\nfunction initCanvasWebGLMutationObserver(cb, win, blockClass, blockSelector, unblockSelector, mirror) {\n    const handlers = [];\n    handlers.push(...patchGLPrototype(win.WebGLRenderingContext.prototype, CanvasContext.WebGL, cb, blockClass, blockSelector, unblockSelector, mirror, win));\n    if (typeof win.WebGL2RenderingContext !== 'undefined') {\n        handlers.push(...patchGLPrototype(win.WebGL2RenderingContext.prototype, CanvasContext.WebGL2, cb, blockClass, blockSelector, unblockSelector, mirror, win));\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nclass CanvasManager {\n    reset() {\n        this.pendingCanvasMutations.clear();\n        this.resetObservers && this.resetObservers();\n    }\n    freeze() {\n        this.frozen = true;\n    }\n    unfreeze() {\n        this.frozen = false;\n    }\n    lock() {\n        this.locked = true;\n    }\n    unlock() {\n        this.locked = false;\n    }\n    constructor(options) {\n        this.pendingCanvasMutations = new Map();\n        this.rafStamps = { latestId: 0, invokeId: null };\n        this.frozen = false;\n        this.locked = false;\n        this.processMutation = function (target, mutation) {\n            const newFrame = this.rafStamps.invokeId &&\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\n            if (newFrame || !this.rafStamps.invokeId)\n                this.rafStamps.invokeId = this.rafStamps.latestId;\n            if (!this.pendingCanvasMutations.has(target)) {\n                this.pendingCanvasMutations.set(target, []);\n            }\n            this.pendingCanvasMutations.get(target).push(mutation);\n        };\n        this.mutationCb = options.mutationCb;\n        this.mirror = options.mirror;\n        if (options.recordCanvas === true)\n            this.initCanvasMutationObserver(options.win, options.blockClass, options.blockSelector, options.unblockSelector);\n    }\n    initCanvasMutationObserver(win, blockClass, unblockSelector, blockSelector) {\n        this.startRAFTimestamping();\n        this.startPendingCanvasMutationFlusher();\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector);\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\n        this.resetObservers = () => {\n            canvasContextReset();\n            canvas2DReset();\n            canvasWebGL1and2Reset();\n        };\n    }\n    startPendingCanvasMutationFlusher() {\n        requestAnimationFrame(() => this.flushPendingCanvasMutations());\n    }\n    startRAFTimestamping() {\n        const setLatestRAFTimestamp = (timestamp) => {\n            this.rafStamps.latestId = timestamp;\n            requestAnimationFrame(setLatestRAFTimestamp);\n        };\n        requestAnimationFrame(setLatestRAFTimestamp);\n    }\n    flushPendingCanvasMutations() {\n        this.pendingCanvasMutations.forEach((values, canvas) => {\n            const id = this.mirror.getId(canvas);\n            this.flushPendingCanvasMutationFor(canvas, id);\n        });\n        requestAnimationFrame(() => this.flushPendingCanvasMutations());\n    }\n    flushPendingCanvasMutationFor(canvas, id) {\n        if (this.frozen || this.locked) {\n            return;\n        }\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\n        if (!valuesWithType || id === -1)\n            return;\n        const values = valuesWithType.map((value) => {\n            const rest = __rest(value, [\"type\"]);\n            return rest;\n        });\n        const { type } = valuesWithType[0];\n        this.mutationCb({ id, type, commands: values });\n        this.pendingCanvasMutations.delete(canvas);\n    }\n}\n\nfunction wrapEvent(e) {\n    return Object.assign(Object.assign({}, e), { timestamp: Date.now() });\n}\nlet wrappedEmit;\nlet takeFullSnapshot;\nconst mirror = createMirror();\nfunction record(options = {}) {\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskTextClass = 'rr-mask', maskTextSelector = null, maskInputSelector = null, unmaskTextSelector = null, unmaskInputSelector = null, inlineStylesheet = true, maskAllText = false, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskInputFn, maskTextFn, hooks, packFn, sampling = {}, mousemoveWait, recordCanvas = false, userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, onMutation, } = options;\n    if (!emit) {\n        throw new Error('emit function is required');\n    }\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\n        sampling.mousemove = mousemoveWait;\n    }\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n            radio: true,\n            checkbox: true,\n        }\n        : _maskInputOptions !== undefined\n            ? _maskInputOptions\n            : {};\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\n        ? {\n            script: true,\n            comment: true,\n            headFavicon: true,\n            headWhitespace: true,\n            headMetaSocial: true,\n            headMetaRobots: true,\n            headMetaHttpEquiv: true,\n            headMetaVerification: true,\n            headMetaAuthorship: _slimDOMOptions === 'all',\n            headMetaDescKeywords: _slimDOMOptions === 'all',\n        }\n        : _slimDOMOptions\n            ? _slimDOMOptions\n            : {};\n    polyfill();\n    let lastFullSnapshotEvent;\n    let incrementalSnapshotCount = 0;\n    const eventProcessor = (e) => {\n        for (const plugin of plugins || []) {\n            if (plugin.eventProcessor) {\n                e = plugin.eventProcessor(e);\n            }\n        }\n        if (packFn) {\n            e = packFn(e);\n        }\n        return e;\n    };\n    wrappedEmit = (e, isCheckout) => {\n        var _a;\n        if (((_a = mutationBuffers[0]) === null || _a === void 0 ? void 0 : _a.isFrozen()) &&\n            e.type !== EventType.FullSnapshot &&\n            !(e.type === EventType.IncrementalSnapshot &&\n                e.data.source === IncrementalSource.Mutation)) {\n            mutationBuffers.forEach((buf) => buf.unfreeze());\n        }\n        emit(eventProcessor(e), isCheckout);\n        if (e.type === EventType.FullSnapshot) {\n            lastFullSnapshotEvent = e;\n            incrementalSnapshotCount = 0;\n        }\n        else if (e.type === EventType.IncrementalSnapshot) {\n            if (e.data.source === IncrementalSource.Mutation &&\n                e.data.isAttachIframe) {\n                return;\n            }\n            incrementalSnapshotCount++;\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\n            const exceedTime = checkoutEveryNms &&\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\n            if (exceedCount || exceedTime) {\n                takeFullSnapshot(true);\n            }\n        }\n    };\n    const wrappedMutationEmit = (m) => {\n        wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: Object.assign({ source: IncrementalSource.Mutation }, m),\n        }));\n    };\n    const wrappedScrollEmit = (p) => wrappedEmit(wrapEvent({\n        type: EventType.IncrementalSnapshot,\n        data: Object.assign({ source: IncrementalSource.Scroll }, p),\n    }));\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit(wrapEvent({\n        type: EventType.IncrementalSnapshot,\n        data: Object.assign({ source: IncrementalSource.CanvasMutation }, p),\n    }));\n    const iframeManager = new IframeManager({\n        mutationCb: wrappedMutationEmit,\n    });\n    const canvasManager = new CanvasManager({\n        recordCanvas,\n        mutationCb: wrappedCanvasMutationEmit,\n        win: window,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        mirror,\n    });\n    const shadowDomManager = new ShadowDomManager({\n        mutationCb: wrappedMutationEmit,\n        scrollCb: wrappedScrollEmit,\n        bypassOptions: {\n            onMutation,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            maskInputSelector,\n            unmaskInputSelector,\n            inlineStylesheet,\n            maskAllText,\n            maskInputOptions,\n            maskTextFn,\n            maskInputFn,\n            recordCanvas,\n            inlineImages,\n            sampling,\n            slimDOMOptions,\n            iframeManager,\n            canvasManager,\n        },\n        mirror,\n    });\n    takeFullSnapshot = (isCheckout = false) => {\n        var _a, _b, _c, _d;\n        wrappedEmit(wrapEvent({\n            type: EventType.Meta,\n            data: {\n                href: window.location.href,\n                width: getWindowWidth(),\n                height: getWindowHeight(),\n            },\n        }), isCheckout);\n        mutationBuffers.forEach((buf) => buf.lock());\n        const [node, idNodeMap] = snapshot(document, {\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            maskInputSelector,\n            unmaskInputSelector,\n            inlineStylesheet,\n            maskAllText,\n            maskAllInputs: maskInputOptions,\n            maskTextFn,\n            slimDOM: slimDOMOptions,\n            recordCanvas,\n            inlineImages,\n            onSerialize: (n) => {\n                if (isIframeINode(n)) {\n                    iframeManager.addIframe(n);\n                }\n                if (hasShadowRoot(n)) {\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\n                }\n            },\n            onIframeLoad: (iframe, childSn) => {\n                iframeManager.attachIframe(iframe, childSn);\n                shadowDomManager.observeAttachShadow(iframe);\n            },\n            keepIframeSrcFn,\n        });\n        if (!node) {\n            return console.warn('Failed to snapshot the document');\n        }\n        mirror.map = idNodeMap;\n        wrappedEmit(wrapEvent({\n            type: EventType.FullSnapshot,\n            data: {\n                node,\n                initialOffset: {\n                    left: window.pageXOffset !== undefined\n                        ? window.pageXOffset\n                        : (document === null || document === void 0 ? void 0 : document.documentElement.scrollLeft) ||\n                            ((_b = (_a = document === null || document === void 0 ? void 0 : document.body) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.scrollLeft) ||\n                            (document === null || document === void 0 ? void 0 : document.body.scrollLeft) ||\n                            0,\n                    top: window.pageYOffset !== undefined\n                        ? window.pageYOffset\n                        : (document === null || document === void 0 ? void 0 : document.documentElement.scrollTop) ||\n                            ((_d = (_c = document === null || document === void 0 ? void 0 : document.body) === null || _c === void 0 ? void 0 : _c.parentElement) === null || _d === void 0 ? void 0 : _d.scrollTop) ||\n                            (document === null || document === void 0 ? void 0 : document.body.scrollTop) ||\n                            0,\n                },\n            },\n        }));\n        mutationBuffers.forEach((buf) => buf.unlock());\n    };\n    try {\n        const handlers = [];\n        handlers.push(on('DOMContentLoaded', () => {\n            wrappedEmit(wrapEvent({\n                type: EventType.DomContentLoaded,\n                data: {},\n            }));\n        }));\n        const observe = (doc) => {\n            var _a;\n            return callbackWrapper(initObservers)({\n                onMutation,\n                mutationCb: wrappedMutationEmit,\n                mousemoveCb: (positions, source) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source,\n                        positions,\n                    },\n                })),\n                mouseInteractionCb: (d) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.MouseInteraction }, d),\n                })),\n                scrollCb: wrappedScrollEmit,\n                viewportResizeCb: (d) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.ViewportResize }, d),\n                })),\n                inputCb: (v) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.Input }, v),\n                })),\n                mediaInteractionCb: (p) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.MediaInteraction }, p),\n                })),\n                styleSheetRuleCb: (r) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.StyleSheetRule }, r),\n                })),\n                styleDeclarationCb: (r) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.StyleDeclaration }, r),\n                })),\n                canvasMutationCb: wrappedCanvasMutationEmit,\n                fontCb: (p) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.Font }, p),\n                })),\n                blockClass,\n                ignoreClass,\n                ignoreSelector,\n                maskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskInputSelector,\n                unmaskInputSelector,\n                maskInputOptions,\n                inlineStylesheet,\n                sampling,\n                recordCanvas,\n                inlineImages,\n                userTriggeredOnInput,\n                collectFonts,\n                doc,\n                maskAllText,\n                maskInputFn,\n                maskTextFn,\n                blockSelector,\n                unblockSelector,\n                slimDOMOptions,\n                mirror,\n                iframeManager,\n                shadowDomManager,\n                canvasManager,\n                plugins: ((_a = plugins === null || plugins === void 0 ? void 0 : plugins.filter((p) => p.observer)) === null || _a === void 0 ? void 0 : _a.map((p) => ({\n                    observer: p.observer,\n                    options: p.options,\n                    callback: (payload) => wrappedEmit(wrapEvent({\n                        type: EventType.Plugin,\n                        data: {\n                            plugin: p.name,\n                            payload,\n                        },\n                    })),\n                }))) || [],\n            }, hooks);\n        };\n        iframeManager.addLoadListener((iframeEl) => {\n            try {\n                handlers.push(observe(iframeEl.contentDocument));\n            }\n            catch (error) {\n                console.warn(error);\n            }\n        });\n        const init = () => {\n            takeFullSnapshot();\n            handlers.push(observe(document));\n        };\n        if (document.readyState === 'interactive' ||\n            document.readyState === 'complete') {\n            init();\n        }\n        else {\n            handlers.push(on('load', () => {\n                wrappedEmit(wrapEvent({\n                    type: EventType.Load,\n                    data: {},\n                }));\n                init();\n            }, window));\n        }\n        return () => {\n            handlers.forEach((h) => h());\n        };\n    }\n    catch (error) {\n        console.warn(error);\n    }\n}\nrecord.addCustomEvent = (tag, payload) => {\n    if (!wrappedEmit) {\n        throw new Error('please add custom event after start recording');\n    }\n    wrappedEmit(wrapEvent({\n        type: EventType.Custom,\n        data: {\n            tag,\n            payload,\n        },\n    }));\n};\nrecord.freezePage = () => {\n    mutationBuffers.forEach((buf) => buf.freeze());\n};\nrecord.takeFullSnapshot = (isCheckout) => {\n    if (!takeFullSnapshot) {\n        throw new Error('please take full snapshot after start recording');\n    }\n    takeFullSnapshot(isCheckout);\n};\nrecord.mirror = mirror;\n\n/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nfunction timestampToMs(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nfunction timestampToS(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Add a breadcrumb event to replay.\n */\nfunction addBreadcrumbEvent(replay, breadcrumb) {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category )) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    void replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.normalize)(breadcrumb, 10, 1000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nfunction getClickTargetNode(event) {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  const closestInteractive = target.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || target;\n}\n\n/** Get the event target node. */\nfunction getTargetNode(event) {\n  if (isEventWithTarget(event)) {\n    return event.target ;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event) {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n\nlet handlers;\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nfunction onWindowOpen(cb) {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers ).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen() {\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.fill)(WINDOW, 'open', function (originalWindowOpen) {\n    return function (...args) {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n\n/** Handle a click. */\nfunction handleClick(clickDetector, clickBreadcrumb, node) {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nclass ClickDetector  {\n  // protected for testing\n   __init() {this._lastMutation = 0;}\n   __init2() {this._lastScroll = 0;}\n\n   __init3() {this._clicks = [];}\n\n   constructor(\n    replay,\n    slowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {ClickDetector.prototype.__init.call(this);ClickDetector.prototype.__init2.call(this);ClickDetector.prototype.__init3.call(this);\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n   addListeners() {\n    const mutationHandler = () => {\n      this._lastMutation = nowInSeconds();\n    };\n\n    const scrollHandler = () => {\n      this._lastScroll = nowInSeconds();\n    };\n\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    const clickHandler = (event) => {\n      if (!event.target) {\n        return;\n      }\n\n      const node = getClickTargetNode(event);\n      if (node) {\n        this._handleMultiClick(node );\n      }\n    };\n\n    const obs = new MutationObserver(mutationHandler);\n\n    obs.observe(WINDOW.document.documentElement, {\n      attributes: true,\n      characterData: true,\n      childList: true,\n      subtree: true,\n    });\n\n    WINDOW.addEventListener('scroll', scrollHandler, { passive: true });\n    WINDOW.addEventListener('click', clickHandler, { passive: true });\n\n    this._teardown = () => {\n      WINDOW.removeEventListener('scroll', scrollHandler);\n      WINDOW.removeEventListener('click', clickHandler);\n      cleanupWindowOpen();\n\n      obs.disconnect();\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n   removeListeners() {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** Handle a click */\n   handleClick(breadcrumb, node) {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Count multiple clicks on elements. */\n   _handleMultiClick(node) {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n   _getClicks(node) {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n   _checkClicks() {\n    const timedOutClicks = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n   _generateBreadcrumbs(click) {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n   _scheduleCheckClicks() {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nfunction ignoreElement(node, ignoreSelector) {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb) {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds() {\n  return Date.now() / 1000;\n}\n\n/**\n * Create a breadcrumb for a replay.\n */\nfunction createBreadcrumb(\n  breadcrumb,\n) {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType || (NodeType = {}));\n\n// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nfunction getAttributesToRecord(attributes) {\n  const obj = {};\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n\nconst handleDomListener = (\n  replay,\n) => {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick && (handlerData.event );\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result ,\n        getClickTargetNode(handlerData.event) ,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nfunction getBaseDomBreadcrumb(target, message) {\n  // `__sn` property is the serialized node created by rrweb\n  const serializedNode = target && isRrwebNode(target) && target.__sn.type === NodeType.Element ? target.__sn : null;\n\n  return {\n    message,\n    data: serializedNode\n      ? {\n          nodeId: serializedNode.id,\n          node: {\n            id: serializedNode.id,\n            tagName: serializedNode.tagName,\n            textContent: target\n              ? Array.from(target.childNodes)\n                  .map(\n                    (node) => '__sn' in node && node.__sn.type === NodeType.Text && node.__sn.textContent,\n                  )\n                  .filter(Boolean) // filter out empty values\n                  .map(text => (text ).trim())\n                  .join('')\n              : '',\n            attributes: getAttributesToRecord(serializedNode.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nfunction handleDom(handlerData) {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData) {\n  const isClick = handlerData.name === 'click';\n\n  let message;\n  let target = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event) : getTargetNode(handlerData.event);\n    message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.htmlTreeAsString)(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isRrwebNode(node) {\n  return '__sn' in node;\n}\n\n/** Handle keyboard events & create breadcrumbs. */\nfunction handleKeyboardEvent(replay, event) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nfunction getKeyboardBreadcrumb(event) {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target ) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.htmlTreeAsString)(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target , message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target) {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n\nconst NAVIGATION_ENTRY_KEYS = [\n  'name',\n  'type',\n  'startTime',\n  'transferSize',\n  'duration',\n];\n\nfunction isNavigationEntryEqual(a) {\n  return function (b) {\n    return NAVIGATION_ENTRY_KEYS.every(key => a[key] === b[key]);\n  };\n}\n\n/**\n * There are some difficulties diagnosing why there are duplicate navigation\n * entries. We've witnessed several intermittent results:\n * - duplicate entries have duration = 0\n * - duplicate entries are the same object reference\n * - none of the above\n *\n * Compare the values of several keys to determine if the entries are duplicates or not.\n */\n// TODO (high-prio): Figure out wth is returned here\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction dedupePerformanceEntries(\n  currentList,\n  newList,\n) {\n  // Partition `currentList` into 3 different lists based on entryType\n  const [existingNavigationEntries, existingLcpEntries, existingEntries] = currentList.reduce(\n    (acc, entry) => {\n      if (entry.entryType === 'navigation') {\n        acc[0].push(entry );\n      } else if (entry.entryType === 'largest-contentful-paint') {\n        acc[1].push(entry );\n      } else {\n        acc[2].push(entry);\n      }\n      return acc;\n    },\n    [[], [], []],\n  );\n\n  const newEntries = [];\n  const newNavigationEntries = [];\n  let newLcpEntry = existingLcpEntries.length\n    ? existingLcpEntries[existingLcpEntries.length - 1] // Take the last element as list is sorted\n    : undefined;\n\n  newList.forEach(entry => {\n    if (entry.entryType === 'largest-contentful-paint') {\n      // We want the latest LCP event only\n      if (!newLcpEntry || newLcpEntry.startTime < entry.startTime) {\n        newLcpEntry = entry;\n      }\n      return;\n    }\n\n    if (entry.entryType === 'navigation') {\n      const navigationEntry = entry ;\n\n      // Check if the navigation entry is contained in currentList or newList\n      if (\n        // Ignore any navigation entries with duration 0, as they are likely duplicates\n        entry.duration > 0 &&\n        // Ensure new entry does not already exist in existing entries\n        !existingNavigationEntries.find(isNavigationEntryEqual(navigationEntry)) &&\n        // Ensure new entry does not already exist in new list of navigation entries\n        !newNavigationEntries.find(isNavigationEntryEqual(navigationEntry))\n      ) {\n        newNavigationEntries.push(navigationEntry);\n      }\n\n      // Otherwise this navigation entry is considered a duplicate and is thrown away\n      return;\n    }\n\n    newEntries.push(entry);\n  });\n\n  // Re-combine and sort by startTime\n  return [\n    ...(newLcpEntry ? [newLcpEntry] : []),\n    ...existingNavigationEntries,\n    ...existingEntries,\n    ...newEntries,\n    ...newNavigationEntries,\n  ].sort((a, b) => a.startTime - b.startTime);\n}\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n */\nfunction setupPerformanceObserver(replay) {\n  const performanceObserverHandler = (list) => {\n    // For whatever reason the observer was returning duplicate navigation\n    // entries (the other entry types were not duplicated).\n    const newPerformanceEntries = dedupePerformanceEntries(\n      replay.performanceEvents,\n      list.getEntries() ,\n    );\n    replay.performanceEvents = newPerformanceEntries;\n  };\n\n  const performanceObserver = new PerformanceObserver(performanceObserverHandler);\n\n  [\n    'element',\n    'event',\n    'first-input',\n    'largest-contentful-paint',\n    'layout-shift',\n    'longtask',\n    'navigation',\n    'paint',\n    'resource',\n  ].forEach(type => {\n    try {\n      performanceObserver.observe({\n        type,\n        buffered: true,\n      });\n    } catch (e) {\n      // This can throw if an entry type is not supported in the browser.\n      // Ignore these errors.\n    }\n  });\n\n  return performanceObserver;\n}\n\nconst r = `/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\nfunction t(t){let e=t.length;for(;--e>=0;)t[e]=0}const e=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),a=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),i=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),n=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=new Array(576);t(s);const r=new Array(60);t(r);const o=new Array(512);t(o);const l=new Array(256);t(l);const h=new Array(29);t(h);const d=new Array(30);function _(t,e,a,i,n){this.static_tree=t,this.extra_bits=e,this.extra_base=a,this.elems=i,this.max_length=n,this.has_stree=t&&t.length}let f,c,u;function w(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}t(d);const m=t=>t<256?o[t]:o[256+(t>>>7)],b=(t,e)=>{t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255},g=(t,e,a)=>{t.bi_valid>16-a?(t.bi_buf|=e<<t.bi_valid&65535,b(t,t.bi_buf),t.bi_buf=e>>16-t.bi_valid,t.bi_valid+=a-16):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=a)},p=(t,e,a)=>{g(t,a[2*e],a[2*e+1])},k=(t,e)=>{let a=0;do{a|=1&t,t>>>=1,a<<=1}while(--e>0);return a>>>1},v=(t,e,a)=>{const i=new Array(16);let n,s,r=0;for(n=1;n<=15;n++)r=r+a[n-1]<<1,i[n]=r;for(s=0;s<=e;s++){let e=t[2*s+1];0!==e&&(t[2*s]=k(i[e]++,e))}},y=t=>{let e;for(e=0;e<286;e++)t.dyn_ltree[2*e]=0;for(e=0;e<30;e++)t.dyn_dtree[2*e]=0;for(e=0;e<19;e++)t.bl_tree[2*e]=0;t.dyn_ltree[512]=1,t.opt_len=t.static_len=0,t.sym_next=t.matches=0},x=t=>{t.bi_valid>8?b(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0},z=(t,e,a,i)=>{const n=2*e,s=2*a;return t[n]<t[s]||t[n]===t[s]&&i[e]<=i[a]},A=(t,e,a)=>{const i=t.heap[a];let n=a<<1;for(;n<=t.heap_len&&(n<t.heap_len&&z(e,t.heap[n+1],t.heap[n],t.depth)&&n++,!z(e,i,t.heap[n],t.depth));)t.heap[a]=t.heap[n],a=n,n<<=1;t.heap[a]=i},E=(t,i,n)=>{let s,r,o,_,f=0;if(0!==t.sym_next)do{s=255&t.pending_buf[t.sym_buf+f++],s+=(255&t.pending_buf[t.sym_buf+f++])<<8,r=t.pending_buf[t.sym_buf+f++],0===s?p(t,r,i):(o=l[r],p(t,o+256+1,i),_=e[o],0!==_&&(r-=h[o],g(t,r,_)),s--,o=m(s),p(t,o,n),_=a[o],0!==_&&(s-=d[o],g(t,s,_)))}while(f<t.sym_next);p(t,256,i)},R=(t,e)=>{const a=e.dyn_tree,i=e.stat_desc.static_tree,n=e.stat_desc.has_stree,s=e.stat_desc.elems;let r,o,l,h=-1;for(t.heap_len=0,t.heap_max=573,r=0;r<s;r++)0!==a[2*r]?(t.heap[++t.heap_len]=h=r,t.depth[r]=0):a[2*r+1]=0;for(;t.heap_len<2;)l=t.heap[++t.heap_len]=h<2?++h:0,a[2*l]=1,t.depth[l]=0,t.opt_len--,n&&(t.static_len-=i[2*l+1]);for(e.max_code=h,r=t.heap_len>>1;r>=1;r--)A(t,a,r);l=s;do{r=t.heap[1],t.heap[1]=t.heap[t.heap_len--],A(t,a,1),o=t.heap[1],t.heap[--t.heap_max]=r,t.heap[--t.heap_max]=o,a[2*l]=a[2*r]+a[2*o],t.depth[l]=(t.depth[r]>=t.depth[o]?t.depth[r]:t.depth[o])+1,a[2*r+1]=a[2*o+1]=l,t.heap[1]=l++,A(t,a,1)}while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],((t,e)=>{const a=e.dyn_tree,i=e.max_code,n=e.stat_desc.static_tree,s=e.stat_desc.has_stree,r=e.stat_desc.extra_bits,o=e.stat_desc.extra_base,l=e.stat_desc.max_length;let h,d,_,f,c,u,w=0;for(f=0;f<=15;f++)t.bl_count[f]=0;for(a[2*t.heap[t.heap_max]+1]=0,h=t.heap_max+1;h<573;h++)d=t.heap[h],f=a[2*a[2*d+1]+1]+1,f>l&&(f=l,w++),a[2*d+1]=f,d>i||(t.bl_count[f]++,c=0,d>=o&&(c=r[d-o]),u=a[2*d],t.opt_len+=u*(f+c),s&&(t.static_len+=u*(n[2*d+1]+c)));if(0!==w){do{for(f=l-1;0===t.bl_count[f];)f--;t.bl_count[f]--,t.bl_count[f+1]+=2,t.bl_count[l]--,w-=2}while(w>0);for(f=l;0!==f;f--)for(d=t.bl_count[f];0!==d;)_=t.heap[--h],_>i||(a[2*_+1]!==f&&(t.opt_len+=(f-a[2*_+1])*a[2*_],a[2*_+1]=f),d--)}})(t,e),v(a,h,t.bl_count)},Z=(t,e,a)=>{let i,n,s=-1,r=e[1],o=0,l=7,h=4;for(0===r&&(l=138,h=3),e[2*(a+1)+1]=65535,i=0;i<=a;i++)n=r,r=e[2*(i+1)+1],++o<l&&n===r||(o<h?t.bl_tree[2*n]+=o:0!==n?(n!==s&&t.bl_tree[2*n]++,t.bl_tree[32]++):o<=10?t.bl_tree[34]++:t.bl_tree[36]++,o=0,s=n,0===r?(l=138,h=3):n===r?(l=6,h=3):(l=7,h=4))},U=(t,e,a)=>{let i,n,s=-1,r=e[1],o=0,l=7,h=4;for(0===r&&(l=138,h=3),i=0;i<=a;i++)if(n=r,r=e[2*(i+1)+1],!(++o<l&&n===r)){if(o<h)do{p(t,n,t.bl_tree)}while(0!=--o);else 0!==n?(n!==s&&(p(t,n,t.bl_tree),o--),p(t,16,t.bl_tree),g(t,o-3,2)):o<=10?(p(t,17,t.bl_tree),g(t,o-3,3)):(p(t,18,t.bl_tree),g(t,o-11,7));o=0,s=n,0===r?(l=138,h=3):n===r?(l=6,h=3):(l=7,h=4)}};let S=!1;const D=(t,e,a,i)=>{g(t,0+(i?1:0),3),x(t),b(t,a),b(t,~a),a&&t.pending_buf.set(t.window.subarray(e,e+a),t.pending),t.pending+=a};var T=(t,e,a,i)=>{let o,l,h=0;t.level>0?(2===t.strm.data_type&&(t.strm.data_type=(t=>{let e,a=4093624447;for(e=0;e<=31;e++,a>>>=1)if(1&a&&0!==t.dyn_ltree[2*e])return 0;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return 1;for(e=32;e<256;e++)if(0!==t.dyn_ltree[2*e])return 1;return 0})(t)),R(t,t.l_desc),R(t,t.d_desc),h=(t=>{let e;for(Z(t,t.dyn_ltree,t.l_desc.max_code),Z(t,t.dyn_dtree,t.d_desc.max_code),R(t,t.bl_desc),e=18;e>=3&&0===t.bl_tree[2*n[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e})(t),o=t.opt_len+3+7>>>3,l=t.static_len+3+7>>>3,l<=o&&(o=l)):o=l=a+5,a+4<=o&&-1!==e?D(t,e,a,i):4===t.strategy||l===o?(g(t,2+(i?1:0),3),E(t,s,r)):(g(t,4+(i?1:0),3),((t,e,a,i)=>{let s;for(g(t,e-257,5),g(t,a-1,5),g(t,i-4,4),s=0;s<i;s++)g(t,t.bl_tree[2*n[s]+1],3);U(t,t.dyn_ltree,e-1),U(t,t.dyn_dtree,a-1)})(t,t.l_desc.max_code+1,t.d_desc.max_code+1,h+1),E(t,t.dyn_ltree,t.dyn_dtree)),y(t),i&&x(t)},O={_tr_init:t=>{S||((()=>{let t,n,w,m,b;const g=new Array(16);for(w=0,m=0;m<28;m++)for(h[m]=w,t=0;t<1<<e[m];t++)l[w++]=m;for(l[w-1]=m,b=0,m=0;m<16;m++)for(d[m]=b,t=0;t<1<<a[m];t++)o[b++]=m;for(b>>=7;m<30;m++)for(d[m]=b<<7,t=0;t<1<<a[m]-7;t++)o[256+b++]=m;for(n=0;n<=15;n++)g[n]=0;for(t=0;t<=143;)s[2*t+1]=8,t++,g[8]++;for(;t<=255;)s[2*t+1]=9,t++,g[9]++;for(;t<=279;)s[2*t+1]=7,t++,g[7]++;for(;t<=287;)s[2*t+1]=8,t++,g[8]++;for(v(s,287,g),t=0;t<30;t++)r[2*t+1]=5,r[2*t]=k(t,5);f=new _(s,e,257,286,15),c=new _(r,a,0,30,15),u=new _(new Array(0),i,0,19,7)})(),S=!0),t.l_desc=new w(t.dyn_ltree,f),t.d_desc=new w(t.dyn_dtree,c),t.bl_desc=new w(t.bl_tree,u),t.bi_buf=0,t.bi_valid=0,y(t)},_tr_stored_block:D,_tr_flush_block:T,_tr_tally:(t,e,a)=>(t.pending_buf[t.sym_buf+t.sym_next++]=e,t.pending_buf[t.sym_buf+t.sym_next++]=e>>8,t.pending_buf[t.sym_buf+t.sym_next++]=a,0===e?t.dyn_ltree[2*a]++:(t.matches++,e--,t.dyn_ltree[2*(l[a]+256+1)]++,t.dyn_dtree[2*m(e)]++),t.sym_next===t.sym_end),_tr_align:t=>{g(t,2,3),p(t,256,s),(t=>{16===t.bi_valid?(b(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)})(t)}};var F=(t,e,a,i)=>{let n=65535&t|0,s=t>>>16&65535|0,r=0;for(;0!==a;){r=a>2e3?2e3:a,a-=r;do{n=n+e[i++]|0,s=s+n|0}while(--r);n%=65521,s%=65521}return n|s<<16|0};const L=new Uint32Array((()=>{let t,e=[];for(var a=0;a<256;a++){t=a;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[a]=t}return e})());var N=(t,e,a,i)=>{const n=L,s=i+a;t^=-1;for(let a=i;a<s;a++)t=t>>>8^n[255&(t^e[a])];return-1^t},I={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"},B={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:C,_tr_stored_block:H,_tr_flush_block:M,_tr_tally:j,_tr_align:K}=O,{Z_NO_FLUSH:P,Z_PARTIAL_FLUSH:Y,Z_FULL_FLUSH:G,Z_FINISH:X,Z_BLOCK:W,Z_OK:q,Z_STREAM_END:J,Z_STREAM_ERROR:Q,Z_DATA_ERROR:V,Z_BUF_ERROR:$,Z_DEFAULT_COMPRESSION:tt,Z_FILTERED:et,Z_HUFFMAN_ONLY:at,Z_RLE:it,Z_FIXED:nt,Z_DEFAULT_STRATEGY:st,Z_UNKNOWN:rt,Z_DEFLATED:ot}=B,lt=(t,e)=>(t.msg=I[e],e),ht=t=>2*t-(t>4?9:0),dt=t=>{let e=t.length;for(;--e>=0;)t[e]=0},_t=t=>{let e,a,i,n=t.w_size;e=t.hash_size,i=e;do{a=t.head[--i],t.head[i]=a>=n?a-n:0}while(--e);e=n,i=e;do{a=t.prev[--i],t.prev[i]=a>=n?a-n:0}while(--e)};let ft=(t,e,a)=>(e<<t.hash_shift^a)&t.hash_mask;const ct=t=>{const e=t.state;let a=e.pending;a>t.avail_out&&(a=t.avail_out),0!==a&&(t.output.set(e.pending_buf.subarray(e.pending_out,e.pending_out+a),t.next_out),t.next_out+=a,e.pending_out+=a,t.total_out+=a,t.avail_out-=a,e.pending-=a,0===e.pending&&(e.pending_out=0))},ut=(t,e)=>{M(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,ct(t.strm)},wt=(t,e)=>{t.pending_buf[t.pending++]=e},mt=(t,e)=>{t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e},bt=(t,e,a,i)=>{let n=t.avail_in;return n>i&&(n=i),0===n?0:(t.avail_in-=n,e.set(t.input.subarray(t.next_in,t.next_in+n),a),1===t.state.wrap?t.adler=F(t.adler,e,n,a):2===t.state.wrap&&(t.adler=N(t.adler,e,n,a)),t.next_in+=n,t.total_in+=n,n)},gt=(t,e)=>{let a,i,n=t.max_chain_length,s=t.strstart,r=t.prev_length,o=t.nice_match;const l=t.strstart>t.w_size-262?t.strstart-(t.w_size-262):0,h=t.window,d=t.w_mask,_=t.prev,f=t.strstart+258;let c=h[s+r-1],u=h[s+r];t.prev_length>=t.good_match&&(n>>=2),o>t.lookahead&&(o=t.lookahead);do{if(a=e,h[a+r]===u&&h[a+r-1]===c&&h[a]===h[s]&&h[++a]===h[s+1]){s+=2,a++;do{}while(h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&s<f);if(i=258-(f-s),s=f-258,i>r){if(t.match_start=e,r=i,i>=o)break;c=h[s+r-1],u=h[s+r]}}}while((e=_[e&d])>l&&0!=--n);return r<=t.lookahead?r:t.lookahead},pt=t=>{const e=t.w_size;let a,i,n;do{if(i=t.window_size-t.lookahead-t.strstart,t.strstart>=e+(e-262)&&(t.window.set(t.window.subarray(e,e+e-i),0),t.match_start-=e,t.strstart-=e,t.block_start-=e,t.insert>t.strstart&&(t.insert=t.strstart),_t(t),i+=e),0===t.strm.avail_in)break;if(a=bt(t.strm,t.window,t.strstart+t.lookahead,i),t.lookahead+=a,t.lookahead+t.insert>=3)for(n=t.strstart-t.insert,t.ins_h=t.window[n],t.ins_h=ft(t,t.ins_h,t.window[n+1]);t.insert&&(t.ins_h=ft(t,t.ins_h,t.window[n+3-1]),t.prev[n&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=n,n++,t.insert--,!(t.lookahead+t.insert<3)););}while(t.lookahead<262&&0!==t.strm.avail_in)},kt=(t,e)=>{let a,i,n,s=t.pending_buf_size-5>t.w_size?t.w_size:t.pending_buf_size-5,r=0,o=t.strm.avail_in;do{if(a=65535,n=t.bi_valid+42>>3,t.strm.avail_out<n)break;if(n=t.strm.avail_out-n,i=t.strstart-t.block_start,a>i+t.strm.avail_in&&(a=i+t.strm.avail_in),a>n&&(a=n),a<s&&(0===a&&e!==X||e===P||a!==i+t.strm.avail_in))break;r=e===X&&a===i+t.strm.avail_in?1:0,H(t,0,0,r),t.pending_buf[t.pending-4]=a,t.pending_buf[t.pending-3]=a>>8,t.pending_buf[t.pending-2]=~a,t.pending_buf[t.pending-1]=~a>>8,ct(t.strm),i&&(i>a&&(i=a),t.strm.output.set(t.window.subarray(t.block_start,t.block_start+i),t.strm.next_out),t.strm.next_out+=i,t.strm.avail_out-=i,t.strm.total_out+=i,t.block_start+=i,a-=i),a&&(bt(t.strm,t.strm.output,t.strm.next_out,a),t.strm.next_out+=a,t.strm.avail_out-=a,t.strm.total_out+=a)}while(0===r);return o-=t.strm.avail_in,o&&(o>=t.w_size?(t.matches=2,t.window.set(t.strm.input.subarray(t.strm.next_in-t.w_size,t.strm.next_in),0),t.strstart=t.w_size,t.insert=t.strstart):(t.window_size-t.strstart<=o&&(t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,t.insert>t.strstart&&(t.insert=t.strstart)),t.window.set(t.strm.input.subarray(t.strm.next_in-o,t.strm.next_in),t.strstart),t.strstart+=o,t.insert+=o>t.w_size-t.insert?t.w_size-t.insert:o),t.block_start=t.strstart),t.high_water<t.strstart&&(t.high_water=t.strstart),r?4:e!==P&&e!==X&&0===t.strm.avail_in&&t.strstart===t.block_start?2:(n=t.window_size-t.strstart,t.strm.avail_in>n&&t.block_start>=t.w_size&&(t.block_start-=t.w_size,t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,n+=t.w_size,t.insert>t.strstart&&(t.insert=t.strstart)),n>t.strm.avail_in&&(n=t.strm.avail_in),n&&(bt(t.strm,t.window,t.strstart,n),t.strstart+=n,t.insert+=n>t.w_size-t.insert?t.w_size-t.insert:n),t.high_water<t.strstart&&(t.high_water=t.strstart),n=t.bi_valid+42>>3,n=t.pending_buf_size-n>65535?65535:t.pending_buf_size-n,s=n>t.w_size?t.w_size:n,i=t.strstart-t.block_start,(i>=s||(i||e===X)&&e!==P&&0===t.strm.avail_in&&i<=n)&&(a=i>n?n:i,r=e===X&&0===t.strm.avail_in&&a===i?1:0,H(t,t.block_start,a,r),t.block_start+=a,ct(t.strm)),r?3:1)},vt=(t,e)=>{let a,i;for(;;){if(t.lookahead<262){if(pt(t),t.lookahead<262&&e===P)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==a&&t.strstart-a<=t.w_size-262&&(t.match_length=gt(t,a)),t.match_length>=3)if(i=j(t,t.strstart-t.match_start,t.match_length-3),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=3){t.match_length--;do{t.strstart++,t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart}while(0!=--t.match_length);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=ft(t,t.ins_h,t.window[t.strstart+1]);else i=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(i&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=t.strstart<2?t.strstart:2,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2},yt=(t,e)=>{let a,i,n;for(;;){if(t.lookahead<262){if(pt(t),t.lookahead<262&&e===P)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=2,0!==a&&t.prev_length<t.max_lazy_match&&t.strstart-a<=t.w_size-262&&(t.match_length=gt(t,a),t.match_length<=5&&(t.strategy===et||3===t.match_length&&t.strstart-t.match_start>4096)&&(t.match_length=2)),t.prev_length>=3&&t.match_length<=t.prev_length){n=t.strstart+t.lookahead-3,i=j(t,t.strstart-1-t.prev_match,t.prev_length-3),t.lookahead-=t.prev_length-1,t.prev_length-=2;do{++t.strstart<=n&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart)}while(0!=--t.prev_length);if(t.match_available=0,t.match_length=2,t.strstart++,i&&(ut(t,!1),0===t.strm.avail_out))return 1}else if(t.match_available){if(i=j(t,0,t.window[t.strstart-1]),i&&ut(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return 1}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(i=j(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<2?t.strstart:2,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2};function xt(t,e,a,i,n){this.good_length=t,this.max_lazy=e,this.nice_length=a,this.max_chain=i,this.func=n}const zt=[new xt(0,0,0,0,kt),new xt(4,4,8,4,vt),new xt(4,5,16,8,vt),new xt(4,6,32,32,vt),new xt(4,4,16,16,yt),new xt(8,16,32,32,yt),new xt(8,16,128,128,yt),new xt(8,32,128,256,yt),new xt(32,128,258,1024,yt),new xt(32,258,258,4096,yt)];function At(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=ot,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),dt(this.dyn_ltree),dt(this.dyn_dtree),dt(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),dt(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),dt(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const Et=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||42!==e.status&&57!==e.status&&69!==e.status&&73!==e.status&&91!==e.status&&103!==e.status&&113!==e.status&&666!==e.status?1:0},Rt=t=>{if(Et(t))return lt(t,Q);t.total_in=t.total_out=0,t.data_type=rt;const e=t.state;return e.pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=2===e.wrap?57:e.wrap?42:113,t.adler=2===e.wrap?0:1,e.last_flush=-2,C(e),q},Zt=t=>{const e=Rt(t);var a;return e===q&&((a=t.state).window_size=2*a.w_size,dt(a.head),a.max_lazy_match=zt[a.level].max_lazy,a.good_match=zt[a.level].good_length,a.nice_match=zt[a.level].nice_length,a.max_chain_length=zt[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=2,a.match_available=0,a.ins_h=0),e},Ut=(t,e,a,i,n,s)=>{if(!t)return Q;let r=1;if(e===tt&&(e=6),i<0?(r=0,i=-i):i>15&&(r=2,i-=16),n<1||n>9||a!==ot||i<8||i>15||e<0||e>9||s<0||s>nt||8===i&&1!==r)return lt(t,Q);8===i&&(i=9);const o=new At;return t.state=o,o.strm=t,o.status=42,o.wrap=r,o.gzhead=null,o.w_bits=i,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=n+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+3-1)/3),o.window=new Uint8Array(2*o.w_size),o.head=new Uint16Array(o.hash_size),o.prev=new Uint16Array(o.w_size),o.lit_bufsize=1<<n+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new Uint8Array(o.pending_buf_size),o.sym_buf=o.lit_bufsize,o.sym_end=3*(o.lit_bufsize-1),o.level=e,o.strategy=s,o.method=a,Zt(t)};var St={deflateInit:(t,e)=>Ut(t,e,ot,15,8,st),deflateInit2:Ut,deflateReset:Zt,deflateResetKeep:Rt,deflateSetHeader:(t,e)=>Et(t)||2!==t.state.wrap?Q:(t.state.gzhead=e,q),deflate:(t,e)=>{if(Et(t)||e>W||e<0)return t?lt(t,Q):Q;const a=t.state;if(!t.output||0!==t.avail_in&&!t.input||666===a.status&&e!==X)return lt(t,0===t.avail_out?$:Q);const i=a.last_flush;if(a.last_flush=e,0!==a.pending){if(ct(t),0===t.avail_out)return a.last_flush=-1,q}else if(0===t.avail_in&&ht(e)<=ht(i)&&e!==X)return lt(t,$);if(666===a.status&&0!==t.avail_in)return lt(t,$);if(42===a.status&&0===a.wrap&&(a.status=113),42===a.status){let e=ot+(a.w_bits-8<<4)<<8,i=-1;if(i=a.strategy>=at||a.level<2?0:a.level<6?1:6===a.level?2:3,e|=i<<6,0!==a.strstart&&(e|=32),e+=31-e%31,mt(a,e),0!==a.strstart&&(mt(a,t.adler>>>16),mt(a,65535&t.adler)),t.adler=1,a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q}if(57===a.status)if(t.adler=0,wt(a,31),wt(a,139),wt(a,8),a.gzhead)wt(a,(a.gzhead.text?1:0)+(a.gzhead.hcrc?2:0)+(a.gzhead.extra?4:0)+(a.gzhead.name?8:0)+(a.gzhead.comment?16:0)),wt(a,255&a.gzhead.time),wt(a,a.gzhead.time>>8&255),wt(a,a.gzhead.time>>16&255),wt(a,a.gzhead.time>>24&255),wt(a,9===a.level?2:a.strategy>=at||a.level<2?4:0),wt(a,255&a.gzhead.os),a.gzhead.extra&&a.gzhead.extra.length&&(wt(a,255&a.gzhead.extra.length),wt(a,a.gzhead.extra.length>>8&255)),a.gzhead.hcrc&&(t.adler=N(t.adler,a.pending_buf,a.pending,0)),a.gzindex=0,a.status=69;else if(wt(a,0),wt(a,0),wt(a,0),wt(a,0),wt(a,0),wt(a,9===a.level?2:a.strategy>=at||a.level<2?4:0),wt(a,3),a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q;if(69===a.status){if(a.gzhead.extra){let e=a.pending,i=(65535&a.gzhead.extra.length)-a.gzindex;for(;a.pending+i>a.pending_buf_size;){let n=a.pending_buf_size-a.pending;if(a.pending_buf.set(a.gzhead.extra.subarray(a.gzindex,a.gzindex+n),a.pending),a.pending=a.pending_buf_size,a.gzhead.hcrc&&a.pending>e&&(t.adler=N(t.adler,a.pending_buf,a.pending-e,e)),a.gzindex+=n,ct(t),0!==a.pending)return a.last_flush=-1,q;e=0,i-=n}let n=new Uint8Array(a.gzhead.extra);a.pending_buf.set(n.subarray(a.gzindex,a.gzindex+i),a.pending),a.pending+=i,a.gzhead.hcrc&&a.pending>e&&(t.adler=N(t.adler,a.pending_buf,a.pending-e,e)),a.gzindex=0}a.status=73}if(73===a.status){if(a.gzhead.name){let e,i=a.pending;do{if(a.pending===a.pending_buf_size){if(a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),ct(t),0!==a.pending)return a.last_flush=-1,q;i=0}e=a.gzindex<a.gzhead.name.length?255&a.gzhead.name.charCodeAt(a.gzindex++):0,wt(a,e)}while(0!==e);a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),a.gzindex=0}a.status=91}if(91===a.status){if(a.gzhead.comment){let e,i=a.pending;do{if(a.pending===a.pending_buf_size){if(a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),ct(t),0!==a.pending)return a.last_flush=-1,q;i=0}e=a.gzindex<a.gzhead.comment.length?255&a.gzhead.comment.charCodeAt(a.gzindex++):0,wt(a,e)}while(0!==e);a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i))}a.status=103}if(103===a.status){if(a.gzhead.hcrc){if(a.pending+2>a.pending_buf_size&&(ct(t),0!==a.pending))return a.last_flush=-1,q;wt(a,255&t.adler),wt(a,t.adler>>8&255),t.adler=0}if(a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q}if(0!==t.avail_in||0!==a.lookahead||e!==P&&666!==a.status){let i=0===a.level?kt(a,e):a.strategy===at?((t,e)=>{let a;for(;;){if(0===t.lookahead&&(pt(t),0===t.lookahead)){if(e===P)return 1;break}if(t.match_length=0,a=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,a&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2})(a,e):a.strategy===it?((t,e)=>{let a,i,n,s;const r=t.window;for(;;){if(t.lookahead<=258){if(pt(t),t.lookahead<=258&&e===P)return 1;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=3&&t.strstart>0&&(n=t.strstart-1,i=r[n],i===r[++n]&&i===r[++n]&&i===r[++n])){s=t.strstart+258;do{}while(i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&n<s);t.match_length=258-(s-n),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=3?(a=j(t,1,t.match_length-3),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(a=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),a&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2})(a,e):zt[a.level].func(a,e);if(3!==i&&4!==i||(a.status=666),1===i||3===i)return 0===t.avail_out&&(a.last_flush=-1),q;if(2===i&&(e===Y?K(a):e!==W&&(H(a,0,0,!1),e===G&&(dt(a.head),0===a.lookahead&&(a.strstart=0,a.block_start=0,a.insert=0))),ct(t),0===t.avail_out))return a.last_flush=-1,q}return e!==X?q:a.wrap<=0?J:(2===a.wrap?(wt(a,255&t.adler),wt(a,t.adler>>8&255),wt(a,t.adler>>16&255),wt(a,t.adler>>24&255),wt(a,255&t.total_in),wt(a,t.total_in>>8&255),wt(a,t.total_in>>16&255),wt(a,t.total_in>>24&255)):(mt(a,t.adler>>>16),mt(a,65535&t.adler)),ct(t),a.wrap>0&&(a.wrap=-a.wrap),0!==a.pending?q:J)},deflateEnd:t=>{if(Et(t))return Q;const e=t.state.status;return t.state=null,113===e?lt(t,V):q},deflateSetDictionary:(t,e)=>{let a=e.length;if(Et(t))return Q;const i=t.state,n=i.wrap;if(2===n||1===n&&42!==i.status||i.lookahead)return Q;if(1===n&&(t.adler=F(t.adler,e,a,0)),i.wrap=0,a>=i.w_size){0===n&&(dt(i.head),i.strstart=0,i.block_start=0,i.insert=0);let t=new Uint8Array(i.w_size);t.set(e.subarray(a-i.w_size,a),0),e=t,a=i.w_size}const s=t.avail_in,r=t.next_in,o=t.input;for(t.avail_in=a,t.next_in=0,t.input=e,pt(i);i.lookahead>=3;){let t=i.strstart,e=i.lookahead-2;do{i.ins_h=ft(i,i.ins_h,i.window[t+3-1]),i.prev[t&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=t,t++}while(--e);i.strstart=t,i.lookahead=2,pt(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=2,i.match_available=0,t.next_in=r,t.input=o,t.avail_in=s,i.wrap=n,q},deflateInfo:\"pako deflate (from Nodeca project)\"};const Dt=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var Tt=function(t){const e=Array.prototype.slice.call(arguments,1);for(;e.length;){const a=e.shift();if(a){if(\"object\"!=typeof a)throw new TypeError(a+\"must be non-object\");for(const e in a)Dt(a,e)&&(t[e]=a[e])}}return t},Ot=t=>{let e=0;for(let a=0,i=t.length;a<i;a++)e+=t[a].length;const a=new Uint8Array(e);for(let e=0,i=0,n=t.length;e<n;e++){let n=t[e];a.set(n,i),i+=n.length}return a};let Ft=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){Ft=!1}const Lt=new Uint8Array(256);for(let t=0;t<256;t++)Lt[t]=t>=252?6:t>=248?5:t>=240?4:t>=224?3:t>=192?2:1;Lt[254]=Lt[254]=1;var Nt=t=>{if(\"function\"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(t);let e,a,i,n,s,r=t.length,o=0;for(n=0;n<r;n++)a=t.charCodeAt(n),55296==(64512&a)&&n+1<r&&(i=t.charCodeAt(n+1),56320==(64512&i)&&(a=65536+(a-55296<<10)+(i-56320),n++)),o+=a<128?1:a<2048?2:a<65536?3:4;for(e=new Uint8Array(o),s=0,n=0;s<o;n++)a=t.charCodeAt(n),55296==(64512&a)&&n+1<r&&(i=t.charCodeAt(n+1),56320==(64512&i)&&(a=65536+(a-55296<<10)+(i-56320),n++)),a<128?e[s++]=a:a<2048?(e[s++]=192|a>>>6,e[s++]=128|63&a):a<65536?(e[s++]=224|a>>>12,e[s++]=128|a>>>6&63,e[s++]=128|63&a):(e[s++]=240|a>>>18,e[s++]=128|a>>>12&63,e[s++]=128|a>>>6&63,e[s++]=128|63&a);return e},It=(t,e)=>{const a=e||t.length;if(\"function\"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(t.subarray(0,e));let i,n;const s=new Array(2*a);for(n=0,i=0;i<a;){let e=t[i++];if(e<128){s[n++]=e;continue}let r=Lt[e];if(r>4)s[n++]=65533,i+=r-1;else{for(e&=2===r?31:3===r?15:7;r>1&&i<a;)e=e<<6|63&t[i++],r--;r>1?s[n++]=65533:e<65536?s[n++]=e:(e-=65536,s[n++]=55296|e>>10&1023,s[n++]=56320|1023&e)}}return((t,e)=>{if(e<65534&&t.subarray&&Ft)return String.fromCharCode.apply(null,t.length===e?t:t.subarray(0,e));let a=\"\";for(let i=0;i<e;i++)a+=String.fromCharCode(t[i]);return a})(s,n)},Bt=(t,e)=>{(e=e||t.length)>t.length&&(e=t.length);let a=e-1;for(;a>=0&&128==(192&t[a]);)a--;return a<0||0===a?e:a+Lt[t[a]]>e?a:e};var Ct=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0};const Ht=Object.prototype.toString,{Z_NO_FLUSH:Mt,Z_SYNC_FLUSH:jt,Z_FULL_FLUSH:Kt,Z_FINISH:Pt,Z_OK:Yt,Z_STREAM_END:Gt,Z_DEFAULT_COMPRESSION:Xt,Z_DEFAULT_STRATEGY:Wt,Z_DEFLATED:qt}=B;function Jt(t){this.options=Tt({level:Xt,method:qt,chunkSize:16384,windowBits:15,memLevel:8,strategy:Wt},t||{});let e=this.options;e.raw&&e.windowBits>0?e.windowBits=-e.windowBits:e.gzip&&e.windowBits>0&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new Ct,this.strm.avail_out=0;let a=St.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(a!==Yt)throw new Error(I[a]);if(e.header&&St.deflateSetHeader(this.strm,e.header),e.dictionary){let t;if(t=\"string\"==typeof e.dictionary?Nt(e.dictionary):\"[object ArrayBuffer]\"===Ht.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,a=St.deflateSetDictionary(this.strm,t),a!==Yt)throw new Error(I[a]);this._dict_set=!0}}function Qt(t,e){const a=new Jt(e);if(a.push(t,!0),a.err)throw a.msg||I[a.err];return a.result}Jt.prototype.push=function(t,e){const a=this.strm,i=this.options.chunkSize;let n,s;if(this.ended)return!1;for(s=e===~~e?e:!0===e?Pt:Mt,\"string\"==typeof t?a.input=Nt(t):\"[object ArrayBuffer]\"===Ht.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;)if(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),(s===jt||s===Kt)&&a.avail_out<=6)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else{if(n=St.deflate(a,s),n===Gt)return a.next_out>0&&this.onData(a.output.subarray(0,a.next_out)),n=St.deflateEnd(this.strm),this.onEnd(n),this.ended=!0,n===Yt;if(0!==a.avail_out){if(s>0&&a.next_out>0)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else if(0===a.avail_in)break}else this.onData(a.output)}return!0},Jt.prototype.onData=function(t){this.chunks.push(t)},Jt.prototype.onEnd=function(t){t===Yt&&(this.result=Ot(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};var Vt={Deflate:Jt,deflate:Qt,deflateRaw:function(t,e){return(e=e||{}).raw=!0,Qt(t,e)},gzip:function(t,e){return(e=e||{}).gzip=!0,Qt(t,e)},constants:B};var $t=function(t,e){let a,i,n,s,r,o,l,h,d,_,f,c,u,w,m,b,g,p,k,v,y,x,z,A;const E=t.state;a=t.next_in,z=t.input,i=a+(t.avail_in-5),n=t.next_out,A=t.output,s=n-(e-t.avail_out),r=n+(t.avail_out-257),o=E.dmax,l=E.wsize,h=E.whave,d=E.wnext,_=E.window,f=E.hold,c=E.bits,u=E.lencode,w=E.distcode,m=(1<<E.lenbits)-1,b=(1<<E.distbits)-1;t:do{c<15&&(f+=z[a++]<<c,c+=8,f+=z[a++]<<c,c+=8),g=u[f&m];e:for(;;){if(p=g>>>24,f>>>=p,c-=p,p=g>>>16&255,0===p)A[n++]=65535&g;else{if(!(16&p)){if(0==(64&p)){g=u[(65535&g)+(f&(1<<p)-1)];continue e}if(32&p){E.mode=16191;break t}t.msg=\"invalid literal/length code\",E.mode=16209;break t}k=65535&g,p&=15,p&&(c<p&&(f+=z[a++]<<c,c+=8),k+=f&(1<<p)-1,f>>>=p,c-=p),c<15&&(f+=z[a++]<<c,c+=8,f+=z[a++]<<c,c+=8),g=w[f&b];a:for(;;){if(p=g>>>24,f>>>=p,c-=p,p=g>>>16&255,!(16&p)){if(0==(64&p)){g=w[(65535&g)+(f&(1<<p)-1)];continue a}t.msg=\"invalid distance code\",E.mode=16209;break t}if(v=65535&g,p&=15,c<p&&(f+=z[a++]<<c,c+=8,c<p&&(f+=z[a++]<<c,c+=8)),v+=f&(1<<p)-1,v>o){t.msg=\"invalid distance too far back\",E.mode=16209;break t}if(f>>>=p,c-=p,p=n-s,v>p){if(p=v-p,p>h&&E.sane){t.msg=\"invalid distance too far back\",E.mode=16209;break t}if(y=0,x=_,0===d){if(y+=l-p,p<k){k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}}else if(d<p){if(y+=l+d-p,p-=d,p<k){k-=p;do{A[n++]=_[y++]}while(--p);if(y=0,d<k){p=d,k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}}}else if(y+=d-p,p<k){k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}for(;k>2;)A[n++]=x[y++],A[n++]=x[y++],A[n++]=x[y++],k-=3;k&&(A[n++]=x[y++],k>1&&(A[n++]=x[y++]))}else{y=n-v;do{A[n++]=A[y++],A[n++]=A[y++],A[n++]=A[y++],k-=3}while(k>2);k&&(A[n++]=A[y++],k>1&&(A[n++]=A[y++]))}break}}break}}while(a<i&&n<r);k=c>>3,a-=k,c-=k<<3,f&=(1<<c)-1,t.next_in=a,t.next_out=n,t.avail_in=a<i?i-a+5:5-(a-i),t.avail_out=n<r?r-n+257:257-(n-r),E.hold=f,E.bits=c};const te=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),ee=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),ae=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),ie=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var ne=(t,e,a,i,n,s,r,o)=>{const l=o.bits;let h,d,_,f,c,u,w=0,m=0,b=0,g=0,p=0,k=0,v=0,y=0,x=0,z=0,A=null;const E=new Uint16Array(16),R=new Uint16Array(16);let Z,U,S,D=null;for(w=0;w<=15;w++)E[w]=0;for(m=0;m<i;m++)E[e[a+m]]++;for(p=l,g=15;g>=1&&0===E[g];g--);if(p>g&&(p=g),0===g)return n[s++]=20971520,n[s++]=20971520,o.bits=1,0;for(b=1;b<g&&0===E[b];b++);for(p<b&&(p=b),y=1,w=1;w<=15;w++)if(y<<=1,y-=E[w],y<0)return-1;if(y>0&&(0===t||1!==g))return-1;for(R[1]=0,w=1;w<15;w++)R[w+1]=R[w]+E[w];for(m=0;m<i;m++)0!==e[a+m]&&(r[R[e[a+m]]++]=m);if(0===t?(A=D=r,u=20):1===t?(A=te,D=ee,u=257):(A=ae,D=ie,u=0),z=0,m=0,w=b,c=s,k=p,v=0,_=-1,x=1<<p,f=x-1,1===t&&x>852||2===t&&x>592)return 1;for(;;){Z=w-v,r[m]+1<u?(U=0,S=r[m]):r[m]>=u?(U=D[r[m]-u],S=A[r[m]-u]):(U=96,S=0),h=1<<w-v,d=1<<k,b=d;do{d-=h,n[c+(z>>v)+d]=Z<<24|U<<16|S|0}while(0!==d);for(h=1<<w-1;z&h;)h>>=1;if(0!==h?(z&=h-1,z+=h):z=0,m++,0==--E[w]){if(w===g)break;w=e[a+r[m]]}if(w>p&&(z&f)!==_){for(0===v&&(v=p),c+=b,k=w-v,y=1<<k;k+v<g&&(y-=E[k+v],!(y<=0));)k++,y<<=1;if(x+=1<<k,1===t&&x>852||2===t&&x>592)return 1;_=z&f,n[_]=p<<24|k<<16|c-s|0}}return 0!==z&&(n[c+z]=w-v<<24|64<<16|0),o.bits=p,0};const{Z_FINISH:se,Z_BLOCK:re,Z_TREES:oe,Z_OK:le,Z_STREAM_END:he,Z_NEED_DICT:de,Z_STREAM_ERROR:_e,Z_DATA_ERROR:fe,Z_MEM_ERROR:ce,Z_BUF_ERROR:ue,Z_DEFLATED:we}=B,me=16209,be=t=>(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24);function ge(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const pe=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||e.mode<16180||e.mode>16211?1:0},ke=t=>{if(pe(t))return _e;const e=t.state;return t.total_in=t.total_out=e.total=0,t.msg=\"\",e.wrap&&(t.adler=1&e.wrap),e.mode=16180,e.last=0,e.havedict=0,e.flags=-1,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new Int32Array(852),e.distcode=e.distdyn=new Int32Array(592),e.sane=1,e.back=-1,le},ve=t=>{if(pe(t))return _e;const e=t.state;return e.wsize=0,e.whave=0,e.wnext=0,ke(t)},ye=(t,e)=>{let a;if(pe(t))return _e;const i=t.state;return e<0?(a=0,e=-e):(a=5+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?_e:(null!==i.window&&i.wbits!==e&&(i.window=null),i.wrap=a,i.wbits=e,ve(t))},xe=(t,e)=>{if(!t)return _e;const a=new ge;t.state=a,a.strm=t,a.window=null,a.mode=16180;const i=ye(t,e);return i!==le&&(t.state=null),i};let ze,Ae,Ee=!0;const Re=t=>{if(Ee){ze=new Int32Array(512),Ae=new Int32Array(32);let e=0;for(;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(ne(1,t.lens,0,288,ze,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;ne(2,t.lens,0,32,Ae,0,t.work,{bits:5}),Ee=!1}t.lencode=ze,t.lenbits=9,t.distcode=Ae,t.distbits=5},Ze=(t,e,a,i)=>{let n;const s=t.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new Uint8Array(s.wsize)),i>=s.wsize?(s.window.set(e.subarray(a-s.wsize,a),0),s.wnext=0,s.whave=s.wsize):(n=s.wsize-s.wnext,n>i&&(n=i),s.window.set(e.subarray(a-i,a-i+n),s.wnext),(i-=n)?(s.window.set(e.subarray(a-i,a),0),s.wnext=i,s.whave=s.wsize):(s.wnext+=n,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=n))),0};var Ue={inflateReset:ve,inflateReset2:ye,inflateResetKeep:ke,inflateInit:t=>xe(t,15),inflateInit2:xe,inflate:(t,e)=>{let a,i,n,s,r,o,l,h,d,_,f,c,u,w,m,b,g,p,k,v,y,x,z=0;const A=new Uint8Array(4);let E,R;const Z=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(pe(t)||!t.output||!t.input&&0!==t.avail_in)return _e;a=t.state,16191===a.mode&&(a.mode=16192),r=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,_=o,f=l,x=le;t:for(;;)switch(a.mode){case 16180:if(0===a.wrap){a.mode=16192;break}for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(2&a.wrap&&35615===h){0===a.wbits&&(a.wbits=15),a.check=0,A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0),h=0,d=0,a.mode=16181;break}if(a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&h)<<8)+(h>>8))%31){t.msg=\"incorrect header check\",a.mode=me;break}if((15&h)!==we){t.msg=\"unknown compression method\",a.mode=me;break}if(h>>>=4,d-=4,y=8+(15&h),0===a.wbits&&(a.wbits=y),y>15||y>a.wbits){t.msg=\"invalid window size\",a.mode=me;break}a.dmax=1<<a.wbits,a.flags=0,t.adler=a.check=1,a.mode=512&h?16189:16191,h=0,d=0;break;case 16181:for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(a.flags=h,(255&a.flags)!==we){t.msg=\"unknown compression method\",a.mode=me;break}if(57344&a.flags){t.msg=\"unknown header flags set\",a.mode=me;break}a.head&&(a.head.text=h>>8&1),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0,a.mode=16182;case 16182:for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.head&&(a.head.time=h),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,A[2]=h>>>16&255,A[3]=h>>>24&255,a.check=N(a.check,A,4,0)),h=0,d=0,a.mode=16183;case 16183:for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.head&&(a.head.xflags=255&h,a.head.os=h>>8),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0,a.mode=16184;case 16184:if(1024&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.length=h,a.head&&(a.head.extra_len=h),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0}else a.head&&(a.head.extra=null);a.mode=16185;case 16185:if(1024&a.flags&&(c=a.length,c>o&&(c=o),c&&(a.head&&(y=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Uint8Array(a.head.extra_len)),a.head.extra.set(i.subarray(s,s+c),y)),512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,a.length-=c),a.length))break t;a.length=0,a.mode=16186;case 16186:if(2048&a.flags){if(0===o)break t;c=0;do{y=i[s+c++],a.head&&y&&a.length<65536&&(a.head.name+=String.fromCharCode(y))}while(y&&c<o);if(512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,y)break t}else a.head&&(a.head.name=null);a.length=0,a.mode=16187;case 16187:if(4096&a.flags){if(0===o)break t;c=0;do{y=i[s+c++],a.head&&y&&a.length<65536&&(a.head.comment+=String.fromCharCode(y))}while(y&&c<o);if(512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,y)break t}else a.head&&(a.head.comment=null);a.mode=16188;case 16188:if(512&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(4&a.wrap&&h!==(65535&a.check)){t.msg=\"header crc mismatch\",a.mode=me;break}h=0,d=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),t.adler=a.check=0,a.mode=16191;break;case 16189:for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}t.adler=a.check=be(h),h=0,d=0,a.mode=16190;case 16190:if(0===a.havedict)return t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,de;t.adler=a.check=1,a.mode=16191;case 16191:if(e===re||e===oe)break t;case 16192:if(a.last){h>>>=7&d,d-=7&d,a.mode=16206;break}for(;d<3;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}switch(a.last=1&h,h>>>=1,d-=1,3&h){case 0:a.mode=16193;break;case 1:if(Re(a),a.mode=16199,e===oe){h>>>=2,d-=2;break t}break;case 2:a.mode=16196;break;case 3:t.msg=\"invalid block type\",a.mode=me}h>>>=2,d-=2;break;case 16193:for(h>>>=7&d,d-=7&d;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if((65535&h)!=(h>>>16^65535)){t.msg=\"invalid stored block lengths\",a.mode=me;break}if(a.length=65535&h,h=0,d=0,a.mode=16194,e===oe)break t;case 16194:a.mode=16195;case 16195:if(c=a.length,c){if(c>o&&(c=o),c>l&&(c=l),0===c)break t;n.set(i.subarray(s,s+c),r),o-=c,s+=c,l-=c,r+=c,a.length-=c;break}a.mode=16191;break;case 16196:for(;d<14;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(a.nlen=257+(31&h),h>>>=5,d-=5,a.ndist=1+(31&h),h>>>=5,d-=5,a.ncode=4+(15&h),h>>>=4,d-=4,a.nlen>286||a.ndist>30){t.msg=\"too many length or distance symbols\",a.mode=me;break}a.have=0,a.mode=16197;case 16197:for(;a.have<a.ncode;){for(;d<3;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.lens[Z[a.have++]]=7&h,h>>>=3,d-=3}for(;a.have<19;)a.lens[Z[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,E={bits:a.lenbits},x=ne(0,a.lens,0,19,a.lencode,0,a.work,E),a.lenbits=E.bits,x){t.msg=\"invalid code lengths set\",a.mode=me;break}a.have=0,a.mode=16198;case 16198:for(;a.have<a.nlen+a.ndist;){for(;z=a.lencode[h&(1<<a.lenbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(g<16)h>>>=m,d-=m,a.lens[a.have++]=g;else{if(16===g){for(R=m+2;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(h>>>=m,d-=m,0===a.have){t.msg=\"invalid bit length repeat\",a.mode=me;break}y=a.lens[a.have-1],c=3+(3&h),h>>>=2,d-=2}else if(17===g){for(R=m+3;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=m,d-=m,y=0,c=3+(7&h),h>>>=3,d-=3}else{for(R=m+7;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=m,d-=m,y=0,c=11+(127&h),h>>>=7,d-=7}if(a.have+c>a.nlen+a.ndist){t.msg=\"invalid bit length repeat\",a.mode=me;break}for(;c--;)a.lens[a.have++]=y}}if(a.mode===me)break;if(0===a.lens[256]){t.msg=\"invalid code -- missing end-of-block\",a.mode=me;break}if(a.lenbits=9,E={bits:a.lenbits},x=ne(1,a.lens,0,a.nlen,a.lencode,0,a.work,E),a.lenbits=E.bits,x){t.msg=\"invalid literal/lengths set\",a.mode=me;break}if(a.distbits=6,a.distcode=a.distdyn,E={bits:a.distbits},x=ne(2,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,E),a.distbits=E.bits,x){t.msg=\"invalid distances set\",a.mode=me;break}if(a.mode=16199,e===oe)break t;case 16199:a.mode=16200;case 16200:if(o>=6&&l>=258){t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,$t(t,f),r=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,16191===a.mode&&(a.back=-1);break}for(a.back=0;z=a.lencode[h&(1<<a.lenbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(b&&0==(240&b)){for(p=m,k=b,v=g;z=a.lencode[v+((h&(1<<p+k)-1)>>p)],m=z>>>24,b=z>>>16&255,g=65535&z,!(p+m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=m,d-=m,a.back+=m,a.length=g,0===b){a.mode=16205;break}if(32&b){a.back=-1,a.mode=16191;break}if(64&b){t.msg=\"invalid literal/length code\",a.mode=me;break}a.extra=15&b,a.mode=16201;case 16201:if(a.extra){for(R=a.extra;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.length+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=16202;case 16202:for(;z=a.distcode[h&(1<<a.distbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(0==(240&b)){for(p=m,k=b,v=g;z=a.distcode[v+((h&(1<<p+k)-1)>>p)],m=z>>>24,b=z>>>16&255,g=65535&z,!(p+m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=m,d-=m,a.back+=m,64&b){t.msg=\"invalid distance code\",a.mode=me;break}a.offset=g,a.extra=15&b,a.mode=16203;case 16203:if(a.extra){for(R=a.extra;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.offset+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){t.msg=\"invalid distance too far back\",a.mode=me;break}a.mode=16204;case 16204:if(0===l)break t;if(c=f-l,a.offset>c){if(c=a.offset-c,c>a.whave&&a.sane){t.msg=\"invalid distance too far back\",a.mode=me;break}c>a.wnext?(c-=a.wnext,u=a.wsize-c):u=a.wnext-c,c>a.length&&(c=a.length),w=a.window}else w=n,u=r-a.offset,c=a.length;c>l&&(c=l),l-=c,a.length-=c;do{n[r++]=w[u++]}while(--c);0===a.length&&(a.mode=16200);break;case 16205:if(0===l)break t;n[r++]=a.length,l--,a.mode=16200;break;case 16206:if(a.wrap){for(;d<32;){if(0===o)break t;o--,h|=i[s++]<<d,d+=8}if(f-=l,t.total_out+=f,a.total+=f,4&a.wrap&&f&&(t.adler=a.check=a.flags?N(a.check,n,f,r-f):F(a.check,n,f,r-f)),f=l,4&a.wrap&&(a.flags?h:be(h))!==a.check){t.msg=\"incorrect data check\",a.mode=me;break}h=0,d=0}a.mode=16207;case 16207:if(a.wrap&&a.flags){for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(4&a.wrap&&h!==(4294967295&a.total)){t.msg=\"incorrect length check\",a.mode=me;break}h=0,d=0}a.mode=16208;case 16208:x=he;break t;case me:x=fe;break t;case 16210:return ce;default:return _e}return t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,(a.wsize||f!==t.avail_out&&a.mode<me&&(a.mode<16206||e!==se))&&Ze(t,t.output,t.next_out,f-t.avail_out),_-=t.avail_in,f-=t.avail_out,t.total_in+=_,t.total_out+=f,a.total+=f,4&a.wrap&&f&&(t.adler=a.check=a.flags?N(a.check,n,f,t.next_out-f):F(a.check,n,f,t.next_out-f)),t.data_type=a.bits+(a.last?64:0)+(16191===a.mode?128:0)+(16199===a.mode||16194===a.mode?256:0),(0===_&&0===f||e===se)&&x===le&&(x=ue),x},inflateEnd:t=>{if(pe(t))return _e;let e=t.state;return e.window&&(e.window=null),t.state=null,le},inflateGetHeader:(t,e)=>{if(pe(t))return _e;const a=t.state;return 0==(2&a.wrap)?_e:(a.head=e,e.done=!1,le)},inflateSetDictionary:(t,e)=>{const a=e.length;let i,n,s;return pe(t)?_e:(i=t.state,0!==i.wrap&&16190!==i.mode?_e:16190===i.mode&&(n=1,n=F(n,e,a,0),n!==i.check)?fe:(s=Ze(t,e,a,a),s?(i.mode=16210,ce):(i.havedict=1,le)))},inflateInfo:\"pako inflate (from Nodeca project)\"};var Se=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1};const De=Object.prototype.toString,{Z_NO_FLUSH:Te,Z_FINISH:Oe,Z_OK:Fe,Z_STREAM_END:Le,Z_NEED_DICT:Ne,Z_STREAM_ERROR:Ie,Z_DATA_ERROR:Be,Z_MEM_ERROR:Ce}=B;function He(t){this.options=Tt({chunkSize:65536,windowBits:15,to:\"\"},t||{});const e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(e.windowBits>=0&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new Ct,this.strm.avail_out=0;let a=Ue.inflateInit2(this.strm,e.windowBits);if(a!==Fe)throw new Error(I[a]);if(this.header=new Se,Ue.inflateGetHeader(this.strm,this.header),e.dictionary&&(\"string\"==typeof e.dictionary?e.dictionary=Nt(e.dictionary):\"[object ArrayBuffer]\"===De.call(e.dictionary)&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(a=Ue.inflateSetDictionary(this.strm,e.dictionary),a!==Fe)))throw new Error(I[a])}He.prototype.push=function(t,e){const a=this.strm,i=this.options.chunkSize,n=this.options.dictionary;let s,r,o;if(this.ended)return!1;for(r=e===~~e?e:!0===e?Oe:Te,\"[object ArrayBuffer]\"===De.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;){for(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),s=Ue.inflate(a,r),s===Ne&&n&&(s=Ue.inflateSetDictionary(a,n),s===Fe?s=Ue.inflate(a,r):s===Be&&(s=Ne));a.avail_in>0&&s===Le&&a.state.wrap>0&&0!==t[a.next_in];)Ue.inflateReset(a),s=Ue.inflate(a,r);switch(s){case Ie:case Be:case Ne:case Ce:return this.onEnd(s),this.ended=!0,!1}if(o=a.avail_out,a.next_out&&(0===a.avail_out||s===Le))if(\"string\"===this.options.to){let t=Bt(a.output,a.next_out),e=a.next_out-t,n=It(a.output,t);a.next_out=e,a.avail_out=i-e,e&&a.output.set(a.output.subarray(t,t+e),0),this.onData(n)}else this.onData(a.output.length===a.next_out?a.output:a.output.subarray(0,a.next_out));if(s!==Fe||0!==o){if(s===Le)return s=Ue.inflateEnd(this.strm),this.onEnd(s),this.ended=!0,!0;if(0===a.avail_in)break}}return!0},He.prototype.onData=function(t){this.chunks.push(t)},He.prototype.onEnd=function(t){t===Fe&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=Ot(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};const{Deflate:Me,deflate:je,deflateRaw:Ke,gzip:Pe}=Vt;var Ye=Me,Ge=je,Xe=B;const We=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const e=this._hasEvents?\",\":\"\";this.deflate.push(e+t,Xe.Z_SYNC_FLUSH),this._hasEvents=!0}finish(){if(this.deflate.push(\"]\",Xe.Z_FINISH),this.deflate.err)throw this.deflate.err;const t=this.deflate.result;return this._init(),t}_init(){this._hasEvents=!1,this.deflate=new Ye,this.deflate.push(\"[\",Xe.Z_NO_FLUSH)}},qe={clear:()=>{We.clear()},addEvent:t=>We.addEvent(t),finish:()=>We.finish(),compress:t=>function(t){return Ge(t)}(t)};addEventListener(\"message\",(function(t){const e=t.data.method,a=t.data.id,i=t.data.arg;if(e in qe&&\"function\"==typeof qe[e])try{const t=qe[e](i);postMessage({id:a,method:e,success:!0,response:t})}catch(t){postMessage({id:a,method:e,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n\nfunction e(){const e=new Blob([r]);return URL.createObjectURL(e)}\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nclass EventBufferSizeExceededError extends Error {\n   constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nclass EventBufferArray  {\n  /** All the events that are buffered to be sent. */\n\n   __init() {this._totalSize = 0;}\n\n   constructor() {EventBufferArray.prototype.__init.call(this);\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n   destroy() {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n   async addEvent(event) {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n   finish() {\n    return new Promise(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this.events = [];\n    this._totalSize = 0;\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass WorkerHandler {\n\n   constructor(worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }) => {\n          if ((data ).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n   destroy() {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n   postMessage(method, arg) {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }) => {\n        const response = data ;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response );\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n   _getAndIncrementId() {\n    return this._id++;\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass EventBufferCompressionWorker  {\n\n   __init() {this._totalSize = 0;}\n\n   constructor(worker) {EventBufferCompressionWorker.prototype.__init.call(this);\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n   destroy() {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n   addEvent(event) {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n   finish() {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    void this._worker.postMessage('clear');\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n   _sendEventToWorker(data) {\n    return this._worker.postMessage('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n   async _finishRequest() {\n    const response = await this._worker.postMessage('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nclass EventBufferProxy  {\n\n   constructor(worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n   get hasEvents() {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritDoc */\n   destroy() {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n   addEvent(event) {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n   async finish() {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n   ensureWorkerIsLoaded() {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n   async _ensureWorkerIsLoaded() {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n   async _switchToCompressionWorker() {\n    const { events } = this._fallback;\n\n    const addEventPromises = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n\n/**\n * Create an event buffer for replays.\n */\nfunction createEventBuffer({ useCompression }) {\n  // eslint-disable-next-line no-restricted-globals\n  if (useCompression && window.Worker) {\n    try {\n      const workerUrl = e();\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Replay] Using compression worker');\n      const worker = new Worker(workerUrl);\n      return new EventBufferProxy(worker);\n    } catch (error) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Replay] Failed to create compression worker');\n      // Fall back to use simple event buffer array\n    }\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\n/** If sessionStorage is available. */\nfunction hasSessionStorage() {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nfunction clearSession(replay) {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession() {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nfunction isExpired(\n  initialTime,\n  expiry,\n  targetTime = +new Date(),\n) {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n\n/**\n * Checks to see if session is expired\n */\nfunction isSessionExpired(session, timeouts, targetTime = +new Date()) {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, timeouts.maxSessionLife, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, timeouts.sessionIdleExpire, targetTime)\n  );\n}\n\n/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nfunction isSampled(sampleRate) {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n\n/**\n * Save a session to session storage.\n */\nfunction saveSession(session) {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Get a session with defaults & applied sampling.\n */\nfunction makeSession(session) {\n  const now = Date.now();\n  const id = session.id || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    shouldRefresh: true,\n  };\n}\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nfunction getSessionSampleType(sessionSampleRate, allowBuffering) {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nfunction createSession({ sessionSampleRate, allowBuffering, stickySession = false }) {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n  });\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log(`[Replay] Creating new session: ${session.id}`);\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n\n/**\n * Fetches a session from storage\n */\nfunction fetchSession() {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) ;\n\n    return makeSession(sessionObj);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Get or create a session\n */\nfunction getSession({\n  timeouts,\n  currentSession,\n  stickySession,\n  sessionSampleRate,\n  allowBuffering,\n}) {\n  // If session exists and is passed, use it instead of always hitting session storage\n  const session = currentSession || (stickySession && fetchSession());\n\n  if (session) {\n    // If there is a session, check if it is valid (e.g. \"last activity\" time\n    // should be within the \"session idle time\", and \"session started\" time is\n    // within \"max session time\").\n    const isExpired = isSessionExpired(session, timeouts);\n\n    if (!isExpired || (allowBuffering && session.shouldRefresh)) {\n      return { type: 'saved', session };\n    } else if (!session.shouldRefresh) {\n      // This is the case if we have an error session that is completed\n      // (=triggered an error). Session will continue as session-based replay,\n      // and when this session is expired, it will not be renewed until user\n      // reloads.\n      const discardedSession = makeSession({ sampled: false });\n      return { type: 'new', session: discardedSession };\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Replay] Session has expired');\n    }\n    // Otherwise continue to create a new session\n  }\n\n  const newSession = createSession({\n    stickySession,\n    sessionSampleRate,\n    allowBuffering,\n  });\n\n  return { type: 'new', session: newSession };\n}\n\nfunction isCustomEvent(event) {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nasync function addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!replay.eventBuffer) {\n    // This implies that `_isEnabled` is false\n    return null;\n  }\n\n  if (replay.isPaused()) {\n    // Do not add to event buffer when recording is paused\n    return null;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return null;\n  }\n\n  try {\n    if (isCheckout) {\n      replay.eventBuffer.clear();\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.error(error);\n    await replay.stop(reason);\n\n    const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentHub)().getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\nfunction maybeApplyCallback(\n  event,\n  callback,\n) {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n\n/** If the event is an error event */\nfunction isErrorEvent(event) {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nfunction isReplayEvent(event) {\n  return event.type === 'replay_event';\n}\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nfunction handleAfterSendEvent(replay) {\n  // Custom transports may still be returning `Promise<void>`, which means we cannot expect the status code to be available there\n  // TODO (v8): remove this check as it will no longer be necessary\n  const enforceStatusCode = isBaseTransportSend();\n\n  return (event, sendResponse) => {\n    if (!isErrorEvent(event) && !isTransactionEvent(event)) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (enforceStatusCode && (!statusCode || statusCode < 200 || statusCode >= 300)) {\n      return;\n    }\n\n    // Collect traceIds in _context regardless of `recordingMode`\n    // In error mode, _context gets cleared on every checkout\n    if (isTransactionEvent(event) && event.contexts && event.contexts.trace && event.contexts.trace.trace_id) {\n      replay.getContext().traceIds.add(event.contexts.trace.trace_id );\n      return;\n    }\n\n    // Everything below is just for error events\n    if (!isErrorEvent(event)) {\n      return;\n    }\n\n    // Add error to list of errorIds of replay. This is ok to do even if not\n    // sampled because context will get reset at next checkout.\n    // XXX: There is also a race condition where it's possible to capture an\n    // error to Sentry before Replay SDK has loaded, but response returns after\n    // it was loaded, and this gets called.\n    if (event.event_id) {\n      replay.getContext().errorIds.add(event.event_id);\n    }\n\n    // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n    // Need to be very careful that this does not cause an infinite loop\n    if (replay.recordingMode === 'buffer' && event.tags && event.tags.replayId) {\n      setTimeout(() => {\n        // Capture current event buffer as new replay\n        void replay.sendBufferedReplayOrFlush();\n      });\n    }\n  };\n}\n\nfunction isBaseTransportSend() {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentHub)().getClient();\n  if (!client) {\n    return false;\n  }\n\n  const transport = client.getTransport();\n  if (!transport) {\n    return false;\n  }\n\n  return (\n    (transport.send ).__sentry__baseTransport__ || false\n  );\n}\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nfunction isRrwebError(event, hint) {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-ignore this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  // Check if any exception originates from rrweb\n  return event.exception.values.some(exception => {\n    if (!exception.stacktrace || !exception.stacktrace.frames || !exception.stacktrace.frames.length) {\n      return false;\n    }\n\n    return exception.stacktrace.frames.some(frame => frame.filename && frame.filename.includes('/rrweb/src/'));\n  });\n}\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nfunction shouldSampleForBufferEvent(replay, event) {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n\n/**\n * Returns a listener to be added to `addGlobalEventProcessor(listener)`.\n */\nfunction handleGlobalEventListener(\n  replay,\n  includeAfterSendEventHandling = false,\n) {\n  const afterSendHandler = includeAfterSendEventHandling ? handleAfterSendEvent(replay) : undefined;\n\n  return (event, hint) => {\n    if (isReplayEvent(event)) {\n      // Replays have separate set of breadcrumbs, do not include breadcrumbs\n      // from core SDK\n      delete event.breadcrumbs;\n      return event;\n    }\n\n    // We only want to handle errors & transactions, nothing else\n    if (!isErrorEvent(event) && !isTransactionEvent(event)) {\n      return event;\n    }\n\n    // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n    // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n    if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Replay] Ignoring error from rrweb internals', event);\n      return null;\n    }\n\n    // When in buffer mode, we decide to sample here.\n    // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n    // And convert the buffer session to a full session\n    const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n    // Tag errors if it has been sampled in buffer mode, or if it is session mode\n    // Only tag transactions if in session mode\n    const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n    if (shouldTagReplayId) {\n      event.tags = { ...event.tags, replayId: replay.getSessionId() };\n    }\n\n    // In cases where a custom client is used that does not support the new hooks (yet),\n    // we manually call this hook method here\n    if (afterSendHandler) {\n      // Pretend the error had a 200 response so we always capture it\n      afterSendHandler(event, { statusCode: 200 });\n    }\n\n    return event;\n  };\n}\n\n/**\n * Create a \"span\" for each performance entry.\n */\nfunction createPerformanceSpans(\n  replay,\n  entries,\n) {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n\nfunction handleHistory(handlerData) {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('history', listener)`.\n */\nfunction handleHistorySpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nfunction shouldFilterRequest(replay, url) {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return _isSentryRequest(url);\n}\n\n/**\n * Checks wether a given URL belongs to the configured Sentry DSN.\n */\nfunction _isSentryRequest(url) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentHub)().getClient();\n  const dsn = client && client.getDsn();\n  return dsn ? url.includes(dsn.host) : false;\n}\n\n/** Add a performance entry breadcrumb */\nfunction addNetworkBreadcrumb(\n  replay,\n  result,\n) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n\n/** only exported for tests */\nfunction handleFetch(handlerData) {\n  const { startTimestamp, endTimestamp, fetchData, response } = handlerData;\n\n  if (!endTimestamp) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url } = fetchData;\n\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: {\n      method,\n      statusCode: response ? (response ).status : undefined,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('fetch', listener)`.\n */\nfunction handleFetchSpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleFetch(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n\n/** only exported for tests */\nfunction handleXhr(handlerData) {\n  const { startTimestamp, endTimestamp, xhr } = handlerData;\n\n  const sentryXhrData = xhr[_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.SENTRY_XHR_DATA_KEY];\n\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url, status_code: statusCode } = sentryXhrData;\n\n  if (url === undefined) {\n    return null;\n  }\n\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    data: {\n      method,\n      statusCode,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('xhr', listener)`.\n */\nfunction handleXhrSpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleXhr(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n\nconst OBJ = 10;\nconst OBJ_KEY = 11;\nconst OBJ_KEY_STR = 12;\nconst OBJ_VAL = 13;\nconst OBJ_VAL_STR = 14;\nconst OBJ_VAL_COMPLETED = 15;\n\nconst ARR = 20;\nconst ARR_VAL = 21;\nconst ARR_VAL_STR = 22;\nconst ARR_VAL_COMPLETED = 23;\n\nconst ALLOWED_PRIMITIVES = ['true', 'false', 'null'];\n\n/**\n * Complete an incomplete JSON string.\n * This will ensure that the last element always has a `\"~~\"` to indicate it was truncated.\n * For example, `[1,2,` will be completed to `[1,2,\"~~\"]`\n * and `{\"aa\":\"b` will be completed to `{\"aa\":\"b~~\"}`\n */\nfunction completeJson(incompleteJson, stack) {\n  if (!stack.length) {\n    return incompleteJson;\n  }\n\n  let json = incompleteJson;\n\n  // Most checks are only needed for the last step in the stack\n  const lastPos = stack.length - 1;\n  const lastStep = stack[lastPos];\n\n  json = _fixLastStep(json, lastStep);\n\n  // Complete remaining steps - just add closing brackets\n  for (let i = lastPos; i >= 0; i--) {\n    const step = stack[i];\n\n    switch (step) {\n      case OBJ:\n        json = `${json}}`;\n        break;\n      case ARR:\n        json = `${json}]`;\n        break;\n    }\n  }\n\n  return json;\n}\n\nfunction _fixLastStep(json, lastStep) {\n  switch (lastStep) {\n    // Object cases\n    case OBJ:\n      return `${json}\"~~\":\"~~\"`;\n    case OBJ_KEY:\n      return `${json}:\"~~\"`;\n    case OBJ_KEY_STR:\n      return `${json}~~\":\"~~\"`;\n    case OBJ_VAL:\n      return _maybeFixIncompleteObjValue(json);\n    case OBJ_VAL_STR:\n      return `${json}~~\"`;\n    case OBJ_VAL_COMPLETED:\n      return `${json},\"~~\":\"~~\"`;\n\n    // Array cases\n    case ARR:\n      return `${json}\"~~\"`;\n    case ARR_VAL:\n      return _maybeFixIncompleteArrValue(json);\n    case ARR_VAL_STR:\n      return `${json}~~\"`;\n    case ARR_VAL_COMPLETED:\n      return `${json},\"~~\"`;\n  }\n\n  return json;\n}\n\nfunction _maybeFixIncompleteArrValue(json) {\n  const pos = _findLastArrayDelimiter(json);\n\n  if (pos > -1) {\n    const part = json.slice(pos + 1);\n\n    if (ALLOWED_PRIMITIVES.includes(part.trim())) {\n      return `${json},\"~~\"`;\n    }\n\n    // Everything else is replaced with `\"~~\"`\n    return `${json.slice(0, pos + 1)}\"~~\"`;\n  }\n\n  // fallback, this shouldn't happen, to be save\n  return json;\n}\n\nfunction _findLastArrayDelimiter(json) {\n  for (let i = json.length - 1; i >= 0; i--) {\n    const char = json[i];\n\n    if (char === ',' || char === '[') {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction _maybeFixIncompleteObjValue(json) {\n  const startPos = json.lastIndexOf(':');\n\n  const part = json.slice(startPos + 1);\n\n  if (ALLOWED_PRIMITIVES.includes(part.trim())) {\n    return `${json},\"~~\":\"~~\"`;\n  }\n\n  // Everything else is replaced with `\"~~\"`\n  // This also means we do not have incomplete numbers, e.g `[1` is replaced with `[\"~~\"]`\n  return `${json.slice(0, startPos + 1)}\"~~\"`;\n}\n\n/**\n * Evaluate an (incomplete) JSON string.\n */\nfunction evaluateJson(json) {\n  const stack = [];\n\n  for (let pos = 0; pos < json.length; pos++) {\n    _evaluateJsonPos(stack, json, pos);\n  }\n\n  return stack;\n}\n\nfunction _evaluateJsonPos(stack, json, pos) {\n  const curStep = stack[stack.length - 1];\n\n  const char = json[pos];\n\n  const whitespaceRegex = /\\s/;\n\n  if (whitespaceRegex.test(char)) {\n    return;\n  }\n\n  if (char === '\"' && !_isEscaped(json, pos)) {\n    _handleQuote(stack, curStep);\n    return;\n  }\n\n  switch (char) {\n    case '{':\n      _handleObj(stack, curStep);\n      break;\n    case '[':\n      _handleArr(stack, curStep);\n      break;\n    case ':':\n      _handleColon(stack, curStep);\n      break;\n    case ',':\n      _handleComma(stack, curStep);\n      break;\n    case '}':\n      _handleObjClose(stack, curStep);\n      break;\n    case ']':\n      _handleArrClose(stack, curStep);\n      break;\n  }\n}\n\nfunction _handleQuote(stack, curStep) {\n  // End of obj value\n  if (curStep === OBJ_VAL_STR) {\n    stack.pop();\n    stack.push(OBJ_VAL_COMPLETED);\n    return;\n  }\n\n  // End of arr value\n  if (curStep === ARR_VAL_STR) {\n    stack.pop();\n    stack.push(ARR_VAL_COMPLETED);\n    return;\n  }\n\n  // Start of obj value\n  if (curStep === OBJ_VAL) {\n    stack.push(OBJ_VAL_STR);\n    return;\n  }\n\n  // Start of arr value\n  if (curStep === ARR_VAL) {\n    stack.push(ARR_VAL_STR);\n    return;\n  }\n\n  // Start of obj key\n  if (curStep === OBJ) {\n    stack.push(OBJ_KEY_STR);\n    return;\n  }\n\n  // End of obj key\n  if (curStep === OBJ_KEY_STR) {\n    stack.pop();\n    stack.push(OBJ_KEY);\n    return;\n  }\n}\n\nfunction _handleObj(stack, curStep) {\n  // Initial object\n  if (!curStep) {\n    stack.push(OBJ);\n    return;\n  }\n\n  // New object as obj value\n  if (curStep === OBJ_VAL) {\n    stack.push(OBJ);\n    return;\n  }\n\n  // New object as array element\n  if (curStep === ARR_VAL) {\n    stack.push(OBJ);\n  }\n\n  // New object as first array element\n  if (curStep === ARR) {\n    stack.push(OBJ);\n    return;\n  }\n}\n\nfunction _handleArr(stack, curStep) {\n  // Initial array\n  if (!curStep) {\n    stack.push(ARR);\n    stack.push(ARR_VAL);\n    return;\n  }\n\n  // New array as obj value\n  if (curStep === OBJ_VAL) {\n    stack.push(ARR);\n    stack.push(ARR_VAL);\n    return;\n  }\n\n  // New array as array element\n  if (curStep === ARR_VAL) {\n    stack.push(ARR);\n    stack.push(ARR_VAL);\n  }\n\n  // New array as first array element\n  if (curStep === ARR) {\n    stack.push(ARR);\n    stack.push(ARR_VAL);\n    return;\n  }\n}\n\nfunction _handleColon(stack, curStep) {\n  if (curStep === OBJ_KEY) {\n    stack.pop();\n    stack.push(OBJ_VAL);\n  }\n}\n\nfunction _handleComma(stack, curStep) {\n  // Comma after obj value\n  if (curStep === OBJ_VAL) {\n    stack.pop();\n    return;\n  }\n  if (curStep === OBJ_VAL_COMPLETED) {\n    // Pop OBJ_VAL_COMPLETED & OBJ_VAL\n    stack.pop();\n    stack.pop();\n    return;\n  }\n\n  // Comma after arr value\n  if (curStep === ARR_VAL) {\n    // do nothing - basically we'd pop ARR_VAL but add it right back\n    return;\n  }\n\n  if (curStep === ARR_VAL_COMPLETED) {\n    // Pop ARR_VAL_COMPLETED\n    stack.pop();\n\n    // basically we'd pop ARR_VAL but add it right back\n    return;\n  }\n}\n\nfunction _handleObjClose(stack, curStep) {\n  // Empty object {}\n  if (curStep === OBJ) {\n    stack.pop();\n  }\n\n  // Object with element\n  if (curStep === OBJ_VAL) {\n    // Pop OBJ_VAL, OBJ\n    stack.pop();\n    stack.pop();\n  }\n\n  // Obj with element\n  if (curStep === OBJ_VAL_COMPLETED) {\n    // Pop OBJ_VAL_COMPLETED, OBJ_VAL, OBJ\n    stack.pop();\n    stack.pop();\n    stack.pop();\n  }\n\n  // if was obj value, complete it\n  if (stack[stack.length - 1] === OBJ_VAL) {\n    stack.push(OBJ_VAL_COMPLETED);\n  }\n\n  // if was arr value, complete it\n  if (stack[stack.length - 1] === ARR_VAL) {\n    stack.push(ARR_VAL_COMPLETED);\n  }\n}\n\nfunction _handleArrClose(stack, curStep) {\n  // Empty array []\n  if (curStep === ARR) {\n    stack.pop();\n  }\n\n  // Array with element\n  if (curStep === ARR_VAL) {\n    // Pop ARR_VAL, ARR\n    stack.pop();\n    stack.pop();\n  }\n\n  // Array with element\n  if (curStep === ARR_VAL_COMPLETED) {\n    // Pop ARR_VAL_COMPLETED, ARR_VAL, ARR\n    stack.pop();\n    stack.pop();\n    stack.pop();\n  }\n\n  // if was obj value, complete it\n  if (stack[stack.length - 1] === OBJ_VAL) {\n    stack.push(OBJ_VAL_COMPLETED);\n  }\n\n  // if was arr value, complete it\n  if (stack[stack.length - 1] === ARR_VAL) {\n    stack.push(ARR_VAL_COMPLETED);\n  }\n}\n\nfunction _isEscaped(str, pos) {\n  const previousChar = str[pos - 1];\n\n  return previousChar === '\\\\' && !_isEscaped(str, pos - 1);\n}\n\n/* eslint-disable max-lines */\n\n/**\n * Takes an incomplete JSON string, and returns a hopefully valid JSON string.\n * Note that this _can_ fail, so you should check the return value is valid JSON.\n */\nfunction fixJson(incompleteJson) {\n  const stack = evaluateJson(incompleteJson);\n\n  return completeJson(incompleteJson, stack);\n}\n\n/** Get the size of a body. */\nfunction getBodySize(\n  body,\n  textEncoder,\n) {\n  if (!body) {\n    return undefined;\n  }\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch (e) {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nfunction parseContentLengthHeader(header) {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nfunction getBodyString(body) {\n  if (typeof body === 'string') {\n    return body;\n  }\n\n  if (body instanceof URLSearchParams) {\n    return body.toString();\n  }\n\n  if (body instanceof FormData) {\n    return _serializeFormData(body);\n  }\n\n  return undefined;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nfunction makeNetworkReplayBreadcrumb(\n  type,\n  data,\n) {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dropUndefinedKeys)({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nfunction buildSkippedNetworkRequestOrResponse(bodySize) {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nfunction buildNetworkRequestOrResponse(\n  headers,\n  bodySize,\n  body,\n) {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nfunction getAllowedHeaders(headers, allowedHeaders) {\n  return Object.keys(headers).reduce((filteredHeaders, key) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData) {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-ignore passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body)\n\n {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n      warnings: [],\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n\n  if (_strIsProbablyJson(body)) {\n    try {\n      const json = exceedsSizeLimit ? fixJson(body.slice(0, NETWORK_BODY_MAX_SIZE)) : body;\n      const normalizedBody = JSON.parse(json);\n      return {\n        body: normalizedBody,\n        warnings: exceedsSizeLimit ? ['JSON_TRUNCATED'] : [],\n      };\n    } catch (e3) {\n      return {\n        body: exceedsSizeLimit ? `${body.slice(0, NETWORK_BODY_MAX_SIZE)}…` : body,\n        warnings: exceedsSizeLimit ? ['INVALID_JSON', 'TEXT_TRUNCATED'] : ['INVALID_JSON'],\n      };\n    }\n  }\n\n  return {\n    body: exceedsSizeLimit ? `${body.slice(0, NETWORK_BODY_MAX_SIZE)}…` : body,\n    warnings: exceedsSizeLimit ? ['TEXT_TRUNCATED'] : [],\n  };\n}\n\nfunction _strIsProbablyJson(str) {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nfunction urlMatches(url, urls) {\n  const fullUrl = getFullUrl(url);\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.stringMatchesSomePattern)(fullUrl, urls);\n}\n\n/** exported for tests */\nfunction getFullUrl(url, baseURI = WINDOW.document.baseURI) {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureFetchBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options\n\n,\n) {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichFetchBreadcrumb(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const { input, response } = hint;\n\n  const body = _getFetchRequestArgBody(input);\n  const reqSize = getBodySize(body, options.textEncoder);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb,\n  hint,\n  options\n\n,\n) {\n  const { startTimestamp, endTimestamp } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders },\n  input,\n  requestBodySize,\n) {\n  const headers = getRequestHeaders(input, networkRequestHeaders);\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const bodyStr = getBodyString(requestBody);\n  return buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n}\n\nasync function _getResponseInfo(\n  captureDetails,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    networkResponseHeaders,\n  }\n\n,\n  response,\n  responseBodySize,\n) {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = getAllHeaders(response.headers, networkResponseHeaders);\n\n  if (!networkCaptureBodies && responseBodySize !== undefined) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  // Only clone the response if we need to\n  try {\n    // We have to clone this, as the body can only be read once\n    const res = response.clone();\n    const bodyText = await _parseFetchBody(res);\n\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined\n        ? getBodySize(bodyText, textEncoder)\n        : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (e) {\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchBody(response) {\n  try {\n    return await response.text();\n  } catch (e2) {\n    return undefined;\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs = []) {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] ).body;\n}\n\nfunction getAllHeaders(headers, allowedHeaders) {\n  const allHeaders = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) ;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs, allowedHeaders) {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] , allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] , allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input,\n  allowedHeaders,\n) {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureXhrBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options,\n) {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichXhrBreadcrumb(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const { xhr, input } = hint;\n\n  const reqSize = getBodySize(input, options.textEncoder);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : getBodySize(xhr.response, options.textEncoder);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const { startTimestamp, endTimestamp, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const request = buildNetworkRequestOrResponse(\n    networkRequestHeaders,\n    requestBodySize,\n    options.networkCaptureBodies ? getBodyString(input) : undefined,\n  );\n  const response = buildNetworkRequestOrResponse(\n    networkResponseHeaders,\n    responseBodySize,\n    options.networkCaptureBodies ? hint.xhr.responseText : undefined,\n  );\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction getResponseHeaders(xhr) {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc, line) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nfunction handleNetworkBreadcrumbs(replay) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentHub)().getClient();\n\n  try {\n    const textEncoder = new TextEncoder();\n\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options = {\n      replay,\n      textEncoder,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client && client.on) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    } else {\n      // Fallback behavior\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.addInstrumentationHandler)('fetch', handleFetchSpanListener(replay));\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.addInstrumentationHandler)('xhr', handleXhrSpanListener(replay));\n    }\n  } catch (e2) {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nfunction beforeAddNetworkBreadcrumb(\n  options,\n  breadcrumb,\n  hint,\n) {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint, options);\n\n      void captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint, options);\n\n      void captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint) {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint) {\n  return hint && hint.response;\n}\n\nlet _LAST_BREADCRUMB = null;\n\nfunction isBreadcrumbWithCategory(breadcrumb) {\n  return !!breadcrumb.category;\n}\n\nconst handleScopeListener =\n  (replay) =>\n  (scope) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleScope(scope);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to handle scope changes.\n */\nfunction handleScope(scope) {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    !isBreadcrumbWithCategory(newBreadcrumb) ||\n    ['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n    newBreadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (newBreadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(newBreadcrumb);\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n\n/** exported for tests only */\nfunction normalizeConsoleBreadcrumb(\n  breadcrumb,\n) {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.normalize)(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          const fixedJson = fixJson(stringified.slice(0, CONSOLE_ARG_MAX_SIZE));\n          const json = JSON.parse(fixedJson);\n          // We only set this after JSON.parse() was successfull, so we know we didn't run into `catch`\n          isTruncated = true;\n          return json;\n        }\n        return normalizedArg;\n      } catch (e) {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n\n/**\n * Add global listeners that cannot be removed.\n */\nfunction addGlobalListeners(replay) {\n  // Listeners from core SDK //\n  const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentHub)().getScope();\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentHub)().getClient();\n\n  if (scope) {\n    scope.addScopeListener(handleScopeListener(replay));\n  }\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.addInstrumentationHandler)('dom', handleDomListener(replay));\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.addInstrumentationHandler)('history', handleHistorySpanListener(replay));\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.addGlobalEventProcessor)(handleGlobalEventListener(replay, !hasHooks(client)));\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (hasHooks(client)) {\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        dsc.replay_id = replayId;\n      }\n    });\n\n    client.on('startTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We may be missing the initial startTransaction due to timing issues,\n    // so we capture it on finish again.\n    client.on('finishTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasHooks(client) {\n  return !!(client && client.on);\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nasync function addMemoryEntry(replay) {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-ignore memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry) {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n\n// Map entryType -> function to normalize data for event\n// @ts-ignore TODO: entry type does not fit the create* functions entry type\nconst ENTRY_TYPES\n\n = {\n  // @ts-ignore TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-ignore TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n  // @ts-ignore TODO: entry type does not fit the create* functions entry type\n  ['largest-contentful-paint']: createLargestContentfulPaint,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nfunction createPerformanceEntries(\n  entries,\n) {\n  return entries.map(createPerformanceEntry).filter(Boolean) ;\n}\n\nfunction createPerformanceEntry(entry) {\n  if (ENTRY_TYPES[entry.entryType] === undefined) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time) {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((_sentry_utils__WEBPACK_IMPORTED_MODULE_10__.browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry) {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry) {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry,\n) {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\nfunction createLargestContentfulPaint(\n  entry,\n) {\n  const { entryType, startTime, size } = entry;\n\n  let startTimeOrNavigationActivation = 0;\n\n  if (WINDOW.performance) {\n    const navEntry = WINDOW.performance.getEntriesByType('navigation')[0]\n\n;\n\n    // See https://github.com/GoogleChrome/web-vitals/blob/9f11c4c6578fb4c5ee6fa4e32b9d1d756475f135/src/lib/getActivationStart.ts#L21\n    startTimeOrNavigationActivation = (navEntry && navEntry.activationStart) || 0;\n  }\n\n  // value is in ms\n  const value = Math.max(startTime - startTimeOrNavigationActivation, 0);\n  // LCP doesn't have a \"duration\", it just happens at a single point in time.\n  // But the UI expects both, so use end (in seconds) for both timestamps.\n  const end = getAbsoluteTime(startTimeOrNavigationActivation) + value / 1000;\n\n  return {\n    type: entryType,\n    name: entryType,\n    start: end,\n    end,\n    data: {\n      value, // LCP \"duration\" in ms\n      size,\n      // Not sure why this errors, Node should be correct (Argument of type 'Node' is not assignable to parameter of type 'INode')\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      nodeId: record.mirror.getId(entry.element ),\n    },\n  };\n}\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nfunction debounce(func, wait, options) {\n  let callbackReturnValue;\n\n  let timerId;\n  let maxTimerId;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc() {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers() {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush() {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced() {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nfunction getHandleRecordingEmit(replay) {\n  let hadFirstEvent = false;\n\n  return (event, _isCheckout) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // We need to clear existing events on a checkout, otherwise they are\n      // incremental event updates and should be appended\n      void addEvent(replay, event, isCheckout);\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      void addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          // eslint-disable-next-line no-console\n          const log = replay.getOptions()._experiments.traceInternals ? console.info : _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.info;\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            log(`[Replay] Updating session start time to earliest event in buffer at ${earliestEvent}`);\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nfunction createOptionsEvent(replay) {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay, isCheckout) {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return Promise.resolve(null);\n  }\n\n  return addEvent(replay, createOptionsEvent(replay), false);\n}\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nfunction createReplayEnvelope(\n  replayEvent,\n  recordingData,\n  dsn,\n  tunnel,\n) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_11__.createEnvelope)(\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_11__.createEventEnvelopeHeaders)(replayEvent, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_11__.getSdkMetadataForEnvelopeHeader)(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n\n/**\n * Prepare the recording data ready to be sent.\n */\nfunction prepareRecordingData({\n  recordingData,\n  headers,\n}\n\n) {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nasync function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}\n\n) {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n  const preparedEvent = (await (0,_sentry_core__WEBPACK_IMPORTED_MODULE_12__.prepareEvent)(\n    client.getOptions(),\n    event,\n    { event_id, integrations },\n    scope,\n  )) ;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n\n/**\n * Send replay attachment using `fetch()`\n */\nasync function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}) {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentHub)();\n  const client = hub.getClient();\n  const scope = hub.getScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return;\n  }\n\n  const baseEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('An event processor returned `null`, will not send event.');\n    return;\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-ignore This needs lib es2022 and newer\n      error.cause = err;\n    } catch (e) {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nclass TransportStatusCodeError extends Error {\n   constructor(statusCode) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nasync function sendReplay(\n  replayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n) {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_13__.setContext)('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && options._experiments && options._experiments.captureExceptions) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_13__.captureException)(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-ignore This needs lib es2022 and newer\n        error.cause = err;\n      } catch (e) {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n\nconst THROTTLED = '__THROTTLED';\nconst SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction throttle(\n  fn,\n  maxCount,\n  durationSeconds,\n) {\n  const counter = new Map();\n\n  const _cleanup = (now) => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = () => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest) => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n\n/* eslint-disable max-lines */ // TODO: We might want to split this file up\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nclass ReplayContainer  {\n   __init() {this.eventBuffer = null;}\n\n  /**\n   * List of PerformanceEntry from PerformanceObserver\n   */\n   __init2() {this.performanceEvents = [];}\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n   __init3() {this.recordingMode = 'session';}\n\n  /**\n   * The current or last active transcation.\n   * This is only available when performance is enabled.\n   */\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n    __init4() {this.timeouts = {\n    sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n    sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    maxSessionLife: MAX_SESSION_LIFE,\n  }; }\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n   __init5() {this._performanceObserver = null;}\n\n   __init6() {this._flushLock = null;}\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n   __init7() {this._lastActivity = Date.now();}\n\n  /**\n   * Is the integration currently active?\n   */\n   __init8() {this._isEnabled = false;}\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n   __init9() {this._isPaused = false;}\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n   __init10() {this._hasInitializedCoreListeners = false;}\n\n  /**\n   * Function to stop recording\n   */\n   __init11() {this._stopRecording = null;}\n\n   __init12() {this._context = {\n    errorIds: new Set(),\n    traceIds: new Set(),\n    urls: [],\n    initialTimestamp: Date.now(),\n    initialUrl: '',\n  };}\n\n   constructor({\n    options,\n    recordingOptions,\n  }\n\n) {ReplayContainer.prototype.__init.call(this);ReplayContainer.prototype.__init2.call(this);ReplayContainer.prototype.__init3.call(this);ReplayContainer.prototype.__init4.call(this);ReplayContainer.prototype.__init5.call(this);ReplayContainer.prototype.__init6.call(this);ReplayContainer.prototype.__init7.call(this);ReplayContainer.prototype.__init8.call(this);ReplayContainer.prototype.__init9.call(this);ReplayContainer.prototype.__init10.call(this);ReplayContainer.prototype.__init11.call(this);ReplayContainer.prototype.__init12.call(this);ReplayContainer.prototype.__init13.call(this);ReplayContainer.prototype.__init14.call(this);ReplayContainer.prototype.__init15.call(this);ReplayContainer.prototype.__init16.call(this);ReplayContainer.prototype.__init17.call(this);ReplayContainer.prototype.__init18.call(this);\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event, isCheckout) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n   getContext() {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n   isEnabled() {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n   isPaused() {\n    return this._isPaused;\n  }\n\n  /** Get the replay integration options. */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n   initializeSampling() {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    if (errorSampleRate <= 0 && sessionSampleRate <= 0) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    const isSessionSampled = this._loadAndCheckSession();\n\n    if (!isSessionSampled) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled && this.session.sampled !== 'session') {\n      // If not sampled as session-based, then recording mode will be `buffer`\n      // Note that we don't explicitly check if `sampled === 'buffer'` because we\n      // could have sessions from Session storage that are still `error` from\n      // prior SDK version.\n      this.recordingMode = 'buffer';\n    }\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    const previousSessionId = this.session && this.session.id;\n\n    const { session } = getSession({\n      timeouts: this.timeouts,\n      stickySession: Boolean(this._options.stickySession),\n      currentSession: this.session,\n      // This is intentional: create a new session-based replay when calling `start()`\n      sessionSampleRate: 1,\n      allowBuffering: false,\n    });\n\n    session.previousSessionId = previousSessionId;\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n   startBuffering() {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    const previousSessionId = this.session && this.session.id;\n\n    const { session } = getSession({\n      timeouts: this.timeouts,\n      stickySession: Boolean(this._options.stickySession),\n      currentSession: this.session,\n      sessionSampleRate: 0,\n      allowBuffering: true,\n    });\n\n    session.previousSessionId = previousSessionId;\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n   startRecording() {\n    try {\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n   stopRecording() {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   async stop(reason) {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    try {\n      if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n        const msg = `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`;\n\n        // When `traceInternals` is enabled, we want to log this to the console\n        // Else, use the regular debug output\n        // eslint-disable-next-line\n        const log = this.getOptions()._experiments.traceInternals ? console.warn : _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log;\n        log(msg);\n      }\n\n      // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n      // enter into an infinite loop when `stop()` is called while flushing.\n      this._isEnabled = false;\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (this.recordingMode === 'session') {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n   pause() {\n    this._isPaused = true;\n    this.stopRecording();\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n   resume() {\n    if (!this._loadAndCheckSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   async sendBufferedReplayOrFlush({ continueRecording = true } = {}) {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    // eslint-disable-next-line no-console\n    const log = this.getOptions()._experiments.traceInternals ? console.info : _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.info;\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && log(`[Replay] Converting buffer to session, starting at ${activityTime}`);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // Re-start recording, but in \"session\" recording mode\n\n    // Reset all \"capture on error\" configuration before\n    // starting a new recording\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this.session.shouldRefresh = false;\n\n      // It's possible that the session lifespan is > max session lifespan\n      // because we have been buffering beyond max session lifespan (we ignore\n      // expiration given that `shouldRefresh` is true). Since we flip\n      // `shouldRefresh`, the session could be considered expired due to\n      // lifespan, which is not what we want. Update session start date to be\n      // the current timestamp, so that session is not considered to be\n      // expired. This means that max replay duration can be MAX_SESSION_LIFE +\n      // (length of buffer), which we are ok with.\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this.session.started = activityTime;\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n   addUpdate(cb) {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n   triggerUserActivity() {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._loadAndCheckSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n   updateUserActivity() {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n   conditionalFlush() {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n   flush() {\n    return this._debouncedFlush() ;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n   flushImmediate() {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() ;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n   cancelFlush() {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n   getSessionId() {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n   checkAndHandleExpiredSession() {\n    const oldSessionId = this.getSessionId();\n\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._loadAndCheckSession()) {\n      return;\n    }\n\n    // Session was expired if session ids do not match\n    const expired = oldSessionId !== this.getSessionId();\n\n    if (!expired) {\n      return true;\n    }\n\n    // Session is expired, trigger a full snapshot (which will create a new session)\n    this._triggerFullSnapshot();\n\n    return false;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n   setInitialState() {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEvents = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n   throttledAddEvent(\n    event,\n    isCheckout,\n  ) {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        void addEvent(this, {\n          type: EventType.Custom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n   getCurrentRoute() {\n    const lastTransaction = this.lastTransaction || (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentHub)().getScope().getTransaction();\n    if (!lastTransaction || !['route', 'custom'].includes(lastTransaction.metadata.source)) {\n      return undefined;\n    }\n\n    return lastTransaction.name;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n   _initializeRecording() {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n   _handleException(error) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.error('[Replay]', error);\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && this._options._experiments && this._options._experiments.captureExceptions) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_13__.captureException)(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   * Returns false if session is not recorded.\n   */\n   _loadAndCheckSession() {\n    const { type, session } = getSession({\n      timeouts: this.timeouts,\n      stickySession: Boolean(this._options.stickySession),\n      currentSession: this.session,\n      sessionSampleRate: this._options.sessionSampleRate,\n      allowBuffering: this._options.errorSampleRate > 0 || this.recordingMode === 'buffer',\n    });\n\n    // If session was newly created (i.e. was not loaded from storage), then\n    // enable flag to create the root replay\n    if (type === 'new') {\n      this.setInitialState();\n    }\n\n    const currentSessionId = this.getSessionId();\n    if (session.id !== currentSessionId) {\n      session.previousSessionId = currentSessionId;\n    }\n\n    this.session = session;\n\n    if (!this.session.sampled) {\n      void this.stop('session unsampled');\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n   _addListeners() {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    // PerformanceObserver //\n    if (!('PerformanceObserver' in WINDOW)) {\n      return;\n    }\n\n    this._performanceObserver = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n   _removeListeners() {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceObserver) {\n        this._performanceObserver.disconnect();\n        this._performanceObserver = null;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n   __init13() {this._handleVisibilityChange = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };}\n\n  /**\n   * Handle when page is blurred\n   */\n   __init14() {this._handleWindowBlur = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };}\n\n  /**\n   * Handle when page is focused\n   */\n   __init15() {this._handleWindowFocus = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };}\n\n  /** Ensure page remains active when a key is pressed. */\n   __init16() {this._handleKeyboardEvent = (event) => {\n    handleKeyboardEvent(this, event);\n  };}\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n   _doChangeToBackgroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, this.timeouts);\n\n    if (breadcrumb && !expired) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n   _doChangeToForegroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Trigger rrweb to take a full snapshot which will cause this plugin to\n   * create a new Replay event.\n   */\n   _triggerFullSnapshot(checkout = true) {\n    try {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Replay] Taking full rrweb snapshot');\n      record.takeFullSnapshot(checkout);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n   _updateUserActivity(_lastActivity = Date.now()) {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n   _updateSessionActivity(_lastActivity = Date.now()) {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n   _createCustomBreadcrumb(breadcrumb) {\n    this.addUpdate(() => {\n      void this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEvents`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n   _addPerformanceEntries() {\n    // Copy and reset entries before processing\n    const entries = [...this.performanceEvents];\n    this.performanceEvents = [];\n\n    return Promise.all(createPerformanceSpans(this, createPerformanceEntries(entries)));\n  }\n\n  /**\n   * Clear _context\n   */\n   _clearContext() {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n   _updateInitialTimestampFromEventBuffer() {\n    const { session, eventBuffer } = this;\n    if (!session || !eventBuffer) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n   _popEventContext() {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n   async _runFlush() {\n    if (!this.session || !this.eventBuffer) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      // NOTE: Copy values from instance members, as it's possible they could\n      // change before the flush finishes.\n      const replayId = this.session.id;\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp: Date.now(),\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      void this.stop('sendReplay');\n\n      const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentHub)().getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n   __init17() {this._flush = async ({\n    force = false,\n  }\n\n = {}) => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.error('[Replay] No session found to flush.');\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // If session is too short, or too long (allow some wiggle room over maxSessionLife), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    if (duration < this._options.minReplayDuration || duration > this.timeouts.maxSessionLife + 5000) {\n      // eslint-disable-next-line no-console\n      const log = this.getOptions()._experiments.traceInternals ? console.warn : _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.warn;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        log(\n          `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too short or too long, not sending replay.`,\n        );\n\n      return;\n    }\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = null;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };}\n\n  /** Save the session, if it is sticky */\n   _maybeSaveSession() {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n   __init18() {this._onMutationHandler = (mutations) => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      void this.stop('mutationLimit');\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };}\n}\n\nfunction getOption(\n  selectors,\n  defaultSelectors,\n  deprecatedClassOption,\n  deprecatedSelectorOption,\n) {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n\n  const allSelectors = [\n    ...selectors,\n    // @deprecated\n    ...deprecatedSelectors,\n\n    // sentry defaults\n    ...defaultSelectors,\n  ];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    // eslint-disable-next-line no-console\n    console.warn(\n      '[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.',\n    );\n  }\n\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nfunction getPrivacyOptions({\n  mask,\n  unmask,\n  block,\n  unblock,\n  ignore,\n\n  // eslint-disable-next-line deprecation/deprecation\n  blockClass,\n  // eslint-disable-next-line deprecation/deprecation\n  blockSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextClass,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  ignoreClass,\n}) {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n\n  const options = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n    maskInputSelector: maskSelector,\n    unmaskInputSelector: unmaskSelector,\n\n    blockSelector: getOption(\n      block,\n      ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements],\n      blockClass,\n      blockSelector,\n    ),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]'], ignoreClass),\n  };\n\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n\n  return options;\n}\n\n/**\n * Returns true if we are in the browser.\n */\nfunction isBrowser() {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_14__.isNodeEnv)() || isElectronNodeRenderer());\n}\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer() {\n  return typeof process !== 'undefined' && (process ).type === 'renderer';\n}\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n */\nclass Replay  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Replay';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Replay.id;}\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n\n   constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    _experiments = {},\n    sessionSampleRate,\n    errorSampleRate,\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10000,\n\n    slowClickTimeout = 7000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskInputOptions,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass,\n  } = {}) {Replay.prototype.__init.call(this);\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { ...(maskInputOptions || {}), password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n\n      ...getPrivacyOptions({\n        mask,\n        unmask,\n        block,\n        unblock,\n        ignore,\n        blockClass,\n        blockSelector,\n        maskTextClass,\n        maskTextSelector,\n        ignoreClass,\n      }),\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n\n      _experiments,\n    };\n\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`,\n      );\n\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`,\n      );\n\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n   get _isInitialized() {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n   set _isInitialized(value) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n   setupOnce() {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n   startBuffering() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   stop() {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop();\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   flush(options) {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n   getReplayId() {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n  /**\n   * Initializes replay.\n   */\n   _initialize() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n   _setup() {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n} Replay.__initStatic();\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentHub)().getClient();\n  const opt = client && (client.getOptions() );\n\n  const finalOptions = { sessionSampleRate: 0, errorSampleRate: 0, ...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dropUndefinedKeys)(initialOptions) };\n\n  if (!opt) {\n    // eslint-disable-next-line no-console\n    console.warn('SDK client is not available.');\n    return finalOptions;\n  }\n\n  if (\n    initialOptions.sessionSampleRate == null && // TODO remove once deprecated rates are removed\n    initialOptions.errorSampleRate == null && // TODO remove once deprecated rates are removed\n    opt.replaysSessionSampleRate == null &&\n    opt.replaysOnErrorSampleRate == null\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n    );\n  }\n\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers) {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/replay/esm/index.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/aggregate-errors.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/aggregate-errors.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"applyAggregateErrorsToEvent\": function() { return /* binding */ applyAggregateErrorsToEvent; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ \"./node_modules/@sentry/utils/esm/string.js\");\n\n\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    is_exception_group: true,\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.truncate)(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\n\n//# sourceMappingURL=aggregate-errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYWdncmVnYXRlLWVycm9ycy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUM7QUFDQTs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStELG9EQUFZO0FBQzNFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsTUFBTSxvREFBWTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLG9EQUFZO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRSxFQUFFO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaURBQWlEOztBQUVqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQ7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixvREFBUTtBQUNoQztBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUV1QztBQUN2QyIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2FnZ3JlZ2F0ZS1lcnJvcnMuanM/ZWMxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0luc3RhbmNlT2YgfSBmcm9tICcuL2lzLmpzJztcbmltcG9ydCB7IHRydW5jYXRlIH0gZnJvbSAnLi9zdHJpbmcuanMnO1xuXG4vKipcbiAqIENyZWF0ZXMgZXhjZXB0aW9ucyBpbnNpZGUgYGV2ZW50LmV4Y2VwdGlvbi52YWx1ZXNgIGZvciBlcnJvcnMgdGhhdCBhcmUgbmVzdGVkIG9uIHByb3BlcnRpZXMgYmFzZWQgb24gdGhlIGBrZXlgIHBhcmFtZXRlci5cbiAqL1xuZnVuY3Rpb24gYXBwbHlBZ2dyZWdhdGVFcnJvcnNUb0V2ZW50KFxuICBleGNlcHRpb25Gcm9tRXJyb3JJbXBsZW1lbnRhdGlvbixcbiAgcGFyc2VyLFxuICBtYXhWYWx1ZUxpbWl0ID0gMjUwLFxuICBrZXksXG4gIGxpbWl0LFxuICBldmVudCxcbiAgaGludCxcbikge1xuICBpZiAoIWV2ZW50LmV4Y2VwdGlvbiB8fCAhZXZlbnQuZXhjZXB0aW9uLnZhbHVlcyB8fCAhaGludCB8fCAhaXNJbnN0YW5jZU9mKGhpbnQub3JpZ2luYWxFeGNlcHRpb24sIEVycm9yKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIEdlbmVyYWxseSBzcGVha2luZyB0aGUgbGFzdCBpdGVtIGluIGBldmVudC5leGNlcHRpb24udmFsdWVzYCBpcyB0aGUgZXhjZXB0aW9uIG9yaWdpbmF0aW5nIGZyb20gdGhlIG9yaWdpbmFsIEVycm9yXG4gIGNvbnN0IG9yaWdpbmFsRXhjZXB0aW9uID1cbiAgICBldmVudC5leGNlcHRpb24udmFsdWVzLmxlbmd0aCA+IDAgPyBldmVudC5leGNlcHRpb24udmFsdWVzW2V2ZW50LmV4Y2VwdGlvbi52YWx1ZXMubGVuZ3RoIC0gMV0gOiB1bmRlZmluZWQ7XG5cbiAgLy8gV2Ugb25seSBjcmVhdGUgZXhjZXB0aW9uIGdyb3VwaW5nIGlmIHRoZXJlIGlzIGFuIGV4Y2VwdGlvbiBpbiB0aGUgZXZlbnQuXG4gIGlmIChvcmlnaW5hbEV4Y2VwdGlvbikge1xuICAgIGV2ZW50LmV4Y2VwdGlvbi52YWx1ZXMgPSB0cnVuY2F0ZUFnZ3JlZ2F0ZUV4Y2VwdGlvbnMoXG4gICAgICBhZ2dyZWdhdGVFeGNlcHRpb25zRnJvbUVycm9yKFxuICAgICAgICBleGNlcHRpb25Gcm9tRXJyb3JJbXBsZW1lbnRhdGlvbixcbiAgICAgICAgcGFyc2VyLFxuICAgICAgICBsaW1pdCxcbiAgICAgICAgaGludC5vcmlnaW5hbEV4Y2VwdGlvbiAsXG4gICAgICAgIGtleSxcbiAgICAgICAgZXZlbnQuZXhjZXB0aW9uLnZhbHVlcyxcbiAgICAgICAgb3JpZ2luYWxFeGNlcHRpb24sXG4gICAgICAgIDAsXG4gICAgICApLFxuICAgICAgbWF4VmFsdWVMaW1pdCxcbiAgICApO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFnZ3JlZ2F0ZUV4Y2VwdGlvbnNGcm9tRXJyb3IoXG4gIGV4Y2VwdGlvbkZyb21FcnJvckltcGxlbWVudGF0aW9uLFxuICBwYXJzZXIsXG4gIGxpbWl0LFxuICBlcnJvcixcbiAga2V5LFxuICBwcmV2RXhjZXB0aW9ucyxcbiAgZXhjZXB0aW9uLFxuICBleGNlcHRpb25JZCxcbikge1xuICBpZiAocHJldkV4Y2VwdGlvbnMubGVuZ3RoID49IGxpbWl0ICsgMSkge1xuICAgIHJldHVybiBwcmV2RXhjZXB0aW9ucztcbiAgfVxuXG4gIGxldCBuZXdFeGNlcHRpb25zID0gWy4uLnByZXZFeGNlcHRpb25zXTtcblxuICBpZiAoaXNJbnN0YW5jZU9mKGVycm9yW2tleV0sIEVycm9yKSkge1xuICAgIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JQYXJlbnRFeGNlcHRpb24oZXhjZXB0aW9uLCBleGNlcHRpb25JZCk7XG4gICAgY29uc3QgbmV3RXhjZXB0aW9uID0gZXhjZXB0aW9uRnJvbUVycm9ySW1wbGVtZW50YXRpb24ocGFyc2VyLCBlcnJvcltrZXldKTtcbiAgICBjb25zdCBuZXdFeGNlcHRpb25JZCA9IG5ld0V4Y2VwdGlvbnMubGVuZ3RoO1xuICAgIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JDaGlsZEV4Y2VwdGlvbihuZXdFeGNlcHRpb24sIGtleSwgbmV3RXhjZXB0aW9uSWQsIGV4Y2VwdGlvbklkKTtcbiAgICBuZXdFeGNlcHRpb25zID0gYWdncmVnYXRlRXhjZXB0aW9uc0Zyb21FcnJvcihcbiAgICAgIGV4Y2VwdGlvbkZyb21FcnJvckltcGxlbWVudGF0aW9uLFxuICAgICAgcGFyc2VyLFxuICAgICAgbGltaXQsXG4gICAgICBlcnJvcltrZXldLFxuICAgICAga2V5LFxuICAgICAgW25ld0V4Y2VwdGlvbiwgLi4ubmV3RXhjZXB0aW9uc10sXG4gICAgICBuZXdFeGNlcHRpb24sXG4gICAgICBuZXdFeGNlcHRpb25JZCxcbiAgICApO1xuICB9XG5cbiAgLy8gVGhpcyB3aWxsIGNyZWF0ZSBleGNlcHRpb24gZ3JvdXBpbmcgZm9yIEFnZ3JlZ2F0ZUVycm9yc1xuICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9BZ2dyZWdhdGVFcnJvclxuICBpZiAoQXJyYXkuaXNBcnJheShlcnJvci5lcnJvcnMpKSB7XG4gICAgZXJyb3IuZXJyb3JzLmZvckVhY2goKGNoaWxkRXJyb3IsIGkpID0+IHtcbiAgICAgIGlmIChpc0luc3RhbmNlT2YoY2hpbGRFcnJvciwgRXJyb3IpKSB7XG4gICAgICAgIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JQYXJlbnRFeGNlcHRpb24oZXhjZXB0aW9uLCBleGNlcHRpb25JZCk7XG4gICAgICAgIGNvbnN0IG5ld0V4Y2VwdGlvbiA9IGV4Y2VwdGlvbkZyb21FcnJvckltcGxlbWVudGF0aW9uKHBhcnNlciwgY2hpbGRFcnJvcik7XG4gICAgICAgIGNvbnN0IG5ld0V4Y2VwdGlvbklkID0gbmV3RXhjZXB0aW9ucy5sZW5ndGg7XG4gICAgICAgIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JDaGlsZEV4Y2VwdGlvbihuZXdFeGNlcHRpb24sIGBlcnJvcnNbJHtpfV1gLCBuZXdFeGNlcHRpb25JZCwgZXhjZXB0aW9uSWQpO1xuICAgICAgICBuZXdFeGNlcHRpb25zID0gYWdncmVnYXRlRXhjZXB0aW9uc0Zyb21FcnJvcihcbiAgICAgICAgICBleGNlcHRpb25Gcm9tRXJyb3JJbXBsZW1lbnRhdGlvbixcbiAgICAgICAgICBwYXJzZXIsXG4gICAgICAgICAgbGltaXQsXG4gICAgICAgICAgY2hpbGRFcnJvcixcbiAgICAgICAgICBrZXksXG4gICAgICAgICAgW25ld0V4Y2VwdGlvbiwgLi4ubmV3RXhjZXB0aW9uc10sXG4gICAgICAgICAgbmV3RXhjZXB0aW9uLFxuICAgICAgICAgIG5ld0V4Y2VwdGlvbklkLFxuICAgICAgICApO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIG5ld0V4Y2VwdGlvbnM7XG59XG5cbmZ1bmN0aW9uIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JQYXJlbnRFeGNlcHRpb24oZXhjZXB0aW9uLCBleGNlcHRpb25JZCkge1xuICAvLyBEb24ndCBrbm93IGlmIHRoaXMgZGVmYXVsdCBtYWtlcyBzZW5zZS4gVGhlIHByb3RvY29sIHJlcXVpcmVzIHVzIHRvIHNldCB0aGVzZSB2YWx1ZXMgc28gd2UgcGljayAqc29tZSogZGVmYXVsdC5cbiAgZXhjZXB0aW9uLm1lY2hhbmlzbSA9IGV4Y2VwdGlvbi5tZWNoYW5pc20gfHwgeyB0eXBlOiAnZ2VuZXJpYycsIGhhbmRsZWQ6IHRydWUgfTtcblxuICBleGNlcHRpb24ubWVjaGFuaXNtID0ge1xuICAgIC4uLmV4Y2VwdGlvbi5tZWNoYW5pc20sXG4gICAgaXNfZXhjZXB0aW9uX2dyb3VwOiB0cnVlLFxuICAgIGV4Y2VwdGlvbl9pZDogZXhjZXB0aW9uSWQsXG4gIH07XG59XG5cbmZ1bmN0aW9uIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JDaGlsZEV4Y2VwdGlvbihcbiAgZXhjZXB0aW9uLFxuICBzb3VyY2UsXG4gIGV4Y2VwdGlvbklkLFxuICBwYXJlbnRJZCxcbikge1xuICAvLyBEb24ndCBrbm93IGlmIHRoaXMgZGVmYXVsdCBtYWtlcyBzZW5zZS4gVGhlIHByb3RvY29sIHJlcXVpcmVzIHVzIHRvIHNldCB0aGVzZSB2YWx1ZXMgc28gd2UgcGljayAqc29tZSogZGVmYXVsdC5cbiAgZXhjZXB0aW9uLm1lY2hhbmlzbSA9IGV4Y2VwdGlvbi5tZWNoYW5pc20gfHwgeyB0eXBlOiAnZ2VuZXJpYycsIGhhbmRsZWQ6IHRydWUgfTtcblxuICBleGNlcHRpb24ubWVjaGFuaXNtID0ge1xuICAgIC4uLmV4Y2VwdGlvbi5tZWNoYW5pc20sXG4gICAgdHlwZTogJ2NoYWluZWQnLFxuICAgIHNvdXJjZSxcbiAgICBleGNlcHRpb25faWQ6IGV4Y2VwdGlvbklkLFxuICAgIHBhcmVudF9pZDogcGFyZW50SWQsXG4gIH07XG59XG5cbi8qKlxuICogVHJ1bmNhdGUgdGhlIG1lc3NhZ2UgKGV4Y2VwdGlvbi52YWx1ZSkgb2YgYWxsIGV4Y2VwdGlvbnMgaW4gdGhlIGV2ZW50LlxuICogQmVjYXVzZSB0aGlzIGV2ZW50IHByb2Nlc3NvciBpcyByYW4gYWZ0ZXIgYGFwcGx5Q2xpZW50T3B0aW9uc2AsXG4gKiB3ZSBuZWVkIHRvIHRydW5jYXRlIHRoZSBtZXNzYWdlIG9mIHRoZSBhZGRlZCBleGNlcHRpb25zIGhlcmUuXG4gKi9cbmZ1bmN0aW9uIHRydW5jYXRlQWdncmVnYXRlRXhjZXB0aW9ucyhleGNlcHRpb25zLCBtYXhWYWx1ZUxlbmd0aCkge1xuICByZXR1cm4gZXhjZXB0aW9ucy5tYXAoZXhjZXB0aW9uID0+IHtcbiAgICBpZiAoZXhjZXB0aW9uLnZhbHVlKSB7XG4gICAgICBleGNlcHRpb24udmFsdWUgPSB0cnVuY2F0ZShleGNlcHRpb24udmFsdWUsIG1heFZhbHVlTGVuZ3RoKTtcbiAgICB9XG4gICAgcmV0dXJuIGV4Y2VwdGlvbjtcbiAgfSk7XG59XG5cbmV4cG9ydCB7IGFwcGx5QWdncmVnYXRlRXJyb3JzVG9FdmVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWdncmVnYXRlLWVycm9ycy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/aggregate-errors.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/baggage.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/baggage.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BAGGAGE_HEADER_NAME\": function() { return /* binding */ BAGGAGE_HEADER_NAME; },\n/* harmony export */   \"MAX_BAGGAGE_STRING_LENGTH\": function() { return /* binding */ MAX_BAGGAGE_STRING_LENGTH; },\n/* harmony export */   \"SENTRY_BAGGAGE_KEY_PREFIX\": function() { return /* binding */ SENTRY_BAGGAGE_KEY_PREFIX; },\n/* harmony export */   \"SENTRY_BAGGAGE_KEY_PREFIX_REGEX\": function() { return /* binding */ SENTRY_BAGGAGE_KEY_PREFIX_REGEX; },\n/* harmony export */   \"baggageHeaderToDynamicSamplingContext\": function() { return /* binding */ baggageHeaderToDynamicSamplingContext; },\n/* harmony export */   \"dynamicSamplingContextToSentryBaggageHeader\": function() { return /* binding */ dynamicSamplingContextToSentryBaggageHeader; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n\n\n\nconst BAGGAGE_HEADER_NAME = 'baggage';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nconst MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(baggageHeader) && !Array.isArray(baggageHeader)) {\n    return undefined;\n  }\n\n  // Intermediary object to store baggage key value pairs of incoming baggage headers on.\n  // It is later used to read Sentry-DSC-values from.\n  let baggageObject = {};\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    baggageObject = baggageHeader.reduce((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      return {\n        ...acc,\n        ...currBaggageObject,\n      };\n    }, {});\n  } else {\n    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but\n    // this is how we choose to handle it)\n    if (!baggageHeader) {\n      return undefined;\n    }\n\n    baggageObject = baggageHeaderToObject(baggageHeader);\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\n\n//# sourceMappingURL=baggage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/baggage.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/browser.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/browser.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getDomElement\": function() { return /* binding */ getDomElement; },\n/* harmony export */   \"getLocationHref\": function() { return /* binding */ getLocationHref; },\n/* harmony export */   \"htmlTreeAsString\": function() { return /* binding */ htmlTreeAsString; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && (0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\n\n//# sourceMappingURL=browser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFtQztBQUNjOztBQUVqRDtBQUNBLGVBQWUsOERBQWU7O0FBRTlCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1CLGVBQWUsSUFBSSxlQUFlO0FBQ3JELEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQSxtQkFBbUIsUUFBUTtBQUMzQjs7QUFFQTtBQUNBO0FBQ0EscUJBQXFCLGdEQUFRO0FBQzdCO0FBQ0Esa0JBQWtCLG9CQUFvQjtBQUN0QyxxQkFBcUIsV0FBVztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMseUJBQXlCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixJQUFJLElBQUksS0FBSztBQUNoQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RDtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEQ7QUFDNUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9icm93c2VyLmpzP2JjNWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNTdHJpbmcgfSBmcm9tICcuL2lzLmpzJztcbmltcG9ydCB7IGdldEdsb2JhbE9iamVjdCB9IGZyb20gJy4vd29ybGR3aWRlLmpzJztcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG5jb25zdCBXSU5ET1cgPSBnZXRHbG9iYWxPYmplY3QoKTtcblxuY29uc3QgREVGQVVMVF9NQVhfU1RSSU5HX0xFTkdUSCA9IDgwO1xuXG4vKipcbiAqIEdpdmVuIGEgY2hpbGQgRE9NIGVsZW1lbnQsIHJldHVybnMgYSBxdWVyeS1zZWxlY3RvciBzdGF0ZW1lbnQgZGVzY3JpYmluZyB0aGF0XG4gKiBhbmQgaXRzIGFuY2VzdG9yc1xuICogZS5nLiBbSFRNTEVsZW1lbnRdID0+IGJvZHkgPiBkaXYgPiBpbnB1dCNmb28uYnRuW25hbWU9YmF6XVxuICogQHJldHVybnMgZ2VuZXJhdGVkIERPTSBwYXRoXG4gKi9cbmZ1bmN0aW9uIGh0bWxUcmVlQXNTdHJpbmcoXG4gIGVsZW0sXG4gIG9wdGlvbnMgPSB7fSxcbikge1xuXG4gIC8vIHRyeS9jYXRjaCBib3RoOlxuICAvLyAtIGFjY2Vzc2luZyBldmVudC50YXJnZXQgKHNlZSBnZXRzZW50cnkvcmF2ZW4tanMjODM4LCAjNzY4KVxuICAvLyAtIGBodG1sVHJlZUFzU3RyaW5nYCBiZWNhdXNlIGl0J3MgY29tcGxleCwgYW5kIGp1c3QgYWNjZXNzaW5nIHRoZSBET00gaW5jb3JyZWN0bHlcbiAgLy8gLSBjYW4gdGhyb3cgYW4gZXhjZXB0aW9uIGluIHNvbWUgY2lyY3Vtc3RhbmNlcy5cbiAgdHJ5IHtcbiAgICBsZXQgY3VycmVudEVsZW0gPSBlbGVtIDtcbiAgICBjb25zdCBNQVhfVFJBVkVSU0VfSEVJR0hUID0gNTtcbiAgICBjb25zdCBvdXQgPSBbXTtcbiAgICBsZXQgaGVpZ2h0ID0gMDtcbiAgICBsZXQgbGVuID0gMDtcbiAgICBjb25zdCBzZXBhcmF0b3IgPSAnID4gJztcbiAgICBjb25zdCBzZXBMZW5ndGggPSBzZXBhcmF0b3IubGVuZ3RoO1xuICAgIGxldCBuZXh0U3RyO1xuICAgIGNvbnN0IGtleUF0dHJzID0gQXJyYXkuaXNBcnJheShvcHRpb25zKSA/IG9wdGlvbnMgOiBvcHRpb25zLmtleUF0dHJzO1xuICAgIGNvbnN0IG1heFN0cmluZ0xlbmd0aCA9ICghQXJyYXkuaXNBcnJheShvcHRpb25zKSAmJiBvcHRpb25zLm1heFN0cmluZ0xlbmd0aCkgfHwgREVGQVVMVF9NQVhfU1RSSU5HX0xFTkdUSDtcblxuICAgIHdoaWxlIChjdXJyZW50RWxlbSAmJiBoZWlnaHQrKyA8IE1BWF9UUkFWRVJTRV9IRUlHSFQpIHtcbiAgICAgIG5leHRTdHIgPSBfaHRtbEVsZW1lbnRBc1N0cmluZyhjdXJyZW50RWxlbSwga2V5QXR0cnMpO1xuICAgICAgLy8gYmFpbCBvdXQgaWZcbiAgICAgIC8vIC0gbmV4dFN0ciBpcyB0aGUgJ2h0bWwnIGVsZW1lbnRcbiAgICAgIC8vIC0gdGhlIGxlbmd0aCBvZiB0aGUgc3RyaW5nIHRoYXQgd291bGQgYmUgY3JlYXRlZCBleGNlZWRzIG1heFN0cmluZ0xlbmd0aFxuICAgICAgLy8gICAoaWdub3JlIHRoaXMgbGltaXQgaWYgd2UgYXJlIG9uIHRoZSBmaXJzdCBpdGVyYXRpb24pXG4gICAgICBpZiAobmV4dFN0ciA9PT0gJ2h0bWwnIHx8IChoZWlnaHQgPiAxICYmIGxlbiArIG91dC5sZW5ndGggKiBzZXBMZW5ndGggKyBuZXh0U3RyLmxlbmd0aCA+PSBtYXhTdHJpbmdMZW5ndGgpKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBvdXQucHVzaChuZXh0U3RyKTtcblxuICAgICAgbGVuICs9IG5leHRTdHIubGVuZ3RoO1xuICAgICAgY3VycmVudEVsZW0gPSBjdXJyZW50RWxlbS5wYXJlbnROb2RlO1xuICAgIH1cblxuICAgIHJldHVybiBvdXQucmV2ZXJzZSgpLmpvaW4oc2VwYXJhdG9yKTtcbiAgfSBjYXRjaCAoX29PKSB7XG4gICAgcmV0dXJuICc8dW5rbm93bj4nO1xuICB9XG59XG5cbi8qKlxuICogUmV0dXJucyBhIHNpbXBsZSwgcXVlcnktc2VsZWN0b3IgcmVwcmVzZW50YXRpb24gb2YgYSBET00gZWxlbWVudFxuICogZS5nLiBbSFRNTEVsZW1lbnRdID0+IGlucHV0I2Zvby5idG5bbmFtZT1iYXpdXG4gKiBAcmV0dXJucyBnZW5lcmF0ZWQgRE9NIHBhdGhcbiAqL1xuZnVuY3Rpb24gX2h0bWxFbGVtZW50QXNTdHJpbmcoZWwsIGtleUF0dHJzKSB7XG4gIGNvbnN0IGVsZW0gPSBlbFxuXG47XG5cbiAgY29uc3Qgb3V0ID0gW107XG4gIGxldCBjbGFzc05hbWU7XG4gIGxldCBjbGFzc2VzO1xuICBsZXQga2V5O1xuICBsZXQgYXR0cjtcbiAgbGV0IGk7XG5cbiAgaWYgKCFlbGVtIHx8ICFlbGVtLnRhZ05hbWUpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBvdXQucHVzaChlbGVtLnRhZ05hbWUudG9Mb3dlckNhc2UoKSk7XG5cbiAgLy8gUGFpcnMgb2YgYXR0cmlidXRlIGtleXMgZGVmaW5lZCBpbiBgc2VyaWFsaXplQXR0cmlidXRlYCBhbmQgdGhlaXIgdmFsdWVzIG9uIGVsZW1lbnQuXG4gIGNvbnN0IGtleUF0dHJQYWlycyA9XG4gICAga2V5QXR0cnMgJiYga2V5QXR0cnMubGVuZ3RoXG4gICAgICA/IGtleUF0dHJzLmZpbHRlcihrZXlBdHRyID0+IGVsZW0uZ2V0QXR0cmlidXRlKGtleUF0dHIpKS5tYXAoa2V5QXR0ciA9PiBba2V5QXR0ciwgZWxlbS5nZXRBdHRyaWJ1dGUoa2V5QXR0cildKVxuICAgICAgOiBudWxsO1xuXG4gIGlmIChrZXlBdHRyUGFpcnMgJiYga2V5QXR0clBhaXJzLmxlbmd0aCkge1xuICAgIGtleUF0dHJQYWlycy5mb3JFYWNoKGtleUF0dHJQYWlyID0+IHtcbiAgICAgIG91dC5wdXNoKGBbJHtrZXlBdHRyUGFpclswXX09XCIke2tleUF0dHJQYWlyWzFdfVwiXWApO1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIGlmIChlbGVtLmlkKSB7XG4gICAgICBvdXQucHVzaChgIyR7ZWxlbS5pZH1gKTtcbiAgICB9XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWNvbnN0XG4gICAgY2xhc3NOYW1lID0gZWxlbS5jbGFzc05hbWU7XG4gICAgaWYgKGNsYXNzTmFtZSAmJiBpc1N0cmluZyhjbGFzc05hbWUpKSB7XG4gICAgICBjbGFzc2VzID0gY2xhc3NOYW1lLnNwbGl0KC9cXHMrLyk7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgY2xhc3Nlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBvdXQucHVzaChgLiR7Y2xhc3Nlc1tpXX1gKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgY29uc3QgYWxsb3dlZEF0dHJzID0gWydhcmlhLWxhYmVsJywgJ3R5cGUnLCAnbmFtZScsICd0aXRsZScsICdhbHQnXTtcbiAgZm9yIChpID0gMDsgaSA8IGFsbG93ZWRBdHRycy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IGFsbG93ZWRBdHRyc1tpXTtcbiAgICBhdHRyID0gZWxlbS5nZXRBdHRyaWJ1dGUoa2V5KTtcbiAgICBpZiAoYXR0cikge1xuICAgICAgb3V0LnB1c2goYFske2tleX09XCIke2F0dHJ9XCJdYCk7XG4gICAgfVxuICB9XG4gIHJldHVybiBvdXQuam9pbignJyk7XG59XG5cbi8qKlxuICogQSBzYWZlIGZvcm0gb2YgbG9jYXRpb24uaHJlZlxuICovXG5mdW5jdGlvbiBnZXRMb2NhdGlvbkhyZWYoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIFdJTkRPVy5kb2N1bWVudC5sb2NhdGlvbi5ocmVmO1xuICB9IGNhdGNoIChvTykge1xuICAgIHJldHVybiAnJztcbiAgfVxufVxuXG4vKipcbiAqIEdldHMgYSBET00gZWxlbWVudCBieSB1c2luZyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yLlxuICpcbiAqIFRoaXMgd3JhcHBlciB3aWxsIGZpcnN0IGNoZWNrIGZvciB0aGUgZXhpc3RhbmNlIG9mIHRoZSBmdW5jdGlvbiBiZWZvcmVcbiAqIGFjdHVhbGx5IGNhbGxpbmcgaXQgc28gdGhhdCB3ZSBkb24ndCBoYXZlIHRvIHRha2UgY2FyZSBvZiB0aGlzIGNoZWNrLFxuICogZXZlcnkgdGltZSB3ZSB3YW50IHRvIGFjY2VzcyB0aGUgRE9NLlxuICpcbiAqIFJlYXNvbjogRE9NL3F1ZXJ5U2VsZWN0b3IgaXMgbm90IGF2YWlsYWJsZSBpbiBhbGwgZW52aXJvbm1lbnRzLlxuICpcbiAqIFdlIGhhdmUgdG8gY2FzdCB0byBhbnkgYmVjYXVzZSB1dGlscyBjYW4gYmUgY29uc3VtZWQgYnkgYSB2YXJpZXR5IG9mIGVudmlyb25tZW50cyxcbiAqIGFuZCB3ZSBkb24ndCB3YW50IHRvIGJyZWFrIFRTIHVzZXJzLiBJZiB5b3Uga25vdyB3aGF0IGVsZW1lbnQgd2lsbCBiZSBzZWxlY3RlZCBieVxuICogYGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JgLCBzcGVjaWZ5IGl0IGFzIHBhcnQgb2YgdGhlIGdlbmVyaWMgY2FsbC4gRm9yIGV4YW1wbGUsXG4gKiBgY29uc3QgZWxlbWVudCA9IGdldERvbUVsZW1lbnQ8RWxlbWVudD4oJ3NlbGVjdG9yJyk7YFxuICpcbiAqIEBwYXJhbSBzZWxlY3RvciB0aGUgc2VsZWN0b3Igc3RyaW5nIHBhc3NlZCBvbiB0byBkb2N1bWVudC5xdWVyeVNlbGVjdG9yXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5mdW5jdGlvbiBnZXREb21FbGVtZW50KHNlbGVjdG9yKSB7XG4gIGlmIChXSU5ET1cuZG9jdW1lbnQgJiYgV0lORE9XLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IpIHtcbiAgICByZXR1cm4gV0lORE9XLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpIDtcbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cblxuZXhwb3J0IHsgZ2V0RG9tRWxlbWVudCwgZ2V0TG9jYXRpb25IcmVmLCBodG1sVHJlZUFzU3RyaW5nIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1icm93c2VyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/browser.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/clientreport.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/clientreport.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createClientReportEnvelope\": function() { return /* binding */ createClientReportEnvelope; }\n/* harmony export */ });\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./envelope.js */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./time.js */ \"./node_modules/@sentry/utils/esm/time.js\");\n\n\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || (0,_time_js__WEBPACK_IMPORTED_MODULE_0__.dateTimestampInSeconds)(),\n      discarded_events,\n    },\n  ];\n  return (0,_envelope_js__WEBPACK_IMPORTED_MODULE_1__.createEnvelope)(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\n\n//# sourceMappingURL=clientreport.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vY2xpZW50cmVwb3J0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQztBQUNJOztBQUVuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSx1QkFBdUI7QUFDN0I7QUFDQSw4QkFBOEIsZ0VBQXNCO0FBQ3BEO0FBQ0EsS0FBSztBQUNMO0FBQ0EsU0FBUyw0REFBYyxTQUFTLE1BQU0sSUFBSTtBQUMxQzs7QUFFc0M7QUFDdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9jbGllbnRyZXBvcnQuanM/M2YwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVFbnZlbG9wZSB9IGZyb20gJy4vZW52ZWxvcGUuanMnO1xuaW1wb3J0IHsgZGF0ZVRpbWVzdGFtcEluU2Vjb25kcyB9IGZyb20gJy4vdGltZS5qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBjbGllbnQgcmVwb3J0IGVudmVsb3BlXG4gKiBAcGFyYW0gZGlzY2FyZGVkX2V2ZW50cyBBbiBhcnJheSBvZiBkaXNjYXJkIGV2ZW50c1xuICogQHBhcmFtIGRzbiBBIERTTiB0aGF0IGNhbiBiZSBzZXQgb24gdGhlIGhlYWRlci4gT3B0aW9uYWwuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUNsaWVudFJlcG9ydEVudmVsb3BlKFxuICBkaXNjYXJkZWRfZXZlbnRzLFxuICBkc24sXG4gIHRpbWVzdGFtcCxcbikge1xuICBjb25zdCBjbGllbnRSZXBvcnRJdGVtID0gW1xuICAgIHsgdHlwZTogJ2NsaWVudF9yZXBvcnQnIH0sXG4gICAge1xuICAgICAgdGltZXN0YW1wOiB0aW1lc3RhbXAgfHwgZGF0ZVRpbWVzdGFtcEluU2Vjb25kcygpLFxuICAgICAgZGlzY2FyZGVkX2V2ZW50cyxcbiAgICB9LFxuICBdO1xuICByZXR1cm4gY3JlYXRlRW52ZWxvcGUoZHNuID8geyBkc24gfSA6IHt9LCBbY2xpZW50UmVwb3J0SXRlbV0pO1xufVxuXG5leHBvcnQgeyBjcmVhdGVDbGllbnRSZXBvcnRFbnZlbG9wZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xpZW50cmVwb3J0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/clientreport.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/dsn.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/dsn.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dsnFromString\": function() { return /* binding */ dsnFromString; },\n/* harmony export */   \"dsnToString\": function() { return /* binding */ dsnToString; },\n/* harmony export */   \"makeDsn\": function() { return /* binding */ makeDsn; }\n/* harmony export */ });\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    // eslint-disable-next-line no-console\n    console.error(`Invalid Sentry Dsn: ${str}`);\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!(typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\n\n//# sourceMappingURL=dsn.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZHNuLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUM7O0FBRXJDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx5REFBeUQ7QUFDbkU7QUFDQSxPQUFPLFNBQVMsS0FBSyxVQUFVLEVBQUUsMkJBQTJCLEtBQUssT0FBTztBQUN4RSxRQUFRLEtBQUssRUFBRSxXQUFXLEtBQUssT0FBTyxHQUFHLFVBQVUsS0FBSyxVQUFVLEVBQUUsVUFBVTtBQUM5RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLElBQUk7QUFDN0M7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNkJBQTZCLG1FQUFtRTtBQUNoRzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFVBQVUsNEJBQTRCOztBQUV0QztBQUNBO0FBQ0E7QUFDQSxNQUFNLG9EQUFZLHdCQUF3QixXQUFXO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSSxvREFBWSwwQ0FBMEMsVUFBVTtBQUNwRTtBQUNBOztBQUVBO0FBQ0EsSUFBSSxvREFBWSx5Q0FBeUMsU0FBUztBQUNsRTtBQUNBOztBQUVBO0FBQ0EsSUFBSSxvREFBWSxxQ0FBcUMsS0FBSztBQUMxRDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFK0M7QUFDL0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9kc24uanM/NTA5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2dnZXIgfSBmcm9tICcuL2xvZ2dlci5qcyc7XG5cbi8qKiBSZWd1bGFyIGV4cHJlc3Npb24gdXNlZCB0byBwYXJzZSBhIERzbi4gKi9cbmNvbnN0IERTTl9SRUdFWCA9IC9eKD86KFxcdyspOilcXC9cXC8oPzooXFx3KykoPzo6KFxcdyspPyk/QCkoW1xcdy4tXSspKD86OihcXGQrKSk/XFwvKC4rKS87XG5cbmZ1bmN0aW9uIGlzVmFsaWRQcm90b2NvbChwcm90b2NvbCkge1xuICByZXR1cm4gcHJvdG9jb2wgPT09ICdodHRwJyB8fCBwcm90b2NvbCA9PT0gJ2h0dHBzJztcbn1cblxuLyoqXG4gKiBSZW5kZXJzIHRoZSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhpcyBEc24uXG4gKlxuICogQnkgZGVmYXVsdCwgdGhpcyB3aWxsIHJlbmRlciB0aGUgcHVibGljIHJlcHJlc2VudGF0aW9uIHdpdGhvdXQgdGhlIHBhc3N3b3JkXG4gKiBjb21wb25lbnQuIFRvIGdldCB0aGUgZGVwcmVjYXRlZCBwcml2YXRlIHJlcHJlc2VudGF0aW9uLCBzZXQgYHdpdGhQYXNzd29yZGBcbiAqIHRvIHRydWUuXG4gKlxuICogQHBhcmFtIHdpdGhQYXNzd29yZCBXaGVuIHNldCB0byB0cnVlLCB0aGUgcGFzc3dvcmQgd2lsbCBiZSBpbmNsdWRlZC5cbiAqL1xuZnVuY3Rpb24gZHNuVG9TdHJpbmcoZHNuLCB3aXRoUGFzc3dvcmQgPSBmYWxzZSkge1xuICBjb25zdCB7IGhvc3QsIHBhdGgsIHBhc3MsIHBvcnQsIHByb2plY3RJZCwgcHJvdG9jb2wsIHB1YmxpY0tleSB9ID0gZHNuO1xuICByZXR1cm4gKFxuICAgIGAke3Byb3RvY29sfTovLyR7cHVibGljS2V5fSR7d2l0aFBhc3N3b3JkICYmIHBhc3MgPyBgOiR7cGFzc31gIDogJyd9YCArXG4gICAgYEAke2hvc3R9JHtwb3J0ID8gYDoke3BvcnR9YCA6ICcnfS8ke3BhdGggPyBgJHtwYXRofS9gIDogcGF0aH0ke3Byb2plY3RJZH1gXG4gICk7XG59XG5cbi8qKlxuICogUGFyc2VzIGEgRHNuIGZyb20gYSBnaXZlbiBzdHJpbmcuXG4gKlxuICogQHBhcmFtIHN0ciBBIERzbiBhcyBzdHJpbmdcbiAqIEByZXR1cm5zIERzbiBhcyBEc25Db21wb25lbnRzIG9yIHVuZGVmaW5lZCBpZiBAcGFyYW0gc3RyIGlzIG5vdCBhIHZhbGlkIERTTiBzdHJpbmdcbiAqL1xuZnVuY3Rpb24gZHNuRnJvbVN0cmluZyhzdHIpIHtcbiAgY29uc3QgbWF0Y2ggPSBEU05fUkVHRVguZXhlYyhzdHIpO1xuXG4gIGlmICghbWF0Y2gpIHtcbiAgICAvLyBUaGlzIHNob3VsZCBiZSBsb2dnZWQgdG8gdGhlIGNvbnNvbGVcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGNvbnNvbGUuZXJyb3IoYEludmFsaWQgU2VudHJ5IERzbjogJHtzdHJ9YCk7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGNvbnN0IFtwcm90b2NvbCwgcHVibGljS2V5LCBwYXNzID0gJycsIGhvc3QsIHBvcnQgPSAnJywgbGFzdFBhdGhdID0gbWF0Y2guc2xpY2UoMSk7XG4gIGxldCBwYXRoID0gJyc7XG4gIGxldCBwcm9qZWN0SWQgPSBsYXN0UGF0aDtcblxuICBjb25zdCBzcGxpdCA9IHByb2plY3RJZC5zcGxpdCgnLycpO1xuICBpZiAoc3BsaXQubGVuZ3RoID4gMSkge1xuICAgIHBhdGggPSBzcGxpdC5zbGljZSgwLCAtMSkuam9pbignLycpO1xuICAgIHByb2plY3RJZCA9IHNwbGl0LnBvcCgpIDtcbiAgfVxuXG4gIGlmIChwcm9qZWN0SWQpIHtcbiAgICBjb25zdCBwcm9qZWN0TWF0Y2ggPSBwcm9qZWN0SWQubWF0Y2goL15cXGQrLyk7XG4gICAgaWYgKHByb2plY3RNYXRjaCkge1xuICAgICAgcHJvamVjdElkID0gcHJvamVjdE1hdGNoWzBdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBkc25Gcm9tQ29tcG9uZW50cyh7IGhvc3QsIHBhc3MsIHBhdGgsIHByb2plY3RJZCwgcG9ydCwgcHJvdG9jb2w6IHByb3RvY29sICwgcHVibGljS2V5IH0pO1xufVxuXG5mdW5jdGlvbiBkc25Gcm9tQ29tcG9uZW50cyhjb21wb25lbnRzKSB7XG4gIHJldHVybiB7XG4gICAgcHJvdG9jb2w6IGNvbXBvbmVudHMucHJvdG9jb2wsXG4gICAgcHVibGljS2V5OiBjb21wb25lbnRzLnB1YmxpY0tleSB8fCAnJyxcbiAgICBwYXNzOiBjb21wb25lbnRzLnBhc3MgfHwgJycsXG4gICAgaG9zdDogY29tcG9uZW50cy5ob3N0LFxuICAgIHBvcnQ6IGNvbXBvbmVudHMucG9ydCB8fCAnJyxcbiAgICBwYXRoOiBjb21wb25lbnRzLnBhdGggfHwgJycsXG4gICAgcHJvamVjdElkOiBjb21wb25lbnRzLnByb2plY3RJZCxcbiAgfTtcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVEc24oZHNuKSB7XG4gIGlmICghKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgY29uc3QgeyBwb3J0LCBwcm9qZWN0SWQsIHByb3RvY29sIH0gPSBkc247XG5cbiAgY29uc3QgcmVxdWlyZWRDb21wb25lbnRzID0gWydwcm90b2NvbCcsICdwdWJsaWNLZXknLCAnaG9zdCcsICdwcm9qZWN0SWQnXTtcbiAgY29uc3QgaGFzTWlzc2luZ1JlcXVpcmVkQ29tcG9uZW50ID0gcmVxdWlyZWRDb21wb25lbnRzLmZpbmQoY29tcG9uZW50ID0+IHtcbiAgICBpZiAoIWRzbltjb21wb25lbnRdKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoYEludmFsaWQgU2VudHJ5IERzbjogJHtjb21wb25lbnR9IG1pc3NpbmdgKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH0pO1xuXG4gIGlmIChoYXNNaXNzaW5nUmVxdWlyZWRDb21wb25lbnQpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAoIXByb2plY3RJZC5tYXRjaCgvXlxcZCskLykpIHtcbiAgICBsb2dnZXIuZXJyb3IoYEludmFsaWQgU2VudHJ5IERzbjogSW52YWxpZCBwcm9qZWN0SWQgJHtwcm9qZWN0SWR9YCk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKCFpc1ZhbGlkUHJvdG9jb2wocHJvdG9jb2wpKSB7XG4gICAgbG9nZ2VyLmVycm9yKGBJbnZhbGlkIFNlbnRyeSBEc246IEludmFsaWQgcHJvdG9jb2wgJHtwcm90b2NvbH1gKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAocG9ydCAmJiBpc05hTihwYXJzZUludChwb3J0LCAxMCkpKSB7XG4gICAgbG9nZ2VyLmVycm9yKGBJbnZhbGlkIFNlbnRyeSBEc246IEludmFsaWQgcG9ydCAke3BvcnR9YCk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHZhbGlkIFNlbnRyeSBEc24gb2JqZWN0LCBpZGVudGlmeWluZyBhIFNlbnRyeSBpbnN0YW5jZSBhbmQgcHJvamVjdC5cbiAqIEByZXR1cm5zIGEgdmFsaWQgRHNuQ29tcG9uZW50cyBvYmplY3Qgb3IgYHVuZGVmaW5lZGAgaWYgQHBhcmFtIGZyb20gaXMgYW4gaW52YWxpZCBEU04gc291cmNlXG4gKi9cbmZ1bmN0aW9uIG1ha2VEc24oZnJvbSkge1xuICBjb25zdCBjb21wb25lbnRzID0gdHlwZW9mIGZyb20gPT09ICdzdHJpbmcnID8gZHNuRnJvbVN0cmluZyhmcm9tKSA6IGRzbkZyb21Db21wb25lbnRzKGZyb20pO1xuICBpZiAoIWNvbXBvbmVudHMgfHwgIXZhbGlkYXRlRHNuKGNvbXBvbmVudHMpKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuICByZXR1cm4gY29tcG9uZW50cztcbn1cblxuZXhwb3J0IHsgZHNuRnJvbVN0cmluZywgZHNuVG9TdHJpbmcsIG1ha2VEc24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRzbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/dsn.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/env.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/env.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getSDKSource\": function() { return /* binding */ getSDKSource; },\n/* harmony export */   \"isBrowserBundle\": function() { return /* binding */ isBrowserBundle; }\n/* harmony export */ });\n/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-ignore \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\n\n//# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZW52LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV5QztBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2Vudi5qcz80NTBjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBUaGlzIG1vZHVsZSBleGlzdHMgZm9yIG9wdGltaXphdGlvbnMgaW4gdGhlIGJ1aWxkIHByb2Nlc3MgdGhyb3VnaCByb2xsdXAgYW5kIHRlcnNlci4gIFdlIGRlZmluZSBzb21lIGdsb2JhbFxuICogY29uc3RhbnRzLCB3aGljaCBjYW4gYmUgb3ZlcnJpZGRlbiBkdXJpbmcgYnVpbGQuIEJ5IGd1YXJkaW5nIGNlcnRhaW4gcGllY2VzIG9mIGNvZGUgd2l0aCBmdW5jdGlvbnMgdGhhdCByZXR1cm4gdGhlc2VcbiAqIGNvbnN0YW50cywgd2UgY2FuIGNvbnRyb2wgd2hldGhlciBvciBub3QgdGhleSBhcHBlYXIgaW4gdGhlIGZpbmFsIGJ1bmRsZS4gKEFueSBjb2RlIGd1YXJkZWQgYnkgYSBmYWxzZSBjb25kaXRpb24gd2lsbFxuICogbmV2ZXIgcnVuLCBhbmQgd2lsbCBoZW5jZSBiZSBkcm9wcGVkIGR1cmluZyB0cmVlc2hha2luZy4pIFRoZSB0d28gcHJpbWFyeSB1c2VzIGZvciB0aGlzIGFyZSBzdHJpcHBpbmcgb3V0IGNhbGxzIHRvXG4gKiBgbG9nZ2VyYCBhbmQgcHJldmVudGluZyBub2RlLXJlbGF0ZWQgY29kZSBmcm9tIGFwcGVhcmluZyBpbiBicm93c2VyIGJ1bmRsZXMuXG4gKlxuICogQXR0ZW50aW9uOlxuICogVGhpcyBmaWxlIHNob3VsZCBub3QgYmUgdXNlZCB0byBkZWZpbmUgY29uc3RhbnRzL2ZsYWdzIHRoYXQgYXJlIGludGVuZGVkIHRvIGJlIHVzZWQgZm9yIHRyZWUtc2hha2luZyBjb25kdWN0ZWQgYnlcbiAqIHVzZXJzLiBUaGVzZSBmbGFncyBzaG91bGQgbGl2ZSBpbiB0aGVpciByZXNwZWN0aXZlIHBhY2thZ2VzLCBhcyB3ZSBpZGVudGlmaWVkIHVzZXIgdG9vbGluZyAoc3BlY2lmaWNhbGx5IHdlYnBhY2spXG4gKiBoYXZpbmcgaXNzdWVzIHRyZWUtc2hha2luZyB0aGVzZSBjb25zdGFudHMgYWNyb3NzIHBhY2thZ2UgYm91bmRhcmllcy5cbiAqIEFuIGV4YW1wbGUgZm9yIHRoaXMgaXMgdGhlIF9fU0VOVFJZX0RFQlVHX18gY29uc3RhbnQuIEl0IGlzIGRlY2xhcmVkIGluIGVhY2ggcGFja2FnZSBpbmRpdmlkdWFsbHkgYmVjYXVzZSB3ZSB3YW50XG4gKiB1c2VycyB0byBiZSBhYmxlIHRvIHNoYWtlIGF3YXkgZXhwcmVzc2lvbnMgdGhhdCBpdCBndWFyZHMuXG4gKi9cblxuLyoqXG4gKiBGaWd1cmVzIG91dCBpZiB3ZSdyZSBidWlsZGluZyBhIGJyb3dzZXIgYnVuZGxlLlxuICpcbiAqIEByZXR1cm5zIHRydWUgaWYgdGhpcyBpcyBhIGJyb3dzZXIgYnVuZGxlIGJ1aWxkLlxuICovXG5mdW5jdGlvbiBpc0Jyb3dzZXJCdW5kbGUoKSB7XG4gIHJldHVybiB0eXBlb2YgX19TRU5UUllfQlJPV1NFUl9CVU5ETEVfXyAhPT0gJ3VuZGVmaW5lZCcgJiYgISFfX1NFTlRSWV9CUk9XU0VSX0JVTkRMRV9fO1xufVxuXG4vKipcbiAqIEdldCBzb3VyY2Ugb2YgU0RLLlxuICovXG5mdW5jdGlvbiBnZXRTREtTb3VyY2UoKSB7XG4gIC8vIEB0cy1pZ25vcmUgXCJucG1cIiBpcyBpbmplY3RlZCBieSByb2xsdXAgZHVyaW5nIGJ1aWxkIHByb2Nlc3NcbiAgcmV0dXJuIFwibnBtXCI7XG59XG5cbmV4cG9ydCB7IGdldFNES1NvdXJjZSwgaXNCcm93c2VyQnVuZGxlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbnYuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/env.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/envelope.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/envelope.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addItemToEnvelope\": function() { return /* binding */ addItemToEnvelope; },\n/* harmony export */   \"createAttachmentEnvelopeItem\": function() { return /* binding */ createAttachmentEnvelopeItem; },\n/* harmony export */   \"createEnvelope\": function() { return /* binding */ createEnvelope; },\n/* harmony export */   \"createEventEnvelopeHeaders\": function() { return /* binding */ createEventEnvelopeHeaders; },\n/* harmony export */   \"envelopeContainsItemType\": function() { return /* binding */ envelopeContainsItemType; },\n/* harmony export */   \"envelopeItemTypeToDataCategory\": function() { return /* binding */ envelopeItemTypeToDataCategory; },\n/* harmony export */   \"forEachEnvelopeItem\": function() { return /* binding */ forEachEnvelopeItem; },\n/* harmony export */   \"getSdkMetadataForEnvelopeHeader\": function() { return /* binding */ getSdkMetadataForEnvelopeHeader; },\n/* harmony export */   \"parseEnvelope\": function() { return /* binding */ parseEnvelope; },\n/* harmony export */   \"serializeEnvelope\": function() { return /* binding */ serializeEnvelope; }\n/* harmony export */ });\n/* harmony import */ var _dsn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dsn.js */ \"./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normalize.js */ \"./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n\n\n\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input, textEncoder) {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify((0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalize)(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(\n  env,\n  textEncoder,\n  textDecoder,\n) {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_1__.dropUndefinedKeys)({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: (0,_dsn_js__WEBPACK_IMPORTED_MODULE_2__.dsnToString)(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: (0,_object_js__WEBPACK_IMPORTED_MODULE_1__.dropUndefinedKeys)({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\n\n//# sourceMappingURL=envelope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/envelope.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/error.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/error.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SentryError\": function() { return /* binding */ SentryError; }\n/* harmony export */ });\n/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\n\n//# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZXJyb3IuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2Vycm9yLmpzP2Y0ZmMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEFuIGVycm9yIGVtaXR0ZWQgYnkgU2VudHJ5IFNES3MgYW5kIHJlbGF0ZWQgdXRpbGl0aWVzLiAqL1xuY2xhc3MgU2VudHJ5RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIC8qKiBEaXNwbGF5IG5hbWUgb2YgdGhpcyBlcnJvciBpbnN0YW5jZS4gKi9cblxuICAgY29uc3RydWN0b3IoIG1lc3NhZ2UsIGxvZ0xldmVsID0gJ3dhcm4nKSB7XG4gICAgc3VwZXIobWVzc2FnZSk7dGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICB0aGlzLm5hbWUgPSBuZXcudGFyZ2V0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvci5uYW1lO1xuICAgIC8vIFRoaXMgc2V0cyB0aGUgcHJvdG90eXBlIHRvIGJlIGBFcnJvcmAsIG5vdCBgU2VudHJ5RXJyb3JgLiBJdCdzIHVuY2xlYXIgd2h5IHdlIGRvIHRoaXMsIGJ1dCBjb21tZW50aW5nIHRoaXMgbGluZVxuICAgIC8vIG91dCBjYXVzZXMgdmFyaW91cyAoc2VlbWluZ2x5IHRvdGFsbHkgdW5yZWxhdGVkKSBwbGF5d3JpZ2h0IHRlc3RzIGNvbnNpc3RlbnRseSB0aW1lIG91dC4gRllJLCB0aGlzIG1ha2VzXG4gICAgLy8gaW5zdGFuY2VzIG9mIGBTZW50cnlFcnJvcmAgZmFpbCBgb2JqIGluc3RhbmNlb2YgU2VudHJ5RXJyb3JgIGNoZWNrcy5cbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgbmV3LnRhcmdldC5wcm90b3R5cGUpO1xuICAgIHRoaXMubG9nTGV2ZWwgPSBsb2dMZXZlbDtcbiAgfVxufVxuXG5leHBvcnQgeyBTZW50cnlFcnJvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3IuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/error.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/instrument.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SENTRY_XHR_DATA_KEY\": function() { return /* binding */ SENTRY_XHR_DATA_KEY; },\n/* harmony export */   \"addInstrumentationHandler\": function() { return /* binding */ addInstrumentationHandler; },\n/* harmony export */   \"parseFetchArgs\": function() { return /* binding */ parseFetchArgs; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stacktrace.js */ \"./node_modules/@sentry/utils/esm/stacktrace.js\");\n/* harmony import */ var _supports_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./supports.js */ \"./node_modules/@sentry/utils/esm/supports.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _vendor_supportsHistory_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./vendor/supportsHistory.js */ \"./node_modules/@sentry/utils/esm/vendor/supportsHistory.js\");\n\n\n\n\n\n\n\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();\n\nconst SENTRY_XHR_DATA_KEY = '__sentry_xhr_v2__';\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers = {};\nconst instrumented = {};\n\n/** Instruments given API */\nfunction instrument(type) {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addInstrumentationHandler(type, callback) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${(0,_stacktrace_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole() {\n  if (!('console' in WINDOW)) {\n    return;\n  }\n\n  _logger_js__WEBPACK_IMPORTED_MODULE_1__.CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in WINDOW.console)) {\n      return;\n    }\n\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(WINDOW.console, level, function (originalConsoleMethod) {\n      return function (...args) {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(WINDOW.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch() {\n  if (!(0,_supports_js__WEBPACK_IMPORTED_MODULE_4__.supportsNativeFetch)()) {\n    return;\n  }\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(WINDOW, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(WINDOW, args).then(\n        (response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\n/** JSDoc */\nfunction instrumentXHR() {\n  if (!('XMLHttpRequest' in WINDOW)) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n      const url = args[1];\n      const xhrInfo = (this[SENTRY_XHR_DATA_KEY] = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: (0,_is_js__WEBPACK_IMPORTED_MODULE_5__.isString)(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n        request_headers: {},\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if ((0,_is_js__WEBPACK_IMPORTED_MODULE_5__.isString)(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args: args ,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr: this,\n          } );\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(this, 'onreadystatechange', function (original) {\n          return function ( ...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(this, 'setRequestHeader', function (original) {\n        return function ( ...setRequestHeaderArgs) {\n          const [header, value] = setRequestHeaderArgs ;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n      if (sentryXhrData && args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref;\n\n/** JSDoc */\nfunction instrumentHistory() {\n  if (!(0,_vendor_supportsHistory_js__WEBPACK_IMPORTED_MODULE_6__.supportsHistory)()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function ( ...args) {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(WINDOW.history, 'pushState', historyReplacementFunction);\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID;\nlet lastCapturedEvent;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous, current) {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target ;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener = false) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\n/** JSDoc */\nfunction instrumentDOM() {\n  if (!('document' in WINDOW)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW )[target] && (WINDOW )[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n\n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this ;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n\n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this ;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n  _oldOnErrorHandler = WINDOW.onerror;\n\n  WINDOW.onerror = function (msg, url, line, column, error) {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  WINDOW.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nlet _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = WINDOW.onunhandledrejection;\n\n  WINDOW.onunhandledrejection = function (e) {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  WINDOW.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\n\n//# sourceMappingURL=instrument.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/instrument.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/is.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/is.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isDOMError\": function() { return /* binding */ isDOMError; },\n/* harmony export */   \"isDOMException\": function() { return /* binding */ isDOMException; },\n/* harmony export */   \"isElement\": function() { return /* binding */ isElement; },\n/* harmony export */   \"isError\": function() { return /* binding */ isError; },\n/* harmony export */   \"isErrorEvent\": function() { return /* binding */ isErrorEvent; },\n/* harmony export */   \"isEvent\": function() { return /* binding */ isEvent; },\n/* harmony export */   \"isInstanceOf\": function() { return /* binding */ isInstanceOf; },\n/* harmony export */   \"isNaN\": function() { return /* binding */ isNaN; },\n/* harmony export */   \"isPlainObject\": function() { return /* binding */ isPlainObject; },\n/* harmony export */   \"isPrimitive\": function() { return /* binding */ isPrimitive; },\n/* harmony export */   \"isRegExp\": function() { return /* binding */ isRegExp; },\n/* harmony export */   \"isString\": function() { return /* binding */ isString; },\n/* harmony export */   \"isSyntheticEvent\": function() { return /* binding */ isSyntheticEvent; },\n/* harmony export */   \"isThenable\": function() { return /* binding */ isThenable; }\n/* harmony export */ });\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n\n//# sourceMappingURL=is.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLGNBQWM7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsVUFBVTtBQUMzRDs7QUFFQTtBQUNBO0FBQ0EsSUFBSSxtQkFBbUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksaUJBQWlCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLHFCQUFxQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSxlQUFlO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLGtCQUFrQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSxvQkFBb0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksY0FBYztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSxnQkFBZ0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksZUFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLHVCQUF1QjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSxZQUFZO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLG1CQUFtQjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFb0w7QUFDcEwiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9pcy5qcz9mNDA0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvdW5ib3VuZC1tZXRob2RcbmNvbnN0IG9iamVjdFRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciBnaXZlbiB2YWx1ZSdzIHR5cGUgaXMgb25lIG9mIGEgZmV3IEVycm9yIG9yIEVycm9yLWxpa2VcbiAqIHtAbGluayBpc0Vycm9yfS5cbiAqXG4gKiBAcGFyYW0gd2F0IEEgdmFsdWUgdG8gYmUgY2hlY2tlZC5cbiAqIEByZXR1cm5zIEEgYm9vbGVhbiByZXByZXNlbnRpbmcgdGhlIHJlc3VsdC5cbiAqL1xuZnVuY3Rpb24gaXNFcnJvcih3YXQpIHtcbiAgc3dpdGNoIChvYmplY3RUb1N0cmluZy5jYWxsKHdhdCkpIHtcbiAgICBjYXNlICdbb2JqZWN0IEVycm9yXSc6XG4gICAgY2FzZSAnW29iamVjdCBFeGNlcHRpb25dJzpcbiAgICBjYXNlICdbb2JqZWN0IERPTUV4Y2VwdGlvbl0nOlxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBpc0luc3RhbmNlT2Yod2F0LCBFcnJvcik7XG4gIH1cbn1cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgZ2l2ZW4gdmFsdWUgaXMgYW4gaW5zdGFuY2Ugb2YgdGhlIGdpdmVuIGJ1aWx0LWluIGNsYXNzLlxuICpcbiAqIEBwYXJhbSB3YXQgVGhlIHZhbHVlIHRvIGJlIGNoZWNrZWRcbiAqIEBwYXJhbSBjbGFzc05hbWVcbiAqIEByZXR1cm5zIEEgYm9vbGVhbiByZXByZXNlbnRpbmcgdGhlIHJlc3VsdC5cbiAqL1xuZnVuY3Rpb24gaXNCdWlsdGluKHdhdCwgY2xhc3NOYW1lKSB7XG4gIHJldHVybiBvYmplY3RUb1N0cmluZy5jYWxsKHdhdCkgPT09IGBbb2JqZWN0ICR7Y2xhc3NOYW1lfV1gO1xufVxuXG4vKipcbiAqIENoZWNrcyB3aGV0aGVyIGdpdmVuIHZhbHVlJ3MgdHlwZSBpcyBFcnJvckV2ZW50XG4gKiB7QGxpbmsgaXNFcnJvckV2ZW50fS5cbiAqXG4gKiBAcGFyYW0gd2F0IEEgdmFsdWUgdG8gYmUgY2hlY2tlZC5cbiAqIEByZXR1cm5zIEEgYm9vbGVhbiByZXByZXNlbnRpbmcgdGhlIHJlc3VsdC5cbiAqL1xuZnVuY3Rpb24gaXNFcnJvckV2ZW50KHdhdCkge1xuICByZXR1cm4gaXNCdWlsdGluKHdhdCwgJ0Vycm9yRXZlbnQnKTtcbn1cblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciBnaXZlbiB2YWx1ZSdzIHR5cGUgaXMgRE9NRXJyb3JcbiAqIHtAbGluayBpc0RPTUVycm9yfS5cbiAqXG4gKiBAcGFyYW0gd2F0IEEgdmFsdWUgdG8gYmUgY2hlY2tlZC5cbiAqIEByZXR1cm5zIEEgYm9vbGVhbiByZXByZXNlbnRpbmcgdGhlIHJlc3VsdC5cbiAqL1xuZnVuY3Rpb24gaXNET01FcnJvcih3YXQpIHtcbiAgcmV0dXJuIGlzQnVpbHRpbih3YXQsICdET01FcnJvcicpO1xufVxuXG4vKipcbiAqIENoZWNrcyB3aGV0aGVyIGdpdmVuIHZhbHVlJ3MgdHlwZSBpcyBET01FeGNlcHRpb25cbiAqIHtAbGluayBpc0RPTUV4Y2VwdGlvbn0uXG4gKlxuICogQHBhcmFtIHdhdCBBIHZhbHVlIHRvIGJlIGNoZWNrZWQuXG4gKiBAcmV0dXJucyBBIGJvb2xlYW4gcmVwcmVzZW50aW5nIHRoZSByZXN1bHQuXG4gKi9cbmZ1bmN0aW9uIGlzRE9NRXhjZXB0aW9uKHdhdCkge1xuICByZXR1cm4gaXNCdWlsdGluKHdhdCwgJ0RPTUV4Y2VwdGlvbicpO1xufVxuXG4vKipcbiAqIENoZWNrcyB3aGV0aGVyIGdpdmVuIHZhbHVlJ3MgdHlwZSBpcyBhIHN0cmluZ1xuICoge0BsaW5rIGlzU3RyaW5nfS5cbiAqXG4gKiBAcGFyYW0gd2F0IEEgdmFsdWUgdG8gYmUgY2hlY2tlZC5cbiAqIEByZXR1cm5zIEEgYm9vbGVhbiByZXByZXNlbnRpbmcgdGhlIHJlc3VsdC5cbiAqL1xuZnVuY3Rpb24gaXNTdHJpbmcod2F0KSB7XG4gIHJldHVybiBpc0J1aWx0aW4od2F0LCAnU3RyaW5nJyk7XG59XG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgZ2l2ZW4gdmFsdWUgaXMgYSBwcmltaXRpdmUgKHVuZGVmaW5lZCwgbnVsbCwgbnVtYmVyLCBib29sZWFuLCBzdHJpbmcsIGJpZ2ludCwgc3ltYm9sKVxuICoge0BsaW5rIGlzUHJpbWl0aXZlfS5cbiAqXG4gKiBAcGFyYW0gd2F0IEEgdmFsdWUgdG8gYmUgY2hlY2tlZC5cbiAqIEByZXR1cm5zIEEgYm9vbGVhbiByZXByZXNlbnRpbmcgdGhlIHJlc3VsdC5cbiAqL1xuZnVuY3Rpb24gaXNQcmltaXRpdmUod2F0KSB7XG4gIHJldHVybiB3YXQgPT09IG51bGwgfHwgKHR5cGVvZiB3YXQgIT09ICdvYmplY3QnICYmIHR5cGVvZiB3YXQgIT09ICdmdW5jdGlvbicpO1xufVxuXG4vKipcbiAqIENoZWNrcyB3aGV0aGVyIGdpdmVuIHZhbHVlJ3MgdHlwZSBpcyBhbiBvYmplY3QgbGl0ZXJhbFxuICoge0BsaW5rIGlzUGxhaW5PYmplY3R9LlxuICpcbiAqIEBwYXJhbSB3YXQgQSB2YWx1ZSB0byBiZSBjaGVja2VkLlxuICogQHJldHVybnMgQSBib29sZWFuIHJlcHJlc2VudGluZyB0aGUgcmVzdWx0LlxuICovXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KHdhdCkge1xuICByZXR1cm4gaXNCdWlsdGluKHdhdCwgJ09iamVjdCcpO1xufVxuXG4vKipcbiAqIENoZWNrcyB3aGV0aGVyIGdpdmVuIHZhbHVlJ3MgdHlwZSBpcyBhbiBFdmVudCBpbnN0YW5jZVxuICoge0BsaW5rIGlzRXZlbnR9LlxuICpcbiAqIEBwYXJhbSB3YXQgQSB2YWx1ZSB0byBiZSBjaGVja2VkLlxuICogQHJldHVybnMgQSBib29sZWFuIHJlcHJlc2VudGluZyB0aGUgcmVzdWx0LlxuICovXG5mdW5jdGlvbiBpc0V2ZW50KHdhdCkge1xuICByZXR1cm4gdHlwZW9mIEV2ZW50ICE9PSAndW5kZWZpbmVkJyAmJiBpc0luc3RhbmNlT2Yod2F0LCBFdmVudCk7XG59XG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgZ2l2ZW4gdmFsdWUncyB0eXBlIGlzIGFuIEVsZW1lbnQgaW5zdGFuY2VcbiAqIHtAbGluayBpc0VsZW1lbnR9LlxuICpcbiAqIEBwYXJhbSB3YXQgQSB2YWx1ZSB0byBiZSBjaGVja2VkLlxuICogQHJldHVybnMgQSBib29sZWFuIHJlcHJlc2VudGluZyB0aGUgcmVzdWx0LlxuICovXG5mdW5jdGlvbiBpc0VsZW1lbnQod2F0KSB7XG4gIHJldHVybiB0eXBlb2YgRWxlbWVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgaXNJbnN0YW5jZU9mKHdhdCwgRWxlbWVudCk7XG59XG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgZ2l2ZW4gdmFsdWUncyB0eXBlIGlzIGFuIHJlZ2V4cFxuICoge0BsaW5rIGlzUmVnRXhwfS5cbiAqXG4gKiBAcGFyYW0gd2F0IEEgdmFsdWUgdG8gYmUgY2hlY2tlZC5cbiAqIEByZXR1cm5zIEEgYm9vbGVhbiByZXByZXNlbnRpbmcgdGhlIHJlc3VsdC5cbiAqL1xuZnVuY3Rpb24gaXNSZWdFeHAod2F0KSB7XG4gIHJldHVybiBpc0J1aWx0aW4od2F0LCAnUmVnRXhwJyk7XG59XG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgZ2l2ZW4gdmFsdWUgaGFzIGEgdGhlbiBmdW5jdGlvbi5cbiAqIEBwYXJhbSB3YXQgQSB2YWx1ZSB0byBiZSBjaGVja2VkLlxuICovXG5mdW5jdGlvbiBpc1RoZW5hYmxlKHdhdCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzXG4gIHJldHVybiBCb29sZWFuKHdhdCAmJiB3YXQudGhlbiAmJiB0eXBlb2Ygd2F0LnRoZW4gPT09ICdmdW5jdGlvbicpO1xufVxuXG4vKipcbiAqIENoZWNrcyB3aGV0aGVyIGdpdmVuIHZhbHVlJ3MgdHlwZSBpcyBhIFN5bnRoZXRpY0V2ZW50XG4gKiB7QGxpbmsgaXNTeW50aGV0aWNFdmVudH0uXG4gKlxuICogQHBhcmFtIHdhdCBBIHZhbHVlIHRvIGJlIGNoZWNrZWQuXG4gKiBAcmV0dXJucyBBIGJvb2xlYW4gcmVwcmVzZW50aW5nIHRoZSByZXN1bHQuXG4gKi9cbmZ1bmN0aW9uIGlzU3ludGhldGljRXZlbnQod2F0KSB7XG4gIHJldHVybiBpc1BsYWluT2JqZWN0KHdhdCkgJiYgJ25hdGl2ZUV2ZW50JyBpbiB3YXQgJiYgJ3ByZXZlbnREZWZhdWx0JyBpbiB3YXQgJiYgJ3N0b3BQcm9wYWdhdGlvbicgaW4gd2F0O1xufVxuXG4vKipcbiAqIENoZWNrcyB3aGV0aGVyIGdpdmVuIHZhbHVlIGlzIE5hTlxuICoge0BsaW5rIGlzTmFOfS5cbiAqXG4gKiBAcGFyYW0gd2F0IEEgdmFsdWUgdG8gYmUgY2hlY2tlZC5cbiAqIEByZXR1cm5zIEEgYm9vbGVhbiByZXByZXNlbnRpbmcgdGhlIHJlc3VsdC5cbiAqL1xuZnVuY3Rpb24gaXNOYU4od2F0KSB7XG4gIHJldHVybiB0eXBlb2Ygd2F0ID09PSAnbnVtYmVyJyAmJiB3YXQgIT09IHdhdDtcbn1cblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciBnaXZlbiB2YWx1ZSdzIHR5cGUgaXMgYW4gaW5zdGFuY2Ugb2YgcHJvdmlkZWQgY29uc3RydWN0b3IuXG4gKiB7QGxpbmsgaXNJbnN0YW5jZU9mfS5cbiAqXG4gKiBAcGFyYW0gd2F0IEEgdmFsdWUgdG8gYmUgY2hlY2tlZC5cbiAqIEBwYXJhbSBiYXNlIEEgY29uc3RydWN0b3IgdG8gYmUgdXNlZCBpbiBhIGNoZWNrLlxuICogQHJldHVybnMgQSBib29sZWFuIHJlcHJlc2VudGluZyB0aGUgcmVzdWx0LlxuICovXG5mdW5jdGlvbiBpc0luc3RhbmNlT2Yod2F0LCBiYXNlKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdhdCBpbnN0YW5jZW9mIGJhc2U7XG4gIH0gY2F0Y2ggKF9lKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbmV4cG9ydCB7IGlzRE9NRXJyb3IsIGlzRE9NRXhjZXB0aW9uLCBpc0VsZW1lbnQsIGlzRXJyb3IsIGlzRXJyb3JFdmVudCwgaXNFdmVudCwgaXNJbnN0YW5jZU9mLCBpc05hTiwgaXNQbGFpbk9iamVjdCwgaXNQcmltaXRpdmUsIGlzUmVnRXhwLCBpc1N0cmluZywgaXNTeW50aGV0aWNFdmVudCwgaXNUaGVuYWJsZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/is.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/logger.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/logger.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CONSOLE_LEVELS\": function() { return /* binding */ CONSOLE_LEVELS; },\n/* harmony export */   \"consoleSandbox\": function() { return /* binding */ consoleSandbox; },\n/* harmony export */   \"logger\": function() { return /* binding */ logger; }\n/* harmony export */ });\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!(\"console\" in _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const originalConsole = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console ;\n  const wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in originalConsole && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalSingleton)('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\n\n//# sourceMappingURL=logger.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbG9nZ2VyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0U7O0FBRWhFO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGtFQUF1QjtBQUMvQjtBQUNBOztBQUVBLDBCQUEwQiw2REFBa0I7QUFDNUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDZEQUFrQixVQUFVLE9BQU8sR0FBRyxLQUFLO0FBQ3ZELFdBQVc7QUFDWDtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpRUFBa0I7QUFDN0IsRUFBRTtBQUNGO0FBQ0E7O0FBRWtEO0FBQ2xEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbG9nZ2VyLmpzP2YwYjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0R2xvYmFsU2luZ2xldG9uLCBHTE9CQUxfT0JKIH0gZnJvbSAnLi93b3JsZHdpZGUuanMnO1xuXG4vKiogUHJlZml4IGZvciBsb2dnaW5nIHN0cmluZ3MgKi9cbmNvbnN0IFBSRUZJWCA9ICdTZW50cnkgTG9nZ2VyICc7XG5cbmNvbnN0IENPTlNPTEVfTEVWRUxTID0gWydkZWJ1ZycsICdpbmZvJywgJ3dhcm4nLCAnZXJyb3InLCAnbG9nJywgJ2Fzc2VydCcsICd0cmFjZSddIDtcblxuLyoqXG4gKiBUZW1wb3JhcmlseSBkaXNhYmxlIHNlbnRyeSBjb25zb2xlIGluc3RydW1lbnRhdGlvbnMuXG4gKlxuICogQHBhcmFtIGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0byBydW4gYWdhaW5zdCB0aGUgb3JpZ2luYWwgYGNvbnNvbGVgIG1lc3NhZ2VzXG4gKiBAcmV0dXJucyBUaGUgcmVzdWx0cyBvZiB0aGUgY2FsbGJhY2tcbiAqL1xuZnVuY3Rpb24gY29uc29sZVNhbmRib3goY2FsbGJhY2spIHtcbiAgaWYgKCEoJ2NvbnNvbGUnIGluIEdMT0JBTF9PQkopKSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrKCk7XG4gIH1cblxuICBjb25zdCBvcmlnaW5hbENvbnNvbGUgPSBHTE9CQUxfT0JKLmNvbnNvbGUgO1xuICBjb25zdCB3cmFwcGVkTGV2ZWxzID0ge307XG5cbiAgLy8gUmVzdG9yZSBhbGwgd3JhcHBlZCBjb25zb2xlIG1ldGhvZHNcbiAgQ09OU09MRV9MRVZFTFMuZm9yRWFjaChsZXZlbCA9PiB7XG4gICAgLy8gVE9ETyh2Nyk6IFJlbW92ZSB0aGlzIGNoZWNrIGFzIGl0J3Mgb25seSBuZWVkZWQgZm9yIE5vZGUgNlxuICAgIGNvbnN0IG9yaWdpbmFsV3JhcHBlZEZ1bmMgPVxuICAgICAgb3JpZ2luYWxDb25zb2xlW2xldmVsXSAmJiAob3JpZ2luYWxDb25zb2xlW2xldmVsXSApLl9fc2VudHJ5X29yaWdpbmFsX187XG4gICAgaWYgKGxldmVsIGluIG9yaWdpbmFsQ29uc29sZSAmJiBvcmlnaW5hbFdyYXBwZWRGdW5jKSB7XG4gICAgICB3cmFwcGVkTGV2ZWxzW2xldmVsXSA9IG9yaWdpbmFsQ29uc29sZVtsZXZlbF0gO1xuICAgICAgb3JpZ2luYWxDb25zb2xlW2xldmVsXSA9IG9yaWdpbmFsV3JhcHBlZEZ1bmMgO1xuICAgIH1cbiAgfSk7XG5cbiAgdHJ5IHtcbiAgICByZXR1cm4gY2FsbGJhY2soKTtcbiAgfSBmaW5hbGx5IHtcbiAgICAvLyBSZXZlcnQgcmVzdG9yYXRpb24gdG8gd3JhcHBlZCBzdGF0ZVxuICAgIE9iamVjdC5rZXlzKHdyYXBwZWRMZXZlbHMpLmZvckVhY2gobGV2ZWwgPT4ge1xuICAgICAgb3JpZ2luYWxDb25zb2xlW2xldmVsXSA9IHdyYXBwZWRMZXZlbHNbbGV2ZWwgXTtcbiAgICB9KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBtYWtlTG9nZ2VyKCkge1xuICBsZXQgZW5hYmxlZCA9IGZhbHNlO1xuICBjb25zdCBsb2dnZXIgPSB7XG4gICAgZW5hYmxlOiAoKSA9PiB7XG4gICAgICBlbmFibGVkID0gdHJ1ZTtcbiAgICB9LFxuICAgIGRpc2FibGU6ICgpID0+IHtcbiAgICAgIGVuYWJsZWQgPSBmYWxzZTtcbiAgICB9LFxuICB9O1xuXG4gIGlmICgodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pKSB7XG4gICAgQ09OU09MRV9MRVZFTFMuZm9yRWFjaChuYW1lID0+IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgICBsb2dnZXJbbmFtZV0gPSAoLi4uYXJncykgPT4ge1xuICAgICAgICBpZiAoZW5hYmxlZCkge1xuICAgICAgICAgIGNvbnNvbGVTYW5kYm94KCgpID0+IHtcbiAgICAgICAgICAgIEdMT0JBTF9PQkouY29uc29sZVtuYW1lXShgJHtQUkVGSVh9WyR7bmFtZX1dOmAsIC4uLmFyZ3MpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIENPTlNPTEVfTEVWRUxTLmZvckVhY2gobmFtZSA9PiB7XG4gICAgICBsb2dnZXJbbmFtZV0gPSAoKSA9PiB1bmRlZmluZWQ7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gbG9nZ2VyIDtcbn1cblxuLy8gRW5zdXJlIHdlIG9ubHkgaGF2ZSBhIHNpbmdsZSBsb2dnZXIgaW5zdGFuY2UsIGV2ZW4gaWYgbXVsdGlwbGUgdmVyc2lvbnMgb2YgQHNlbnRyeS91dGlscyBhcmUgYmVpbmcgdXNlZFxubGV0IGxvZ2dlcjtcbmlmICgodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pKSB7XG4gIGxvZ2dlciA9IGdldEdsb2JhbFNpbmdsZXRvbignbG9nZ2VyJywgbWFrZUxvZ2dlcik7XG59IGVsc2Uge1xuICBsb2dnZXIgPSBtYWtlTG9nZ2VyKCk7XG59XG5cbmV4cG9ydCB7IENPTlNPTEVfTEVWRUxTLCBjb25zb2xlU2FuZGJveCwgbG9nZ2VyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dnZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/logger.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/memo.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/memo.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"memoBuilder\": function() { return /* binding */ memoBuilder; }\n/* harmony export */ });\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\n\n//# sourceMappingURL=memo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbWVtby5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0JBQWtCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLHNCQUFzQixrQkFBa0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL21lbW8uanM/YzAyMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MgKi9cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkgKi9cblxuLyoqXG4gKiBIZWxwZXIgdG8gZGVjeWNsZSBqc29uIG9iamVjdHNcbiAqL1xuZnVuY3Rpb24gbWVtb0J1aWxkZXIoKSB7XG4gIGNvbnN0IGhhc1dlYWtTZXQgPSB0eXBlb2YgV2Vha1NldCA9PT0gJ2Z1bmN0aW9uJztcbiAgY29uc3QgaW5uZXIgPSBoYXNXZWFrU2V0ID8gbmV3IFdlYWtTZXQoKSA6IFtdO1xuICBmdW5jdGlvbiBtZW1vaXplKG9iaikge1xuICAgIGlmIChoYXNXZWFrU2V0KSB7XG4gICAgICBpZiAoaW5uZXIuaGFzKG9iaikpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICBpbm5lci5hZGQob2JqKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9wcmVmZXItZm9yLW9mXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbm5lci5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgdmFsdWUgPSBpbm5lcltpXTtcbiAgICAgIGlmICh2YWx1ZSA9PT0gb2JqKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICBpbm5lci5wdXNoKG9iaik7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24gdW5tZW1vaXplKG9iaikge1xuICAgIGlmIChoYXNXZWFrU2V0KSB7XG4gICAgICBpbm5lci5kZWxldGUob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbm5lci5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoaW5uZXJbaV0gPT09IG9iaikge1xuICAgICAgICAgIGlubmVyLnNwbGljZShpLCAxKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gW21lbW9pemUsIHVubWVtb2l6ZV07XG59XG5cbmV4cG9ydCB7IG1lbW9CdWlsZGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZW1vLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/memo.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/misc.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/misc.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addContextToFrame\": function() { return /* binding */ addContextToFrame; },\n/* harmony export */   \"addExceptionMechanism\": function() { return /* binding */ addExceptionMechanism; },\n/* harmony export */   \"addExceptionTypeValue\": function() { return /* binding */ addExceptionTypeValue; },\n/* harmony export */   \"arrayify\": function() { return /* binding */ arrayify; },\n/* harmony export */   \"checkOrSetAlreadyCaught\": function() { return /* binding */ checkOrSetAlreadyCaught; },\n/* harmony export */   \"getEventDescription\": function() { return /* binding */ getEventDescription; },\n/* harmony export */   \"parseSemver\": function() { return /* binding */ parseSemver; },\n/* harmony export */   \"uuid4\": function() { return /* binding */ uuid4; }\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ \"./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  const getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(line, 0));\n\n  frame.context_line = (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.addNonEnumerableProperty)(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\n\n//# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/misc.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/node-stack-trace.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/node-stack-trace.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"node\": function() { return /* binding */ node; }\n/* harmony export */ });\n/** Node Stack line parser */\n// eslint-disable-next-line complexity\nfunction node(getModule) {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line) => {\n    const lineMatch = line.match(FULL_MATCH);\n\n    if (lineMatch) {\n      let object;\n      let method;\n      let functionName;\n      let typeName;\n      let methodName;\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n\n        let methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart - 1] === '.') {\n          methodStart--;\n        }\n\n        if (methodStart > 0) {\n          object = functionName.slice(0, methodStart);\n          method = functionName.slice(methodStart + 1);\n          const objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.slice(objectEnd + 1);\n            object = object.slice(0, objectEnd);\n          }\n        }\n        typeName = undefined;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = undefined;\n        functionName = undefined;\n      }\n\n      if (functionName === undefined) {\n        methodName = methodName || '<anonymous>';\n        functionName = typeName ? `${typeName}.${methodName}` : methodName;\n      }\n\n      let filename = lineMatch[2] && lineMatch[2].startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2];\n      const isNative = lineMatch[5] === 'native';\n\n      if (!filename && lineMatch[5] && !isNative) {\n        filename = lineMatch[5];\n      }\n\n      const isInternal =\n        isNative ||\n        (filename &&\n          // It's not internal if it's an absolute linux path\n          !filename.startsWith('/') &&\n          // It's not internal if it's an absolute windows path\n          !filename.includes(':\\\\') &&\n          // It's not internal if the path is starting with a dot\n          !filename.startsWith('.') &&\n          // It's not internal if the frame has a protocol. In node, this is usually the case if the file got pre-processed with a bundler like webpack\n          !filename.match(/^[a-zA-Z]([a-zA-Z0-9.\\-+])*:\\/\\//)); // Schema from: https://stackoverflow.com/a/3641782\n\n      // in_app is all that's not an internal Node function or a module within node_modules\n      // note that isNative appears to return true even for node core libraries\n      // see https://github.com/getsentry/raven-node/issues/176\n\n      const in_app = !isInternal && filename !== undefined && !filename.includes('node_modules/');\n\n      return {\n        filename,\n        module: getModule ? getModule(filename) : undefined,\n        function: functionName,\n        lineno: parseInt(lineMatch[3], 10) || undefined,\n        colno: parseInt(lineMatch[4], 10) || undefined,\n        in_app,\n      };\n    }\n\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    return undefined;\n  };\n}\n\n\n//# sourceMappingURL=node-stack-trace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbm9kZS1zdGFjay10cmFjZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLEdBQUc7QUFDckM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFDQUFxQyxTQUFTLEdBQUcsV0FBVztBQUM1RDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRTs7QUFFaEU7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFZ0I7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9ub2RlLXN0YWNrLXRyYWNlLmpzPzkyMzEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIE5vZGUgU3RhY2sgbGluZSBwYXJzZXIgKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb21wbGV4aXR5XG5mdW5jdGlvbiBub2RlKGdldE1vZHVsZSkge1xuICBjb25zdCBGSUxFTkFNRV9NQVRDSCA9IC9eXFxzKlstXXs0LH0kLztcbiAgY29uc3QgRlVMTF9NQVRDSCA9IC9hdCAoPzphc3luYyApPyg/OiguKz8pXFxzK1xcKCk/KD86KC4rKTooXFxkKyk6KFxcZCspP3woW14pXSspKVxcKT8vO1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb21wbGV4aXR5XG4gIHJldHVybiAobGluZSkgPT4ge1xuICAgIGNvbnN0IGxpbmVNYXRjaCA9IGxpbmUubWF0Y2goRlVMTF9NQVRDSCk7XG5cbiAgICBpZiAobGluZU1hdGNoKSB7XG4gICAgICBsZXQgb2JqZWN0O1xuICAgICAgbGV0IG1ldGhvZDtcbiAgICAgIGxldCBmdW5jdGlvbk5hbWU7XG4gICAgICBsZXQgdHlwZU5hbWU7XG4gICAgICBsZXQgbWV0aG9kTmFtZTtcblxuICAgICAgaWYgKGxpbmVNYXRjaFsxXSkge1xuICAgICAgICBmdW5jdGlvbk5hbWUgPSBsaW5lTWF0Y2hbMV07XG5cbiAgICAgICAgbGV0IG1ldGhvZFN0YXJ0ID0gZnVuY3Rpb25OYW1lLmxhc3RJbmRleE9mKCcuJyk7XG4gICAgICAgIGlmIChmdW5jdGlvbk5hbWVbbWV0aG9kU3RhcnQgLSAxXSA9PT0gJy4nKSB7XG4gICAgICAgICAgbWV0aG9kU3RhcnQtLTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChtZXRob2RTdGFydCA+IDApIHtcbiAgICAgICAgICBvYmplY3QgPSBmdW5jdGlvbk5hbWUuc2xpY2UoMCwgbWV0aG9kU3RhcnQpO1xuICAgICAgICAgIG1ldGhvZCA9IGZ1bmN0aW9uTmFtZS5zbGljZShtZXRob2RTdGFydCArIDEpO1xuICAgICAgICAgIGNvbnN0IG9iamVjdEVuZCA9IG9iamVjdC5pbmRleE9mKCcuTW9kdWxlJyk7XG4gICAgICAgICAgaWYgKG9iamVjdEVuZCA+IDApIHtcbiAgICAgICAgICAgIGZ1bmN0aW9uTmFtZSA9IGZ1bmN0aW9uTmFtZS5zbGljZShvYmplY3RFbmQgKyAxKTtcbiAgICAgICAgICAgIG9iamVjdCA9IG9iamVjdC5zbGljZSgwLCBvYmplY3RFbmQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0eXBlTmFtZSA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgaWYgKG1ldGhvZCkge1xuICAgICAgICB0eXBlTmFtZSA9IG9iamVjdDtcbiAgICAgICAgbWV0aG9kTmFtZSA9IG1ldGhvZDtcbiAgICAgIH1cblxuICAgICAgaWYgKG1ldGhvZCA9PT0gJzxhbm9ueW1vdXM+Jykge1xuICAgICAgICBtZXRob2ROYW1lID0gdW5kZWZpbmVkO1xuICAgICAgICBmdW5jdGlvbk5hbWUgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICAgIGlmIChmdW5jdGlvbk5hbWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBtZXRob2ROYW1lID0gbWV0aG9kTmFtZSB8fCAnPGFub255bW91cz4nO1xuICAgICAgICBmdW5jdGlvbk5hbWUgPSB0eXBlTmFtZSA/IGAke3R5cGVOYW1lfS4ke21ldGhvZE5hbWV9YCA6IG1ldGhvZE5hbWU7XG4gICAgICB9XG5cbiAgICAgIGxldCBmaWxlbmFtZSA9IGxpbmVNYXRjaFsyXSAmJiBsaW5lTWF0Y2hbMl0uc3RhcnRzV2l0aCgnZmlsZTovLycpID8gbGluZU1hdGNoWzJdLnNsaWNlKDcpIDogbGluZU1hdGNoWzJdO1xuICAgICAgY29uc3QgaXNOYXRpdmUgPSBsaW5lTWF0Y2hbNV0gPT09ICduYXRpdmUnO1xuXG4gICAgICBpZiAoIWZpbGVuYW1lICYmIGxpbmVNYXRjaFs1XSAmJiAhaXNOYXRpdmUpIHtcbiAgICAgICAgZmlsZW5hbWUgPSBsaW5lTWF0Y2hbNV07XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGlzSW50ZXJuYWwgPVxuICAgICAgICBpc05hdGl2ZSB8fFxuICAgICAgICAoZmlsZW5hbWUgJiZcbiAgICAgICAgICAvLyBJdCdzIG5vdCBpbnRlcm5hbCBpZiBpdCdzIGFuIGFic29sdXRlIGxpbnV4IHBhdGhcbiAgICAgICAgICAhZmlsZW5hbWUuc3RhcnRzV2l0aCgnLycpICYmXG4gICAgICAgICAgLy8gSXQncyBub3QgaW50ZXJuYWwgaWYgaXQncyBhbiBhYnNvbHV0ZSB3aW5kb3dzIHBhdGhcbiAgICAgICAgICAhZmlsZW5hbWUuaW5jbHVkZXMoJzpcXFxcJykgJiZcbiAgICAgICAgICAvLyBJdCdzIG5vdCBpbnRlcm5hbCBpZiB0aGUgcGF0aCBpcyBzdGFydGluZyB3aXRoIGEgZG90XG4gICAgICAgICAgIWZpbGVuYW1lLnN0YXJ0c1dpdGgoJy4nKSAmJlxuICAgICAgICAgIC8vIEl0J3Mgbm90IGludGVybmFsIGlmIHRoZSBmcmFtZSBoYXMgYSBwcm90b2NvbC4gSW4gbm9kZSwgdGhpcyBpcyB1c3VhbGx5IHRoZSBjYXNlIGlmIHRoZSBmaWxlIGdvdCBwcmUtcHJvY2Vzc2VkIHdpdGggYSBidW5kbGVyIGxpa2Ugd2VicGFja1xuICAgICAgICAgICFmaWxlbmFtZS5tYXRjaCgvXlthLXpBLVpdKFthLXpBLVowLTkuXFwtK10pKjpcXC9cXC8vKSk7IC8vIFNjaGVtYSBmcm9tOiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzY0MTc4MlxuXG4gICAgICAvLyBpbl9hcHAgaXMgYWxsIHRoYXQncyBub3QgYW4gaW50ZXJuYWwgTm9kZSBmdW5jdGlvbiBvciBhIG1vZHVsZSB3aXRoaW4gbm9kZV9tb2R1bGVzXG4gICAgICAvLyBub3RlIHRoYXQgaXNOYXRpdmUgYXBwZWFycyB0byByZXR1cm4gdHJ1ZSBldmVuIGZvciBub2RlIGNvcmUgbGlicmFyaWVzXG4gICAgICAvLyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2dldHNlbnRyeS9yYXZlbi1ub2RlL2lzc3Vlcy8xNzZcblxuICAgICAgY29uc3QgaW5fYXBwID0gIWlzSW50ZXJuYWwgJiYgZmlsZW5hbWUgIT09IHVuZGVmaW5lZCAmJiAhZmlsZW5hbWUuaW5jbHVkZXMoJ25vZGVfbW9kdWxlcy8nKTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZmlsZW5hbWUsXG4gICAgICAgIG1vZHVsZTogZ2V0TW9kdWxlID8gZ2V0TW9kdWxlKGZpbGVuYW1lKSA6IHVuZGVmaW5lZCxcbiAgICAgICAgZnVuY3Rpb246IGZ1bmN0aW9uTmFtZSxcbiAgICAgICAgbGluZW5vOiBwYXJzZUludChsaW5lTWF0Y2hbM10sIDEwKSB8fCB1bmRlZmluZWQsXG4gICAgICAgIGNvbG5vOiBwYXJzZUludChsaW5lTWF0Y2hbNF0sIDEwKSB8fCB1bmRlZmluZWQsXG4gICAgICAgIGluX2FwcCxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgaWYgKGxpbmUubWF0Y2goRklMRU5BTUVfTUFUQ0gpKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBmaWxlbmFtZTogbGluZSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfTtcbn1cblxuZXhwb3J0IHsgbm9kZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZS1zdGFjay10cmFjZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/node-stack-trace.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/node.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/node.js ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dynamicRequire\": function() { return /* binding */ dynamicRequire; },\n/* harmony export */   \"isNodeEnv\": function() { return /* binding */ isNodeEnv; },\n/* harmony export */   \"loadModule\": function() { return /* binding */ loadModule; }\n/* harmony export */ });\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./env.js */ \"./node_modules/@sentry/utils/esm/env.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !(0,_env_js__WEBPACK_IMPORTED_MODULE_0__.isBrowserBundle)() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\n\n//# sourceMappingURL=node.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbm9kZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEyQzs7QUFFM0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyx3REFBZTtBQUNwQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1GQUFtRixnQkFBZ0I7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBLFlBQVksTUFBTTtBQUNsQixvQ0FBb0MsTUFBTSxnQkFBZ0IsV0FBVztBQUNyRSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVpRDtBQUNqRCIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL25vZGUuanM/ZjgwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0Jyb3dzZXJCdW5kbGUgfSBmcm9tICcuL2Vudi5qcyc7XG5cbi8qKlxuICogTk9URTogSW4gb3JkZXIgdG8gYXZvaWQgY2lyY3VsYXIgZGVwZW5kZW5jaWVzLCBpZiB5b3UgYWRkIGEgZnVuY3Rpb24gdG8gdGhpcyBtb2R1bGUgYW5kIGl0IG5lZWRzIHRvIHByaW50IHNvbWV0aGluZyxcbiAqIHlvdSBtdXN0IGVpdGhlciBhKSB1c2UgYGNvbnNvbGUubG9nYCByYXRoZXIgdGhhbiB0aGUgbG9nZ2VyLCBvciBiKSBwdXQgeW91ciBmdW5jdGlvbiBlbHNld2hlcmUuXG4gKi9cblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciB3ZSdyZSBpbiB0aGUgTm9kZS5qcyBvciBCcm93c2VyIGVudmlyb25tZW50XG4gKlxuICogQHJldHVybnMgQW5zd2VyIHRvIGdpdmVuIHF1ZXN0aW9uXG4gKi9cbmZ1bmN0aW9uIGlzTm9kZUVudigpIHtcbiAgLy8gZXhwbGljaXRseSBjaGVjayBmb3IgYnJvd3NlciBidW5kbGVzIGFzIHRob3NlIGNhbiBiZSBvcHRpbWl6ZWQgc3RhdGljYWxseVxuICAvLyBieSB0ZXJzZXIvcm9sbHVwLlxuICByZXR1cm4gKFxuICAgICFpc0Jyb3dzZXJCdW5kbGUoKSAmJlxuICAgIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgPyBwcm9jZXNzIDogMCkgPT09ICdbb2JqZWN0IHByb2Nlc3NdJ1xuICApO1xufVxuXG4vKipcbiAqIFJlcXVpcmVzIGEgbW9kdWxlIHdoaWNoIGlzIHByb3RlY3RlZCBhZ2FpbnN0IGJ1bmRsZXIgbWluaWZpY2F0aW9uLlxuICpcbiAqIEBwYXJhbSByZXF1ZXN0IFRoZSBtb2R1bGUgcGF0aCB0byByZXNvbHZlXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvZXhwbGljaXQtbW9kdWxlLWJvdW5kYXJ5LXR5cGVzLCBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5mdW5jdGlvbiBkeW5hbWljUmVxdWlyZShtb2QsIHJlcXVlc3QpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICByZXR1cm4gbW9kLnJlcXVpcmUocmVxdWVzdCk7XG59XG5cbi8qKlxuICogSGVscGVyIGZvciBkeW5hbWljYWxseSBsb2FkaW5nIG1vZHVsZSB0aGF0IHNob3VsZCB3b3JrIHdpdGggbGlua2VkIGRlcGVuZGVuY2llcy5cbiAqIFRoZSBwcm9ibGVtIGlzIHRoYXQgd2UgX3Nob3VsZF8gYmUgdXNpbmcgYHJlcXVpcmUocmVxdWlyZS5yZXNvbHZlKG1vZHVsZU5hbWUsIHsgcGF0aHM6IFtjd2QoKV0gfSkpYFxuICogSG93ZXZlciBpdCdzIF9ub3QgcG9zc2libGVfIHRvIGRvIHRoYXQgd2l0aCBXZWJwYWNrLCBhcyBpdCBoYXMgdG8ga25vdyBhbGwgdGhlIGRlcGVuZGVuY2llcyBkdXJpbmdcbiAqIGJ1aWxkIHRpbWUuIGByZXF1aXJlLnJlc29sdmVgIGlzIGFsc28gbm90IGF2YWlsYWJsZSBpbiBhbnkgb3RoZXIgd2F5LCBzbyB3ZSBjYW5ub3QgY3JlYXRlLFxuICogYSBmYWtlIGhlbHBlciBsaWtlIHdlIGRvIHdpdGggYGR5bmFtaWNSZXF1aXJlYC5cbiAqXG4gKiBXZSBhbHdheXMgcHJlZmVyIHRvIHVzZSBsb2NhbCBwYWNrYWdlLCB0aHVzIHRoZSB2YWx1ZSBpcyBub3QgcmV0dXJuZWQgZWFybHkgZnJvbSBlYWNoIGB0cnkvY2F0Y2hgIGJsb2NrLlxuICogVGhhdCBpcyB0byBtaW1pYyB0aGUgYmVoYXZpb3Igb2YgYHJlcXVpcmUucmVzb2x2ZWAgZXhhY3RseS5cbiAqXG4gKiBAcGFyYW0gbW9kdWxlTmFtZSBtb2R1bGUgbmFtZSB0byByZXF1aXJlXG4gKiBAcmV0dXJucyBwb3NzaWJseSByZXF1aXJlZCBtb2R1bGVcbiAqL1xuZnVuY3Rpb24gbG9hZE1vZHVsZShtb2R1bGVOYW1lKSB7XG4gIGxldCBtb2Q7XG5cbiAgdHJ5IHtcbiAgICBtb2QgPSBkeW5hbWljUmVxdWlyZShtb2R1bGUsIG1vZHVsZU5hbWUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gbm8tZW1wdHlcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgeyBjd2QgfSA9IGR5bmFtaWNSZXF1aXJlKG1vZHVsZSwgJ3Byb2Nlc3MnKTtcbiAgICBtb2QgPSBkeW5hbWljUmVxdWlyZShtb2R1bGUsIGAke2N3ZCgpfS9ub2RlX21vZHVsZXMvJHttb2R1bGVOYW1lfWApIDtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIG5vLWVtcHR5XG4gIH1cblxuICByZXR1cm4gbW9kO1xufVxuXG5leHBvcnQgeyBkeW5hbWljUmVxdWlyZSwgaXNOb2RlRW52LCBsb2FkTW9kdWxlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub2RlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/node.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/normalize.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/normalize.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"normalize\": function() { return /* binding */ normalize; },\n/* harmony export */   \"normalizeToSize\": function() { return /* binding */ normalizeToSize; },\n/* harmony export */   \"walk\": function() { return /* binding */ visit; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _memo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./memo.js */ \"./node_modules/@sentry/utils/esm/memo.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stacktrace.js */ \"./node_modules/@sentry/utils/esm/stacktrace.js\");\n\n\n\n\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = (0,_memo_js__WEBPACK_IMPORTED_MODULE_0__.memoBuilder)(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !(0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isNaN)(value))\n  ) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.convertToPlainObject)(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isSyntheticEvent)(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${(0,_stacktrace_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\n\n//# sourceMappingURL=normalize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/normalize.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/object.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/object.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addNonEnumerableProperty\": function() { return /* binding */ addNonEnumerableProperty; },\n/* harmony export */   \"convertToPlainObject\": function() { return /* binding */ convertToPlainObject; },\n/* harmony export */   \"dropUndefinedKeys\": function() { return /* binding */ dropUndefinedKeys; },\n/* harmony export */   \"extractExceptionKeysForMessage\": function() { return /* binding */ extractExceptionKeysForMessage; },\n/* harmony export */   \"fill\": function() { return /* binding */ fill; },\n/* harmony export */   \"getOriginalFunction\": function() { return /* binding */ getOriginalFunction; },\n/* harmony export */   \"markFunctionWrapped\": function() { return /* binding */ markFunctionWrapped; },\n/* harmony export */   \"objectify\": function() { return /* binding */ objectify; },\n/* harmony export */   \"urlEncode\": function() { return /* binding */ urlEncode; }\n/* harmony export */ });\n/* harmony import */ var _browser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./browser.js */ \"./node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./string.js */ \"./node_modules/@sentry/utils/esm/string.js\");\n\n\n\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(value)\n\n {\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isError)(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isEvent)(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isElement)(target) ? (0,_browser_js__WEBPACK_IMPORTED_MODULE_1__.htmlTreeAsString)(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return (0,_string_js__WEBPACK_IMPORTED_MODULE_2__.truncate)(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return (0,_string_js__WEBPACK_IMPORTED_MODULE_2__.truncate)(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isPrimitive)(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\n\n//# sourceMappingURL=object.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/object.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/promisebuffer.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/promisebuffer.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makePromiseBuffer\": function() { return /* binding */ makePromiseBuffer; }\n/* harmony export */ });\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.js */ \"./node_modules/@sentry/utils/esm/error.js\");\n/* harmony import */ var _syncpromise_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./syncpromise.js */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n\n\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return (0,_syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.rejectedSyncPromise)(new _error_js__WEBPACK_IMPORTED_MODULE_1__.SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new _syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void (0,_syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\n\n//# sourceMappingURL=promisebuffer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vcHJvbWlzZWJ1ZmZlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUM7QUFDZ0Q7O0FBRXpGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxvRUFBbUIsS0FBSyxrREFBVztBQUNoRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHdEQUFXO0FBQzFCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0EsYUFBYSxvRUFBbUI7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vcHJvbWlzZWJ1ZmZlci5qcz81ZWM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNlbnRyeUVycm9yIH0gZnJvbSAnLi9lcnJvci5qcyc7XG5pbXBvcnQgeyByZWplY3RlZFN5bmNQcm9taXNlLCBTeW5jUHJvbWlzZSwgcmVzb2x2ZWRTeW5jUHJvbWlzZSB9IGZyb20gJy4vc3luY3Byb21pc2UuanMnO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gbmV3IFByb21pc2VCdWZmZXIgb2JqZWN0IHdpdGggdGhlIHNwZWNpZmllZCBsaW1pdFxuICogQHBhcmFtIGxpbWl0IG1heCBudW1iZXIgb2YgcHJvbWlzZXMgdGhhdCBjYW4gYmUgc3RvcmVkIGluIHRoZSBidWZmZXJcbiAqL1xuZnVuY3Rpb24gbWFrZVByb21pc2VCdWZmZXIobGltaXQpIHtcbiAgY29uc3QgYnVmZmVyID0gW107XG5cbiAgZnVuY3Rpb24gaXNSZWFkeSgpIHtcbiAgICByZXR1cm4gbGltaXQgPT09IHVuZGVmaW5lZCB8fCBidWZmZXIubGVuZ3RoIDwgbGltaXQ7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIGEgcHJvbWlzZSBmcm9tIHRoZSBxdWV1ZS5cbiAgICpcbiAgICogQHBhcmFtIHRhc2sgQ2FuIGJlIGFueSBQcm9taXNlTGlrZTxUPlxuICAgKiBAcmV0dXJucyBSZW1vdmVkIHByb21pc2UuXG4gICAqL1xuICBmdW5jdGlvbiByZW1vdmUodGFzaykge1xuICAgIHJldHVybiBidWZmZXIuc3BsaWNlKGJ1ZmZlci5pbmRleE9mKHRhc2spLCAxKVswXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgYSBwcm9taXNlIChyZXByZXNlbnRpbmcgYW4gaW4tZmxpZ2h0IGFjdGlvbikgdG8gdGhlIHF1ZXVlLCBhbmQgc2V0IGl0IHRvIHJlbW92ZSBpdHNlbGYgb24gZnVsZmlsbG1lbnQuXG4gICAqXG4gICAqIEBwYXJhbSB0YXNrUHJvZHVjZXIgQSBmdW5jdGlvbiBwcm9kdWNpbmcgYW55IFByb21pc2VMaWtlPFQ+OyBJbiBwcmV2aW91cyB2ZXJzaW9ucyB0aGlzIHVzZWQgdG8gYmUgYHRhc2s6XG4gICAqICAgICAgICBQcm9taXNlTGlrZTxUPmAsIGJ1dCB1bmRlciB0aGF0IG1vZGVsLCBQcm9taXNlcyB3ZXJlIGluc3RhbnRseSBjcmVhdGVkIG9uIHRoZSBjYWxsLXNpdGUgYW5kIHRoZWlyIGV4ZWN1dG9yXG4gICAqICAgICAgICBmdW5jdGlvbnMgdGhlcmVmb3JlIHJhbiBpbW1lZGlhdGVseS4gVGh1cywgZXZlbiBpZiB0aGUgYnVmZmVyIHdhcyBmdWxsLCB0aGUgYWN0aW9uIHN0aWxsIGhhcHBlbmVkLiBCeVxuICAgKiAgICAgICAgcmVxdWlyaW5nIHRoZSBwcm9taXNlIHRvIGJlIHdyYXBwZWQgaW4gYSBmdW5jdGlvbiwgd2UgY2FuIGRlZmVyIHByb21pc2UgY3JlYXRpb24gdW50aWwgYWZ0ZXIgdGhlIGJ1ZmZlclxuICAgKiAgICAgICAgbGltaXQgY2hlY2suXG4gICAqIEByZXR1cm5zIFRoZSBvcmlnaW5hbCBwcm9taXNlLlxuICAgKi9cbiAgZnVuY3Rpb24gYWRkKHRhc2tQcm9kdWNlcikge1xuICAgIGlmICghaXNSZWFkeSgpKSB7XG4gICAgICByZXR1cm4gcmVqZWN0ZWRTeW5jUHJvbWlzZShuZXcgU2VudHJ5RXJyb3IoJ05vdCBhZGRpbmcgUHJvbWlzZSBiZWNhdXNlIGJ1ZmZlciBsaW1pdCB3YXMgcmVhY2hlZC4nKSk7XG4gICAgfVxuXG4gICAgLy8gc3RhcnQgdGhlIHRhc2sgYW5kIGFkZCBpdHMgcHJvbWlzZSB0byB0aGUgcXVldWVcbiAgICBjb25zdCB0YXNrID0gdGFza1Byb2R1Y2VyKCk7XG4gICAgaWYgKGJ1ZmZlci5pbmRleE9mKHRhc2spID09PSAtMSkge1xuICAgICAgYnVmZmVyLnB1c2godGFzayk7XG4gICAgfVxuICAgIHZvaWQgdGFza1xuICAgICAgLnRoZW4oKCkgPT4gcmVtb3ZlKHRhc2spKVxuICAgICAgLy8gVXNlIGB0aGVuKG51bGwsIHJlamVjdGlvbkhhbmRsZXIpYCByYXRoZXIgdGhhbiBgY2F0Y2gocmVqZWN0aW9uSGFuZGxlcilgIHNvIHRoYXQgd2UgY2FuIHVzZSBgUHJvbWlzZUxpa2VgXG4gICAgICAvLyByYXRoZXIgdGhhbiBgUHJvbWlzZWAuIGBQcm9taXNlTGlrZWAgZG9lc24ndCBoYXZlIGEgYC5jYXRjaGAgbWV0aG9kLCBtYWtpbmcgaXRzIHBvbHlmaWxsIHNtYWxsZXIuIChFUzUgZGlkbid0XG4gICAgICAvLyBoYXZlIHByb21pc2VzLCBzbyBUUyBoYXMgdG8gcG9seWZpbGwgd2hlbiBkb3duLWNvbXBpbGluZy4pXG4gICAgICAudGhlbihudWxsLCAoKSA9PlxuICAgICAgICByZW1vdmUodGFzaykudGhlbihudWxsLCAoKSA9PiB7XG4gICAgICAgICAgLy8gV2UgaGF2ZSB0byBhZGQgYW5vdGhlciBjYXRjaCBoZXJlIGJlY2F1c2UgYHJlbW92ZSgpYCBzdGFydHMgYSBuZXcgcHJvbWlzZSBjaGFpbi5cbiAgICAgICAgfSksXG4gICAgICApO1xuICAgIHJldHVybiB0YXNrO1xuICB9XG5cbiAgLyoqXG4gICAqIFdhaXQgZm9yIGFsbCBwcm9taXNlcyBpbiB0aGUgcXVldWUgdG8gcmVzb2x2ZSBvciBmb3IgdGltZW91dCB0byBleHBpcmUsIHdoaWNoZXZlciBjb21lcyBmaXJzdC5cbiAgICpcbiAgICogQHBhcmFtIHRpbWVvdXQgVGhlIHRpbWUsIGluIG1zLCBhZnRlciB3aGljaCB0byByZXNvbHZlIHRvIGBmYWxzZWAgaWYgdGhlIHF1ZXVlIGlzIHN0aWxsIG5vbi1lbXB0eS4gUGFzc2luZyBgMGAgKG9yXG4gICAqIG5vdCBwYXNzaW5nIGFueXRoaW5nKSB3aWxsIG1ha2UgdGhlIHByb21pc2Ugd2FpdCBhcyBsb25nIGFzIGl0IHRha2VzIGZvciB0aGUgcXVldWUgdG8gZHJhaW4gYmVmb3JlIHJlc29sdmluZyB0b1xuICAgKiBgdHJ1ZWAuXG4gICAqIEByZXR1cm5zIEEgcHJvbWlzZSB3aGljaCB3aWxsIHJlc29sdmUgdG8gYHRydWVgIGlmIHRoZSBxdWV1ZSBpcyBhbHJlYWR5IGVtcHR5IG9yIGRyYWlucyBiZWZvcmUgdGhlIHRpbWVvdXQsIGFuZFxuICAgKiBgZmFsc2VgIG90aGVyd2lzZVxuICAgKi9cbiAgZnVuY3Rpb24gZHJhaW4odGltZW91dCkge1xuICAgIHJldHVybiBuZXcgU3luY1Byb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgbGV0IGNvdW50ZXIgPSBidWZmZXIubGVuZ3RoO1xuXG4gICAgICBpZiAoIWNvdW50ZXIpIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmUodHJ1ZSk7XG4gICAgICB9XG5cbiAgICAgIC8vIHdhaXQgZm9yIGB0aW1lb3V0YCBtcyBhbmQgdGhlbiByZXNvbHZlIHRvIGBmYWxzZWAgKGlmIG5vdCBjYW5jZWxsZWQgZmlyc3QpXG4gICAgICBjb25zdCBjYXB0dXJlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaWYgKHRpbWVvdXQgJiYgdGltZW91dCA+IDApIHtcbiAgICAgICAgICByZXNvbHZlKGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGltZW91dCk7XG5cbiAgICAgIC8vIGlmIGFsbCBwcm9taXNlcyByZXNvbHZlIGluIHRpbWUsIGNhbmNlbCB0aGUgdGltZXIgYW5kIHJlc29sdmUgdG8gYHRydWVgXG4gICAgICBidWZmZXIuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgdm9pZCByZXNvbHZlZFN5bmNQcm9taXNlKGl0ZW0pLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIGlmICghLS1jb3VudGVyKSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQoY2FwdHVyZWRTZXRUaW1lb3V0KTtcbiAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCByZWplY3QpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgICQ6IGJ1ZmZlcixcbiAgICBhZGQsXG4gICAgZHJhaW4sXG4gIH07XG59XG5cbmV4cG9ydCB7IG1ha2VQcm9taXNlQnVmZmVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9taXNlYnVmZmVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/promisebuffer.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/ratelimit.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/ratelimit.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_RETRY_AFTER\": function() { return /* binding */ DEFAULT_RETRY_AFTER; },\n/* harmony export */   \"disabledUntil\": function() { return /* binding */ disabledUntil; },\n/* harmony export */   \"isRateLimited\": function() { return /* binding */ isRateLimited; },\n/* harmony export */   \"parseRetryAfterHeader\": function() { return /* binding */ parseRetryAfterHeader; },\n/* harmony export */   \"updateRateLimits\": function() { return /* binding */ updateRateLimits; }\n/* harmony export */ });\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\n\n//# sourceMappingURL=ratelimit.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vcmF0ZWxpbWl0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBRUEsdUNBQXVDOztBQUV2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxPQUFPO0FBQ3pDO0FBQ0E7QUFDQTs7QUFFQSxtQ0FBbUMsT0FBTztBQUMxQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHFCQUFxQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixXQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRTtBQUNyRTtBQUNBO0FBQ0EsUUFBUTtBQUNSLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRXNHO0FBQ3RHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vcmF0ZWxpbWl0LmpzPzhjODYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW50ZW50aW9uYWxseSBrZWVwaW5nIHRoZSBrZXkgYnJvYWQsIGFzIHdlIGRvbid0IGtub3cgZm9yIHN1cmUgd2hhdCByYXRlIGxpbWl0IGhlYWRlcnMgZ2V0IHJldHVybmVkIGZyb20gYmFja2VuZFxuXG5jb25zdCBERUZBVUxUX1JFVFJZX0FGVEVSID0gNjAgKiAxMDAwOyAvLyA2MCBzZWNvbmRzXG5cbi8qKlxuICogRXh0cmFjdHMgUmV0cnktQWZ0ZXIgdmFsdWUgZnJvbSB0aGUgcmVxdWVzdCBoZWFkZXIgb3IgcmV0dXJucyBkZWZhdWx0IHZhbHVlXG4gKiBAcGFyYW0gaGVhZGVyIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiAnUmV0cnktQWZ0ZXInIGhlYWRlclxuICogQHBhcmFtIG5vdyBjdXJyZW50IHVuaXggdGltZXN0YW1wXG4gKlxuICovXG5mdW5jdGlvbiBwYXJzZVJldHJ5QWZ0ZXJIZWFkZXIoaGVhZGVyLCBub3cgPSBEYXRlLm5vdygpKSB7XG4gIGNvbnN0IGhlYWRlckRlbGF5ID0gcGFyc2VJbnQoYCR7aGVhZGVyfWAsIDEwKTtcbiAgaWYgKCFpc05hTihoZWFkZXJEZWxheSkpIHtcbiAgICByZXR1cm4gaGVhZGVyRGVsYXkgKiAxMDAwO1xuICB9XG5cbiAgY29uc3QgaGVhZGVyRGF0ZSA9IERhdGUucGFyc2UoYCR7aGVhZGVyfWApO1xuICBpZiAoIWlzTmFOKGhlYWRlckRhdGUpKSB7XG4gICAgcmV0dXJuIGhlYWRlckRhdGUgLSBub3c7XG4gIH1cblxuICByZXR1cm4gREVGQVVMVF9SRVRSWV9BRlRFUjtcbn1cblxuLyoqXG4gKiBHZXRzIHRoZSB0aW1lIHRoYXQgdGhlIGdpdmVuIGNhdGVnb3J5IGlzIGRpc2FibGVkIHVudGlsIGZvciByYXRlIGxpbWl0aW5nLlxuICogSW4gY2FzZSBubyBjYXRlZ29yeS1zcGVjaWZpYyBsaW1pdCBpcyBzZXQgYnV0IGEgZ2VuZXJhbCByYXRlIGxpbWl0IGFjcm9zcyBhbGwgY2F0ZWdvcmllcyBpcyBhY3RpdmUsXG4gKiB0aGF0IHRpbWUgaXMgcmV0dXJuZWQuXG4gKlxuICogQHJldHVybiB0aGUgdGltZSBpbiBtcyB0aGF0IHRoZSBjYXRlZ29yeSBpcyBkaXNhYmxlZCB1bnRpbCBvciAwIGlmIHRoZXJlJ3Mgbm8gYWN0aXZlIHJhdGUgbGltaXQuXG4gKi9cbmZ1bmN0aW9uIGRpc2FibGVkVW50aWwobGltaXRzLCBjYXRlZ29yeSkge1xuICByZXR1cm4gbGltaXRzW2NhdGVnb3J5XSB8fCBsaW1pdHMuYWxsIHx8IDA7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgY2F0ZWdvcnkgaXMgcmF0ZSBsaW1pdGVkXG4gKi9cbmZ1bmN0aW9uIGlzUmF0ZUxpbWl0ZWQobGltaXRzLCBjYXRlZ29yeSwgbm93ID0gRGF0ZS5ub3coKSkge1xuICByZXR1cm4gZGlzYWJsZWRVbnRpbChsaW1pdHMsIGNhdGVnb3J5KSA+IG5vdztcbn1cblxuLyoqXG4gKiBVcGRhdGUgcmF0ZWxpbWl0cyBmcm9tIGluY29taW5nIGhlYWRlcnMuXG4gKlxuICogQHJldHVybiB0aGUgdXBkYXRlZCBSYXRlTGltaXRzIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gdXBkYXRlUmF0ZUxpbWl0cyhcbiAgbGltaXRzLFxuICB7IHN0YXR1c0NvZGUsIGhlYWRlcnMgfSxcbiAgbm93ID0gRGF0ZS5ub3coKSxcbikge1xuICBjb25zdCB1cGRhdGVkUmF0ZUxpbWl0cyA9IHtcbiAgICAuLi5saW1pdHMsXG4gIH07XG5cbiAgLy8gXCJUaGUgbmFtZSBpcyBjYXNlLWluc2Vuc2l0aXZlLlwiXG4gIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9IZWFkZXJzL2dldFxuICBjb25zdCByYXRlTGltaXRIZWFkZXIgPSBoZWFkZXJzICYmIGhlYWRlcnNbJ3gtc2VudHJ5LXJhdGUtbGltaXRzJ107XG4gIGNvbnN0IHJldHJ5QWZ0ZXJIZWFkZXIgPSBoZWFkZXJzICYmIGhlYWRlcnNbJ3JldHJ5LWFmdGVyJ107XG5cbiAgaWYgKHJhdGVMaW1pdEhlYWRlcikge1xuICAgIC8qKlxuICAgICAqIHJhdGUgbGltaXQgaGVhZGVycyBhcmUgb2YgdGhlIGZvcm1cbiAgICAgKiAgICAgPGhlYWRlcj4sPGhlYWRlcj4sLi5cbiAgICAgKiB3aGVyZSBlYWNoIDxoZWFkZXI+IGlzIG9mIHRoZSBmb3JtXG4gICAgICogICAgIDxyZXRyeV9hZnRlcj46IDxjYXRlZ29yaWVzPjogPHNjb3BlPjogPHJlYXNvbl9jb2RlPlxuICAgICAqIHdoZXJlXG4gICAgICogICAgIDxyZXRyeV9hZnRlcj4gaXMgYSBkZWxheSBpbiBzZWNvbmRzXG4gICAgICogICAgIDxjYXRlZ29yaWVzPiBpcyB0aGUgZXZlbnQgdHlwZShzKSAoZXJyb3IsIHRyYW5zYWN0aW9uLCBldGMpIGJlaW5nIHJhdGUgbGltaXRlZCBhbmQgaXMgb2YgdGhlIGZvcm1cbiAgICAgKiAgICAgICAgIDxjYXRlZ29yeT47PGNhdGVnb3J5PjsuLi5cbiAgICAgKiAgICAgPHNjb3BlPiBpcyB3aGF0J3MgYmVpbmcgbGltaXRlZCAob3JnLCBwcm9qZWN0LCBvciBrZXkpIC0gaWdub3JlZCBieSBTREtcbiAgICAgKiAgICAgPHJlYXNvbl9jb2RlPiBpcyBhbiBhcmJpdHJhcnkgc3RyaW5nIGxpa2UgXCJvcmdfcXVvdGFcIiAtIGlnbm9yZWQgYnkgU0RLXG4gICAgICovXG4gICAgZm9yIChjb25zdCBsaW1pdCBvZiByYXRlTGltaXRIZWFkZXIudHJpbSgpLnNwbGl0KCcsJykpIHtcbiAgICAgIGNvbnN0IFtyZXRyeUFmdGVyLCBjYXRlZ29yaWVzXSA9IGxpbWl0LnNwbGl0KCc6JywgMik7XG4gICAgICBjb25zdCBoZWFkZXJEZWxheSA9IHBhcnNlSW50KHJldHJ5QWZ0ZXIsIDEwKTtcbiAgICAgIGNvbnN0IGRlbGF5ID0gKCFpc05hTihoZWFkZXJEZWxheSkgPyBoZWFkZXJEZWxheSA6IDYwKSAqIDEwMDA7IC8vIDYwc2VjIGRlZmF1bHRcbiAgICAgIGlmICghY2F0ZWdvcmllcykge1xuICAgICAgICB1cGRhdGVkUmF0ZUxpbWl0cy5hbGwgPSBub3cgKyBkZWxheTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAoY29uc3QgY2F0ZWdvcnkgb2YgY2F0ZWdvcmllcy5zcGxpdCgnOycpKSB7XG4gICAgICAgICAgdXBkYXRlZFJhdGVMaW1pdHNbY2F0ZWdvcnldID0gbm93ICsgZGVsYXk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSBpZiAocmV0cnlBZnRlckhlYWRlcikge1xuICAgIHVwZGF0ZWRSYXRlTGltaXRzLmFsbCA9IG5vdyArIHBhcnNlUmV0cnlBZnRlckhlYWRlcihyZXRyeUFmdGVySGVhZGVyLCBub3cpO1xuICB9IGVsc2UgaWYgKHN0YXR1c0NvZGUgPT09IDQyOSkge1xuICAgIHVwZGF0ZWRSYXRlTGltaXRzLmFsbCA9IG5vdyArIDYwICogMTAwMDtcbiAgfVxuXG4gIHJldHVybiB1cGRhdGVkUmF0ZUxpbWl0cztcbn1cblxuZXhwb3J0IHsgREVGQVVMVF9SRVRSWV9BRlRFUiwgZGlzYWJsZWRVbnRpbCwgaXNSYXRlTGltaXRlZCwgcGFyc2VSZXRyeUFmdGVySGVhZGVyLCB1cGRhdGVSYXRlTGltaXRzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yYXRlbGltaXQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/ratelimit.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/severity.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/severity.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"severityFromString\": function() { return /* binding */ severityFromString; },\n/* harmony export */   \"severityLevelFromString\": function() { return /* binding */ severityLevelFromString; },\n/* harmony export */   \"validSeverityLevels\": function() { return /* binding */ validSeverityLevels; }\n/* harmony export */ });\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\n\n//# sourceMappingURL=severity.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc2V2ZXJpdHkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0Esa0VBQWtFLGdCQUFnQjtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0RTtBQUM1RSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL3NldmVyaXR5LmpzP2M1ODEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTm90ZTogSWRlYWxseSB0aGUgYFNldmVyaXR5TGV2ZWxgIHR5cGUgd291bGQgYmUgZGVyaXZlZCBmcm9tIGB2YWxpZFNldmVyaXR5TGV2ZWxzYCwgYnV0IHRoYXQgd291bGQgbWVhbiBlaXRoZXJcbi8vXG4vLyBhKSBtb3ZpbmcgYHZhbGlkU2V2ZXJpdHlMZXZlbHNgIHRvIGBAc2VudHJ5L3R5cGVzYCxcbi8vIGIpIG1vdmluZyB0aGVgU2V2ZXJpdHlMZXZlbGAgdHlwZSBoZXJlLCBvclxuLy8gYykgaW1wb3J0aW5nIGB2YWxpZFNldmVyaXR5TGV2ZWxzYCBmcm9tIGhlcmUgaW50byBgQHNlbnRyeS90eXBlc2AuXG4vL1xuLy8gT3B0aW9uIEEgd291bGQgbWFrZSBgQHNlbnRyeS90eXBlc2AgYSBydW50aW1lIGRlcGVuZGVuY3kgb2YgYEBzZW50cnkvdXRpbHNgIChub3QgZ29vZCksIGFuZCBvcHRpb25zIEIgYW5kIEMgd291bGRcbi8vIGNyZWF0ZSBhIGNpcmN1bGFyIGRlcGVuZGVuY3kgYmV0d2VlbiBgQHNlbnRyeS90eXBlc2AgYW5kIGBAc2VudHJ5L3V0aWxzYCAoYWxzbyBub3QgZ29vZCkuIFNvIGEgVE9ETyBhY2NvbXBhbnlpbmcgdGhlXG4vLyB0eXBlLCByZW1pbmRpbmcgYW55b25lIHdobyBjaGFuZ2VzIGl0IHRvIGNoYW5nZSB0aGlzIGxpc3QgYWxzbywgd2lsbCBoYXZlIHRvIGRvLlxuXG5jb25zdCB2YWxpZFNldmVyaXR5TGV2ZWxzID0gWydmYXRhbCcsICdlcnJvcicsICd3YXJuaW5nJywgJ2xvZycsICdpbmZvJywgJ2RlYnVnJ107XG5cbi8qKlxuICogQ29udmVydHMgYSBzdHJpbmctYmFzZWQgbGV2ZWwgaW50byBhIG1lbWJlciBvZiB0aGUgZGVwcmVjYXRlZCB7QGxpbmsgU2V2ZXJpdHl9IGVudW0uXG4gKlxuICogQGRlcHJlY2F0ZWQgYHNldmVyaXR5RnJvbVN0cmluZ2AgaXMgZGVwcmVjYXRlZC4gUGxlYXNlIHVzZSBgc2V2ZXJpdHlMZXZlbEZyb21TdHJpbmdgIGluc3RlYWQuXG4gKlxuICogQHBhcmFtIGxldmVsIFN0cmluZyByZXByZXNlbnRhdGlvbiBvZiBTZXZlcml0eVxuICogQHJldHVybnMgU2V2ZXJpdHlcbiAqL1xuZnVuY3Rpb24gc2V2ZXJpdHlGcm9tU3RyaW5nKGxldmVsKSB7XG4gIHJldHVybiBzZXZlcml0eUxldmVsRnJvbVN0cmluZyhsZXZlbCkgO1xufVxuXG4vKipcbiAqIENvbnZlcnRzIGEgc3RyaW5nLWJhc2VkIGxldmVsIGludG8gYSBgU2V2ZXJpdHlMZXZlbGAsIG5vcm1hbGl6aW5nIGl0IGFsb25nIHRoZSB3YXkuXG4gKlxuICogQHBhcmFtIGxldmVsIFN0cmluZyByZXByZXNlbnRhdGlvbiBvZiBkZXNpcmVkIGBTZXZlcml0eUxldmVsYC5cbiAqIEByZXR1cm5zIFRoZSBgU2V2ZXJpdHlMZXZlbGAgY29ycmVzcG9uZGluZyB0byB0aGUgZ2l2ZW4gc3RyaW5nLCBvciAnbG9nJyBpZiB0aGUgc3RyaW5nIGlzbid0IGEgdmFsaWQgbGV2ZWwuXG4gKi9cbmZ1bmN0aW9uIHNldmVyaXR5TGV2ZWxGcm9tU3RyaW5nKGxldmVsKSB7XG4gIHJldHVybiAobGV2ZWwgPT09ICd3YXJuJyA/ICd3YXJuaW5nJyA6IHZhbGlkU2V2ZXJpdHlMZXZlbHMuaW5jbHVkZXMobGV2ZWwpID8gbGV2ZWwgOiAnbG9nJykgO1xufVxuXG5leHBvcnQgeyBzZXZlcml0eUZyb21TdHJpbmcsIHNldmVyaXR5TGV2ZWxGcm9tU3RyaW5nLCB2YWxpZFNldmVyaXR5TGV2ZWxzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXZlcml0eS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/severity.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/stacktrace.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/stacktrace.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createStackParser\": function() { return /* binding */ createStackParser; },\n/* harmony export */   \"getFunctionName\": function() { return /* binding */ getFunctionName; },\n/* harmony export */   \"nodeStackLineParser\": function() { return /* binding */ nodeStackLineParser; },\n/* harmony export */   \"stackParserFromStackParserOptions\": function() { return /* binding */ stackParserFromStackParserOptions; },\n/* harmony export */   \"stripSentryFramesAndReverse\": function() { return /* binding */ stripSentryFramesAndReverse; }\n/* harmony export */ });\n/* harmony import */ var _node_stack_trace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node-stack-trace.js */ \"./node_modules/@sentry/utils/esm/node-stack-trace.js\");\n\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = stack.slice(0, STACKTRACE_FRAME_LIMIT);\n\n  const lastFrameFunction = localStack[localStack.length - 1].function;\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (lastFrameFunction && /sentryWrapped/.test(lastFrameFunction)) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  const firstFrameFunction = localStack[localStack.length - 1].function;\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (firstFrameFunction && /captureMessage|captureException/.test(firstFrameFunction)) {\n    localStack.pop();\n  }\n\n  return localStack.map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, (0,_node_stack_trace_js__WEBPACK_IMPORTED_MODULE_0__.node)(getModule)];\n}\n\n\n//# sourceMappingURL=stacktrace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3RhY2t0cmFjZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBNkM7O0FBRTdDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDRCQUE0QixrQkFBa0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsMERBQUk7QUFDbEI7O0FBRW1JO0FBQ25JIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3RhY2t0cmFjZS5qcz9hNTE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG5vZGUgfSBmcm9tICcuL25vZGUtc3RhY2stdHJhY2UuanMnO1xuXG5jb25zdCBTVEFDS1RSQUNFX0ZSQU1FX0xJTUlUID0gNTA7XG4vLyBVc2VkIHRvIHNhbml0aXplIHdlYnBhY2sgKGVycm9yOiAqKSB3cmFwcGVkIHN0YWNrIGVycm9yc1xuY29uc3QgV0VCUEFDS19FUlJPUl9SRUdFWFAgPSAvXFwoZXJyb3I6ICguKilcXCkvO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBzdGFjayBwYXJzZXIgd2l0aCB0aGUgc3VwcGxpZWQgbGluZSBwYXJzZXJzXG4gKlxuICogU3RhY2tGcmFtZXMgYXJlIHJldHVybmVkIGluIHRoZSBjb3JyZWN0IG9yZGVyIGZvciBTZW50cnkgRXhjZXB0aW9uXG4gKiBmcmFtZXMgYW5kIHdpdGggU2VudHJ5IFNESyBpbnRlcm5hbCBmcmFtZXMgcmVtb3ZlZCBmcm9tIHRoZSB0b3AgYW5kIGJvdHRvbVxuICpcbiAqL1xuZnVuY3Rpb24gY3JlYXRlU3RhY2tQYXJzZXIoLi4ucGFyc2Vycykge1xuICBjb25zdCBzb3J0ZWRQYXJzZXJzID0gcGFyc2Vycy5zb3J0KChhLCBiKSA9PiBhWzBdIC0gYlswXSkubWFwKHAgPT4gcFsxXSk7XG5cbiAgcmV0dXJuIChzdGFjaywgc2tpcEZpcnN0ID0gMCkgPT4ge1xuICAgIGNvbnN0IGZyYW1lcyA9IFtdO1xuICAgIGNvbnN0IGxpbmVzID0gc3RhY2suc3BsaXQoJ1xcbicpO1xuXG4gICAgZm9yIChsZXQgaSA9IHNraXBGaXJzdDsgaSA8IGxpbmVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBsaW5lID0gbGluZXNbaV07XG4gICAgICAvLyBJZ25vcmUgbGluZXMgb3ZlciAxa2IgYXMgdGhleSBhcmUgdW5saWtlbHkgdG8gYmUgc3RhY2sgZnJhbWVzLlxuICAgICAgLy8gTWFueSBvZiB0aGUgcmVndWxhciBleHByZXNzaW9ucyB1c2UgYmFja3RyYWNraW5nIHdoaWNoIHJlc3VsdHMgaW4gcnVuIHRpbWUgdGhhdCBpbmNyZWFzZXMgZXhwb25lbnRpYWxseSB3aXRoXG4gICAgICAvLyBpbnB1dCBzaXplLiBIdWdlIHN0cmluZ3MgY2FuIHJlc3VsdCBpbiBoYW5ncy9EZW5pYWwgb2YgU2VydmljZTpcbiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzIyODZcbiAgICAgIGlmIChsaW5lLmxlbmd0aCA+IDEwMjQpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzU0NTlcbiAgICAgIC8vIFJlbW92ZSB3ZWJwYWNrIChlcnJvcjogKikgd3JhcHBlcnNcbiAgICAgIGNvbnN0IGNsZWFuZWRMaW5lID0gV0VCUEFDS19FUlJPUl9SRUdFWFAudGVzdChsaW5lKSA/IGxpbmUucmVwbGFjZShXRUJQQUNLX0VSUk9SX1JFR0VYUCwgJyQxJykgOiBsaW5lO1xuXG4gICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3NlbnRyeS1qYXZhc2NyaXB0L2lzc3Vlcy83ODEzXG4gICAgICAvLyBTa2lwIEVycm9yOiBsaW5lc1xuICAgICAgaWYgKGNsZWFuZWRMaW5lLm1hdGNoKC9cXFMqRXJyb3I6IC8pKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGNvbnN0IHBhcnNlciBvZiBzb3J0ZWRQYXJzZXJzKSB7XG4gICAgICAgIGNvbnN0IGZyYW1lID0gcGFyc2VyKGNsZWFuZWRMaW5lKTtcblxuICAgICAgICBpZiAoZnJhbWUpIHtcbiAgICAgICAgICBmcmFtZXMucHVzaChmcmFtZSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGZyYW1lcy5sZW5ndGggPj0gU1RBQ0tUUkFDRV9GUkFNRV9MSU1JVCkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc3RyaXBTZW50cnlGcmFtZXNBbmRSZXZlcnNlKGZyYW1lcyk7XG4gIH07XG59XG5cbi8qKlxuICogR2V0cyBhIHN0YWNrIHBhcnNlciBpbXBsZW1lbnRhdGlvbiBmcm9tIE9wdGlvbnMuc3RhY2tQYXJzZXJcbiAqIEBzZWUgT3B0aW9uc1xuICpcbiAqIElmIG9wdGlvbnMgY29udGFpbnMgYW4gYXJyYXkgb2YgbGluZSBwYXJzZXJzLCBpdCBpcyBjb252ZXJ0ZWQgaW50byBhIHBhcnNlclxuICovXG5mdW5jdGlvbiBzdGFja1BhcnNlckZyb21TdGFja1BhcnNlck9wdGlvbnMoc3RhY2tQYXJzZXIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoc3RhY2tQYXJzZXIpKSB7XG4gICAgcmV0dXJuIGNyZWF0ZVN0YWNrUGFyc2VyKC4uLnN0YWNrUGFyc2VyKTtcbiAgfVxuICByZXR1cm4gc3RhY2tQYXJzZXI7XG59XG5cbi8qKlxuICogUmVtb3ZlcyBTZW50cnkgZnJhbWVzIGZyb20gdGhlIHRvcCBhbmQgYm90dG9tIG9mIHRoZSBzdGFjayBpZiBwcmVzZW50IGFuZCBlbmZvcmNlcyBhIGxpbWl0IG9mIG1heCBudW1iZXIgb2YgZnJhbWVzLlxuICogQXNzdW1lcyBzdGFjayBpbnB1dCBpcyBvcmRlcmVkIGZyb20gdG9wIHRvIGJvdHRvbSBhbmQgcmV0dXJucyB0aGUgcmV2ZXJzZSByZXByZXNlbnRhdGlvbiBzbyBjYWxsIHNpdGUgb2YgdGhlXG4gKiBmdW5jdGlvbiB0aGF0IGNhdXNlZCB0aGUgY3Jhc2ggaXMgdGhlIGxhc3QgZnJhbWUgaW4gdGhlIGFycmF5LlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBzdHJpcFNlbnRyeUZyYW1lc0FuZFJldmVyc2Uoc3RhY2spIHtcbiAgaWYgKCFzdGFjay5sZW5ndGgpIHtcbiAgICByZXR1cm4gW107XG4gIH1cblxuICBjb25zdCBsb2NhbFN0YWNrID0gc3RhY2suc2xpY2UoMCwgU1RBQ0tUUkFDRV9GUkFNRV9MSU1JVCk7XG5cbiAgY29uc3QgbGFzdEZyYW1lRnVuY3Rpb24gPSBsb2NhbFN0YWNrW2xvY2FsU3RhY2subGVuZ3RoIC0gMV0uZnVuY3Rpb247XG4gIC8vIElmIHN0YWNrIHN0YXJ0cyB3aXRoIG9uZSBvZiBvdXIgQVBJIGNhbGxzLCByZW1vdmUgaXQgKHN0YXJ0cywgbWVhbmluZyBpdCdzIHRoZSB0b3Agb2YgdGhlIHN0YWNrIC0gYWthIGxhc3QgY2FsbClcbiAgaWYgKGxhc3RGcmFtZUZ1bmN0aW9uICYmIC9zZW50cnlXcmFwcGVkLy50ZXN0KGxhc3RGcmFtZUZ1bmN0aW9uKSkge1xuICAgIGxvY2FsU3RhY2sucG9wKCk7XG4gIH1cblxuICAvLyBSZXZlcnNpbmcgaW4gdGhlIG1pZGRsZSBvZiB0aGUgcHJvY2VkdXJlIGFsbG93cyB1cyB0byBqdXN0IHBvcCB0aGUgdmFsdWVzIG9mZiB0aGUgc3RhY2tcbiAgbG9jYWxTdGFjay5yZXZlcnNlKCk7XG5cbiAgY29uc3QgZmlyc3RGcmFtZUZ1bmN0aW9uID0gbG9jYWxTdGFja1tsb2NhbFN0YWNrLmxlbmd0aCAtIDFdLmZ1bmN0aW9uO1xuICAvLyBJZiBzdGFjayBlbmRzIHdpdGggb25lIG9mIG91ciBpbnRlcm5hbCBBUEkgY2FsbHMsIHJlbW92ZSBpdCAoZW5kcywgbWVhbmluZyBpdCdzIHRoZSBib3R0b20gb2YgdGhlIHN0YWNrIC0gYWthIHRvcC1tb3N0IGNhbGwpXG4gIGlmIChmaXJzdEZyYW1lRnVuY3Rpb24gJiYgL2NhcHR1cmVNZXNzYWdlfGNhcHR1cmVFeGNlcHRpb24vLnRlc3QoZmlyc3RGcmFtZUZ1bmN0aW9uKSkge1xuICAgIGxvY2FsU3RhY2sucG9wKCk7XG4gIH1cblxuICByZXR1cm4gbG9jYWxTdGFjay5tYXAoZnJhbWUgPT4gKHtcbiAgICAuLi5mcmFtZSxcbiAgICBmaWxlbmFtZTogZnJhbWUuZmlsZW5hbWUgfHwgbG9jYWxTdGFja1tsb2NhbFN0YWNrLmxlbmd0aCAtIDFdLmZpbGVuYW1lLFxuICAgIGZ1bmN0aW9uOiBmcmFtZS5mdW5jdGlvbiB8fCAnPycsXG4gIH0pKTtcbn1cblxuY29uc3QgZGVmYXVsdEZ1bmN0aW9uTmFtZSA9ICc8YW5vbnltb3VzPic7XG5cbi8qKlxuICogU2FmZWx5IGV4dHJhY3QgZnVuY3Rpb24gbmFtZSBmcm9tIGl0c2VsZlxuICovXG5mdW5jdGlvbiBnZXRGdW5jdGlvbk5hbWUoZm4pIHtcbiAgdHJ5IHtcbiAgICBpZiAoIWZuIHx8IHR5cGVvZiBmbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIGRlZmF1bHRGdW5jdGlvbk5hbWU7XG4gICAgfVxuICAgIHJldHVybiBmbi5uYW1lIHx8IGRlZmF1bHRGdW5jdGlvbk5hbWU7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBKdXN0IGFjY2Vzc2luZyBjdXN0b20gcHJvcHMgaW4gc29tZSBTZWxlbml1bSBlbnZpcm9ubWVudHNcbiAgICAvLyBjYW4gY2F1c2UgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXhjZXB0aW9uIChzZWUgcmF2ZW4tanMjNDk1KS5cbiAgICByZXR1cm4gZGVmYXVsdEZ1bmN0aW9uTmFtZTtcbiAgfVxufVxuXG4vKipcbiAqIE5vZGUuanMgc3RhY2sgbGluZSBwYXJzZXJcbiAqXG4gKiBUaGlzIGlzIGluIEBzZW50cnkvdXRpbHMgc28gaXQgY2FuIGJlIHVzZWQgZnJvbSB0aGUgRWxlY3Ryb24gU0RLIGluIHRoZSBicm93c2VyIGZvciB3aGVuIGBub2RlSW50ZWdyYXRpb24gPT0gdHJ1ZWAuXG4gKiBUaGlzIGFsbG93cyBpdCB0byBiZSB1c2VkIHdpdGhvdXQgcmVmZXJlbmNpbmcgb3IgaW1wb3J0aW5nIGFueSBub2RlIHNwZWNpZmljIGNvZGUgd2hpY2ggY2F1c2VzIGJ1bmRsZXJzIHRvIGNvbXBsYWluXG4gKi9cbmZ1bmN0aW9uIG5vZGVTdGFja0xpbmVQYXJzZXIoZ2V0TW9kdWxlKSB7XG4gIHJldHVybiBbOTAsIG5vZGUoZ2V0TW9kdWxlKV07XG59XG5cbmV4cG9ydCB7IGNyZWF0ZVN0YWNrUGFyc2VyLCBnZXRGdW5jdGlvbk5hbWUsIG5vZGVTdGFja0xpbmVQYXJzZXIsIHN0YWNrUGFyc2VyRnJvbVN0YWNrUGFyc2VyT3B0aW9ucywgc3RyaXBTZW50cnlGcmFtZXNBbmRSZXZlcnNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGFja3RyYWNlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/stacktrace.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/string.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/string.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isMatchingPattern\": function() { return /* binding */ isMatchingPattern; },\n/* harmony export */   \"safeJoin\": function() { return /* binding */ safeJoin; },\n/* harmony export */   \"snipLine\": function() { return /* binding */ snipLine; },\n/* harmony export */   \"stringMatchesSomePattern\": function() { return /* binding */ stringMatchesSomePattern; },\n/* harmony export */   \"truncate\": function() { return /* binding */ truncate; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(value)) {\n    return false;\n  }\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isRegExp)(pattern)) {\n    return pattern.test(value);\n  }\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\n\n//# sourceMappingURL=string.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3RyaW5nLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE2Qzs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxrQkFBa0I7QUFDeEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSxFQUFFLFFBQVE7QUFDakM7QUFDQTtBQUNBLGtCQUFrQixLQUFLO0FBQ3ZCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLGdEQUFRO0FBQ2Y7QUFDQTs7QUFFQSxNQUFNLGdEQUFRO0FBQ2Q7QUFDQTtBQUNBLE1BQU0sZ0RBQVE7QUFDZDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFcUY7QUFDckYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9zdHJpbmcuanM/ZmJkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1N0cmluZywgaXNSZWdFeHAgfSBmcm9tICcuL2lzLmpzJztcblxuLyoqXG4gKiBUcnVuY2F0ZXMgZ2l2ZW4gc3RyaW5nIHRvIHRoZSBtYXhpbXVtIGNoYXJhY3RlcnMgY291bnRcbiAqXG4gKiBAcGFyYW0gc3RyIEFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIHNlcmlhbGl6YWJsZSB2YWx1ZXNcbiAqIEBwYXJhbSBtYXggTWF4aW11bSBudW1iZXIgb2YgY2hhcmFjdGVycyBpbiB0cnVuY2F0ZWQgc3RyaW5nICgwID0gdW5saW1pdGVkKVxuICogQHJldHVybnMgc3RyaW5nIEVuY29kZWRcbiAqL1xuZnVuY3Rpb24gdHJ1bmNhdGUoc3RyLCBtYXggPSAwKSB7XG4gIGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJyB8fCBtYXggPT09IDApIHtcbiAgICByZXR1cm4gc3RyO1xuICB9XG4gIHJldHVybiBzdHIubGVuZ3RoIDw9IG1heCA/IHN0ciA6IGAke3N0ci5zbGljZSgwLCBtYXgpfS4uLmA7XG59XG5cbi8qKlxuICogVGhpcyBpcyBiYXNpY2FsbHkganVzdCBgdHJpbV9saW5lYCBmcm9tXG4gKiBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3NlbnRyeS9ibG9iL21hc3Rlci9zcmMvc2VudHJ5L2xhbmcvamF2YXNjcmlwdC9wcm9jZXNzb3IucHkjTDY3XG4gKlxuICogQHBhcmFtIHN0ciBBbiBvYmplY3QgdGhhdCBjb250YWlucyBzZXJpYWxpemFibGUgdmFsdWVzXG4gKiBAcGFyYW0gbWF4IE1heGltdW0gbnVtYmVyIG9mIGNoYXJhY3RlcnMgaW4gdHJ1bmNhdGVkIHN0cmluZ1xuICogQHJldHVybnMgc3RyaW5nIEVuY29kZWRcbiAqL1xuZnVuY3Rpb24gc25pcExpbmUobGluZSwgY29sbm8pIHtcbiAgbGV0IG5ld0xpbmUgPSBsaW5lO1xuICBjb25zdCBsaW5lTGVuZ3RoID0gbmV3TGluZS5sZW5ndGg7XG4gIGlmIChsaW5lTGVuZ3RoIDw9IDE1MCkge1xuICAgIHJldHVybiBuZXdMaW5lO1xuICB9XG4gIGlmIChjb2xubyA+IGxpbmVMZW5ndGgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICBjb2xubyA9IGxpbmVMZW5ndGg7XG4gIH1cblxuICBsZXQgc3RhcnQgPSBNYXRoLm1heChjb2xubyAtIDYwLCAwKTtcbiAgaWYgKHN0YXJ0IDwgNSkge1xuICAgIHN0YXJ0ID0gMDtcbiAgfVxuXG4gIGxldCBlbmQgPSBNYXRoLm1pbihzdGFydCArIDE0MCwgbGluZUxlbmd0aCk7XG4gIGlmIChlbmQgPiBsaW5lTGVuZ3RoIC0gNSkge1xuICAgIGVuZCA9IGxpbmVMZW5ndGg7XG4gIH1cbiAgaWYgKGVuZCA9PT0gbGluZUxlbmd0aCkge1xuICAgIHN0YXJ0ID0gTWF0aC5tYXgoZW5kIC0gMTQwLCAwKTtcbiAgfVxuXG4gIG5ld0xpbmUgPSBuZXdMaW5lLnNsaWNlKHN0YXJ0LCBlbmQpO1xuICBpZiAoc3RhcnQgPiAwKSB7XG4gICAgbmV3TGluZSA9IGAne3NuaXB9ICR7bmV3TGluZX1gO1xuICB9XG4gIGlmIChlbmQgPCBsaW5lTGVuZ3RoKSB7XG4gICAgbmV3TGluZSArPSAnIHtzbmlwfSc7XG4gIH1cblxuICByZXR1cm4gbmV3TGluZTtcbn1cblxuLyoqXG4gKiBKb2luIHZhbHVlcyBpbiBhcnJheVxuICogQHBhcmFtIGlucHV0IGFycmF5IG9mIHZhbHVlcyB0byBiZSBqb2luZWQgdG9nZXRoZXJcbiAqIEBwYXJhbSBkZWxpbWl0ZXIgc3RyaW5nIHRvIGJlIHBsYWNlZCBpbi1iZXR3ZWVuIHZhbHVlc1xuICogQHJldHVybnMgSm9pbmVkIHZhbHVlc1xuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuZnVuY3Rpb24gc2FmZUpvaW4oaW5wdXQsIGRlbGltaXRlcikge1xuICBpZiAoIUFycmF5LmlzQXJyYXkoaW5wdXQpKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgY29uc3Qgb3V0cHV0ID0gW107XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvcHJlZmVyLWZvci1vZlxuICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0Lmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgdmFsdWUgPSBpbnB1dFtpXTtcbiAgICB0cnkge1xuICAgICAgb3V0cHV0LnB1c2goU3RyaW5nKHZhbHVlKSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgb3V0cHV0LnB1c2goJ1t2YWx1ZSBjYW5ub3QgYmUgc2VyaWFsaXplZF0nKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gb3V0cHV0LmpvaW4oZGVsaW1pdGVyKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgdGhlIGdpdmVuIHZhbHVlIG1hdGNoZXMgYSByZWdleCBvciBzdHJpbmdcbiAqXG4gKiBAcGFyYW0gdmFsdWUgVGhlIHN0cmluZyB0byB0ZXN0XG4gKiBAcGFyYW0gcGF0dGVybiBFaXRoZXIgYSByZWdleCBvciBhIHN0cmluZyBhZ2FpbnN0IHdoaWNoIGB2YWx1ZWAgd2lsbCBiZSBtYXRjaGVkXG4gKiBAcGFyYW0gcmVxdWlyZUV4YWN0U3RyaW5nTWF0Y2ggSWYgdHJ1ZSwgYHZhbHVlYCBtdXN0IG1hdGNoIGBwYXR0ZXJuYCBleGFjdGx5LiBJZiBmYWxzZSwgYHZhbHVlYCB3aWxsIG1hdGNoXG4gKiBgcGF0dGVybmAgaWYgaXQgY29udGFpbnMgYHBhdHRlcm5gLiBPbmx5IGFwcGxpZXMgdG8gc3RyaW5nLXR5cGUgcGF0dGVybnMuXG4gKi9cbmZ1bmN0aW9uIGlzTWF0Y2hpbmdQYXR0ZXJuKFxuICB2YWx1ZSxcbiAgcGF0dGVybixcbiAgcmVxdWlyZUV4YWN0U3RyaW5nTWF0Y2ggPSBmYWxzZSxcbikge1xuICBpZiAoIWlzU3RyaW5nKHZhbHVlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmIChpc1JlZ0V4cChwYXR0ZXJuKSkge1xuICAgIHJldHVybiBwYXR0ZXJuLnRlc3QodmFsdWUpO1xuICB9XG4gIGlmIChpc1N0cmluZyhwYXR0ZXJuKSkge1xuICAgIHJldHVybiByZXF1aXJlRXhhY3RTdHJpbmdNYXRjaCA/IHZhbHVlID09PSBwYXR0ZXJuIDogdmFsdWUuaW5jbHVkZXMocGF0dGVybik7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbi8qKlxuICogVGVzdCB0aGUgZ2l2ZW4gc3RyaW5nIGFnYWluc3QgYW4gYXJyYXkgb2Ygc3RyaW5ncyBhbmQgcmVnZXhlcy4gQnkgZGVmYXVsdCwgc3RyaW5nIG1hdGNoaW5nIGlzIGRvbmUgb24gYVxuICogc3Vic3RyaW5nLWluY2x1c2lvbiBiYXNpcyByYXRoZXIgdGhhbiBhIHN0cmljdCBlcXVhbGl0eSBiYXNpc1xuICpcbiAqIEBwYXJhbSB0ZXN0U3RyaW5nIFRoZSBzdHJpbmcgdG8gdGVzdFxuICogQHBhcmFtIHBhdHRlcm5zIFRoZSBwYXR0ZXJucyBhZ2FpbnN0IHdoaWNoIHRvIHRlc3QgdGhlIHN0cmluZ1xuICogQHBhcmFtIHJlcXVpcmVFeGFjdFN0cmluZ01hdGNoIElmIHRydWUsIGB0ZXN0U3RyaW5nYCBtdXN0IG1hdGNoIG9uZSBvZiB0aGUgZ2l2ZW4gc3RyaW5nIHBhdHRlcm5zIGV4YWN0bHkgaW4gb3JkZXIgdG9cbiAqIGNvdW50LiBJZiBmYWxzZSwgYHRlc3RTdHJpbmdgIHdpbGwgbWF0Y2ggYSBzdHJpbmcgcGF0dGVybiBpZiBpdCBjb250YWlucyB0aGF0IHBhdHRlcm4uXG4gKiBAcmV0dXJuc1xuICovXG5mdW5jdGlvbiBzdHJpbmdNYXRjaGVzU29tZVBhdHRlcm4oXG4gIHRlc3RTdHJpbmcsXG4gIHBhdHRlcm5zID0gW10sXG4gIHJlcXVpcmVFeGFjdFN0cmluZ01hdGNoID0gZmFsc2UsXG4pIHtcbiAgcmV0dXJuIHBhdHRlcm5zLnNvbWUocGF0dGVybiA9PiBpc01hdGNoaW5nUGF0dGVybih0ZXN0U3RyaW5nLCBwYXR0ZXJuLCByZXF1aXJlRXhhY3RTdHJpbmdNYXRjaCkpO1xufVxuXG5leHBvcnQgeyBpc01hdGNoaW5nUGF0dGVybiwgc2FmZUpvaW4sIHNuaXBMaW5lLCBzdHJpbmdNYXRjaGVzU29tZVBhdHRlcm4sIHRydW5jYXRlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHJpbmcuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/string.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/supports.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/supports.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isNativeFetch\": function() { return /* binding */ isNativeFetch; },\n/* harmony export */   \"supportsDOMError\": function() { return /* binding */ supportsDOMError; },\n/* harmony export */   \"supportsDOMException\": function() { return /* binding */ supportsDOMException; },\n/* harmony export */   \"supportsErrorEvent\": function() { return /* binding */ supportsErrorEvent; },\n/* harmony export */   \"supportsFetch\": function() { return /* binding */ supportsFetch; },\n/* harmony export */   \"supportsNativeFetch\": function() { return /* binding */ supportsNativeFetch; },\n/* harmony export */   \"supportsReferrerPolicy\": function() { return /* binding */ supportsReferrerPolicy; },\n/* harmony export */   \"supportsReportingObserver\": function() { return /* binding */ supportsReportingObserver; }\n/* harmony export */ });\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n\n//# sourceMappingURL=supports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3VwcG9ydHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFxQztBQUNZOztBQUVqRDtBQUNBLGVBQWUsOERBQWU7O0FBRTlCO0FBQ0E7QUFDQSxJQUFJLHlCQUF5QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksdUJBQXVCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSwyQkFBMkI7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLG9CQUFvQjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsdUJBQXVCO0FBQ2pFOztBQUVBO0FBQ0E7QUFDQSxJQUFJLDBCQUEwQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLFFBQVEsbURBQVc7QUFDbkI7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLGdDQUFnQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksNkJBQTZCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRTRLO0FBQzVLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3VwcG9ydHMuanM/ZTEyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2dnZXIgfSBmcm9tICcuL2xvZ2dlci5qcyc7XG5pbXBvcnQgeyBnZXRHbG9iYWxPYmplY3QgfSBmcm9tICcuL3dvcmxkd2lkZS5qcyc7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuY29uc3QgV0lORE9XID0gZ2V0R2xvYmFsT2JqZWN0KCk7XG5cbi8qKlxuICogVGVsbHMgd2hldGhlciBjdXJyZW50IGVudmlyb25tZW50IHN1cHBvcnRzIEVycm9yRXZlbnQgb2JqZWN0c1xuICoge0BsaW5rIHN1cHBvcnRzRXJyb3JFdmVudH0uXG4gKlxuICogQHJldHVybnMgQW5zd2VyIHRvIHRoZSBnaXZlbiBxdWVzdGlvbi5cbiAqL1xuZnVuY3Rpb24gc3VwcG9ydHNFcnJvckV2ZW50KCkge1xuICB0cnkge1xuICAgIG5ldyBFcnJvckV2ZW50KCcnKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG4vKipcbiAqIFRlbGxzIHdoZXRoZXIgY3VycmVudCBlbnZpcm9ubWVudCBzdXBwb3J0cyBET01FcnJvciBvYmplY3RzXG4gKiB7QGxpbmsgc3VwcG9ydHNET01FcnJvcn0uXG4gKlxuICogQHJldHVybnMgQW5zd2VyIHRvIHRoZSBnaXZlbiBxdWVzdGlvbi5cbiAqL1xuZnVuY3Rpb24gc3VwcG9ydHNET01FcnJvcigpIHtcbiAgdHJ5IHtcbiAgICAvLyBDaHJvbWU6IFZNODk6MSBVbmNhdWdodCBUeXBlRXJyb3I6IEZhaWxlZCB0byBjb25zdHJ1Y3QgJ0RPTUVycm9yJzpcbiAgICAvLyAxIGFyZ3VtZW50IHJlcXVpcmVkLCBidXQgb25seSAwIHByZXNlbnQuXG4gICAgLy8gQHRzLWlnbm9yZSBJdCByZWFsbHkgbmVlZHMgMSBhcmd1bWVudCwgbm90IDAuXG4gICAgbmV3IERPTUVycm9yKCcnKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG4vKipcbiAqIFRlbGxzIHdoZXRoZXIgY3VycmVudCBlbnZpcm9ubWVudCBzdXBwb3J0cyBET01FeGNlcHRpb24gb2JqZWN0c1xuICoge0BsaW5rIHN1cHBvcnRzRE9NRXhjZXB0aW9ufS5cbiAqXG4gKiBAcmV0dXJucyBBbnN3ZXIgdG8gdGhlIGdpdmVuIHF1ZXN0aW9uLlxuICovXG5mdW5jdGlvbiBzdXBwb3J0c0RPTUV4Y2VwdGlvbigpIHtcbiAgdHJ5IHtcbiAgICBuZXcgRE9NRXhjZXB0aW9uKCcnKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG4vKipcbiAqIFRlbGxzIHdoZXRoZXIgY3VycmVudCBlbnZpcm9ubWVudCBzdXBwb3J0cyBGZXRjaCBBUElcbiAqIHtAbGluayBzdXBwb3J0c0ZldGNofS5cbiAqXG4gKiBAcmV0dXJucyBBbnN3ZXIgdG8gdGhlIGdpdmVuIHF1ZXN0aW9uLlxuICovXG5mdW5jdGlvbiBzdXBwb3J0c0ZldGNoKCkge1xuICBpZiAoISgnZmV0Y2gnIGluIFdJTkRPVykpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB0cnkge1xuICAgIG5ldyBIZWFkZXJzKCk7XG4gICAgbmV3IFJlcXVlc3QoJ2h0dHA6Ly93d3cuZXhhbXBsZS5jb20nKTtcbiAgICBuZXcgUmVzcG9uc2UoKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuLyoqXG4gKiBpc05hdGl2ZUZldGNoIGNoZWNrcyBpZiB0aGUgZ2l2ZW4gZnVuY3Rpb24gaXMgYSBuYXRpdmUgaW1wbGVtZW50YXRpb24gb2YgZmV0Y2goKVxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10eXBlc1xuZnVuY3Rpb24gaXNOYXRpdmVGZXRjaChmdW5jKSB7XG4gIHJldHVybiBmdW5jICYmIC9eZnVuY3Rpb24gZmV0Y2hcXChcXClcXHMrXFx7XFxzK1xcW25hdGl2ZSBjb2RlXFxdXFxzK1xcfSQvLnRlc3QoZnVuYy50b1N0cmluZygpKTtcbn1cblxuLyoqXG4gKiBUZWxscyB3aGV0aGVyIGN1cnJlbnQgZW52aXJvbm1lbnQgc3VwcG9ydHMgRmV0Y2ggQVBJIG5hdGl2ZWx5XG4gKiB7QGxpbmsgc3VwcG9ydHNOYXRpdmVGZXRjaH0uXG4gKlxuICogQHJldHVybnMgdHJ1ZSBpZiBgd2luZG93LmZldGNoYCBpcyBuYXRpdmVseSBpbXBsZW1lbnRlZCwgZmFsc2Ugb3RoZXJ3aXNlXG4gKi9cbmZ1bmN0aW9uIHN1cHBvcnRzTmF0aXZlRmV0Y2goKSB7XG4gIGlmICghc3VwcG9ydHNGZXRjaCgpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLy8gRmFzdCBwYXRoIHRvIGF2b2lkIERPTSBJL09cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC91bmJvdW5kLW1ldGhvZFxuICBpZiAoaXNOYXRpdmVGZXRjaChXSU5ET1cuZmV0Y2gpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICAvLyB3aW5kb3cuZmV0Y2ggaXMgaW1wbGVtZW50ZWQsIGJ1dCBpcyBwb2x5ZmlsbGVkIG9yIGFscmVhZHkgd3JhcHBlZCAoZS5nOiBieSBhIGNocm9tZSBleHRlbnNpb24pXG4gIC8vIHNvIGNyZWF0ZSBhIFwicHVyZVwiIGlmcmFtZSB0byBzZWUgaWYgdGhhdCBoYXMgbmF0aXZlIGZldGNoXG4gIGxldCByZXN1bHQgPSBmYWxzZTtcbiAgY29uc3QgZG9jID0gV0lORE9XLmRvY3VtZW50O1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgaWYgKGRvYyAmJiB0eXBlb2YgKGRvYy5jcmVhdGVFbGVtZW50ICkgPT09ICdmdW5jdGlvbicpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3Qgc2FuZGJveCA9IGRvYy5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTtcbiAgICAgIHNhbmRib3guaGlkZGVuID0gdHJ1ZTtcbiAgICAgIGRvYy5oZWFkLmFwcGVuZENoaWxkKHNhbmRib3gpO1xuICAgICAgaWYgKHNhbmRib3guY29udGVudFdpbmRvdyAmJiBzYW5kYm94LmNvbnRlbnRXaW5kb3cuZmV0Y2gpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC91bmJvdW5kLW1ldGhvZFxuICAgICAgICByZXN1bHQgPSBpc05hdGl2ZUZldGNoKHNhbmRib3guY29udGVudFdpbmRvdy5mZXRjaCk7XG4gICAgICB9XG4gICAgICBkb2MuaGVhZC5yZW1vdmVDaGlsZChzYW5kYm94KTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiZcbiAgICAgICAgbG9nZ2VyLndhcm4oJ0NvdWxkIG5vdCBjcmVhdGUgc2FuZGJveCBpZnJhbWUgZm9yIHB1cmUgZmV0Y2ggY2hlY2ssIGJhaWxpbmcgdG8gd2luZG93LmZldGNoOiAnLCBlcnIpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogVGVsbHMgd2hldGhlciBjdXJyZW50IGVudmlyb25tZW50IHN1cHBvcnRzIFJlcG9ydGluZ09ic2VydmVyIEFQSVxuICoge0BsaW5rIHN1cHBvcnRzUmVwb3J0aW5nT2JzZXJ2ZXJ9LlxuICpcbiAqIEByZXR1cm5zIEFuc3dlciB0byB0aGUgZ2l2ZW4gcXVlc3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHN1cHBvcnRzUmVwb3J0aW5nT2JzZXJ2ZXIoKSB7XG4gIHJldHVybiAnUmVwb3J0aW5nT2JzZXJ2ZXInIGluIFdJTkRPVztcbn1cblxuLyoqXG4gKiBUZWxscyB3aGV0aGVyIGN1cnJlbnQgZW52aXJvbm1lbnQgc3VwcG9ydHMgUmVmZXJyZXIgUG9saWN5IEFQSVxuICoge0BsaW5rIHN1cHBvcnRzUmVmZXJyZXJQb2xpY3l9LlxuICpcbiAqIEByZXR1cm5zIEFuc3dlciB0byB0aGUgZ2l2ZW4gcXVlc3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHN1cHBvcnRzUmVmZXJyZXJQb2xpY3koKSB7XG4gIC8vIERlc3BpdGUgYWxsIHN0YXJzIGluIHRoZSBza3kgc2F5aW5nIHRoYXQgRWRnZSBzdXBwb3J0cyBvbGQgZHJhZnQgc3ludGF4LCBha2EgJ25ldmVyJywgJ2Fsd2F5cycsICdvcmlnaW4nIGFuZCAnZGVmYXVsdCdcbiAgLy8gKHNlZSBodHRwczovL2Nhbml1c2UuY29tLyNmZWF0PXJlZmVycmVyLXBvbGljeSksXG4gIC8vIGl0IGRvZXNuJ3QuIEFuZCBpdCB0aHJvd3MgYW4gZXhjZXB0aW9uIGluc3RlYWQgb2YgaWdub3JpbmcgdGhpcyBwYXJhbWV0ZXIuLi5cbiAgLy8gUkVGOiBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3JhdmVuLWpzL2lzc3Vlcy8xMjMzXG5cbiAgaWYgKCFzdXBwb3J0c0ZldGNoKCkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB0cnkge1xuICAgIG5ldyBSZXF1ZXN0KCdfJywge1xuICAgICAgcmVmZXJyZXJQb2xpY3k6ICdvcmlnaW4nICxcbiAgICB9KTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5leHBvcnQgeyBpc05hdGl2ZUZldGNoLCBzdXBwb3J0c0RPTUVycm9yLCBzdXBwb3J0c0RPTUV4Y2VwdGlvbiwgc3VwcG9ydHNFcnJvckV2ZW50LCBzdXBwb3J0c0ZldGNoLCBzdXBwb3J0c05hdGl2ZUZldGNoLCBzdXBwb3J0c1JlZmVycmVyUG9saWN5LCBzdXBwb3J0c1JlcG9ydGluZ09ic2VydmVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdXBwb3J0cy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/supports.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/syncpromise.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/syncpromise.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SyncPromise\": function() { return /* binding */ SyncPromise; },\n/* harmony export */   \"rejectedSyncPromise\": function() { return /* binding */ rejectedSyncPromise; },\n/* harmony export */   \"resolvedSyncPromise\": function() { return /* binding */ resolvedSyncPromise; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n   __init() {this._state = States.PENDING;}\n   __init2() {this._handlers = [];}\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);SyncPromise.prototype.__init5.call(this);SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init3() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init4() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init5() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isThenable)(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init6() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\n\n//# sourceMappingURL=syncpromise.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3luY3Byb21pc2UuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxQzs7QUFFckM7O0FBRUE7QUFDQSxZQUFZO0FBQ1o7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQSxzQkFBc0I7QUFDdEIsQ0FBQyx3QkFBd0I7O0FBRXpCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixjQUFjOztBQUVkO0FBQ0E7QUFDQSxLQUFLLHdDQUF3Qyx5Q0FBeUMseUNBQXlDLHlDQUF5Qyx5Q0FBeUM7QUFDak47QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMOztBQUVBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7O0FBRUE7QUFDQSxlQUFlO0FBQ2Y7QUFDQTs7QUFFQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxrREFBVTtBQUNsQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVpRTtBQUNqRSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL3N5bmNwcm9taXNlLmpzPzFkMWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNUaGVuYWJsZSB9IGZyb20gJy4vaXMuanMnO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvZXhwbGljaXQtZnVuY3Rpb24tcmV0dXJuLXR5cGUgKi9cblxuLyoqIFN5bmNQcm9taXNlIGludGVybmFsIHN0YXRlcyAqL1xudmFyIFN0YXRlczsgKGZ1bmN0aW9uIChTdGF0ZXMpIHtcbiAgLyoqIFBlbmRpbmcgKi9cbiAgY29uc3QgUEVORElORyA9IDA7IFN0YXRlc1tTdGF0ZXNbXCJQRU5ESU5HXCJdID0gUEVORElOR10gPSBcIlBFTkRJTkdcIjtcbiAgLyoqIFJlc29sdmVkIC8gT0sgKi9cbiAgY29uc3QgUkVTT0xWRUQgPSAxOyBTdGF0ZXNbU3RhdGVzW1wiUkVTT0xWRURcIl0gPSBSRVNPTFZFRF0gPSBcIlJFU09MVkVEXCI7XG4gIC8qKiBSZWplY3RlZCAvIEVycm9yICovXG4gIGNvbnN0IFJFSkVDVEVEID0gMjsgU3RhdGVzW1N0YXRlc1tcIlJFSkVDVEVEXCJdID0gUkVKRUNURURdID0gXCJSRUpFQ1RFRFwiO1xufSkoU3RhdGVzIHx8IChTdGF0ZXMgPSB7fSkpO1xuXG4vLyBPdmVybG9hZHMgc28gd2UgY2FuIGNhbGwgcmVzb2x2ZWRTeW5jUHJvbWlzZSB3aXRob3V0IGFyZ3VtZW50cyBhbmQgZ2VuZXJpYyBhcmd1bWVudFxuXG4vKipcbiAqIENyZWF0ZXMgYSByZXNvbHZlZCBzeW5jIHByb21pc2UuXG4gKlxuICogQHBhcmFtIHZhbHVlIHRoZSB2YWx1ZSB0byByZXNvbHZlIHRoZSBwcm9taXNlIHdpdGhcbiAqIEByZXR1cm5zIHRoZSByZXNvbHZlZCBzeW5jIHByb21pc2VcbiAqL1xuZnVuY3Rpb24gcmVzb2x2ZWRTeW5jUHJvbWlzZSh2YWx1ZSkge1xuICByZXR1cm4gbmV3IFN5bmNQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgIHJlc29sdmUodmFsdWUpO1xuICB9KTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgcmVqZWN0ZWQgc3luYyBwcm9taXNlLlxuICpcbiAqIEBwYXJhbSB2YWx1ZSB0aGUgdmFsdWUgdG8gcmVqZWN0IHRoZSBwcm9taXNlIHdpdGhcbiAqIEByZXR1cm5zIHRoZSByZWplY3RlZCBzeW5jIHByb21pc2VcbiAqL1xuZnVuY3Rpb24gcmVqZWN0ZWRTeW5jUHJvbWlzZShyZWFzb24pIHtcbiAgcmV0dXJuIG5ldyBTeW5jUHJvbWlzZSgoXywgcmVqZWN0KSA9PiB7XG4gICAgcmVqZWN0KHJlYXNvbik7XG4gIH0pO1xufVxuXG4vKipcbiAqIFRoZW5hYmxlIGNsYXNzIHRoYXQgYmVoYXZlcyBsaWtlIGEgUHJvbWlzZSBhbmQgZm9sbG93cyBpdCdzIGludGVyZmFjZVxuICogYnV0IGlzIG5vdCBhc3luYyBpbnRlcm5hbGx5XG4gKi9cbmNsYXNzIFN5bmNQcm9taXNlIHtcbiAgIF9faW5pdCgpIHt0aGlzLl9zdGF0ZSA9IFN0YXRlcy5QRU5ESU5HO31cbiAgIF9faW5pdDIoKSB7dGhpcy5faGFuZGxlcnMgPSBbXTt9XG5cbiAgIGNvbnN0cnVjdG9yKFxuICAgIGV4ZWN1dG9yLFxuICApIHtTeW5jUHJvbWlzZS5wcm90b3R5cGUuX19pbml0LmNhbGwodGhpcyk7U3luY1Byb21pc2UucHJvdG90eXBlLl9faW5pdDIuY2FsbCh0aGlzKTtTeW5jUHJvbWlzZS5wcm90b3R5cGUuX19pbml0My5jYWxsKHRoaXMpO1N5bmNQcm9taXNlLnByb3RvdHlwZS5fX2luaXQ0LmNhbGwodGhpcyk7U3luY1Byb21pc2UucHJvdG90eXBlLl9faW5pdDUuY2FsbCh0aGlzKTtTeW5jUHJvbWlzZS5wcm90b3R5cGUuX19pbml0Ni5jYWxsKHRoaXMpO1xuICAgIHRyeSB7XG4gICAgICBleGVjdXRvcih0aGlzLl9yZXNvbHZlLCB0aGlzLl9yZWplY3QpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHRoaXMuX3JlamVjdChlKTtcbiAgICB9XG4gIH1cblxuICAvKiogSlNEb2MgKi9cbiAgIHRoZW4oXG4gICAgb25mdWxmaWxsZWQsXG4gICAgb25yZWplY3RlZCxcbiAgKSB7XG4gICAgcmV0dXJuIG5ldyBTeW5jUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVycy5wdXNoKFtcbiAgICAgICAgZmFsc2UsXG4gICAgICAgIHJlc3VsdCA9PiB7XG4gICAgICAgICAgaWYgKCFvbmZ1bGZpbGxlZCkge1xuICAgICAgICAgICAgLy8gVE9ETzogwq9cXF8o44OEKV8vwq9cbiAgICAgICAgICAgIC8vIFRPRE86IEZJWE1FXG4gICAgICAgICAgICByZXNvbHZlKHJlc3VsdCApO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICByZXNvbHZlKG9uZnVsZmlsbGVkKHJlc3VsdCkpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICByZWFzb24gPT4ge1xuICAgICAgICAgIGlmICghb25yZWplY3RlZCkge1xuICAgICAgICAgICAgcmVqZWN0KHJlYXNvbik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIHJlc29sdmUob25yZWplY3RlZChyZWFzb24pKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgIF0pO1xuICAgICAgdGhpcy5fZXhlY3V0ZUhhbmRsZXJzKCk7XG4gICAgfSk7XG4gIH1cblxuICAvKiogSlNEb2MgKi9cbiAgIGNhdGNoKFxuICAgIG9ucmVqZWN0ZWQsXG4gICkge1xuICAgIHJldHVybiB0aGlzLnRoZW4odmFsID0+IHZhbCwgb25yZWplY3RlZCk7XG4gIH1cblxuICAvKiogSlNEb2MgKi9cbiAgIGZpbmFsbHkob25maW5hbGx5KSB7XG4gICAgcmV0dXJuIG5ldyBTeW5jUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBsZXQgdmFsO1xuICAgICAgbGV0IGlzUmVqZWN0ZWQ7XG5cbiAgICAgIHJldHVybiB0aGlzLnRoZW4oXG4gICAgICAgIHZhbHVlID0+IHtcbiAgICAgICAgICBpc1JlamVjdGVkID0gZmFsc2U7XG4gICAgICAgICAgdmFsID0gdmFsdWU7XG4gICAgICAgICAgaWYgKG9uZmluYWxseSkge1xuICAgICAgICAgICAgb25maW5hbGx5KCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICByZWFzb24gPT4ge1xuICAgICAgICAgIGlzUmVqZWN0ZWQgPSB0cnVlO1xuICAgICAgICAgIHZhbCA9IHJlYXNvbjtcbiAgICAgICAgICBpZiAob25maW5hbGx5KSB7XG4gICAgICAgICAgICBvbmZpbmFsbHkoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICApLnRoZW4oKCkgPT4ge1xuICAgICAgICBpZiAoaXNSZWplY3RlZCkge1xuICAgICAgICAgIHJlamVjdCh2YWwpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlc29sdmUodmFsICk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgIF9faW5pdDMoKSB7dGhpcy5fcmVzb2x2ZSA9ICh2YWx1ZSkgPT4ge1xuICAgIHRoaXMuX3NldFJlc3VsdChTdGF0ZXMuUkVTT0xWRUQsIHZhbHVlKTtcbiAgfTt9XG5cbiAgLyoqIEpTRG9jICovXG4gICAgX19pbml0NCgpIHt0aGlzLl9yZWplY3QgPSAocmVhc29uKSA9PiB7XG4gICAgdGhpcy5fc2V0UmVzdWx0KFN0YXRlcy5SRUpFQ1RFRCwgcmVhc29uKTtcbiAgfTt9XG5cbiAgLyoqIEpTRG9jICovXG4gICAgX19pbml0NSgpIHt0aGlzLl9zZXRSZXN1bHQgPSAoc3RhdGUsIHZhbHVlKSA9PiB7XG4gICAgaWYgKHRoaXMuX3N0YXRlICE9PSBTdGF0ZXMuUEVORElORykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChpc1RoZW5hYmxlKHZhbHVlKSkge1xuICAgICAgdm9pZCAodmFsdWUgKS50aGVuKHRoaXMuX3Jlc29sdmUsIHRoaXMuX3JlamVjdCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5fc3RhdGUgPSBzdGF0ZTtcbiAgICB0aGlzLl92YWx1ZSA9IHZhbHVlO1xuXG4gICAgdGhpcy5fZXhlY3V0ZUhhbmRsZXJzKCk7XG4gIH07fVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgIF9faW5pdDYoKSB7dGhpcy5fZXhlY3V0ZUhhbmRsZXJzID0gKCkgPT4ge1xuICAgIGlmICh0aGlzLl9zdGF0ZSA9PT0gU3RhdGVzLlBFTkRJTkcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBjYWNoZWRIYW5kbGVycyA9IHRoaXMuX2hhbmRsZXJzLnNsaWNlKCk7XG4gICAgdGhpcy5faGFuZGxlcnMgPSBbXTtcblxuICAgIGNhY2hlZEhhbmRsZXJzLmZvckVhY2goaGFuZGxlciA9PiB7XG4gICAgICBpZiAoaGFuZGxlclswXSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLl9zdGF0ZSA9PT0gU3RhdGVzLlJFU09MVkVEKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZmxvYXRpbmctcHJvbWlzZXNcbiAgICAgICAgaGFuZGxlclsxXSh0aGlzLl92YWx1ZSApO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5fc3RhdGUgPT09IFN0YXRlcy5SRUpFQ1RFRCkge1xuICAgICAgICBoYW5kbGVyWzJdKHRoaXMuX3ZhbHVlKTtcbiAgICAgIH1cblxuICAgICAgaGFuZGxlclswXSA9IHRydWU7XG4gICAgfSk7XG4gIH07fVxufVxuXG5leHBvcnQgeyBTeW5jUHJvbWlzZSwgcmVqZWN0ZWRTeW5jUHJvbWlzZSwgcmVzb2x2ZWRTeW5jUHJvbWlzZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3luY3Byb21pc2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/syncpromise.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/time.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/time.js ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_browserPerformanceTimeOriginMode\": function() { return /* binding */ _browserPerformanceTimeOriginMode; },\n/* harmony export */   \"browserPerformanceTimeOrigin\": function() { return /* binding */ browserPerformanceTimeOrigin; },\n/* harmony export */   \"dateTimestampInSeconds\": function() { return /* binding */ dateTimestampInSeconds; },\n/* harmony export */   \"timestampInSeconds\": function() { return /* binding */ timestampInSeconds; },\n/* harmony export */   \"timestampWithMs\": function() { return /* binding */ timestampWithMs; },\n/* harmony export */   \"usingPerformanceAPI\": function() { return /* binding */ usingPerformanceAPI; }\n/* harmony export */ });\n/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node.js */ \"./node_modules/@sentry/utils/esm/node.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    const perfHooks = (0,_node_js__WEBPACK_IMPORTED_MODULE_1__.dynamicRequire)(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance = (0,_node_js__WEBPACK_IMPORTED_MODULE_1__.isNodeEnv)() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nconst dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nconst usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\n\n//# sourceMappingURL=time.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/time.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/tracing.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/tracing.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TRACEPARENT_REGEXP\": function() { return /* binding */ TRACEPARENT_REGEXP; },\n/* harmony export */   \"extractTraceparentData\": function() { return /* binding */ extractTraceparentData; },\n/* harmony export */   \"generateSentryTraceHeader\": function() { return /* binding */ generateSentryTraceHeader; },\n/* harmony export */   \"tracingContextFromHeaders\": function() { return /* binding */ tracingContextFromHeaders; }\n/* harmony export */ });\n/* harmony import */ var _baggage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baggage.js */ \"./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./misc.js */ \"./node_modules/@sentry/utils/esm/misc.js\");\n\n\n\nconst TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create tracing context from incoming headers.\n */\nfunction tracingContextFromHeaders(\n  sentryTrace,\n  baggage,\n)\n\n {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = (0,_baggage_js__WEBPACK_IMPORTED_MODULE_0__.baggageHeaderToDynamicSamplingContext)(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  const propagationContext = {\n    traceId: traceId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n    spanId: (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n    sampled: parentSampled === undefined ? false : parentSampled,\n  };\n\n  if (parentSpanId) {\n    propagationContext.parentSpanId = parentSpanId;\n  }\n\n  if (dynamicSamplingContext) {\n    propagationContext.dsc = dynamicSamplingContext ;\n  }\n\n  return {\n    traceparentData,\n    dynamicSamplingContext,\n    propagationContext,\n  };\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nfunction generateSentryTraceHeader(\n  traceId = (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n  spanId = (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n  sampled,\n) {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n\n\n//# sourceMappingURL=tracing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdHJhY2luZy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBcUU7QUFDbkM7O0FBRWxDO0FBQ0E7QUFDQSxlQUFlLEdBQUc7QUFDbEIsaUJBQWlCLEdBQUc7QUFDcEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQ0FBaUMsa0ZBQXFDOztBQUV0RSxVQUFVLHVDQUF1Qzs7QUFFakQ7QUFDQSx3QkFBd0IsK0NBQUs7QUFDN0IsWUFBWSwrQ0FBSztBQUNqQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwrQ0FBSztBQUNqQixXQUFXLCtDQUFLO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUSxHQUFHLE9BQU8sRUFBRSxjQUFjO0FBQzlDOztBQUU0RztBQUM1RyIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL3RyYWNpbmcuanM/ZjMyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiYWdnYWdlSGVhZGVyVG9EeW5hbWljU2FtcGxpbmdDb250ZXh0IH0gZnJvbSAnLi9iYWdnYWdlLmpzJztcbmltcG9ydCB7IHV1aWQ0IH0gZnJvbSAnLi9taXNjLmpzJztcblxuY29uc3QgVFJBQ0VQQVJFTlRfUkVHRVhQID0gbmV3IFJlZ0V4cChcbiAgJ15bIFxcXFx0XSonICsgLy8gd2hpdGVzcGFjZVxuICAgICcoWzAtOWEtZl17MzJ9KT8nICsgLy8gdHJhY2VfaWRcbiAgICAnLT8oWzAtOWEtZl17MTZ9KT8nICsgLy8gc3Bhbl9pZFxuICAgICctPyhbMDFdKT8nICsgLy8gc2FtcGxlZFxuICAgICdbIFxcXFx0XSokJywgLy8gd2hpdGVzcGFjZVxuKTtcblxuLyoqXG4gKiBFeHRyYWN0IHRyYW5zYWN0aW9uIGNvbnRleHQgZGF0YSBmcm9tIGEgYHNlbnRyeS10cmFjZWAgaGVhZGVyLlxuICpcbiAqIEBwYXJhbSB0cmFjZXBhcmVudCBUcmFjZXBhcmVudCBzdHJpbmdcbiAqXG4gKiBAcmV0dXJucyBPYmplY3QgY29udGFpbmluZyBkYXRhIGZyb20gdGhlIGhlYWRlciwgb3IgdW5kZWZpbmVkIGlmIHRyYWNlcGFyZW50IHN0cmluZyBpcyBtYWxmb3JtZWRcbiAqL1xuZnVuY3Rpb24gZXh0cmFjdFRyYWNlcGFyZW50RGF0YSh0cmFjZXBhcmVudCkge1xuICBpZiAoIXRyYWNlcGFyZW50KSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGNvbnN0IG1hdGNoZXMgPSB0cmFjZXBhcmVudC5tYXRjaChUUkFDRVBBUkVOVF9SRUdFWFApO1xuICBpZiAoIW1hdGNoZXMpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgbGV0IHBhcmVudFNhbXBsZWQ7XG4gIGlmIChtYXRjaGVzWzNdID09PSAnMScpIHtcbiAgICBwYXJlbnRTYW1wbGVkID0gdHJ1ZTtcbiAgfSBlbHNlIGlmIChtYXRjaGVzWzNdID09PSAnMCcpIHtcbiAgICBwYXJlbnRTYW1wbGVkID0gZmFsc2U7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHRyYWNlSWQ6IG1hdGNoZXNbMV0sXG4gICAgcGFyZW50U2FtcGxlZCxcbiAgICBwYXJlbnRTcGFuSWQ6IG1hdGNoZXNbMl0sXG4gIH07XG59XG5cbi8qKlxuICogQ3JlYXRlIHRyYWNpbmcgY29udGV4dCBmcm9tIGluY29taW5nIGhlYWRlcnMuXG4gKi9cbmZ1bmN0aW9uIHRyYWNpbmdDb250ZXh0RnJvbUhlYWRlcnMoXG4gIHNlbnRyeVRyYWNlLFxuICBiYWdnYWdlLFxuKVxuXG4ge1xuICBjb25zdCB0cmFjZXBhcmVudERhdGEgPSBleHRyYWN0VHJhY2VwYXJlbnREYXRhKHNlbnRyeVRyYWNlKTtcbiAgY29uc3QgZHluYW1pY1NhbXBsaW5nQ29udGV4dCA9IGJhZ2dhZ2VIZWFkZXJUb0R5bmFtaWNTYW1wbGluZ0NvbnRleHQoYmFnZ2FnZSk7XG5cbiAgY29uc3QgeyB0cmFjZUlkLCBwYXJlbnRTcGFuSWQsIHBhcmVudFNhbXBsZWQgfSA9IHRyYWNlcGFyZW50RGF0YSB8fCB7fTtcblxuICBjb25zdCBwcm9wYWdhdGlvbkNvbnRleHQgPSB7XG4gICAgdHJhY2VJZDogdHJhY2VJZCB8fCB1dWlkNCgpLFxuICAgIHNwYW5JZDogdXVpZDQoKS5zdWJzdHJpbmcoMTYpLFxuICAgIHNhbXBsZWQ6IHBhcmVudFNhbXBsZWQgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogcGFyZW50U2FtcGxlZCxcbiAgfTtcblxuICBpZiAocGFyZW50U3BhbklkKSB7XG4gICAgcHJvcGFnYXRpb25Db250ZXh0LnBhcmVudFNwYW5JZCA9IHBhcmVudFNwYW5JZDtcbiAgfVxuXG4gIGlmIChkeW5hbWljU2FtcGxpbmdDb250ZXh0KSB7XG4gICAgcHJvcGFnYXRpb25Db250ZXh0LmRzYyA9IGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0cmFjZXBhcmVudERhdGEsXG4gICAgZHluYW1pY1NhbXBsaW5nQ29udGV4dCxcbiAgICBwcm9wYWdhdGlvbkNvbnRleHQsXG4gIH07XG59XG5cbi8qKlxuICogQ3JlYXRlIHNlbnRyeS10cmFjZSBoZWFkZXIgZnJvbSBzcGFuIGNvbnRleHQgdmFsdWVzLlxuICovXG5mdW5jdGlvbiBnZW5lcmF0ZVNlbnRyeVRyYWNlSGVhZGVyKFxuICB0cmFjZUlkID0gdXVpZDQoKSxcbiAgc3BhbklkID0gdXVpZDQoKS5zdWJzdHJpbmcoMTYpLFxuICBzYW1wbGVkLFxuKSB7XG4gIGxldCBzYW1wbGVkU3RyaW5nID0gJyc7XG4gIGlmIChzYW1wbGVkICE9PSB1bmRlZmluZWQpIHtcbiAgICBzYW1wbGVkU3RyaW5nID0gc2FtcGxlZCA/ICctMScgOiAnLTAnO1xuICB9XG4gIHJldHVybiBgJHt0cmFjZUlkfS0ke3NwYW5JZH0ke3NhbXBsZWRTdHJpbmd9YDtcbn1cblxuZXhwb3J0IHsgVFJBQ0VQQVJFTlRfUkVHRVhQLCBleHRyYWN0VHJhY2VwYXJlbnREYXRhLCBnZW5lcmF0ZVNlbnRyeVRyYWNlSGVhZGVyLCB0cmFjaW5nQ29udGV4dEZyb21IZWFkZXJzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFjaW5nLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/tracing.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/url.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/url.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getNumberOfUrlSegments\": function() { return /* binding */ getNumberOfUrlSegments; },\n/* harmony export */   \"getSanitizedUrlString\": function() { return /* binding */ getSanitizedUrlString; },\n/* harmony export */   \"parseUrl\": function() { return /* binding */ parseUrl; },\n/* harmony export */   \"stripUrlQueryAndFragment\": function() { return /* binding */ stripUrlQueryAndFragment; }\n/* harmony export */ });\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        .replace(':80', '')\n        .replace(':443', '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\n\n//# sourceMappingURL=url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdXJsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsdUJBQXVCOztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsWUFBWSxjQUFjLFNBQVMsVUFBVSxFQUFFLGFBQWEsRUFBRSxLQUFLO0FBQ25FOztBQUU2RjtBQUM3RiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL3VybC5qcz8wZDNhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUGFyc2VzIHN0cmluZyBmb3JtIG9mIFVSTCBpbnRvIGFuIG9iamVjdFxuICogLy8gYm9ycm93ZWQgZnJvbSBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzk4NiNhcHBlbmRpeC1CXG4gKiAvLyBpbnRlbnRpb25hbGx5IHVzaW5nIHJlZ2V4IGFuZCBub3QgPGEvPiBocmVmIHBhcnNpbmcgdHJpY2sgYmVjYXVzZSBSZWFjdCBOYXRpdmUgYW5kIG90aGVyXG4gKiAvLyBlbnZpcm9ubWVudHMgd2hlcmUgRE9NIG1pZ2h0IG5vdCBiZSBhdmFpbGFibGVcbiAqIEByZXR1cm5zIHBhcnNlZCBVUkwgb2JqZWN0XG4gKi9cbmZ1bmN0aW9uIHBhcnNlVXJsKHVybCkge1xuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIGNvbnN0IG1hdGNoID0gdXJsLm1hdGNoKC9eKChbXjovPyNdKyk6KT8oXFwvXFwvKFteLz8jXSopKT8oW14/I10qKShcXD8oW14jXSopKT8oIyguKikpPyQvKTtcblxuICBpZiAoIW1hdGNoKSB7XG4gICAgcmV0dXJuIHt9O1xuICB9XG5cbiAgLy8gY29lcmNlIHRvIHVuZGVmaW5lZCB2YWx1ZXMgdG8gZW1wdHkgc3RyaW5nIHNvIHdlIGRvbid0IGdldCAndW5kZWZpbmVkJ1xuICBjb25zdCBxdWVyeSA9IG1hdGNoWzZdIHx8ICcnO1xuICBjb25zdCBmcmFnbWVudCA9IG1hdGNoWzhdIHx8ICcnO1xuICByZXR1cm4ge1xuICAgIGhvc3Q6IG1hdGNoWzRdLFxuICAgIHBhdGg6IG1hdGNoWzVdLFxuICAgIHByb3RvY29sOiBtYXRjaFsyXSxcbiAgICBzZWFyY2g6IHF1ZXJ5LFxuICAgIGhhc2g6IGZyYWdtZW50LFxuICAgIHJlbGF0aXZlOiBtYXRjaFs1XSArIHF1ZXJ5ICsgZnJhZ21lbnQsIC8vIGV2ZXJ5dGhpbmcgbWludXMgb3JpZ2luXG4gIH07XG59XG5cbi8qKlxuICogU3RyaXAgdGhlIHF1ZXJ5IHN0cmluZyBhbmQgZnJhZ21lbnQgb2ZmIG9mIGEgZ2l2ZW4gVVJMIG9yIHBhdGggKGlmIHByZXNlbnQpXG4gKlxuICogQHBhcmFtIHVybFBhdGggRnVsbCBVUkwgb3IgcGF0aCwgaW5jbHVkaW5nIHBvc3NpYmxlIHF1ZXJ5IHN0cmluZyBhbmQvb3IgZnJhZ21lbnRcbiAqIEByZXR1cm5zIFVSTCBvciBwYXRoIHdpdGhvdXQgcXVlcnkgc3RyaW5nIG9yIGZyYWdtZW50XG4gKi9cbmZ1bmN0aW9uIHN0cmlwVXJsUXVlcnlBbmRGcmFnbWVudCh1cmxQYXRoKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11c2VsZXNzLWVzY2FwZVxuICByZXR1cm4gdXJsUGF0aC5zcGxpdCgvW1xcPyNdLywgMSlbMF07XG59XG5cbi8qKlxuICogUmV0dXJucyBudW1iZXIgb2YgVVJMIHNlZ21lbnRzIG9mIGEgcGFzc2VkIHN0cmluZyBVUkwuXG4gKi9cbmZ1bmN0aW9uIGdldE51bWJlck9mVXJsU2VnbWVudHModXJsKSB7XG4gIC8vIHNwbGl0IGF0ICcvJyBvciBhdCAnXFwvJyB0byBzcGxpdCByZWdleCB1cmxzIGNvcnJlY3RseVxuICByZXR1cm4gdXJsLnNwbGl0KC9cXFxcP1xcLy8pLmZpbHRlcihzID0+IHMubGVuZ3RoID4gMCAmJiBzICE9PSAnLCcpLmxlbmd0aDtcbn1cblxuLyoqXG4gKiBUYWtlcyBhIFVSTCBvYmplY3QgYW5kIHJldHVybnMgYSBzYW5pdGl6ZWQgc3RyaW5nIHdoaWNoIGlzIHNhZmUgdG8gdXNlIGFzIHNwYW4gZGVzY3JpcHRpb25cbiAqIHNlZTogaHR0cHM6Ly9kZXZlbG9wLnNlbnRyeS5kZXYvc2RrL2RhdGEtaGFuZGxpbmcvI3N0cnVjdHVyaW5nLWRhdGFcbiAqL1xuZnVuY3Rpb24gZ2V0U2FuaXRpemVkVXJsU3RyaW5nKHVybCkge1xuICBjb25zdCB7IHByb3RvY29sLCBob3N0LCBwYXRoIH0gPSB1cmw7XG5cbiAgY29uc3QgZmlsdGVyZWRIb3N0ID1cbiAgICAoaG9zdCAmJlxuICAgICAgaG9zdFxuICAgICAgICAvLyBBbHdheXMgZmlsdGVyIG91dCBhdXRob3JpdHlcbiAgICAgICAgLnJlcGxhY2UoL14uKkAvLCAnW2ZpbHRlcmVkXTpbZmlsdGVyZWRdQCcpXG4gICAgICAgIC8vIERvbid0IHNob3cgc3RhbmRhcmQgOjgwIChodHRwKSBhbmQgOjQ0MyAoaHR0cHMpIHBvcnRzIHRvIHJlZHVjZSB0aGUgbm9pc2VcbiAgICAgICAgLnJlcGxhY2UoJzo4MCcsICcnKVxuICAgICAgICAucmVwbGFjZSgnOjQ0MycsICcnKSkgfHxcbiAgICAnJztcblxuICByZXR1cm4gYCR7cHJvdG9jb2wgPyBgJHtwcm90b2NvbH06Ly9gIDogJyd9JHtmaWx0ZXJlZEhvc3R9JHtwYXRofWA7XG59XG5cbmV4cG9ydCB7IGdldE51bWJlck9mVXJsU2VnbWVudHMsIGdldFNhbml0aXplZFVybFN0cmluZywgcGFyc2VVcmwsIHN0cmlwVXJsUXVlcnlBbmRGcmFnbWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXJsLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/url.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/vendor/supportsHistory.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/vendor/supportsHistory.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"supportsHistory\": function() { return /* binding */ supportsHistory; }\n/* harmony export */ });\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n// Based on https://github.com/angular/angular.js/pull/13945/files\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (WINDOW ).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\n\n//# sourceMappingURL=supportsHistory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdmVuZG9yL3N1cHBvcnRzSGlzdG9yeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRDs7QUFFbEQ7O0FBRUE7QUFDQSxlQUFlLDhEQUFlOztBQUU5QjtBQUNBO0FBQ0EsSUFBSSxzQkFBc0I7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFMkI7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS92ZW5kb3Ivc3VwcG9ydHNIaXN0b3J5LmpzPzgxN2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0R2xvYmFsT2JqZWN0IH0gZnJvbSAnLi4vd29ybGR3aWRlLmpzJztcblxuLy8gQmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvYW5ndWxhci5qcy9wdWxsLzEzOTQ1L2ZpbGVzXG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuY29uc3QgV0lORE9XID0gZ2V0R2xvYmFsT2JqZWN0KCk7XG5cbi8qKlxuICogVGVsbHMgd2hldGhlciBjdXJyZW50IGVudmlyb25tZW50IHN1cHBvcnRzIEhpc3RvcnkgQVBJXG4gKiB7QGxpbmsgc3VwcG9ydHNIaXN0b3J5fS5cbiAqXG4gKiBAcmV0dXJucyBBbnN3ZXIgdG8gdGhlIGdpdmVuIHF1ZXN0aW9uLlxuICovXG5mdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIC8vIE5PVEU6IGluIENocm9tZSBBcHAgZW52aXJvbm1lbnQsIHRvdWNoaW5nIGhpc3RvcnkucHVzaFN0YXRlLCAqZXZlbiBpbnNpZGVcbiAgLy8gICAgICAgYSB0cnkvY2F0Y2ggYmxvY2sqLCB3aWxsIGNhdXNlIENocm9tZSB0byBvdXRwdXQgYW4gZXJyb3IgdG8gY29uc29sZS5lcnJvclxuICAvLyBib3Jyb3dlZCBmcm9tOiBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyLmpzL3B1bGwvMTM5NDUvZmlsZXNcbiAgLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gIGNvbnN0IGNocm9tZSA9IChXSU5ET1cgKS5jaHJvbWU7XG4gIGNvbnN0IGlzQ2hyb21lUGFja2FnZWRBcHAgPSBjaHJvbWUgJiYgY2hyb21lLmFwcCAmJiBjaHJvbWUuYXBwLnJ1bnRpbWU7XG4gIC8qIGVzbGludC1lbmFibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzICovXG4gIGNvbnN0IGhhc0hpc3RvcnlBcGkgPSAnaGlzdG9yeScgaW4gV0lORE9XICYmICEhV0lORE9XLmhpc3RvcnkucHVzaFN0YXRlICYmICEhV0lORE9XLmhpc3RvcnkucmVwbGFjZVN0YXRlO1xuXG4gIHJldHVybiAhaXNDaHJvbWVQYWNrYWdlZEFwcCAmJiBoYXNIaXN0b3J5QXBpO1xufVxuXG5leHBvcnQgeyBzdXBwb3J0c0hpc3RvcnkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN1cHBvcnRzSGlzdG9yeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/vendor/supportsHistory.js\n");

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/worldwide.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/worldwide.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GLOBAL_OBJ\": function() { return /* binding */ GLOBAL_OBJ; },\n/* harmony export */   \"getGlobalObject\": function() { return /* binding */ getGlobalObject; },\n/* harmony export */   \"getGlobalSingleton\": function() { return /* binding */ getGlobalSingleton; }\n/* harmony export */ });\n/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\n\n//# sourceMappingURL=worldwide.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vd29ybGR3aWRlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxNQUFNLDRCQUE0QixNQUFNO0FBQ2xEO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJEO0FBQzNEO0FBQ0E7QUFDQTs7QUFFMkQ7QUFDM0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS93b3JsZHdpZGUuanM/YWRiYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogSW50ZXJuYWwgZ2xvYmFsIHdpdGggY29tbW9uIHByb3BlcnRpZXMgYW5kIFNlbnRyeSBleHRlbnNpb25zICAqL1xuXG4vLyBUaGUgY29kZSBiZWxvdyBmb3IgJ2lzR2xvYmFsT2JqJyBhbmQgJ0dMT0JBTF9PQkonIHdhcyBjb3BpZWQgZnJvbSBjb3JlLWpzIGJlZm9yZSBtb2RpZmljYXRpb25cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2Jsb2IvMWI5NDRkZjU1MjgyY2RjOTljOTBkYjVmNDllYjBiNmVkYTJjYzBhMy9wYWNrYWdlcy9jb3JlLWpzL2ludGVybmFscy9nbG9iYWwuanNcbi8vIGNvcmUtanMgaGFzIHRoZSBmb2xsb3dpbmcgbGljZW5jZTpcbi8vXG4vLyBDb3B5cmlnaHQgKGMpIDIwMTQtMjAyMiBEZW5pcyBQdXNoa2FyZXZcbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG4vKiogUmV0dXJucyAnb2JqJyBpZiBpdCdzIHRoZSBnbG9iYWwgb2JqZWN0LCBvdGhlcndpc2UgcmV0dXJucyB1bmRlZmluZWQgKi9cbmZ1bmN0aW9uIGlzR2xvYmFsT2JqKG9iaikge1xuICByZXR1cm4gb2JqICYmIG9iai5NYXRoID09IE1hdGggPyBvYmogOiB1bmRlZmluZWQ7XG59XG5cbi8qKiBHZXQncyB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgdGhlIGN1cnJlbnQgSmF2YVNjcmlwdCBydW50aW1lICovXG5jb25zdCBHTE9CQUxfT0JKID1cbiAgKHR5cGVvZiBnbG9iYWxUaGlzID09ICdvYmplY3QnICYmIGlzR2xvYmFsT2JqKGdsb2JhbFRoaXMpKSB8fFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1nbG9iYWxzXG4gICh0eXBlb2Ygd2luZG93ID09ICdvYmplY3QnICYmIGlzR2xvYmFsT2JqKHdpbmRvdykpIHx8XG4gICh0eXBlb2Ygc2VsZiA9PSAnb2JqZWN0JyAmJiBpc0dsb2JhbE9iaihzZWxmKSkgfHxcbiAgKHR5cGVvZiBnbG9iYWwgPT0gJ29iamVjdCcgJiYgaXNHbG9iYWxPYmooZ2xvYmFsKSkgfHxcbiAgKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfSkoKSB8fFxuICB7fTtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgR0xPQkFMX09CSiBpbnN0ZWFkIG9yIFdJTkRPVyBmcm9tIEBzZW50cnkvYnJvd3Nlci4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjhcbiAqL1xuZnVuY3Rpb24gZ2V0R2xvYmFsT2JqZWN0KCkge1xuICByZXR1cm4gR0xPQkFMX09CSiA7XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGdsb2JhbCBzaW5nbGV0b24gY29udGFpbmVkIGluIHRoZSBnbG9iYWwgYF9fU0VOVFJZX19gIG9iamVjdC5cbiAqXG4gKiBJZiB0aGUgc2luZ2xldG9uIGRvZXNuJ3QgYWxyZWFkeSBleGlzdCBpbiBgX19TRU5UUllfX2AsIGl0IHdpbGwgYmUgY3JlYXRlZCB1c2luZyB0aGUgZ2l2ZW4gZmFjdG9yeVxuICogZnVuY3Rpb24gYW5kIGFkZGVkIHRvIHRoZSBgX19TRU5UUllfX2Agb2JqZWN0LlxuICpcbiAqIEBwYXJhbSBuYW1lIG5hbWUgb2YgdGhlIGdsb2JhbCBzaW5nbGV0b24gb24gX19TRU5UUllfX1xuICogQHBhcmFtIGNyZWF0b3IgY3JlYXRvciBGYWN0b3J5IGZ1bmN0aW9uIHRvIGNyZWF0ZSB0aGUgc2luZ2xldG9uIGlmIGl0IGRvZXNuJ3QgYWxyZWFkeSBleGlzdCBvbiBgX19TRU5UUllfX2BcbiAqIEBwYXJhbSBvYmogKE9wdGlvbmFsKSBUaGUgZ2xvYmFsIG9iamVjdCBvbiB3aGljaCB0byBsb29rIGZvciBgX19TRU5UUllfX2AsIGlmIG5vdCBgR0xPQkFMX09CSmAncyByZXR1cm4gdmFsdWVcbiAqIEByZXR1cm5zIHRoZSBzaW5nbGV0b25cbiAqL1xuZnVuY3Rpb24gZ2V0R2xvYmFsU2luZ2xldG9uKG5hbWUsIGNyZWF0b3IsIG9iaikge1xuICBjb25zdCBnYmwgPSAob2JqIHx8IEdMT0JBTF9PQkopIDtcbiAgY29uc3QgX19TRU5UUllfXyA9IChnYmwuX19TRU5UUllfXyA9IGdibC5fX1NFTlRSWV9fIHx8IHt9KTtcbiAgY29uc3Qgc2luZ2xldG9uID0gX19TRU5UUllfX1tuYW1lXSB8fCAoX19TRU5UUllfX1tuYW1lXSA9IGNyZWF0b3IoKSk7XG4gIHJldHVybiBzaW5nbGV0b247XG59XG5cbmV4cG9ydCB7IEdMT0JBTF9PQkosIGdldEdsb2JhbE9iamVjdCwgZ2V0R2xvYmFsU2luZ2xldG9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13b3JsZHdpZGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/worldwide.js\n");

/***/ }),

/***/ "./src/CallObjectLoader.js":
/*!*********************************!*\
  !*** ./src/CallObjectLoader.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CallObjectLoader; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ \"./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _shared_with_pluot_core_Environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./shared-with-pluot-core/Environment */ \"./src/shared-with-pluot-core/Environment.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\nfunction prepareDailyConfig(callFrameId, avoidEval) {\n  // Add a global callFrameId so we can have both iframes and one\n  // call object mode calls live at the same time\n  if (!window._dailyConfig) {\n    window._dailyConfig = {};\n  }\n  window._dailyConfig.callFrameId = callFrameId;\n  window._dailyConfig.avoidEval = avoidEval;\n}\nvar CallObjectLoader = /*#__PURE__*/function () {\n  function CallObjectLoader() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, CallObjectLoader);\n    this._currentLoad = null;\n  }\n\n  /**\n   * Loads the call object bundle (if needed), then invokes the callback\n   * function, which takes one boolean argument whose value is true if the\n   * load was a no-op.\n   *\n   * No-op loads can happen when leaving a meeting and then later joining one.\n   * Since the call object bundle sets up global state in the same scope as the\n   * app code consuming it, it only needs to be loaded and executed once ever.\n   *\n   * @param callFrameId A string identifying this \"call frame\", to distinguish it\n   *  from other iframe-based calls for message channel purposes.\n   * @param avoidEval Whether to use the new eval-less loading mechanism on web\n   *  (LoadAttempt_Web) instead of the legacy loading mechanism\n   *  (LoadAttempt_ReactNative).\n   * @param successCallback Callback function that takes a wasNoOp argument\n   *  (true if call object script was ever loaded once before).\n   * @param failureCallback Callback function that takes an error message and a\n   *   boolean indicating whether an automatic retry is slated to occur.\n   */\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(CallObjectLoader, [{\n    key: \"load\",\n    value: function load(callFrameId, avoidEval, successCallback, failureCallback) {\n      if (this.loaded) {\n        window._dailyCallObjectSetup(callFrameId);\n        successCallback(true); // true = \"this load() was a no-op\"\n        return;\n      }\n      prepareDailyConfig(callFrameId, avoidEval);\n\n      // Cancel current load, if any\n      this._currentLoad && this._currentLoad.cancel();\n\n      // Start a new load\n      this._currentLoad = new LoadOperation(function () {\n        successCallback(false); // false = \"this load() wasn't a no-op\"\n      }, failureCallback);\n      this._currentLoad.start();\n    }\n\n    /**\n     * Cancel loading the call object bundle. No callbacks will be invoked.\n     */\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this._currentLoad && this._currentLoad.cancel();\n    }\n\n    /**\n     * Returns a boolean indicating whether the call object bundle has been\n     * loaded and executed.\n     */\n  }, {\n    key: \"loaded\",\n    get: function get() {\n      return this._currentLoad && this._currentLoad.succeeded;\n    }\n  }]);\n  return CallObjectLoader;\n}();\n\nvar LOAD_ATTEMPTS = 3;\nvar LOAD_ATTEMPT_DELAY = 3 * 1000;\n\n/**\n * Represents a call machine bundle load.\n *\n * Since a load may fail, it may need to retry a few times. It delegates each\n * attempt to the LoadAttempt class.\n */\nvar LoadOperation = /*#__PURE__*/function () {\n  // Here failureCallback takes the same parameters as CallObjectLoader.load,\n  // and successCallback takes no parameters.\n  function LoadOperation(successCallback, failureCallback) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, LoadOperation);\n    this._attemptsRemaining = LOAD_ATTEMPTS;\n    this._currentAttempt = null;\n    this._successCallback = successCallback;\n    this._failureCallback = failureCallback;\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(LoadOperation, [{\n    key: \"start\",\n    value: function start() {\n      var _this = this;\n      // Bail if this load has already started\n      if (this._currentAttempt) {\n        return;\n      }\n\n      // console.log(\"[LoadOperation] starting...\");\n\n      var retryOrFailureCallback = function retryOrFailureCallback(errorMessage) {\n        if (_this._currentAttempt.cancelled) {\n          // console.log(\"[LoadOperation] cancelled\");\n          return;\n        }\n        _this._attemptsRemaining--;\n        _this._failureCallback(errorMessage, _this._attemptsRemaining > 0); // true = \"will retry\"\n        if (_this._attemptsRemaining <= 0) {\n          // Should never be <0, but just being extra careful here\n          // console.log(\"[LoadOperation] ran out of attempts\");\n          return;\n        }\n        setTimeout(function () {\n          if (_this._currentAttempt.cancelled) {\n            // console.log(\"[LoadOperation] cancelled\");\n            return;\n          }\n          _this._currentAttempt = new LoadAttempt(_this._successCallback, retryOrFailureCallback);\n          _this._currentAttempt.start();\n        }, LOAD_ATTEMPT_DELAY);\n      };\n      this._currentAttempt = new LoadAttempt(this._successCallback, retryOrFailureCallback);\n      this._currentAttempt.start();\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this._currentAttempt && this._currentAttempt.cancel();\n    }\n  }, {\n    key: \"cancelled\",\n    get: function get() {\n      return this._currentAttempt && this._currentAttempt.cancelled;\n    }\n  }, {\n    key: \"succeeded\",\n    get: function get() {\n      return this._currentAttempt && this._currentAttempt.succeeded;\n    }\n  }]);\n  return LoadOperation;\n}();\nvar LoadAttemptAbortedError = /*#__PURE__*/function (_Error) {\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(LoadAttemptAbortedError, _Error);\n  var _super = _createSuper(LoadAttemptAbortedError);\n  function LoadAttemptAbortedError() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, LoadAttemptAbortedError);\n    return _super.apply(this, arguments);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(LoadAttemptAbortedError);\n}( /*#__PURE__*/(0,_babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(Error));\nvar LOAD_ATTEMPT_NETWORK_TIMEOUT = 20 * 1000;\n\n/**\n * Represents a single call machine bundle load attempt.\n *\n * The LoadOperation does the heavy lifting in terms of coordinating different\n * LoadAttempts (i.e. kicking off retries and handling interruptions by, say, a\n * user calling leave()). It will ask each LoadAttempt to start() and, if\n * necessary, cancel().\n *\n * The LoadAttempt itself only needs to concern itself with obeying those\n * requests, invoking the success or failure callbacks at the end of an attempt,\n * and setting its cancelled and succeeded flags as appropriate.\n *\n * Since we support running both on Web and React Native and there are slightly\n * different constraints on each, there are two different implementations of\n * LoadAttempt:\n * - On Web, we use an HTMLScriptElement to load the bundle in order\n * to allow our users to set a CSP (Content Security Policy) without\n * 'unsafe-eval'. The alternative would be using fetch() + Function()/eval().\n * - On React Native, we use fetch() + Function(). There is no HTMLScriptElement\n * in React Native and also no CSP consideration to contend with.\n */\nvar LoadAttempt = /*#__PURE__*/function () {\n  function LoadAttempt(successCallback, failureCallback) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, LoadAttempt);\n    this._loadAttemptImpl = (0,_shared_with_pluot_core_Environment__WEBPACK_IMPORTED_MODULE_8__.isReactNative)() || !_dailyConfig.avoidEval ? new LoadAttempt_ReactNative(successCallback, failureCallback) : new LoadAttempt_Web(successCallback, failureCallback);\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(LoadAttempt, [{\n    key: \"start\",\n    value: function () {\n      var _start = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        return this._loadAttemptImpl.start();\n      });\n      function start() {\n        return _start.apply(this, arguments);\n      }\n      return start;\n    }()\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this._loadAttemptImpl.cancel();\n    }\n  }, {\n    key: \"cancelled\",\n    get: function get() {\n      return this._loadAttemptImpl.cancelled;\n    }\n  }, {\n    key: \"succeeded\",\n    get: function get() {\n      return this._loadAttemptImpl.succeeded;\n    }\n  }]);\n  return LoadAttempt;\n}();\n/**\n * Represents a single call machine bundle load attempt in React Native.\n *\n * NOTE: this is also the legacy web code path, when avoidEval is not set.\n */\nvar LoadAttempt_ReactNative = /*#__PURE__*/function () {\n  // Here successCallback takes no parameters, and failureCallback takes a\n  // single error message parameter.\n  function LoadAttempt_ReactNative(successCallback, failureCallback) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, LoadAttempt_ReactNative);\n    this.cancelled = false;\n    this.succeeded = false;\n    this._networkTimedOut = false;\n    this._networkTimeout = null;\n    this._iosCache = typeof iOSCallObjectBundleCache !== 'undefined' && iOSCallObjectBundleCache;\n    this._refetchHeaders = null;\n    this._successCallback = successCallback;\n    this._failureCallback = failureCallback;\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(LoadAttempt_ReactNative, [{\n    key: \"start\",\n    value: function () {\n      var _start2 = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        // console.log(\"[LoadAttempt_ReactNative] starting...\");\n        var url = (0,_utils__WEBPACK_IMPORTED_MODULE_9__.callObjectBundleUrl)();\n        var loadedFromIOSCache = yield this._tryLoadFromIOSCache(url);\n        !loadedFromIOSCache && this._loadFromNetwork(url);\n      });\n      function start() {\n        return _start2.apply(this, arguments);\n      }\n      return start;\n    }()\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      clearTimeout(this._networkTimeout);\n      this.cancelled = true;\n    }\n\n    /**\n     * Try to load the call object bundle from the iOS cache.\n     * This is a React Native-specific workaround for the fact that the iOS HTTP\n     * cache won't cache the call object bundle due to size.\n     *\n     * @param {string} url The url of the call object bundle to try to load.\n     * @returns A Promise that resolves to false if the load failed or true\n     * otherwise (if it succeeded or was cancelled), indicating whether a network\n     * load attempt is needed.\n     */\n  }, {\n    key: \"_tryLoadFromIOSCache\",\n    value: function () {\n      var _tryLoadFromIOSCache2 = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (url) {\n        // console.log(\"[LoadAttempt_ReactNative] trying to load from iOS cache...\");\n\n        // Bail if we're not running in iOS\n        if (!this._iosCache) {\n          // console.log(\"[LoadAttempt_ReactNative] not iOS, so not checking iOS cache\");\n          return false;\n        }\n        try {\n          var cacheResponse = yield this._iosCache.get(url);\n\n          // If load has been cancelled, report work complete (no network load\n          // needed)\n          if (this.cancelled) {\n            return true;\n          }\n\n          // If cache miss, report failure (network load needed)\n          if (!cacheResponse) {\n            // console.log(\"[LoadAttempt_ReactNative] iOS cache miss\");\n            return false;\n          }\n\n          // If cache expired, store refetch headers to use later and report\n          // failure (network load needed)\n          if (!cacheResponse.code) {\n            // console.log(\n            //   \"[LoadAttempt_ReactNative] iOS cache expired, setting refetch headers\",\n            //   cacheResponse.refetchHeaders\n            // );\n            this._refetchHeaders = cacheResponse.refetchHeaders;\n            return false;\n          }\n\n          // Cache is fresh, so run code and success callback, and report work\n          // complete (no network load needed)\n          // console.log(\"[LoadAttempt_ReactNative] iOS cache hit\");\n          Function('\"use strict\";' + cacheResponse.code)();\n          this.succeeded = true;\n          this._successCallback();\n          return true;\n        } catch (e) {\n          // Report failure\n          // console.log(\"[LoadAttempt_ReactNative] failure running bundle from iOS cache\", e);\n          return false;\n        }\n      });\n      function _tryLoadFromIOSCache(_x) {\n        return _tryLoadFromIOSCache2.apply(this, arguments);\n      }\n      return _tryLoadFromIOSCache;\n    }()\n    /**\n     * Try to load the call object bundle from the network.\n     * @param {string} url The url of the call object bundle to load.\n     */\n  }, {\n    key: \"_loadFromNetwork\",\n    value: function () {\n      var _loadFromNetwork2 = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (url) {\n        var _this2 = this;\n        // console.log(\"[LoadAttempt_ReactNative] trying to load from network...\");\n        this._networkTimeout = setTimeout(function () {\n          _this2._networkTimedOut = true;\n          _this2._failureCallback(\"Timed out (>\".concat(LOAD_ATTEMPT_NETWORK_TIMEOUT, \" ms) when loading call object bundle \").concat(url));\n        }, LOAD_ATTEMPT_NETWORK_TIMEOUT);\n        try {\n          var fetchOptions = this._refetchHeaders ? {\n            headers: this._refetchHeaders\n          } : {};\n          var response = yield fetch(url, fetchOptions);\n          clearTimeout(this._networkTimeout);\n\n          // Check that load wasn't cancelled or timed out during fetch\n          if (this.cancelled || this._networkTimedOut) {\n            throw new LoadAttemptAbortedError();\n          }\n          var code = yield this._getBundleCodeFromResponse(url, response);\n\n          // Check again that load wasn't cancelled during reading response\n          if (this.cancelled) {\n            throw new LoadAttemptAbortedError();\n          }\n\n          // Execute bundle code\n          Function('\"use strict\";' + code)();\n\n          // Since code ran successfully (no errors thrown), cache it and call\n          // success callback\n          // console.log(\"[LoadAttempt_ReactNative] succeeded...\");\n          this._iosCache && this._iosCache.set(url, code, response.headers);\n          this.succeeded = true;\n          this._successCallback();\n        } catch (e) {\n          clearTimeout(this._networkTimeout);\n\n          // We need to check all these conditions since long outstanding\n          // requests can fail *after* cancellation or timeout (i.e. checking for\n          // LoadAttemptAbortedError is not enough).\n          if (e instanceof LoadAttemptAbortedError || this.cancelled || this._networkTimedOut) {\n            // console.log(\"[LoadAttempt_ReactNative] cancelled or timed out\");\n            return;\n          }\n          this._failureCallback(\"Failed to load call object bundle \".concat(url, \": \").concat(e));\n        }\n      });\n      function _loadFromNetwork(_x2) {\n        return _loadFromNetwork2.apply(this, arguments);\n      }\n      return _loadFromNetwork;\n    }()\n  }, {\n    key: \"_getBundleCodeFromResponse\",\n    value: function () {\n      var _getBundleCodeFromResponse2 = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (url, response) {\n        // Normal success case\n        if (response.ok) {\n          return yield response.text();\n        }\n\n        // React Native iOS-specific case: 304 Not-Modified response\n        // (Since we're doing manual cache management for iOS, the fetch mechanism\n        //  doesn't opaquely handle 304s for us)\n        if (this._iosCache && response.status === 304) {\n          var cacheResponse = yield this._iosCache.renew(url, response.headers);\n          return cacheResponse.code;\n        }\n        throw new Error(\"Received \".concat(response.status, \" response\"));\n      });\n      function _getBundleCodeFromResponse(_x3, _x4) {\n        return _getBundleCodeFromResponse2.apply(this, arguments);\n      }\n      return _getBundleCodeFromResponse;\n    }()\n  }]);\n  return LoadAttempt_ReactNative;\n}();\n/**\n * Represents a single call machine bundle load attempt on Web.\n *\n * While this attempt is active - that is, it hasn't been cancelled or hasn't\n * timed out - it signs itself up to be on a global \"call machine load\n * waitlist\", which represents the set of load attempts that want the call\n * machine to finish loading.\n *\n * Because...\n * a) ...\"finishing loading\" is something that happens on the call machine\n *    bundle side (i.e. not in this code) once it's been downloaded and is\n *    executing, and...\n * b) ...we actually *can't* stop the call machine bundle from running after an\n *    attempt has been cancelled or timed out, if the bundle finishes\n *    downloading (HTMLScriptElement doesn't have a cancel() method)...\n * ...we need a way of telling the call machine bundle \"hey someone's still\n * interested in you loading\".\n *\n * Note that there really shouldn't be more than one active load attempt at a\n * time. But this load attempt doesn't know that! Hence the waitlist being a\n * Set() and each attempt being responsible only for adding/removing itself from\n * the waitlist. This approach - as opposed to a global boolean or counter -\n * felt like the most bulletproof (i.e. future- and race-condition-proof) way\n * of implementing this synchronization.\n */\nvar LoadAttempt_Web = /*#__PURE__*/function () {\n  function LoadAttempt_Web(successCallback, failureCallback) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, LoadAttempt_Web);\n    this.cancelled = false;\n    this.succeeded = false;\n    this._successCallback = successCallback;\n    this._failureCallback = failureCallback;\n    this._attemptId = (0,_utils__WEBPACK_IMPORTED_MODULE_9__.randomStringId)();\n    this._networkTimeout = null;\n    this._scriptElement = null;\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(LoadAttempt_Web, [{\n    key: \"start\",\n    value: function () {\n      var _start3 = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        // Initialize global state tracking active load attempts\n        if (!window._dailyCallMachineLoadWaitlist) {\n          window._dailyCallMachineLoadWaitlist = new Set();\n        }\n\n        // Get call machine bundle URL\n        var url = (0,_utils__WEBPACK_IMPORTED_MODULE_9__.callObjectBundleUrl)();\n\n        // Sanity check that we're running in a DOM/web context\n        if ((typeof document === \"undefined\" ? \"undefined\" : (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(document)) !== 'object') {\n          this._failureCallback(\"Call object bundle must be loaded in a DOM/web context\");\n          return;\n        }\n        this._startLoading(url);\n      });\n      function start() {\n        return _start3.apply(this, arguments);\n      }\n      return start;\n    }()\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      // console.log('[LoadAttempt_Web] cancelled');\n      this._stopLoading();\n      this.cancelled = true;\n    }\n  }, {\n    key: \"_startLoading\",\n    value: function _startLoading(url) {\n      var _this3 = this;\n      // console.log('[LoadAttempt_Web] trying to load...');\n      this._signUpForCallMachineLoadWaitlist();\n\n      // Start a timeout, after which we'll consider this attempt a failure\n      this._networkTimeout = setTimeout(function () {\n        // console.log('[LoadAttempt_Web] timed out');\n        _this3._stopLoading();\n        _this3._failureCallback(\"Timed out (>\".concat(LOAD_ATTEMPT_NETWORK_TIMEOUT, \" ms) when loading call object bundle \").concat(url));\n      }, LOAD_ATTEMPT_NETWORK_TIMEOUT);\n\n      // Create a script tag to download the call machine bundle\n      var head = document.getElementsByTagName('head')[0],\n        script = document.createElement('script');\n      this._scriptElement = script;\n\n      // On load, consider this attempt a success\n      script.onload = /*#__PURE__*/(0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        // console.log('[LoadAttempt_Web] succeeded');\n        _this3._stopLoading();\n        _this3.succeeded = true;\n        _this3._successCallback();\n      });\n\n      // On error, consider this attempt a failure\n      script.onerror = /*#__PURE__*/function () {\n        var _ref2 = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (e) {\n          // console.log('[LoadAttempt_Web] failed');\n          _this3._stopLoading();\n          _this3._failureCallback(\"Failed to load call object bundle \".concat(e.target.src));\n        });\n        return function (_x5) {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      // Start the download\n      script.src = url;\n      head.appendChild(script);\n    }\n  }, {\n    key: \"_stopLoading\",\n    value: function _stopLoading() {\n      this._withdrawFromCallMachineLoadWaitlist();\n      clearTimeout(this._networkTimeout);\n      if (this._scriptElement) {\n        this._scriptElement.onload = null;\n        this._scriptElement.onerror = null;\n      }\n    }\n  }, {\n    key: \"_signUpForCallMachineLoadWaitlist\",\n    value: function _signUpForCallMachineLoadWaitlist() {\n      window._dailyCallMachineLoadWaitlist.add(this._attemptId);\n    }\n  }, {\n    key: \"_withdrawFromCallMachineLoadWaitlist\",\n    value: function _withdrawFromCallMachineLoadWaitlist() {\n      window._dailyCallMachineLoadWaitlist.delete(this._attemptId);\n    }\n  }]);\n  return LoadAttempt_Web;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/CallObjectLoader.js\n");

/***/ }),

/***/ "./src/Participant.js":
/*!****************************!*\
  !*** ./src/Participant.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addCustomTracks\": function() { return /* binding */ addCustomTracks; },\n/* harmony export */   \"addLegacyTracks\": function() { return /* binding */ addLegacyTracks; },\n/* harmony export */   \"addTracks\": function() { return /* binding */ addTracks; },\n/* harmony export */   \"isPredefinedTrack\": function() { return /* binding */ isPredefinedTrack; }\n/* harmony export */ });\n/* harmony import */ var _shared_with_pluot_core_selectors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shared-with-pluot-core/selectors */ \"./src/shared-with-pluot-core/selectors.js\");\n\n\n// Adds tracks to daily-js Participant object.\nfunction addTracks(p) {\n  var state = store.getState();\n  for (var _i = 0, _arr = ['cam', 'screen']; _i < _arr.length; _i++) {\n    var type = _arr[_i];\n    for (var _i2 = 0, _arr2 = ['video', 'audio']; _i2 < _arr2.length; _i2++) {\n      var kind = _arr2[_i2];\n      var key = type === 'cam' ? kind : \"screen\".concat(kind.charAt(0).toUpperCase() + kind.slice(1));\n      var trackInfo = p.tracks[key];\n      if (trackInfo) {\n        var track = p.local ? (0,_shared_with_pluot_core_selectors__WEBPACK_IMPORTED_MODULE_0__.getLocalTrack)(state, type, kind) : (0,_shared_with_pluot_core_selectors__WEBPACK_IMPORTED_MODULE_0__.getRemoteTrack)(state, p.session_id, type, kind);\n        if (trackInfo.state === 'playable') {\n          trackInfo.track = track;\n        }\n        // Set \"persistent\" track field where track is present even if not \"playable\"\n        trackInfo.persistentTrack = track;\n      }\n    }\n  }\n}\n\n// todo: refactor so that his logic is part of addTracks and friends()\nfunction addCustomTracks(p) {\n  try {\n    var state = store.getState();\n    for (var trackEntryKey in p.tracks) {\n      if (isPredefinedTrack(trackEntryKey)) {\n        continue;\n      }\n      var kind = p.tracks[trackEntryKey].kind;\n      if (!kind) {\n        console.error('unknown type for custom track');\n        continue;\n      }\n      var trackInfo = p.tracks[trackEntryKey];\n      if (trackInfo) {\n        var track = p.local ? (0,_shared_with_pluot_core_selectors__WEBPACK_IMPORTED_MODULE_0__.getLocalCustomTrack)(state, trackEntryKey, kind) : (0,_shared_with_pluot_core_selectors__WEBPACK_IMPORTED_MODULE_0__.getRemoteTrack)(state, p.session_id, trackEntryKey, kind);\n        if (trackInfo.state === 'playable') {\n          p.tracks[trackEntryKey].track = track;\n        }\n        trackInfo.persistentTrack = track;\n      }\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\nfunction isPredefinedTrack(trackEntryKey) {\n  return ['video', 'audio', 'screenVideo', 'screenAudio'].includes(trackEntryKey);\n}\n\n// Adds tracks to daily-js Participant object.\nfunction addLegacyTracks(p, prevP) {\n  var state = store.getState();\n  if (p.local) {\n    if (p.audio) {\n      try {\n        p.audioTrack = state.local.streams.cam.stream.getAudioTracks()[0];\n        if (!p.audioTrack) {\n          p.audio = false;\n        }\n      } catch (e) {}\n    }\n    if (p.video) {\n      try {\n        p.videoTrack = state.local.streams.cam.stream.getVideoTracks()[0];\n        if (!p.videoTrack) {\n          p.video = false;\n        }\n      } catch (e) {}\n    }\n    if (p.screen) {\n      try {\n        p.screenVideoTrack = state.local.streams.screen.stream.getVideoTracks()[0];\n        p.screenAudioTrack = state.local.streams.screen.stream.getAudioTracks()[0];\n        if (!(p.screenVideoTrack || p.screenAudioTrack)) {\n          p.screen = false;\n        }\n      } catch (e) {}\n    }\n    return;\n  }\n  var connected = true; // default to true to minimize impact of new bugs\n  // as of 11/20/2019 when this block of code was\n  // first written\n  try {\n    var sp = state.participants[p.session_id];\n    if (sp && sp.public && sp.public.rtcType && sp.public.rtcType.impl === 'peer-to-peer') {\n      if (sp.private && !['connected', 'completed'].includes(sp.private.peeringState)) {\n        connected = false;\n      }\n    }\n  } catch (e) {\n    console.error(e);\n  }\n  if (!connected) {\n    p.audio = false;\n    p.audioTrack = false;\n    p.video = false;\n    p.videoTrack = false;\n    p.screen = false;\n    p.screenTrack = false;\n    return;\n  }\n  try {\n    var allStreams = state.streams;\n\n    // find audio track\n    if (p.audio && (0,_shared_with_pluot_core_selectors__WEBPACK_IMPORTED_MODULE_0__.getLocalIsSubscribedToTrack)(state, p.session_id, 'cam-audio')) {\n      var audioTrack = (0,_shared_with_pluot_core_selectors__WEBPACK_IMPORTED_MODULE_0__.getRemoteTrack)(state, p.session_id, 'cam', 'audio');\n      if (audioTrack) {\n        if (prevP && prevP.audioTrack && prevP.audioTrack.id === audioTrack.id) {\n          // if we have an apparently identical audio track already in\n          // our participant struct leave it in place to avoid flicker\n          // during quick muted/unmuted PeerConnection cycles. we'll update\n          // audio/video muted at the app level via signaling\n          p.audioTrack = audioTrack;\n        } else if (!audioTrack.muted) {\n          // otherwise, add the found track if it's not muted\n          p.audioTrack = audioTrack;\n        }\n      }\n      if (!p.audioTrack) {\n        p.audio = false;\n      }\n    }\n    // find video track\n    if (p.video && (0,_shared_with_pluot_core_selectors__WEBPACK_IMPORTED_MODULE_0__.getLocalIsSubscribedToTrack)(state, p.session_id, 'cam-video')) {\n      var videoTrack = (0,_shared_with_pluot_core_selectors__WEBPACK_IMPORTED_MODULE_0__.getRemoteTrack)(state, p.session_id, 'cam', 'video');\n      if (videoTrack) {\n        if (prevP && prevP.videoTrack && prevP.videoTrack.id === videoTrack.id) {\n          p.videoTrack = videoTrack;\n        } else if (!videoTrack.muted) {\n          // otherwise, add the found track if it's not muted\n          p.videoTrack = videoTrack;\n        }\n      }\n      if (!p.videoTrack) {\n        p.video = false;\n      }\n    }\n\n    // find screen-share audio track\n    if (p.screen && (0,_shared_with_pluot_core_selectors__WEBPACK_IMPORTED_MODULE_0__.getLocalIsSubscribedToTrack)(state, p.session_id, 'screen-audio')) {\n      var screenAudioTrack = (0,_shared_with_pluot_core_selectors__WEBPACK_IMPORTED_MODULE_0__.getRemoteTrack)(state, p.session_id, 'screen', 'audio');\n      if (screenAudioTrack) {\n        if (prevP && prevP.screenAudioTrack && prevP.screenAudioTrack.id === screenAudioTrack.id) {\n          p.screenAudioTrack = screenAudioTrack;\n        } else if (!screenAudioTrack.muted) {\n          // otherwise, add the found track if it's not muted\n          p.screenAudioTrack = screenAudioTrack;\n        }\n      }\n    }\n    // find screen-share video track\n    if (p.screen && (0,_shared_with_pluot_core_selectors__WEBPACK_IMPORTED_MODULE_0__.getLocalIsSubscribedToTrack)(state, p.session_id, 'screen-video')) {\n      var screenVideoTrack = (0,_shared_with_pluot_core_selectors__WEBPACK_IMPORTED_MODULE_0__.getRemoteTrack)(state, p.session_id, 'screen', 'video');\n      if (screenVideoTrack) {\n        if (prevP && prevP.screenVideoTrack && prevP.screenVideoTrack.id === screenVideoTrack.id) {\n          p.screenVideoTrack = screenVideoTrack;\n        } else if (!screenVideoTrack.muted) {\n          // otherwise, add the found track if it's not muted\n          // note: there is an issue here with timing ... Chrome (and\n          // possibly other browsers), gets a video track that's initially\n          // not muted, for an audio-only screenshare. The track\n          // switches to muted fairly quickly, but we don't have any\n          // logic in place to respond to that. todo: fix this so that,\n          // at the very least we get a track-stopped event when the\n          // \"empty\" track switches to muted.\n          p.screenVideoTrack = screenVideoTrack;\n        }\n      }\n    }\n    if (!(p.screenVideoTrack || p.screenAudioTrack)) {\n      p.screen = false;\n    }\n  } catch (e) {\n    console.error('unexpected error matching up tracks', e);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Participant.js\n");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Daily = __webpack_require__(/*! ./module.js */ \"./src/module.js\");\nmodule.exports = Daily.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWFpbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFNQSxLQUFLLEdBQUdDLG1CQUFPLENBQUMsb0NBQWEsQ0FBQztBQUNwQ0MsTUFBTSxDQUFDQyxPQUFPLEdBQUdILEtBQUssQ0FBQ0ksT0FBTyIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vc3JjL21haW4uanM/NTZkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBEYWlseSA9IHJlcXVpcmUoJy4vbW9kdWxlLmpzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IERhaWx5LmRlZmF1bHQ7XG4iXSwibmFtZXMiOlsiRGFpbHkiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/main.js\n");

/***/ }),

/***/ "./src/module.js":
/*!***********************!*\
  !*** ./src/module.js ***!
  \***********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DAILY_ACCESS_LEVEL_FULL\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_ACCESS_LEVEL_FULL; },\n/* harmony export */   \"DAILY_ACCESS_LEVEL_LOBBY\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_ACCESS_LEVEL_LOBBY; },\n/* harmony export */   \"DAILY_ACCESS_LEVEL_NONE\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_ACCESS_LEVEL_NONE; },\n/* harmony export */   \"DAILY_ACCESS_UNKNOWN\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_ACCESS_UNKNOWN; },\n/* harmony export */   \"DAILY_CAMERA_ERROR_CAM_AND_MIC_IN_USE\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_CAMERA_ERROR_CAM_AND_MIC_IN_USE; },\n/* harmony export */   \"DAILY_CAMERA_ERROR_CAM_IN_USE\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_CAMERA_ERROR_CAM_IN_USE; },\n/* harmony export */   \"DAILY_CAMERA_ERROR_CONSTRAINTS\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_CAMERA_ERROR_CONSTRAINTS; },\n/* harmony export */   \"DAILY_CAMERA_ERROR_MIC_IN_USE\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_CAMERA_ERROR_MIC_IN_USE; },\n/* harmony export */   \"DAILY_CAMERA_ERROR_NOT_FOUND\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_CAMERA_ERROR_NOT_FOUND; },\n/* harmony export */   \"DAILY_CAMERA_ERROR_PERMISSIONS\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_CAMERA_ERROR_PERMISSIONS; },\n/* harmony export */   \"DAILY_CAMERA_ERROR_UNDEF_MEDIADEVICES\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_CAMERA_ERROR_UNDEF_MEDIADEVICES; },\n/* harmony export */   \"DAILY_CAMERA_ERROR_UNKNOWN\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_CAMERA_ERROR_UNKNOWN; },\n/* harmony export */   \"DAILY_EVENT_ACCESS_STATE_UPDATED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_ACCESS_STATE_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_ACTIVE_SPEAKER_CHANGE\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_ACTIVE_SPEAKER_CHANGE; },\n/* harmony export */   \"DAILY_EVENT_ACTIVE_SPEAKER_MODE_CHANGE\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_ACTIVE_SPEAKER_MODE_CHANGE; },\n/* harmony export */   \"DAILY_EVENT_APP_MSG\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_APP_MSG; },\n/* harmony export */   \"DAILY_EVENT_CAMERA_ERROR\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_CAMERA_ERROR; },\n/* harmony export */   \"DAILY_EVENT_CPU_LOAD_CHANGE\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_CPU_LOAD_CHANGE; },\n/* harmony export */   \"DAILY_EVENT_ERROR\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_ERROR; },\n/* harmony export */   \"DAILY_EVENT_EXIT_FULLSCREEN\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_EXIT_FULLSCREEN; },\n/* harmony export */   \"DAILY_EVENT_FULLSCREEN\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_FULLSCREEN; },\n/* harmony export */   \"DAILY_EVENT_IFRAME_LAUNCH_CONFIG\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_IFRAME_LAUNCH_CONFIG; },\n/* harmony export */   \"DAILY_EVENT_IFRAME_READY_FOR_LAUNCH_CONFIG\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_IFRAME_READY_FOR_LAUNCH_CONFIG; },\n/* harmony export */   \"DAILY_EVENT_INPUT_SETTINGS_UPDATED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_INPUT_SETTINGS_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_JOINED_MEETING\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_JOINED_MEETING; },\n/* harmony export */   \"DAILY_EVENT_JOINING_MEETING\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_JOINING_MEETING; },\n/* harmony export */   \"DAILY_EVENT_LANG_UPDATED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LANG_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_LEFT_MEETING\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LEFT_MEETING; },\n/* harmony export */   \"DAILY_EVENT_LIVE_STREAMING_ERROR\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LIVE_STREAMING_ERROR; },\n/* harmony export */   \"DAILY_EVENT_LIVE_STREAMING_STARTED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LIVE_STREAMING_STARTED; },\n/* harmony export */   \"DAILY_EVENT_LIVE_STREAMING_STOPPED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LIVE_STREAMING_STOPPED; },\n/* harmony export */   \"DAILY_EVENT_LIVE_STREAMING_UPDATED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LIVE_STREAMING_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_LOADED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOADED; },\n/* harmony export */   \"DAILY_EVENT_LOADING\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOADING; },\n/* harmony export */   \"DAILY_EVENT_LOAD_ATTEMPT_FAILED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOAD_ATTEMPT_FAILED; },\n/* harmony export */   \"DAILY_EVENT_LOCAL_SCREEN_SHARE_CANCELED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOCAL_SCREEN_SHARE_CANCELED; },\n/* harmony export */   \"DAILY_EVENT_LOCAL_SCREEN_SHARE_STARTED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOCAL_SCREEN_SHARE_STARTED; },\n/* harmony export */   \"DAILY_EVENT_LOCAL_SCREEN_SHARE_STOPPED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOCAL_SCREEN_SHARE_STOPPED; },\n/* harmony export */   \"DAILY_EVENT_MEETING_SESSION_DATA_ERROR\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_MEETING_SESSION_DATA_ERROR; },\n/* harmony export */   \"DAILY_EVENT_MEETING_SESSION_STATE_UPDATED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_MEETING_SESSION_STATE_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_MEETING_SESSION_SUMMARY_UPDATED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_MEETING_SESSION_SUMMARY_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_NETWORK_CONNECTION\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_NETWORK_CONNECTION; },\n/* harmony export */   \"DAILY_EVENT_NETWORK_QUALITY_CHANGE\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_NETWORK_QUALITY_CHANGE; },\n/* harmony export */   \"DAILY_EVENT_NONFATAL_ERROR\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_NONFATAL_ERROR; },\n/* harmony export */   \"DAILY_EVENT_PARTICIPANT_COUNTS_UPDATED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_PARTICIPANT_COUNTS_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_PARTICIPANT_JOINED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_PARTICIPANT_JOINED; },\n/* harmony export */   \"DAILY_EVENT_PARTICIPANT_LEFT\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_PARTICIPANT_LEFT; },\n/* harmony export */   \"DAILY_EVENT_PARTICIPANT_UPDATED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_PARTICIPANT_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_RECEIVE_SETTINGS_UPDATED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECEIVE_SETTINGS_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_RECORDING_DATA\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECORDING_DATA; },\n/* harmony export */   \"DAILY_EVENT_RECORDING_ERROR\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECORDING_ERROR; },\n/* harmony export */   \"DAILY_EVENT_RECORDING_STARTED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECORDING_STARTED; },\n/* harmony export */   \"DAILY_EVENT_RECORDING_STATS\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECORDING_STATS; },\n/* harmony export */   \"DAILY_EVENT_RECORDING_STOPPED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECORDING_STOPPED; },\n/* harmony export */   \"DAILY_EVENT_RECORDING_UPLOAD_COMPLETED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECORDING_UPLOAD_COMPLETED; },\n/* harmony export */   \"DAILY_EVENT_REMOTE_MEDIA_PLAYER_STARTED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_REMOTE_MEDIA_PLAYER_STARTED; },\n/* harmony export */   \"DAILY_EVENT_REMOTE_MEDIA_PLAYER_STOPPED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_REMOTE_MEDIA_PLAYER_STOPPED; },\n/* harmony export */   \"DAILY_EVENT_REMOTE_MEDIA_PLAYER_UPDATED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_REMOTE_MEDIA_PLAYER_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_STARTED_CAMERA\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_STARTED_CAMERA; },\n/* harmony export */   \"DAILY_EVENT_THEME_UPDATED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_THEME_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_TRACK_STARTED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_TRACK_STARTED; },\n/* harmony export */   \"DAILY_EVENT_TRACK_STOPPED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_TRACK_STOPPED; },\n/* harmony export */   \"DAILY_EVENT_TRANSCRIPTION_ERROR\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_TRANSCRIPTION_ERROR; },\n/* harmony export */   \"DAILY_EVENT_TRANSCRIPTION_MSG\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_TRANSCRIPTION_MSG; },\n/* harmony export */   \"DAILY_EVENT_TRANSCRIPTION_STARTED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_TRANSCRIPTION_STARTED; },\n/* harmony export */   \"DAILY_EVENT_TRANSCRIPTION_STOPPED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_TRANSCRIPTION_STOPPED; },\n/* harmony export */   \"DAILY_EVENT_WAITING_PARTICIPANT_ADDED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_WAITING_PARTICIPANT_ADDED; },\n/* harmony export */   \"DAILY_EVENT_WAITING_PARTICIPANT_REMOVED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_WAITING_PARTICIPANT_REMOVED; },\n/* harmony export */   \"DAILY_EVENT_WAITING_PARTICIPANT_UPDATED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_WAITING_PARTICIPANT_UPDATED; },\n/* harmony export */   \"DAILY_FATAL_ERROR_CONNECTION\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_FATAL_ERROR_CONNECTION; },\n/* harmony export */   \"DAILY_FATAL_ERROR_EJECTED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_FATAL_ERROR_EJECTED; },\n/* harmony export */   \"DAILY_FATAL_ERROR_EOL\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_FATAL_ERROR_EOL; },\n/* harmony export */   \"DAILY_FATAL_ERROR_EXP_ROOM\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_FATAL_ERROR_EXP_ROOM; },\n/* harmony export */   \"DAILY_FATAL_ERROR_EXP_TOKEN\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_FATAL_ERROR_EXP_TOKEN; },\n/* harmony export */   \"DAILY_FATAL_ERROR_MEETING_FULL\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_FATAL_ERROR_MEETING_FULL; },\n/* harmony export */   \"DAILY_FATAL_ERROR_NBF_ROOM\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_FATAL_ERROR_NBF_ROOM; },\n/* harmony export */   \"DAILY_FATAL_ERROR_NBF_TOKEN\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_FATAL_ERROR_NBF_TOKEN; },\n/* harmony export */   \"DAILY_FATAL_ERROR_NOT_ALLOWED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_FATAL_ERROR_NOT_ALLOWED; },\n/* harmony export */   \"DAILY_FATAL_ERROR_NO_ROOM\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_FATAL_ERROR_NO_ROOM; },\n/* harmony export */   \"DAILY_RECEIVE_SETTINGS_ALL_PARTICIPANTS_KEY\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_RECEIVE_SETTINGS_ALL_PARTICIPANTS_KEY; },\n/* harmony export */   \"DAILY_RECEIVE_SETTINGS_BASE_KEY\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_RECEIVE_SETTINGS_BASE_KEY; },\n/* harmony export */   \"DAILY_STATE_ERROR\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_ERROR; },\n/* harmony export */   \"DAILY_STATE_JOINED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_JOINED; },\n/* harmony export */   \"DAILY_STATE_JOINING\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_JOINING; },\n/* harmony export */   \"DAILY_STATE_LEFT\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_LEFT; },\n/* harmony export */   \"DAILY_STATE_NEW\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_NEW; },\n/* harmony export */   \"DAILY_TRACK_STATE_BLOCKED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_TRACK_STATE_BLOCKED; },\n/* harmony export */   \"DAILY_TRACK_STATE_INTERRUPTED\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_TRACK_STATE_INTERRUPTED; },\n/* harmony export */   \"DAILY_TRACK_STATE_LOADING\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_TRACK_STATE_LOADING; },\n/* harmony export */   \"DAILY_TRACK_STATE_OFF\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_TRACK_STATE_OFF; },\n/* harmony export */   \"DAILY_TRACK_STATE_PLAYABLE\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_TRACK_STATE_PLAYABLE; },\n/* harmony export */   \"DAILY_TRACK_STATE_SENDABLE\": function() { return /* reexport safe */ _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_TRACK_STATE_SENDABLE; },\n/* harmony export */   \"default\": function() { return /* binding */ DailyIframe; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ \"./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ \"./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var fast_equals__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! fast-equals */ \"./node_modules/fast-equals/dist/fast-equals.js\");\n/* harmony import */ var fast_equals__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(fast_equals__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var bowser__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! bowser */ \"./node_modules/bowser/es5.js\");\n/* harmony import */ var bowser__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(bowser__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/client.js\");\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/transports/fetch.js\");\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./shared-with-pluot-core/CommonIncludes.js */ \"./src/shared-with-pluot-core/CommonIncludes.js\");\n/* harmony import */ var _shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./shared-with-pluot-core/Environment.js */ \"./src/shared-with-pluot-core/Environment.js\");\n/* harmony import */ var _shared_with_pluot_core_script_message_channels_WebMessageChannel__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./shared-with-pluot-core/script-message-channels/WebMessageChannel */ \"./src/shared-with-pluot-core/script-message-channels/WebMessageChannel.js\");\n/* harmony import */ var _shared_with_pluot_core_script_message_channels_ReactNativeMessageChannel__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./shared-with-pluot-core/script-message-channels/ReactNativeMessageChannel */ \"./src/shared-with-pluot-core/script-message-channels/ReactNativeMessageChannel.js\");\n/* harmony import */ var _shared_with_pluot_core_SessionData_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./shared-with-pluot-core/SessionData.js */ \"./src/shared-with-pluot-core/SessionData.js\");\n/* harmony import */ var _CallObjectLoader__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./CallObjectLoader */ \"./src/CallObjectLoader.js\");\n/* harmony import */ var _Participant__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./Participant */ \"./src/Participant.js\");\n/* harmony import */ var _shared_with_pluot_core_DeviceChange_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./shared-with-pluot-core/DeviceChange.js */ \"./src/shared-with-pluot-core/DeviceChange.js\");\n/* harmony import */ var _shared_with_pluot_core_TrackStateUtil__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./shared-with-pluot-core/TrackStateUtil */ \"./src/shared-with-pluot-core/TrackStateUtil.js\");\n\n\n\n\n\n\n\n\n\n\n\nvar _excluded = [\"videoTrack\"],\n  _excluded2 = [\"result\"],\n  _excluded3 = [\"preserveIframe\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// call states\n\n\n// track states\n\n\n// meeting access\n\n\n// receive settings\n\n\n// error types\n\n\n// events\n\nvar _callInstance;\nfunction _setCallInstance(instance) {\n  _callInstance = instance;\n}\n\n// Audio modes for React Native: whether we should configure audio for video\n// calls or audio calls (i.e. whether we should use speakerphone).\nvar NATIVE_AUDIO_MODE_VIDEO_CALL = 'video';\nvar NATIVE_AUDIO_MODE_VOICE_CALL = 'voice';\nvar NATIVE_AUDIO_MODE_IDLE = 'idle';\nvar MAX_RMP_FPS = 30;\nvar MIN_RMP_FPS = 1;\nvar MAX_SIMULCAST_LAYERS = 3;\nvar MAX_SCALE_RESOLUTION_BY = 8;\nvar MAX_LAYER_BITRATE = 2500000;\nvar MIN_LAYER_BITRATE = 100000;\nvar DEFAULT_SESSION_STATE = (0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)() ? {\n  data: {}\n} : {\n  data: {},\n  topology: 'none'\n};\nvar EMPTY_PARTICIPANT_COUNTS = {\n  present: 0,\n  hidden: 0\n};\n\n// Valid ranges for simulcast encodings settings specifically for RMP\nvar rmpSimulcastEncodingsValidRanges = {\n  maxBitrate: {\n    min: MIN_LAYER_BITRATE,\n    max: MAX_LAYER_BITRATE\n  },\n  maxFramerate: {\n    min: MIN_RMP_FPS,\n    max: MAX_RMP_FPS\n  },\n  scaleResolutionDownBy: {\n    min: 1,\n    max: MAX_SCALE_RESOLUTION_BY\n  }\n};\n\n// Valid keys for simulcast encoding settings, generally\nvar simulcastEncodingsValidKeys = Object.keys(rmpSimulcastEncodingsValidRanges);\nvar startRmpSettingsValidKeys = ['state', 'volume', 'simulcastEncodings'];\n//\n//\n//\n\nvar reactNativeConfigType = {\n  androidInCallNotification: {\n    title: 'string',\n    subtitle: 'string',\n    iconName: 'string',\n    disableForCustomOverride: 'boolean'\n  },\n  disableAutoDeviceManagement: {\n    audio: 'boolean',\n    video: 'boolean'\n  }\n};\nvar customTrayButtonsType = {\n  id: {\n    iconPath: 'string',\n    iconPathDarkMode: 'string',\n    label: 'string',\n    tooltip: 'string'\n  }\n};\nvar customIntegrationsType = {\n  id: {\n    allow: 'string',\n    controlledBy: \"'*' | 'owners' | string[]\",\n    csp: 'string',\n    iconURL: 'string',\n    label: 'string',\n    loading: \"'eager' | 'lazy'\",\n    location: \"'main' | 'sidebar'\",\n    name: 'string',\n    referrerPolicy: 'string',\n    sandbox: 'string',\n    src: 'string',\n    srcdoc: 'string',\n    shared: \"string[] | 'owners' | boolean\"\n  }\n};\nvar FRAME_PROPS = {\n  customIntegrations: {\n    validate: validateCustomIntegrations,\n    help: customIntegrationsValidationHelpMsg()\n  },\n  customTrayButtons: {\n    validate: validateCustomTrayButtons,\n    help: \"customTrayButtons should be a dictionary of the type \".concat(JSON.stringify(customTrayButtonsType))\n  },\n  url: {\n    validate: function validate(url) {\n      return typeof url === 'string';\n    },\n    help: 'url should be a string'\n  },\n  baseUrl: {\n    validate: function validate(url) {\n      return typeof url === 'string';\n    },\n    help: 'baseUrl should be a string'\n  },\n  token: {\n    validate: function validate(token) {\n      return typeof token === 'string';\n    },\n    help: 'token should be a string',\n    queryString: 't'\n  },\n  dailyConfig: {\n    // only for call object mode, for now\n    validate: function validate(config, callObject) {\n      try {\n        callObject.validateDailyConfig(config);\n        if (!window._dailyConfig) {\n          window._dailyConfig = {};\n        }\n        window._dailyConfig.experimentalGetUserMediaConstraintsModify = config.experimentalGetUserMediaConstraintsModify;\n        window._dailyConfig.userMediaVideoConstraints = config.userMediaVideoConstraints;\n        window._dailyConfig.userMediaAudioConstraints = config.userMediaAudioConstraints;\n        window._dailyConfig.callObjectBundleUrlOverride = config.callObjectBundleUrlOverride;\n        window._dailyConfig.proxyUrl = config.proxyUrl;\n        window._dailyConfig.iceConfig = config.iceConfig;\n        return true;\n      } catch (e) {\n        console.error('Failed to validate dailyConfig', e);\n      }\n      return false;\n    },\n    help: 'Unsupported dailyConfig. Check error logs for detailed info.'\n  },\n  reactNativeConfig: {\n    validate: validateReactNativeConfig,\n    help: \"reactNativeConfig should look like \".concat(JSON.stringify(reactNativeConfigType), \", all fields optional\")\n  },\n  lang: {\n    validate: function validate(lang) {\n      return ['de', 'en-us',\n      // Here for backwards compatibility, but not encouraged (just maps to 'en' anyway)\n      'en', 'es', 'fi', 'fr', 'it', 'jp', 'ka', 'nl', 'no', 'pl', 'pt', 'pt-BR', 'ru', 'sv', 'tr', 'user'].includes(lang);\n    },\n    help: 'language not supported. Options are: de, en-us, en, es, fi, fr, it, jp, ka, nl, no, pl, pt, pt-BR, ru, sv, tr, user'\n  },\n  userName: true,\n  // ignored if there's a token\n  userData: {\n    validate: function validate(data) {\n      try {\n        validateUserData(data);\n        return true;\n      } catch (e) {\n        console.error(e);\n        return false;\n      }\n    },\n    help: 'invalid userData type provided'\n  },\n  startVideoOff: true,\n  startAudioOff: true,\n  activeSpeakerMode: true,\n  showLeaveButton: true,\n  showLocalVideo: true,\n  showParticipantsBar: true,\n  showFullscreenButton: true,\n  showUserNameChangeUI: true,\n  // style to apply to iframe in createFrame factory method\n  iframeStyle: true,\n  // styles passed through to video calls inside the iframe\n  customLayout: true,\n  cssFile: true,\n  cssText: true,\n  bodyClass: true,\n  videoSource: {\n    validate: function validate(s, callObject) {\n      callObject._preloadCache.videoDeviceId = s;\n      return true;\n    }\n  },\n  audioSource: {\n    validate: function validate(s, callObject) {\n      callObject._preloadCache.audioDeviceId = s;\n      return true;\n    }\n  },\n  subscribeToTracksAutomatically: {\n    validate: function validate(s, callObject) {\n      callObject._preloadCache.subscribeToTracksAutomatically = s;\n      return true;\n    }\n  },\n  theme: {\n    validate: function validate(o) {\n      var validColors = ['accent', 'accentText', 'background', 'backgroundAccent', 'baseText', 'border', 'mainAreaBg', 'mainAreaBgAccent', 'mainAreaText', 'supportiveText'];\n      var containsValidColors = function containsValidColors(colors) {\n        for (var _i = 0, _Object$keys = Object.keys(colors); _i < _Object$keys.length; _i++) {\n          var key = _Object$keys[_i];\n          if (!validColors.includes(key)) {\n            // Key is not a supported theme color\n            console.error(\"unsupported color \\\"\".concat(key, \"\\\". Valid colors: \").concat(validColors.join(', ')));\n            return false;\n          }\n          if (!colors[key].match(/^#[0-9a-f]{6}|#[0-9a-f]{3}$/i)) {\n            // Color is not in hex format\n            console.error(\"\".concat(key, \" theme color should be provided in valid hex color format. Received: \\\"\").concat(colors[key], \"\\\"\"));\n            return false;\n          }\n        }\n        return true;\n      };\n      if ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(o) !== 'object' || !('light' in o && 'dark' in o || 'colors' in o)) {\n        // Must define either both themes or colors\n        console.error('Theme must contain either both \"light\" and \"dark\" properties, or \"colors\".', o);\n        return false;\n      }\n      if ('light' in o && 'dark' in o) {\n        if (!('colors' in o.light)) {\n          console.error('Light theme is missing \"colors\" property.', o);\n          return false;\n        }\n        if (!('colors' in o.dark)) {\n          console.error('Dark theme is missing \"colors\" property.', o);\n          return false;\n        }\n        return containsValidColors(o.light.colors) && containsValidColors(o.dark.colors);\n      }\n      return containsValidColors(o.colors);\n    },\n    help: 'unsupported theme configuration. Check error logs for detailed info.'\n  },\n  layoutConfig: {\n    validate: function validate(layoutConfig) {\n      if ('grid' in layoutConfig) {\n        var gridConfig = layoutConfig.grid;\n        if ('maxTilesPerPage' in gridConfig) {\n          if (!Number.isInteger(gridConfig.maxTilesPerPage)) {\n            console.error(\"grid.maxTilesPerPage should be an integer. You passed \".concat(gridConfig.maxTilesPerPage, \".\"));\n            return false;\n          }\n          if (gridConfig.maxTilesPerPage > 49) {\n            console.error(\"grid.maxTilesPerPage can't be larger than 49 without sacrificing browser performance. Please contact us at https://www.daily.co/contact to talk about your use case.\");\n            return false;\n          }\n        }\n        if ('minTilesPerPage' in gridConfig) {\n          if (!Number.isInteger(gridConfig.minTilesPerPage)) {\n            console.error(\"grid.minTilesPerPage should be an integer. You passed \".concat(gridConfig.minTilesPerPage, \".\"));\n            return false;\n          }\n          if (gridConfig.minTilesPerPage < 1) {\n            console.error(\"grid.minTilesPerPage can't be lower than 1.\");\n            return false;\n          }\n          if ('maxTilesPerPage' in gridConfig && gridConfig.minTilesPerPage > gridConfig.maxTilesPerPage) {\n            console.error(\"grid.minTilesPerPage can't be higher than grid.maxTilesPerPage.\");\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n    help: 'unsupported layoutConfig. Check error logs for detailed info.'\n  },\n  receiveSettings: {\n    // Disallow \"*\" shorthand key since it's a shorthand for participants\n    // currently connected *to you* (i.e. participants already in\n    // participants()), which is necessarily empty at join time. Allowing this\n    // key might only sow confusion: it might lead people to think it's a\n    // shorthand for participants currently connected *to the room*.\n    validate: function validate(receiveSettings) {\n      return validateReceiveSettings(receiveSettings, {\n        allowAllParticipantsKey: false\n      });\n    },\n    help: receiveSettingsValidationHelpMsg({\n      allowAllParticipantsKey: false\n    })\n  },\n  sendSettings: {\n    validate: function validate(sendSettings, callObject) {\n      if (validateSendSettings(sendSettings, callObject)) {\n        callObject._preloadCache.sendSettings = sendSettings;\n        return true;\n      }\n      return false;\n    },\n    help: 'Invalid sendSettings provided. Check error logs for detailed info.'\n  },\n  inputSettings: {\n    validate: function validate(settings, callObject) {\n      if (validateInputSettings(settings)) {\n        if (!callObject._preloadCache.inputSettings) {\n          callObject._preloadCache.inputSettings = {};\n        }\n        stripInputSettingsForUnsupportedPlatforms(settings);\n        if (settings.audio) {\n          callObject._preloadCache.inputSettings.audio = settings.audio;\n        }\n        if (settings.video) {\n          callObject._preloadCache.inputSettings.video = settings.video;\n        }\n        return true;\n      }\n      return false;\n    },\n    help: inputSettingsValidationHelpMsg()\n  },\n  // used internally\n  layout: {\n    validate: function validate(layout) {\n      return layout === 'custom-v1' || layout === 'browser' || layout === 'none';\n    },\n    help: 'layout may only be set to \"custom-v1\"',\n    queryString: 'layout'\n  },\n  emb: {\n    queryString: 'emb'\n  },\n  embHref: {\n    queryString: 'embHref'\n  },\n  dailyJsVersion: {\n    queryString: 'dailyJsVersion'\n  },\n  proxy: {\n    queryString: 'proxy'\n  },\n  strictMode: true\n};\n\n// todo: more validation?\nvar PARTICIPANT_PROPS = {\n  styles: {\n    validate: function validate(styles) {\n      for (var k in styles) {\n        if (k !== 'cam' && k !== 'screen') {\n          return false;\n        }\n      }\n      if (styles.cam) {\n        for (var _k in styles.cam) {\n          if (_k !== 'div' && _k !== 'video') {\n            return false;\n          }\n        }\n      }\n      if (styles.screen) {\n        for (var _k2 in styles.screen) {\n          if (_k2 !== 'div' && _k2 !== 'video') {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n    help: 'styles format should be a subset of: ' + '{ cam: {div: {}, video: {}}, screen: {div: {}, video: {}} }'\n  },\n  setSubscribedTracks: {\n    validate: function validate(subs, callObject) {\n      if (callObject._preloadCache.subscribeToTracksAutomatically) {\n        return false;\n      }\n      var validPrimitiveValues = [true, false, 'staged'];\n      if (validPrimitiveValues.includes(subs) || !(0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)() && subs === 'avatar') {\n        return true;\n      }\n      var knownTracks = ['audio', 'video', 'screenAudio', 'screenVideo', 'rmpAudio', 'rmpVideo'];\n      var validateTrackSubs = function validateTrackSubs(subs) {\n        var custom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        for (var s in subs) {\n          if (s === 'custom') {\n            var containsValidValue = validPrimitiveValues.includes(subs[s]);\n            if (!containsValidValue && !validateTrackSubs(subs[s], true)) {\n              return false;\n            }\n          } else {\n            var isUnexpectedTrackType = !custom && !knownTracks.includes(s);\n            var isUnexpectedValue = !validPrimitiveValues.includes(subs[s]);\n            if (isUnexpectedTrackType || isUnexpectedValue) {\n              return false;\n            }\n          }\n        }\n        return true;\n      };\n      return validateTrackSubs(subs);\n    },\n    help: 'setSubscribedTracks cannot be used when setSubscribeToTracksAutomatically is enabled, and should be of the form: ' + \"true\".concat(!(0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)() ? \" | 'avatar'\" : '', \" | false | 'staged' | { [audio: true|false|'staged'], [video: true|false|'staged'], [screenAudio: true|false|'staged'], [screenVideo: true|false|'staged'] }\")\n  },\n  setAudio: true,\n  setVideo: true,\n  setScreenShare: {\n    validate: function validate(setScreenShare) {\n      return setScreenShare === false;\n    },\n    help: \"setScreenShare must be false, as it's only meant for stopping remote participants' screen shares\"\n  },\n  eject: true,\n  updatePermissions: {\n    validate: function validate(permissionsUpdate) {\n      // Note: this validation logic should probably be moved into\n      // Permissions.js, which should then be used by this file. It'd be a first\n      // for us to depend on a file outside daily-js, though.\n      for (var _i2 = 0, _Object$entries = Object.entries(permissionsUpdate); _i2 < _Object$entries.length; _i2++) {\n        var _Object$entries$_i = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(_Object$entries[_i2], 2),\n          permissionName = _Object$entries$_i[0],\n          permission = _Object$entries$_i[1];\n        switch (permissionName) {\n          case 'hasPresence':\n            if (typeof permission !== 'boolean') {\n              return false;\n            }\n            break;\n          case 'canSend':\n            if (permission instanceof Set || permission instanceof Array) {\n              var knownMediaTypes = ['video', 'audio', 'screenVideo', 'screenAudio', 'customVideo', 'customAudio'];\n              var _iterator = _createForOfIteratorHelper(permission),\n                _step;\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var mediaType = _step.value;\n                  if (!knownMediaTypes.includes(mediaType)) {\n                    return false;\n                  }\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n            } else if (typeof permission !== 'boolean') {\n              return false;\n            }\n            // convert Array to Set if needed\n            if (permission instanceof Array) {\n              permissionsUpdate['canSend'] = new Set(permission);\n            }\n            break;\n          case 'canAdmin':\n            if (permission instanceof Set || permission instanceof Array) {\n              var knownAdminTypes = ['participants', 'streaming', 'transcription'];\n              var _iterator2 = _createForOfIteratorHelper(permission),\n                _step2;\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var adminType = _step2.value;\n                  if (!knownAdminTypes.includes(adminType)) {\n                    return false;\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            } else if (typeof permission !== 'boolean') {\n              return false;\n            }\n            // convert Array to Set if needed\n            if (permission instanceof Array) {\n              permissionsUpdate['canAdmin'] = new Set(permission);\n            }\n            break;\n          default:\n            return false;\n        }\n      }\n      return true;\n    },\n    help: 'updatePermissions can take hasPresence, canSend, and canAdmin permissions. ' + 'hasPresence must be a boolean. ' + 'canSend can be a boolean or an Array or Set of media types (video, audio, screenVideo, screenAudio, customVideo, customAudio). ' + 'canAdmin can be a boolean or an Array or Set of admin types (participants, streaming, transcription).'\n  }\n};\n\n//\n//\n//\nvar DailyIframe = /*#__PURE__*/function (_EventEmitter) {\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(DailyIframe, _EventEmitter);\n  var _super = _createSuper(DailyIframe);\n  function DailyIframe(iframeish) {\n    var _this;\n    var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, DailyIframe);\n    _this = _super.call(this);\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8__[\"default\"])((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_this), \"startListeningForDeviceChanges\", function () {\n      (0,_shared_with_pluot_core_DeviceChange_js__WEBPACK_IMPORTED_MODULE_21__.addDeviceChangeListener)(_this.handleDeviceChange);\n    });\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8__[\"default\"])((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_this), \"stopListeningForDeviceChanges\", function () {\n      (0,_shared_with_pluot_core_DeviceChange_js__WEBPACK_IMPORTED_MODULE_21__.removeDeviceChangeListener)(_this.handleDeviceChange);\n    });\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8__[\"default\"])((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_this), \"handleDeviceChange\", function (newDevices) {\n      // First convert `newDevices` from an array of `MediaDeviceInfo`s to plain\n      // JS objects, since that's what the user would get from a call to\n      // `call.enumerateDevices()` (and that method is constrainted to returning\n      // structured-clonable values due to the call machine message channel).\n      newDevices = newDevices.map(function (d) {\n        return JSON.parse(JSON.stringify(d));\n      });\n      _this.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_AVAILABLE_DEVICES_UPDATED, {\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_AVAILABLE_DEVICES_UPDATED,\n        availableDevices: newDevices\n      });\n    });\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8__[\"default\"])((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_this), \"handleNativeAppActiveStateChange\", function (isActive) {\n      // If automatic video device management is disabled, bail\n      if (_this.disableReactNativeAutoDeviceManagement('video')) {\n        return;\n      }\n      if (isActive) {\n        // If cam was unmuted before losing focus, unmute\n        // (Note this is assumption is not perfect, since theoretically an app\n        // could unmute while in the background, but it's decent for now)\n        if (_this.camUnmutedBeforeLosingNativeActiveState) {\n          _this.setLocalVideo(true);\n        }\n      } else {\n        _this.camUnmutedBeforeLosingNativeActiveState = _this.localVideo();\n        // Mute cam, but check first whether we have local video in the first\n        // place: if we don't, we may still be in the gUM process, with the app\n        // \"inactive\" simply because it's behind the permissions dialogs.\n        if (_this.camUnmutedBeforeLosingNativeActiveState) {\n          _this.setLocalVideo(false);\n        }\n      }\n    });\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8__[\"default\"])((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_this), \"handleNativeAudioFocusChange\", function (hasFocus) {\n      // If automatic audio device management is disabled, bail\n      if (_this.disableReactNativeAutoDeviceManagement('audio')) {\n        return;\n      }\n      _this._hasNativeAudioFocus = hasFocus;\n      // toggle participant audio if needed\n      _this.toggleParticipantAudioBasedOnNativeAudioFocus();\n      // toggle mic mute if needed\n      if (_this._hasNativeAudioFocus) {\n        // If mic was unmuted before losing focus, unmute\n        // (Note this is assumption is not perfect, since theoretically an app\n        // could unmute while in the background, but it's decent for now)\n        if (_this.micUnmutedBeforeLosingNativeAudioFocus) {\n          _this.setLocalAudio(true);\n        }\n      } else {\n        _this.micUnmutedBeforeLosingNativeAudioFocus = _this.localAudio();\n        _this.setLocalAudio(false);\n      }\n    });\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8__[\"default\"])((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_this), \"handleNativeSystemScreenCaptureStop\", function () {\n      _this.stopScreenShare();\n    });\n    _this.strictMode = typeof properties.strictMode !== 'undefined' ? properties.strictMode : true;\n    if (_callInstance) {\n      _this._logDuplicateInstanceAttempt();\n      if (_this.strictMode) {\n        throw new Error('Duplicate DailyIframe instances are not allowed');\n      }\n    } else {\n      _setCallInstance((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_this));\n    }\n    properties.dailyJsVersion = DailyIframe.version();\n    _this._iframe = iframeish;\n    _this._callObjectMode = properties.layout === 'none' && !_this._iframe;\n    _this._preloadCache = initializePreloadCache();\n    if (_this._callObjectMode) {\n      window._dailyPreloadCache = _this._preloadCache;\n    }\n    if (properties.showLocalVideo !== undefined) {\n      if (_this._callObjectMode) {\n        console.error('showLocalVideo is not available in call object mode');\n      } else {\n        _this._showLocalVideo = !!properties.showLocalVideo;\n      }\n    } else {\n      _this._showLocalVideo = true;\n    }\n    if (properties.showParticipantsBar !== undefined) {\n      if (_this._callObjectMode) {\n        console.error('showParticipantsBar is not available in call object mode');\n      } else {\n        _this._showParticipantsBar = !!properties.showParticipantsBar;\n      }\n    } else {\n      _this._showParticipantsBar = true;\n    }\n    if (properties.customIntegrations !== undefined) {\n      if (_this._callObjectMode) {\n        console.error('customIntegrations is not available in call object mode');\n      } else {\n        _this._customIntegrations = properties.customIntegrations;\n      }\n    } else {\n      _this._customIntegrations = {};\n    }\n    if (properties.customTrayButtons !== undefined) {\n      if (_this._callObjectMode) {\n        console.error('customTrayButtons is not available in call object mode');\n      } else {\n        _this._customTrayButtons = properties.customTrayButtons;\n      }\n    } else {\n      _this._customTrayButtons = {};\n    }\n    if (properties.activeSpeakerMode !== undefined) {\n      if (_this._callObjectMode) {\n        console.error('activeSpeakerMode is not available in call object mode');\n      } else {\n        _this._activeSpeakerMode = !!properties.activeSpeakerMode;\n      }\n    } else {\n      _this._activeSpeakerMode = false;\n    }\n    if (properties.receiveSettings) {\n      if (_this._callObjectMode) {\n        _this._receiveSettings = properties.receiveSettings;\n      } else {\n        console.error('receiveSettings is only available in call object mode');\n      }\n    } else {\n      // Here we avoid falling back to defaults, instead letting the call\n      // machine decide on defaults when its loaded and telling us about them\n      // via a DAILY_EVENT_RECEIVE_SETTINGS_UPDATED event. This will make it\n      // easier to update defaults in the future, eliminating the worry of\n      // daily-js getting out of sync with the call machine.\n      _this._receiveSettings = {};\n    }\n    _this.validateProperties(properties);\n    _this.properties = _objectSpread({}, properties);\n    if (!_this._preloadCache.inputSettings) {\n      _this._preloadCache.inputSettings = {};\n    }\n    if (properties.inputSettings && properties.inputSettings.audio) {\n      _this._preloadCache.inputSettings.audio = properties.inputSettings.audio;\n    }\n    if (properties.inputSettings && properties.inputSettings.video) {\n      _this._preloadCache.inputSettings.video = properties.inputSettings.video;\n    }\n    _this._callObjectLoader = _this._callObjectMode ? new _CallObjectLoader__WEBPACK_IMPORTED_MODULE_19__[\"default\"]() : null;\n    _this._callState = _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_NEW; // only update via updateIsPreparingToJoin() or _updateCallState()\n    _this._isPreparingToJoin = false; // only update via _updateCallState()\n    _this._accessState = {\n      access: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_ACCESS_UNKNOWN\n    };\n    _this._meetingSessionSummary = {};\n    _this._finalSummaryOfPrevSession = {};\n    _this._meetingSessionState = maybeStripDataFromMeetingSessionState(DEFAULT_SESSION_STATE, _this._callObjectMode);\n    _this._nativeInCallAudioMode = NATIVE_AUDIO_MODE_VIDEO_CALL;\n    _this._participants = {};\n    _this._participantCounts = EMPTY_PARTICIPANT_COUNTS;\n    _this._rmpPlayerState = {};\n    _this._waitingParticipants = {};\n    _this._inputEventsOn = {}; // need to cache these until loaded\n    _this._network = {\n      threshold: 'good',\n      quality: 100\n    };\n    _this._activeSpeaker = {};\n    _this._callFrameId = (0,_utils__WEBPACK_IMPORTED_MODULE_13__.randomStringId)();\n    _this._localAudioLevel = 0;\n    _this._remoteParticipantsAudioLevel = {};\n    _this._messageChannel = (0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)() ? new _shared_with_pluot_core_script_message_channels_ReactNativeMessageChannel__WEBPACK_IMPORTED_MODULE_17__[\"default\"]() : new _shared_with_pluot_core_script_message_channels_WebMessageChannel__WEBPACK_IMPORTED_MODULE_16__[\"default\"]();\n\n    // fullscreen event listener\n    if (_this._iframe) {\n      if (_this._iframe.requestFullscreen) {\n        // chrome (not safari)\n        _this._iframe.addEventListener('fullscreenchange', function () {\n          if (document.fullscreenElement === _this._iframe) {\n            _this.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_FULLSCREEN, {\n              action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_FULLSCREEN\n            });\n            _this.sendMessageToCallMachine({\n              action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_FULLSCREEN\n            });\n          } else {\n            _this.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_EXIT_FULLSCREEN, {\n              action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_EXIT_FULLSCREEN\n            });\n            _this.sendMessageToCallMachine({\n              action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_EXIT_FULLSCREEN\n            });\n          }\n        });\n      } else if (_this._iframe.webkitRequestFullscreen) {\n        // safari\n        _this._iframe.addEventListener('webkitfullscreenchange', function () {\n          if (document.webkitFullscreenElement === _this._iframe) {\n            _this.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_FULLSCREEN, {\n              action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_FULLSCREEN\n            });\n            _this.sendMessageToCallMachine({\n              action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_FULLSCREEN\n            });\n          } else {\n            _this.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_EXIT_FULLSCREEN, {\n              action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_EXIT_FULLSCREEN\n            });\n            _this.sendMessageToCallMachine({\n              action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_EXIT_FULLSCREEN\n            });\n          }\n        });\n      }\n    }\n\n    // add native event listeners\n    if ((0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)()) {\n      var nativeUtils = _this.nativeUtils();\n      if (!(nativeUtils.addAudioFocusChangeListener && nativeUtils.removeAudioFocusChangeListener && nativeUtils.addAppActiveStateChangeListener && nativeUtils.removeAppActiveStateChangeListener && nativeUtils.addSystemScreenCaptureStopListener && nativeUtils.removeSystemScreenCaptureStopListener)) {\n        console.warn('expected (add|remove)(AudioFocusChange|AppActiveStateChange|SystemScreenCaptureStop)Listener to be available in React Native');\n      }\n      // audio focus event, used for auto-muting mic (on android)\n      _this._hasNativeAudioFocus = true;\n      nativeUtils.addAudioFocusChangeListener(_this.handleNativeAudioFocusChange);\n      // app active state event, used for auto-muting cam\n      nativeUtils.addAppActiveStateChangeListener(_this.handleNativeAppActiveStateChange);\n      // system screen capture stop event, used for syncing system screen share\n      // stop (on iOS)\n      nativeUtils.addSystemScreenCaptureStopListener(_this.handleNativeSystemScreenCaptureStop);\n    }\n\n    // start available device change listener in call object mode (including RN).\n    // note: in iframe mode, Prebuilt's internal call object will handle this,\n    // and the events it sends will propagate up appropriately.\n    if (_this._callObjectMode) {\n      _this.startListeningForDeviceChanges();\n    }\n    _this._messageChannel.addListenerForMessagesFromCallMachine(_this.handleMessageFromCallMachine, _this._callFrameId, (0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_this));\n    return _this;\n  }\n\n  //\n  // instance methods\n  //\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(DailyIframe, [{\n    key: \"destroy\",\n    value: function () {\n      var _destroy = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        try {\n          yield this.leave();\n        } catch (e) {\n          // no-op\n        }\n        var iframe = this._iframe;\n        if (iframe) {\n          var parent = iframe.parentElement;\n          if (parent) {\n            parent.removeChild(iframe);\n          }\n        }\n        this._messageChannel.removeListener(this.handleMessageFromCallMachine);\n\n        // tear down native event listeners\n        if ((0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)()) {\n          var nativeUtils = this.nativeUtils();\n          nativeUtils.removeAudioFocusChangeListener(this.handleNativeAudioFocusChange);\n          nativeUtils.removeAppActiveStateChangeListener(this.handleNativeAppActiveStateChange);\n          nativeUtils.removeSystemScreenCaptureStopListener(this.handleNativeSystemScreenCaptureStop);\n        }\n\n        // tear down available device change listener\n        if (this._callObjectMode) {\n          this.stopListeningForDeviceChanges();\n        }\n        this.resetMeetingDependentVars();\n        this._destroyed = true;\n        // fire call-instance-destroyed event here\n        try {\n          this.emit('call-instance-destroyed', {\n            action: 'call-instance-destroyed'\n          });\n        } catch (e) {\n          console.log('could not emit call-instance-destroyed');\n        }\n        if (this.strictMode) {\n          // we set this to undefined in strictMode so that all calls to\n          // the underlying channel's sendMessageToCallMachine will fail\n          this._callFrameId = undefined;\n        }\n        _callInstance = undefined;\n      });\n      function destroy() {\n        return _destroy.apply(this, arguments);\n      }\n      return destroy;\n    }()\n  }, {\n    key: \"isDestroyed\",\n    value: function isDestroyed() {\n      return !!this._destroyed;\n    }\n  }, {\n    key: \"loadCss\",\n    value: function loadCss(_ref) {\n      var bodyClass = _ref.bodyClass,\n        cssFile = _ref.cssFile,\n        cssText = _ref.cssText;\n      methodNotSupportedInReactNative();\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_LOAD_CSS,\n        cssFile: this.absoluteUrl(cssFile),\n        bodyClass: bodyClass,\n        cssText: cssText\n      });\n      return this;\n    }\n  }, {\n    key: \"iframe\",\n    value: function iframe() {\n      methodNotSupportedInReactNative();\n      return this._iframe;\n    }\n  }, {\n    key: \"meetingState\",\n    value: function meetingState() {\n      // TODO: This function will be deprecated and renamed to callState()\n      //       for better consistency in naming\n      return this._callState;\n    }\n  }, {\n    key: \"accessState\",\n    value: function accessState() {\n      methodOnlySupportedInCallObject(this._callObjectMode, 'accessState()');\n      return this._accessState;\n    }\n  }, {\n    key: \"participants\",\n    value: function participants() {\n      return this._participants;\n    }\n  }, {\n    key: \"participantCounts\",\n    value: function participantCounts() {\n      return this._participantCounts;\n    }\n  }, {\n    key: \"waitingParticipants\",\n    value: function waitingParticipants() {\n      methodOnlySupportedInCallObject(this._callObjectMode, 'waitingParticipants()');\n      return this._waitingParticipants;\n    }\n  }, {\n    key: \"validateParticipantProperties\",\n    value: function validateParticipantProperties(sessionId, properties) {\n      for (var prop in properties) {\n        if (!PARTICIPANT_PROPS[prop]) {\n          throw new Error(\"unrecognized updateParticipant property \".concat(prop));\n        }\n        if (PARTICIPANT_PROPS[prop].validate) {\n          if (!PARTICIPANT_PROPS[prop].validate(properties[prop], this, this._participants[sessionId])) {\n            throw new Error(PARTICIPANT_PROPS[prop].help);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"updateParticipant\",\n    value: function updateParticipant(sessionId, properties) {\n      if (this._participants.local && this._participants.local.session_id === sessionId) {\n        sessionId = 'local';\n      }\n      if (sessionId && properties) {\n        this.validateParticipantProperties(sessionId, properties);\n        this.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_UPDATE_PARTICIPANT,\n          id: sessionId,\n          properties: properties\n        });\n      }\n      return this;\n    }\n  }, {\n    key: \"updateParticipants\",\n    value: function updateParticipants(properties) {\n      var localId = this._participants.local && this._participants.local.session_id;\n      for (var sessionId in properties) {\n        if (sessionId === localId) {\n          sessionId = 'local';\n        }\n        if (sessionId && properties[sessionId]) {\n          this.validateParticipantProperties(sessionId, properties[sessionId]);\n        }\n      }\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_UPDATE_PARTICIPANTS,\n        participants: properties\n      });\n      return this;\n    }\n  }, {\n    key: \"updateWaitingParticipant\",\n    value: function () {\n      var _updateWaitingParticipant = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        var _this2 = this;\n        var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        var updates = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        // Validate mode.\n        methodOnlySupportedInCallObject(this._callObjectMode, 'updateWaitingParticipant()');\n\n        // Validate meeting state: only allowed once you've joined.\n        methodOnlySupportedAfterJoin(this._callState, 'updateWaitingParticipant()');\n\n        // Validate argument presence.\n        if (!(typeof id === 'string' && (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(updates) === 'object')) {\n          throw new Error('updateWaitingParticipant() must take an id string and a updates object');\n        }\n        return new Promise(function (resolve, reject) {\n          var k = function k(msg) {\n            if (msg.error) {\n              reject(msg.error);\n            }\n            if (!msg.id) {\n              reject(new Error('unknown error in updateWaitingParticipant()'));\n            }\n            resolve({\n              id: msg.id\n            });\n          };\n          _this2.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_UPDATE_WAITING_PARTICIPANT,\n            id: id,\n            updates: updates\n          }, k);\n        });\n      });\n      function updateWaitingParticipant() {\n        return _updateWaitingParticipant.apply(this, arguments);\n      }\n      return updateWaitingParticipant;\n    }()\n  }, {\n    key: \"updateWaitingParticipants\",\n    value: function () {\n      var _updateWaitingParticipants = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        var _this3 = this;\n        var updatesById = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        // Validate mode.\n        methodOnlySupportedInCallObject(this._callObjectMode, 'updateWaitingParticipants()');\n\n        // Validate meeting state: only allowed once you've joined.\n        methodOnlySupportedAfterJoin(this._callState, 'updateWaitingParticipants()');\n\n        // Validate argument presence.\n        if ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(updatesById) !== 'object') {\n          throw new Error('updateWaitingParticipants() must take a mapping between ids and update objects');\n        }\n        return new Promise(function (resolve, reject) {\n          var k = function k(msg) {\n            if (msg.error) {\n              reject(msg.error);\n            }\n            if (!msg.ids) {\n              reject(new Error('unknown error in updateWaitingParticipants()'));\n            }\n            resolve({\n              ids: msg.ids\n            });\n          };\n          _this3.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_UPDATE_WAITING_PARTICIPANTS,\n            updatesById: updatesById\n          }, k);\n        });\n      });\n      function updateWaitingParticipants() {\n        return _updateWaitingParticipants.apply(this, arguments);\n      }\n      return updateWaitingParticipants;\n    }()\n  }, {\n    key: \"requestAccess\",\n    value: function () {\n      var _requestAccess = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        var _this4 = this;\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$access = _ref2.access,\n          access = _ref2$access === void 0 ? {\n            level: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_ACCESS_LEVEL_FULL\n          } : _ref2$access,\n          _ref2$name = _ref2.name,\n          name = _ref2$name === void 0 ? '' : _ref2$name;\n        // Validate mode.\n        methodOnlySupportedInCallObject(this._callObjectMode, 'requestAccess()');\n\n        // Validate call state: access requesting is only allowed once you've\n        // joined.\n        methodOnlySupportedAfterJoin(this._callState, 'requestAccess()');\n        return new Promise(function (resolve, reject) {\n          var k = function k(msg) {\n            if (msg.error) {\n              reject(msg.error);\n            }\n            if (!msg.access) {\n              reject(new Error('unknown error in requestAccess()'));\n            }\n            resolve({\n              access: msg.access,\n              granted: msg.granted\n            });\n          };\n          _this4.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_REQUEST_ACCESS,\n            access: access,\n            name: name\n          }, k);\n        });\n      });\n      function requestAccess() {\n        return _requestAccess.apply(this, arguments);\n      }\n      return requestAccess;\n    }()\n  }, {\n    key: \"localAudio\",\n    value: function localAudio() {\n      if (this._participants.local) {\n        return this._participants.local.audio;\n      }\n      return null;\n    }\n  }, {\n    key: \"localVideo\",\n    value: function localVideo() {\n      if (this._participants.local) {\n        return this._participants.local.video;\n      }\n      return null;\n    }\n  }, {\n    key: \"setLocalAudio\",\n    value: function setLocalAudio(bool) {\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_LOCAL_AUDIO,\n        state: bool\n      });\n      return this;\n    }\n  }, {\n    key: \"setLocalVideo\",\n    value: function setLocalVideo(bool) {\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_LOCAL_VIDEO,\n        state: bool\n      });\n      return this;\n    }\n\n    // NOTE: \"base\" receive settings will not appear until the call machine bundle\n    // is initialized (e.g. after a call to join()).\n    // Listen for the receive-settings-updated to be notified when those come in.\n  }, {\n    key: \"getReceiveSettings\",\n    value: function () {\n      var _getReceiveSettings = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (id) {\n        var _this5 = this;\n        var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref3$showInheritedVa = _ref3.showInheritedValues,\n          showInheritedValues = _ref3$showInheritedVa === void 0 ? false : _ref3$showInheritedVa;\n        // Validate mode.\n        methodOnlySupportedInCallObject(this._callObjectMode, 'getReceiveSettings()');\n        if (!this._dailyMainExecuted) return this._receiveSettings;\n\n        // This method can be called in two main ways:\n        // - it can get receive settings for a specific participant (or \"base\")\n        // - it can get *all* receive settings\n        switch ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(id)) {\n          // Case: getting receive settings for a single participant\n          case 'string':\n            // Ask call machine to get receive settings for the participant.\n            // Centralizing this nontrivial fetching logic in the call machine,\n            // rather than attempting to duplicate it here, avoids the problem of\n            // daily-js and the call machine getting out of sync.\n            return new Promise(function (resolve) {\n              var k = function k(msg) {\n                resolve(msg.receiveSettings);\n              };\n              _this5.sendMessageToCallMachine({\n                action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_GET_SINGLE_PARTICIPANT_RECEIVE_SETTINGS,\n                id: id,\n                showInheritedValues: showInheritedValues\n              }, k);\n            });\n          // Case: getting all receive settings\n          case 'undefined':\n            return this._receiveSettings;\n          default:\n            throw new Error('first argument to getReceiveSettings() must be a participant id (or \"base\"), or there should be no arguments');\n        }\n      });\n      function getReceiveSettings(_x) {\n        return _getReceiveSettings.apply(this, arguments);\n      }\n      return getReceiveSettings;\n    }()\n  }, {\n    key: \"updateReceiveSettings\",\n    value: function () {\n      var _updateReceiveSettings = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (receiveSettings) {\n        var _this6 = this;\n        // Validate mode.\n        methodOnlySupportedInCallObject(this._callObjectMode, 'updateReceiveSettings()');\n\n        // Validate receive settings.\n        if (!validateReceiveSettings(receiveSettings, {\n          allowAllParticipantsKey: true\n        })) {\n          throw new Error(receiveSettingsValidationHelpMsg({\n            allowAllParticipantsKey: true\n          }));\n        }\n\n        // Validate that call machine is joined.\n        // (We need the Redux state to be set up first; technically, we could\n        // proceed if we've either join()ed *or* preAuth()ed *or* startCamera()ed\n        // but since there's an easy alternative way to specify initial receive\n        // settings until join(), for simplicity let's just require that we be\n        // joined).\n        methodOnlySupportedAfterJoin(this._callState, 'updateReceiveSettings()', 'To specify receive settings earlier, use the receiveSettings config property.');\n\n        // Ask call machine to update receive settings, then await callback.\n        return new Promise(function (resolve) {\n          var k = function k(msg) {\n            resolve({\n              receiveSettings: msg.receiveSettings\n            });\n          };\n          _this6.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_UPDATE_RECEIVE_SETTINGS,\n            receiveSettings: receiveSettings\n          }, k);\n        });\n      });\n      function updateReceiveSettings(_x2) {\n        return _updateReceiveSettings.apply(this, arguments);\n      }\n      return updateReceiveSettings;\n    }() // Helper for getting input settings ready to present to the user via the\n    // daily-js API (`getInputSettings()` or the `input-settings-updated` event).\n    //\n    // Strips any 'none' processor settings that are there by default and not by\n    // explicit user choice.\n    // TODO: whether or not we strip default settings should eventually be\n    // controllable by a `showDefaultValues` argument to `getInputSettings()`,\n    // just like the `showInheritedValues` argument to `getReceiveSettings()`.\n    // The `input-settings-updated` payload should probably align with what\n    // `getInputSettings()` will do by default (`showDefaultValues = false`).\n    //\n    // Returns a new object, being careful not to mess with the one passed in\n    // (this is important for handling the `input-settings-updated` event)\n  }, {\n    key: \"_prepInputSettingsToPresentToUser\",\n    value: function _prepInputSettingsToPresentToUser(inputSettings) {\n      var _inputSettings$audio, _inputSettings$audio$, _inputSettings$audio2, _inputSettings$audio3, _inputSettings$video, _inputSettings$video$, _inputSettings$video2, _inputSettings$video3;\n      if (!inputSettings) {\n        return;\n      }\n      var strippedInputSettings = {};\n      var shouldStripAudio = ((_inputSettings$audio = inputSettings.audio) === null || _inputSettings$audio === void 0 ? void 0 : (_inputSettings$audio$ = _inputSettings$audio.processor) === null || _inputSettings$audio$ === void 0 ? void 0 : _inputSettings$audio$.type) === 'none' && ((_inputSettings$audio2 = inputSettings.audio) === null || _inputSettings$audio2 === void 0 ? void 0 : (_inputSettings$audio3 = _inputSettings$audio2.processor) === null || _inputSettings$audio3 === void 0 ? void 0 : _inputSettings$audio3._isDefaultWhenNone);\n      if (inputSettings.audio && !shouldStripAudio) {\n        var audioProcessor = _objectSpread({}, inputSettings.audio.processor);\n        delete audioProcessor._isDefaultWhenNone;\n        strippedInputSettings.audio = _objectSpread(_objectSpread({}, inputSettings.audio), {}, {\n          processor: audioProcessor\n        });\n      }\n      var shouldStripVideo = ((_inputSettings$video = inputSettings.video) === null || _inputSettings$video === void 0 ? void 0 : (_inputSettings$video$ = _inputSettings$video.processor) === null || _inputSettings$video$ === void 0 ? void 0 : _inputSettings$video$.type) === 'none' && ((_inputSettings$video2 = inputSettings.video) === null || _inputSettings$video2 === void 0 ? void 0 : (_inputSettings$video3 = _inputSettings$video2.processor) === null || _inputSettings$video3 === void 0 ? void 0 : _inputSettings$video3._isDefaultWhenNone);\n      if (inputSettings.video && !shouldStripVideo) {\n        var videoProcessor = _objectSpread({}, inputSettings.video.processor);\n        delete videoProcessor._isDefaultWhenNone;\n        strippedInputSettings.video = _objectSpread(_objectSpread({}, inputSettings.video), {}, {\n          processor: videoProcessor\n        });\n      }\n      return strippedInputSettings;\n    }\n\n    // Input Settings Getter\n    // { video: { processor }, audio: { processor } }\n    // In the future:\n    // { video: {...}, audio: {...}, screenVideo: {...}, screenAudio: {...} }\n  }, {\n    key: \"getInputSettings\",\n    value: function getInputSettings() {\n      var _this7 = this;\n      return new Promise(function (resolve) {\n        resolve(_this7._getInputSettings());\n      });\n    }\n\n    // Synchronus function to get input settings.\n    // `getInputSettings()` is just an async wrapper around this.\n    // TODO: `getInputSettings()` is only async for legacy reasons. Someday this\n    // synchronous method could be promoted and replace `getInputSettings()`.\n  }, {\n    key: \"_getInputSettings\",\n    value: function _getInputSettings() {\n      var defaultSettings = {\n        processor: {\n          type: 'none',\n          _isDefaultWhenNone: true\n        }\n      };\n\n      // Get settings\n      var videoSettings, audioSettings;\n      if (!this._inputSettings) {\n        var _this$_preloadCache, _this$_preloadCache$i, _this$_preloadCache2, _this$_preloadCache2$;\n        // use preload cache input settings\n        videoSettings = ((_this$_preloadCache = this._preloadCache) === null || _this$_preloadCache === void 0 ? void 0 : (_this$_preloadCache$i = _this$_preloadCache.inputSettings) === null || _this$_preloadCache$i === void 0 ? void 0 : _this$_preloadCache$i.video) || defaultSettings;\n        audioSettings = ((_this$_preloadCache2 = this._preloadCache) === null || _this$_preloadCache2 === void 0 ? void 0 : (_this$_preloadCache2$ = _this$_preloadCache2.inputSettings) === null || _this$_preloadCache2$ === void 0 ? void 0 : _this$_preloadCache2$.audio) || defaultSettings;\n      } else {\n        var _this$_inputSettings, _this$_inputSettings2;\n        // use call-machine-provided input settings\n        videoSettings = ((_this$_inputSettings = this._inputSettings) === null || _this$_inputSettings === void 0 ? void 0 : _this$_inputSettings.video) || defaultSettings;\n        audioSettings = ((_this$_inputSettings2 = this._inputSettings) === null || _this$_inputSettings2 === void 0 ? void 0 : _this$_inputSettings2.audio) || defaultSettings;\n      }\n\n      // Return settings\n      var inputSettings = {\n        audio: audioSettings,\n        video: videoSettings\n      };\n      return this._prepInputSettingsToPresentToUser(inputSettings);\n    }\n  }, {\n    key: \"updateInputSettings\",\n    value: function () {\n      var _updateInputSettings = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (inputSettings) {\n        var _this8 = this;\n        if (!validateInputSettings(inputSettings)) {\n          console.error(inputSettingsValidationHelpMsg());\n          return Promise.reject(inputSettingsValidationHelpMsg());\n        }\n        if (inputSettings) {\n          if (!this._preloadCache.inputSettings) {\n            this._preloadCache.inputSettings = {};\n          }\n          stripInputSettingsForUnsupportedPlatforms(inputSettings);\n          if (inputSettings.audio) {\n            this._preloadCache.inputSettings.audio = inputSettings.audio;\n          }\n          if (inputSettings.video) {\n            this._preloadCache.inputSettings.video = inputSettings.video;\n          }\n        }\n\n        // now that input settings may have been stripped of platform-unsupported\n        // settings, check again for validity (it may now be empty)\n        if (!validateInputSettings(inputSettings)) {\n          return this._getInputSettings();\n        }\n\n        // if we're in callObject mode and not loaded yet, don't do anything\n        if (this._callObjectMode && this.needsLoad()) {\n          return this._getInputSettings();\n        }\n\n        // Ask call machine to update input settings, then await callback.\n        return new Promise(function (resolve, reject) {\n          var k = function k(msg) {\n            if (msg.error) {\n              reject(msg.error);\n            } else {\n              resolve({\n                inputSettings: _this8._prepInputSettingsToPresentToUser(msg.inputSettings)\n              });\n            }\n          };\n          _this8.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_UPDATE_INPUT_SETTINGS,\n            inputSettings: inputSettings\n          }, k);\n        });\n      });\n      function updateInputSettings(_x3) {\n        return _updateInputSettings.apply(this, arguments);\n      }\n      return updateInputSettings;\n    }()\n  }, {\n    key: \"setBandwidth\",\n    value: function setBandwidth(_ref4) {\n      var kbs = _ref4.kbs,\n        trackConstraints = _ref4.trackConstraints;\n      methodNotSupportedInReactNative();\n      if (!this._dailyMainExecuted) return;\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_BANDWIDTH,\n        kbs: kbs,\n        trackConstraints: trackConstraints\n      });\n      return this;\n    }\n  }, {\n    key: \"getDailyLang\",\n    value: function getDailyLang() {\n      var _this9 = this;\n      methodNotSupportedInReactNative();\n      if (!this._dailyMainExecuted) return;\n      return new Promise(function (resolve) {\n        var k = function k(msg) {\n          delete msg.action;\n          delete msg.callbackStamp;\n          resolve(msg);\n        };\n        _this9.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_GET_LANG\n        }, k);\n      });\n    }\n  }, {\n    key: \"setDailyLang\",\n    value: function setDailyLang(lang) {\n      methodNotSupportedInReactNative();\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_LANG,\n        lang: lang\n      });\n      return this;\n    }\n  }, {\n    key: \"setProxyUrl\",\n    value: function setProxyUrl(proxyUrl) {\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_PROXYURL,\n        proxyUrl: proxyUrl\n      });\n      return this;\n    }\n  }, {\n    key: \"setIceConfig\",\n    value: function setIceConfig(iceConfig) {\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_ICE_CONFIG,\n        iceConfig: iceConfig\n      });\n      return this;\n    }\n  }, {\n    key: \"meetingSessionSummary\",\n    value: function meetingSessionSummary() {\n      if ([_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_LEFT, _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_ERROR].includes(this._callState)) {\n        return this._finalSummaryOfPrevSession;\n      }\n      return this._meetingSessionSummary;\n    }\n  }, {\n    key: \"getMeetingSession\",\n    value: function () {\n      var _getMeetingSession = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        var _this10 = this;\n        console.warn('getMeetingSession() is deprecated: use meetingSessionSummary(), which will return immediately');\n        // Validate call state: meeting session details are only available\n        // once you have joined the meeting\n        methodOnlySupportedAfterJoin(this._callState, 'getMeetingSession()');\n        return new Promise(function (resolve) {\n          // Not doing the following so that we can log and monitor usage of\n          // this now deprecated function\n          // resolve({ meetingSession: this.meetingSessionSummary() });\n          var k = function k(msg) {\n            delete msg.action;\n            delete msg.callbackStamp;\n            delete msg.callFrameId;\n            resolve(msg);\n          };\n          _this10.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_GET_MEETING_SESSION\n          }, k);\n        });\n      });\n      function getMeetingSession() {\n        return _getMeetingSession.apply(this, arguments);\n      }\n      return getMeetingSession;\n    }()\n  }, {\n    key: \"meetingSessionState\",\n    value: function meetingSessionState() {\n      // Validate call state: meeting session details are only available\n      // once you have joined the meeting\n      methodOnlySupportedAfterJoin(this._callState, 'meetingSessionState');\n\n      // currently only default values returned\n      return this._meetingSessionState;\n    }\n  }, {\n    key: \"setMeetingSessionData\",\n    value: function setMeetingSessionData(data) {\n      var mergeStrategy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'replace';\n      methodOnlySupportedInCallObject(this._callObjectMode, 'setMeetingSessionData()');\n\n      // Validate call state: session data can only be set once you have\n      // joined the meeting\n      methodOnlySupportedAfterJoin(this._callState, 'setMeetingSessionData');\n      try {\n        validateSessionDataUpdate(data, mergeStrategy);\n      } catch (e) {\n        console.error(e);\n        throw e;\n      }\n      try {\n        this.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_SESSION_DATA,\n          data: data,\n          mergeStrategy: mergeStrategy\n        });\n      } catch (e) {\n        // Probably data was not structured-clonable and couldn't be sent in the\n        // message to the call machine...\n        throw new Error(\"Error setting meeting session data: \".concat(e));\n      }\n    }\n  }, {\n    key: \"setUserName\",\n    value: function setUserName(name, options) {\n      var _this11 = this;\n      this.properties.userName = name;\n      return new Promise(function (resolve) {\n        var k = function k(msg) {\n          delete msg.action;\n          delete msg.callbackStamp;\n          resolve(msg);\n        };\n        _this11.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_USER_NAME,\n          name: name !== null && name !== void 0 ? name : '',\n          thisMeetingOnly: (0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)() || (options ? !!options.thisMeetingOnly : false)\n        }, k);\n      });\n    }\n  }, {\n    key: \"setUserData\",\n    value: function () {\n      var _setUserData = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (data) {\n        var _this12 = this;\n        try {\n          validateUserData(data);\n        } catch (e) {\n          console.error(e);\n          throw e;\n        }\n        this.properties.userData = data;\n        if (!this._dailyMainExecuted) return;\n        return new Promise(function (resolve) {\n          var k = function k(msg) {\n            delete msg.action;\n            delete msg.callbackStamp;\n            delete msg.callFrameId;\n            resolve(msg);\n          };\n          try {\n            _this12.sendMessageToCallMachine({\n              action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_USER_DATA,\n              userData: data\n            }, k);\n          } catch (e) {\n            // Probably userData was not structured-clonable and couldn't be sent in\n            // a message to the call machine...\n            throw new Error(\"Error setting user data: \".concat(e));\n          }\n        });\n      });\n      function setUserData(_x4) {\n        return _setUserData.apply(this, arguments);\n      }\n      return setUserData;\n    }()\n  }, {\n    key: \"validateAudioLevelInterval\",\n    value: function validateAudioLevelInterval(interval) {\n      if (interval && (interval < 100 || typeof interval !== 'number')) {\n        throw new Error('The interval must be a number greater than or equal to 100 milliseconds.');\n      }\n    }\n  }, {\n    key: \"startLocalAudioLevelObserver\",\n    value: function startLocalAudioLevelObserver(interval) {\n      var _this13 = this;\n      methodNotSupportedInReactNative();\n      this.validateAudioLevelInterval(interval);\n      if (!this._dailyMainExecuted) {\n        this._preloadCache.localAudioLevelObserver = {\n          enabled: true,\n          interval: interval\n        };\n        return;\n      }\n      return new Promise(function (resolve, reject) {\n        var k = function k(msg) {\n          if (msg.error) {\n            reject({\n              error: msg.error\n            });\n          } else {\n            resolve();\n          }\n        };\n        _this13.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_START_LOCAL_AUDIO_LEVEL_OBSERVER,\n          interval: interval\n        }, k);\n      });\n    }\n  }, {\n    key: \"stopLocalAudioLevelObserver\",\n    value: function () {\n      var _stopLocalAudioLevelObserver = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        methodNotSupportedInReactNative();\n        this._preloadCache.localAudioLevelObserver = null;\n        this._localAudioLevel = 0;\n        this.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_STOP_LOCAL_AUDIO_LEVEL_OBSERVER\n        });\n      });\n      function stopLocalAudioLevelObserver() {\n        return _stopLocalAudioLevelObserver.apply(this, arguments);\n      }\n      return stopLocalAudioLevelObserver;\n    }()\n  }, {\n    key: \"startRemoteParticipantsAudioLevelObserver\",\n    value: function startRemoteParticipantsAudioLevelObserver(interval) {\n      var _this14 = this;\n      methodNotSupportedInReactNative();\n      this.validateAudioLevelInterval(interval);\n      if (!this._dailyMainExecuted) {\n        this._preloadCache.remoteParticipantsAudioLevelObserver = {\n          enabled: true,\n          interval: interval\n        };\n        return;\n      }\n      return new Promise(function (resolve, reject) {\n        var k = function k(msg) {\n          if (msg.error) {\n            reject({\n              error: msg.error\n            });\n          } else {\n            resolve();\n          }\n        };\n        _this14.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_START_REMOTE_PARTICIPANTS_AUDIO_LEVEL_OBSERVER,\n          interval: interval\n        }, k);\n      });\n    }\n  }, {\n    key: \"stopRemoteParticipantsAudioLevelObserver\",\n    value: function () {\n      var _stopRemoteParticipantsAudioLevelObserver = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        methodNotSupportedInReactNative();\n        this._preloadCache.remoteParticipantsAudioLevelObserver = null;\n        this._remoteParticipantsAudioLevel = {};\n        this.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_STOP_REMOTE_PARTICIPANTS_AUDIO_LEVEL_OBSERVER\n        });\n      });\n      function stopRemoteParticipantsAudioLevelObserver() {\n        return _stopRemoteParticipantsAudioLevelObserver.apply(this, arguments);\n      }\n      return stopRemoteParticipantsAudioLevelObserver;\n    }()\n  }, {\n    key: \"startCamera\",\n    value: function () {\n      var _startCamera = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        var _this15 = this;\n        var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        // Validate mode.\n        methodOnlySupportedInCallObject(this._callObjectMode, 'startCamera()');\n\n        // Validate call state: startCamera() is only allowed if you haven't\n        // already joined (or aren't in the process of joining).\n        methodOnlySupportedBeforeJoin(this._callState, this._isPreparingToJoin, 'startCamera()', 'Did you mean to use setLocalAudio() and/or setLocalVideo() instead?');\n        methodNotSupportedDuringTestCall(this._testCallInProgress, 'startCamera()');\n        if (this.needsLoad()) {\n          try {\n            yield this.load(properties);\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        } else {\n          // even if is already loaded, needs to validate the properties, so the dailyConfig properties can be inserted inside window._dailyConfig\n          // Validate that any provided url or token doesn't conflict with url or\n          // token already used to preAuth()\n          if (this._didPreAuth) {\n            if (properties.url && properties.url !== this.properties.url) {\n              console.error(\"url in startCamera() is different than the one used in preAuth()\");\n              return Promise.reject();\n            }\n            if (properties.token && properties.token !== this.properties.token) {\n              console.error(\"token in startCamera() is different than the one used in preAuth()\");\n              return Promise.reject();\n            }\n          }\n          this.validateProperties(properties);\n          this.properties = _objectSpread(_objectSpread({}, this.properties), properties);\n        }\n        return new Promise(function (resolve) {\n          var k = function k(msg) {\n            delete msg.action;\n            delete msg.callbackStamp;\n            resolve(msg);\n          };\n          _this15.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_START_CAMERA,\n            properties: makeSafeForPostMessage(_this15.properties),\n            preloadCache: makeSafeForPostMessage(_this15._preloadCache)\n          }, k);\n        });\n      });\n      function startCamera() {\n        return _startCamera.apply(this, arguments);\n      }\n      return startCamera;\n    }()\n  }, {\n    key: \"validateCustomTrack\",\n    value: function validateCustomTrack(track, mode, trackName) {\n      if (trackName && trackName.length > 50) {\n        throw new Error('Custom track `trackName` must not be more than 50 characters');\n      }\n      if (mode) {\n        // Since no property from DailyMicAudioModeSettings is required, we are just checking if It is an object\n        if (mode !== 'music' && mode !== 'speech' && !(mode instanceof Object)) {\n          throw new Error('Custom track `mode` must be either `music` | `speech` | `DailyMicAudioModeSettings` or `undefined`');\n        }\n      }\n      var isUsingReservedTrackName = trackName ? ['cam-audio', 'cam-video', 'screen-video', 'screen-audio', 'rmpAudio', 'rmpVideo', 'customVideoDefaults'].includes(trackName) : false;\n      if (isUsingReservedTrackName) {\n        throw new Error('Custom track `trackName` must not match a track name already used by daily: ' + 'cam-audio, cam-video, customVideoDefaults, screen-video, screen-audio, rmpAudio, rmpVideo');\n      }\n      if (!(track instanceof MediaStreamTrack)) {\n        throw new Error('Custom tracks provided must be instances of MediaStreamTrack');\n      }\n    }\n  }, {\n    key: \"startCustomTrack\",\n    value: function startCustomTrack() {\n      var _this16 = this;\n      var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        track: track,\n        mode: mode,\n        trackName: trackName\n      };\n      methodNotSupportedInReactNative();\n      // Validate meeting state: custom tracks are only available\n      // once you have joined the meeting\n      methodOnlySupportedAfterJoin(this._callState, 'startCustomTrack()');\n      this.validateCustomTrack(properties.track, properties.mode, properties.trackName);\n      return new Promise(function (resolve, reject) {\n        var k = function k(msg) {\n          if (msg.error) {\n            reject({\n              error: msg.error\n            });\n          } else {\n            resolve(msg.mediaTag);\n          }\n        };\n        window._dailyPreloadCache.customTrack = properties.track;\n        properties.track = _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_CUSTOM_TRACK;\n        _this16.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_START_CUSTOM_TRACK,\n          properties: properties\n        }, k);\n      });\n    }\n  }, {\n    key: \"stopCustomTrack\",\n    value: function stopCustomTrack(trackName) {\n      var _this17 = this;\n      methodNotSupportedInReactNative();\n      // Validate meeting state: custom tracks are only available\n      // once you have joined the meeting\n      methodOnlySupportedAfterJoin(this._callState, 'stopCustomTrack()');\n      return new Promise(function (resolve) {\n        var k = function k(msg) {\n          resolve(msg.mediaTag);\n        };\n        _this17.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_STOP_CUSTOM_TRACK,\n          mediaTag: trackName\n        }, k);\n      });\n    }\n  }, {\n    key: \"setCamera\",\n    value: function setCamera(cameraDeviceId) {\n      var _this18 = this;\n      methodOnlySupportedInReactNative();\n      methodRequiresDailyMainExecution(this._dailyMainExecuted, 'setCamera()');\n      return new Promise(function (resolve) {\n        var k = function k(msg) {\n          resolve({\n            device: msg.device\n          });\n        };\n        _this18.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_CAMERA,\n          cameraDeviceId: cameraDeviceId\n        }, k);\n      });\n    }\n  }, {\n    key: \"setAudioDevice\",\n    value: function () {\n      var _setAudioDevice = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (deviceId) {\n        methodOnlySupportedInReactNative();\n        this.nativeUtils().setAudioDevice(deviceId);\n        var currentAudioDevice = yield this.nativeUtils().getAudioDevice();\n        return {\n          deviceId: currentAudioDevice\n        };\n      });\n      function setAudioDevice(_x5) {\n        return _setAudioDevice.apply(this, arguments);\n      }\n      return setAudioDevice;\n    }()\n  }, {\n    key: \"cycleCamera\",\n    value: function cycleCamera() {\n      var _this19 = this;\n      return new Promise(function (resolve) {\n        var k = function k(msg) {\n          resolve({\n            device: msg.device\n          });\n        };\n        _this19.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_CYCLE_CAMERA\n        }, k);\n      });\n    }\n  }, {\n    key: \"cycleMic\",\n    value: function cycleMic() {\n      var _this20 = this;\n      methodNotSupportedInReactNative();\n      return new Promise(function (resolve) {\n        var k = function k(msg) {\n          resolve({\n            device: msg.device\n          });\n        };\n        _this20.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_CYCLE_MIC\n        }, k);\n      });\n    }\n  }, {\n    key: \"getCameraFacingMode\",\n    value: function getCameraFacingMode() {\n      var _this21 = this;\n      methodOnlySupportedInReactNative();\n      return new Promise(function (resolve) {\n        var k = function k(msg) {\n          resolve(msg.facingMode);\n        };\n        _this21.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_GET_CAMERA_FACING_MODE\n        }, k);\n      });\n    }\n  }, {\n    key: \"setInputDevicesAsync\",\n    value: function () {\n      var _setInputDevicesAsync = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (_ref5) {\n        var _this22 = this;\n        var audioDeviceId = _ref5.audioDeviceId,\n          videoDeviceId = _ref5.videoDeviceId,\n          audioSource = _ref5.audioSource,\n          videoSource = _ref5.videoSource;\n        methodNotSupportedInReactNative();\n        // use audioDeviceId and videoDeviceId internally\n        if (audioSource !== undefined) {\n          audioDeviceId = audioSource;\n        }\n        if (videoSource !== undefined) {\n          videoDeviceId = videoSource;\n        }\n\n        // cache these for use in subsequent calls\n        if (audioDeviceId) {\n          this._preloadCache.audioDeviceId = audioDeviceId;\n        }\n        if (videoDeviceId) {\n          this._preloadCache.videoDeviceId = videoDeviceId;\n        }\n\n        // if we're in callObject mode and not loaded yet, don't do anything\n        if (this._callObjectMode && this.needsLoad()) {\n          return {\n            camera: {\n              deviceId: this._preloadCache.videoDeviceId\n            },\n            mic: {\n              deviceId: this._preloadCache.audioDeviceId\n            },\n            speaker: {\n              deviceId: this._preloadCache.outputDeviceId\n            }\n          };\n        }\n        if (audioDeviceId instanceof MediaStreamTrack) {\n          audioDeviceId = _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_CUSTOM_TRACK;\n        }\n        if (videoDeviceId instanceof MediaStreamTrack) {\n          videoDeviceId = _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_CUSTOM_TRACK;\n        }\n        return new Promise(function (resolve) {\n          var k = function k(msg) {\n            delete msg.action;\n            delete msg.callbackStamp;\n            if (msg.returnPreloadCache) {\n              resolve({\n                camera: {\n                  deviceId: _this22._preloadCache.videoDeviceId\n                },\n                mic: {\n                  deviceId: _this22._preloadCache.audioDeviceId\n                },\n                speaker: {\n                  deviceId: _this22._preloadCache.outputDeviceId\n                }\n              });\n              return;\n            }\n            resolve(msg);\n          };\n          _this22.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_INPUT_DEVICES,\n            audioDeviceId: audioDeviceId,\n            videoDeviceId: videoDeviceId\n          }, k);\n        });\n      });\n      function setInputDevicesAsync(_x6) {\n        return _setInputDevicesAsync.apply(this, arguments);\n      }\n      return setInputDevicesAsync;\n    }()\n  }, {\n    key: \"setOutputDeviceAsync\",\n    value: function () {\n      var _setOutputDeviceAsync = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (_ref6) {\n        var _this23 = this;\n        var outputDeviceId = _ref6.outputDeviceId;\n        methodNotSupportedInReactNative();\n        // cache this for use later\n        if (outputDeviceId) {\n          this._preloadCache.outputDeviceId = outputDeviceId;\n        }\n\n        // if we're in callObject mode and not loaded yet, don't do anything\n        if (this._callObjectMode && this.needsLoad()) {\n          return {\n            camera: {\n              deviceId: this._preloadCache.videoDeviceId\n            },\n            mic: {\n              deviceId: this._preloadCache.audioDeviceId\n            },\n            speaker: {\n              deviceId: this._preloadCache.outputDeviceId\n            }\n          };\n        }\n        return new Promise(function (resolve) {\n          var k = function k(msg) {\n            delete msg.action;\n            delete msg.callbackStamp;\n            if (msg.returnPreloadCache) {\n              resolve({\n                camera: {\n                  deviceId: _this23._preloadCache.videoDeviceId\n                },\n                mic: {\n                  deviceId: _this23._preloadCache.audioDeviceId\n                },\n                speaker: {\n                  deviceId: _this23._preloadCache.outputDeviceId\n                }\n              });\n              return;\n            }\n            resolve(msg);\n          };\n          _this23.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_OUTPUT_DEVICE,\n            outputDeviceId: outputDeviceId\n          }, k);\n        });\n      });\n      function setOutputDeviceAsync(_x7) {\n        return _setOutputDeviceAsync.apply(this, arguments);\n      }\n      return setOutputDeviceAsync;\n    }()\n  }, {\n    key: \"getInputDevices\",\n    value: function () {\n      var _getInputDevices = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        var _this24 = this;\n        if (this._callObjectMode && this.needsLoad()) {\n          return {\n            camera: {\n              deviceId: this._preloadCache.videoDeviceId\n            },\n            mic: {\n              deviceId: this._preloadCache.audioDeviceId\n            },\n            speaker: {\n              deviceId: this._preloadCache.outputDeviceId\n            }\n          };\n        }\n        return new Promise(function (resolve) {\n          var k = function k(msg) {\n            delete msg.action;\n            delete msg.callbackStamp;\n            if (msg.returnPreloadCache) {\n              resolve({\n                camera: {\n                  deviceId: _this24._preloadCache.videoDeviceId\n                },\n                mic: {\n                  deviceId: _this24._preloadCache.audioDeviceId\n                },\n                speaker: {\n                  deviceId: _this24._preloadCache.outputDeviceId\n                }\n              });\n              return;\n            }\n            resolve(msg);\n          };\n          _this24.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_GET_INPUT_DEVICES\n          }, k);\n        });\n      });\n      function getInputDevices() {\n        return _getInputDevices.apply(this, arguments);\n      }\n      return getInputDevices;\n    }()\n  }, {\n    key: \"nativeInCallAudioMode\",\n    value: function nativeInCallAudioMode() {\n      methodOnlySupportedInReactNative();\n      return this._nativeInCallAudioMode;\n    }\n  }, {\n    key: \"setNativeInCallAudioMode\",\n    value: function setNativeInCallAudioMode(inCallAudioMode) {\n      methodOnlySupportedInReactNative();\n      if (![NATIVE_AUDIO_MODE_VIDEO_CALL, NATIVE_AUDIO_MODE_VOICE_CALL].includes(inCallAudioMode)) {\n        console.error('invalid in-call audio mode specified: ', inCallAudioMode);\n        return;\n      }\n      if (inCallAudioMode === this._nativeInCallAudioMode) {\n        return;\n      }\n\n      // Set new audio mode (video call, audio call) to use when we're in a call\n      this._nativeInCallAudioMode = inCallAudioMode;\n\n      // If we're in a call now, apply the new audio mode\n      // (assuming automatic audio device management isn't disabled)\n      if (!this.disableReactNativeAutoDeviceManagement('audio') && _isCallPendingOrOngoing(this._callState, this._isPreparingToJoin)) {\n        this.nativeUtils().setAudioMode(this._nativeInCallAudioMode);\n      }\n      return this;\n    }\n  }, {\n    key: \"preAuth\",\n    value: function () {\n      var _preAuth = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        var _this25 = this;\n        var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        // Validate mode.\n        methodOnlySupportedInCallObject(this._callObjectMode, 'preAuth()');\n\n        // Validate call state: pre-auth is only allowed if you haven't already\n        // joined (or aren't in the process of joining).\n        methodOnlySupportedBeforeJoin(this._callState, this._isPreparingToJoin, 'preAuth()');\n        methodNotSupportedDuringTestCall(this._testCallInProgress, 'preAuth()');\n\n        // Load call machine bundle, if needed.\n        if (this.needsLoad()) {\n          yield this.load(properties);\n        }\n\n        // Assign properties, ensuring that at a minimum url is set.\n        if (!properties.url) {\n          throw new Error('preAuth() requires at least a url to be provided');\n        }\n        this.validateProperties(properties);\n        this.properties = _objectSpread(_objectSpread({}, this.properties), properties);\n\n        // Pre-auth with the server.\n        return new Promise(function (resolve, reject) {\n          var k = function k(msg) {\n            if (msg.error) {\n              return reject(msg.error);\n            }\n            if (!msg.access) {\n              return reject(new Error('unknown error in preAuth()'));\n            }\n\n            // Set a flag indicating that we've pre-authed.\n            // This flag has the effect of \"locking in\" url and token, so that they\n            // can't be changed subsequently on join(), which would invalidate this\n            // pre-auth.\n            _this25._didPreAuth = true;\n            resolve({\n              access: msg.access\n            });\n          };\n          _this25.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_PREAUTH,\n            properties: makeSafeForPostMessage(_this25.properties),\n            preloadCache: makeSafeForPostMessage(_this25._preloadCache)\n          }, k);\n        });\n      });\n      function preAuth() {\n        return _preAuth.apply(this, arguments);\n      }\n      return preAuth;\n    }()\n  }, {\n    key: \"load\",\n    value: function () {\n      var _load = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (properties) {\n        var _this26 = this;\n        if (!this.needsLoad()) {\n          return;\n        }\n        if (this._destroyed) {\n          this._logUseAfterDestroy();\n          if (this.strictMode) {\n            throw new Error('Use after destroy');\n          }\n        }\n        if (properties) {\n          this.validateProperties(properties);\n          this.properties = _objectSpread(_objectSpread({}, this.properties), properties);\n        }\n\n        // In iframe mode, we *must* have a meeting url\n        // (As opposed to call object mode, where a meeting url, a base url, or no\n        // url at all are all valid here)\n        if (!this._callObjectMode && !this.properties.url) {\n          throw new Error(\"can't load iframe meeting because url property isn't set\");\n        }\n        this._updateCallState(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_LOADING);\n        try {\n          this.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOADING, {\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOADING\n          });\n        } catch (e) {\n          console.log(\"could not emit 'loading'\", e);\n        }\n        if (this._callObjectMode) {\n          // non-iframe, callObjectMode\n          return new Promise(function (resolve, reject) {\n            _this26._callObjectLoader.cancel();\n            var startTime = Date.now();\n            _this26._callObjectLoader.load(_this26._callFrameId, _this26.properties.dailyConfig && _this26.properties.dailyConfig.avoidEval, function (wasNoOp) {\n              _this26._bundleLoadTime = wasNoOp ? 'no-op' : Date.now() - startTime;\n              _this26._updateCallState(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_LOADED);\n              // Only need to emit event if load was a no-op, since the loaded\n              // bundle won't be emitting it if it's not executed again\n              wasNoOp && _this26.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOADED, {\n                action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOADED\n              });\n              resolve();\n            }, function (errorMsg, willRetry) {\n              _this26.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOAD_ATTEMPT_FAILED, {\n                action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOAD_ATTEMPT_FAILED,\n                errorMsg: errorMsg\n              });\n              if (!willRetry) {\n                _this26._updateCallState(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_ERROR);\n                _this26.resetMeetingDependentVars();\n                var error = {\n                  action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_ERROR,\n                  errorMsg: errorMsg,\n                  error: {\n                    type: 'connection-error',\n                    msg: 'Failed to load call object bundle.',\n                    details: {\n                      on: 'load',\n                      sourceError: new Error(errorMsg),\n                      bundleUrl: (0,_utils__WEBPACK_IMPORTED_MODULE_13__.callObjectBundleUrl)()\n                    }\n                  }\n                };\n                _this26._maybeSendToSentry(error);\n                _this26.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_ERROR, error);\n                reject(errorMsg);\n              }\n            });\n          });\n        } else {\n          // iframe\n          this._iframe.src = (0,_utils__WEBPACK_IMPORTED_MODULE_13__.maybeProxyHttpsUrl)(this.assembleMeetingUrl());\n          return new Promise(function (resolve, reject) {\n            _this26._loadedCallback = function (error) {\n              if (_this26._callState === _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_ERROR) {\n                reject(error);\n                return;\n              }\n              _this26._updateCallState(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_LOADED);\n              if (_this26.properties.cssFile || _this26.properties.cssText) {\n                _this26.loadCss(_this26.properties);\n              }\n              for (var eventName in _this26._inputEventsOn) {\n                _this26.sendMessageToCallMachine({\n                  action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_REGISTER_INPUT_HANDLER,\n                  on: eventName\n                });\n              }\n              resolve();\n            };\n          });\n        }\n      });\n      function load(_x8) {\n        return _load.apply(this, arguments);\n      }\n      return load;\n    }()\n  }, {\n    key: \"join\",\n    value: function () {\n      var _join = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        var _this27 = this;\n        var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        methodNotSupportedDuringTestCall(this._testCallInProgress, 'join()');\n        var newCss = false;\n        if (this.needsLoad()) {\n          this.updateIsPreparingToJoin(true);\n          try {\n            yield this.load(properties);\n          } catch (e) {\n            this.updateIsPreparingToJoin(false);\n            return Promise.reject(e);\n          }\n        } else {\n          newCss = !!(this.properties.cssFile || this.properties.cssText);\n\n          // Validate that any provided url or token doesn't conflict with url or\n          // token already used to preAuth()\n          if (this._didPreAuth) {\n            if (properties.url && properties.url !== this.properties.url) {\n              console.error(\"url in join() is different than the one used in preAuth()\");\n              this.updateIsPreparingToJoin(false);\n              return Promise.reject();\n            }\n            if (properties.token && properties.token !== this.properties.token) {\n              console.error(\"token in join() is different than the one used in preAuth()\");\n              this.updateIsPreparingToJoin(false);\n              return Promise.reject();\n            }\n          }\n\n          // In iframe mode, validate that url we're using to join() doesn't\n          // conflict with the url we used to load()\n          if (properties.url && !this._callObjectMode) {\n            if (properties.url && properties.url !== this.properties.url) {\n              console.error(\"url in join() is different than the one used in load() (\".concat(this.properties.url, \" -> \").concat(properties.url, \")\"));\n              this.updateIsPreparingToJoin(false);\n              return Promise.reject();\n            }\n          }\n\n          // Validate and assign properties to this.properties, for use by call\n          // machine\n          this.validateProperties(properties);\n          this.properties = _objectSpread(_objectSpread({}, this.properties), properties);\n        }\n\n        // only update if showLocalVideo/showParticipantsBar are being explicitly set\n        if (properties.showLocalVideo !== undefined) {\n          if (this._callObjectMode) {\n            console.error('showLocalVideo is not available in callObject mode');\n          } else {\n            this._showLocalVideo = !!properties.showLocalVideo;\n          }\n        }\n        if (properties.showParticipantsBar !== undefined) {\n          if (this._callObjectMode) {\n            console.error('showParticipantsBar is not available in callObject mode');\n          } else {\n            this._showParticipantsBar = !!properties.showParticipantsBar;\n          }\n        }\n        if (this._callState === _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_JOINED || this._callState === _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_JOINING) {\n          console.warn('already joined meeting, call leave() before joining again');\n          this.updateIsPreparingToJoin(false);\n          return;\n        }\n        this._updateCallState(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_JOINING, false);\n        try {\n          this.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_JOINING_MEETING, {\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_JOINING_MEETING\n          });\n        } catch (e) {\n          console.log(\"could not emit 'joining-meeting'\", e);\n        }\n\n        // set input settings in the preload cache\n        if (!this._preloadCache.inputSettings) {\n          this._preloadCache.inputSettings = {};\n        }\n        if (properties.inputSettings && properties.inputSettings.audio) {\n          this._preloadCache.inputSettings.audio = properties.inputSettings.audio;\n        }\n        if (properties.inputSettings && properties.inputSettings.video) {\n          this._preloadCache.inputSettings.video = properties.inputSettings.video;\n        }\n        this.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_JOIN,\n          properties: makeSafeForPostMessage(this.properties),\n          preloadCache: makeSafeForPostMessage(this._preloadCache)\n        });\n        return new Promise(function (resolve, reject) {\n          _this27._joinedCallback = function (participants, error) {\n            if (_this27._callState === _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_ERROR) {\n              reject(error);\n              return;\n            }\n            _this27._updateCallState(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_JOINED);\n            if (participants) {\n              for (var id in participants) {\n                if (_this27._callObjectMode) {\n                  _Participant__WEBPACK_IMPORTED_MODULE_20__.addTracks(participants[id]);\n                  _Participant__WEBPACK_IMPORTED_MODULE_20__.addCustomTracks(participants[id]);\n                  _Participant__WEBPACK_IMPORTED_MODULE_20__.addLegacyTracks(participants[id], _this27._participants[id]);\n                }\n                _this27._participants[id] = _objectSpread({}, participants[id]);\n                _this27.toggleParticipantAudioBasedOnNativeAudioFocus();\n              }\n            }\n            if (newCss) {\n              _this27.loadCss(_this27.properties);\n            }\n            resolve(participants);\n          };\n        });\n      });\n      function join() {\n        return _join.apply(this, arguments);\n      }\n      return join;\n    }()\n  }, {\n    key: \"leave\",\n    value: function () {\n      var _leave = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        var _this28 = this;\n        methodNotSupportedDuringTestCall(this._testCallInProgress, \"leave()\");\n        return new Promise(function (resolve) {\n          if (_this28._callState === _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_LEFT || _this28._callState === _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_ERROR) {\n            // nothing to do, here, just resolve\n            resolve();\n          } else if (_this28._callObjectLoader && !_this28._callObjectLoader.loaded) {\n            // If call object bundle never successfully loaded, cancel load if\n            // needed and clean up state immediately (without waiting for call\n            // machine to clean up its state).\n            _this28._callObjectLoader.cancel();\n            _this28._updateCallState(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_LEFT);\n            _this28.resetMeetingDependentVars();\n            try {\n              _this28.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_LEFT, {\n                action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_LEFT\n              });\n            } catch (e) {\n              console.log(\"could not emit 'left-meeting'\", e);\n            }\n            resolve();\n          } else {\n            _this28._resolveLeave = resolve;\n            // TODO: the possibility that the iframe call machine is not yet loaded\n            // is never handled here...\n            _this28.sendMessageToCallMachine({\n              action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_LEAVE\n            });\n          }\n        });\n      });\n      function leave() {\n        return _leave.apply(this, arguments);\n      }\n      return leave;\n    }()\n  }, {\n    key: \"startScreenShare\",\n    value: function () {\n      var _startScreenShare = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        var _this29 = this;\n        var captureOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        methodRequiresDailyMainExecution(this._dailyMainExecuted, 'startScreenShare()');\n        if (captureOptions.screenVideoSendSettings) {\n          this._validateVideoSendSettings('screenVideo', captureOptions.screenVideoSendSettings);\n        }\n        if (captureOptions.mediaStream) {\n          this._preloadCache.screenMediaStream = captureOptions.mediaStream;\n          captureOptions.mediaStream = _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_CUSTOM_TRACK;\n        }\n        if ((0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNativeIOS)()) {\n          var nativeUtils = this.nativeUtils();\n          var isScreenBeingCaptured = yield nativeUtils.isScreenBeingCaptured();\n          if (isScreenBeingCaptured) {\n            this.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_NONFATAL_ERROR, {\n              action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_NONFATAL_ERROR,\n              type: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_SCREEN_SHARE_ERROR_TYPE,\n              errorMsg: 'Could not start the screen sharing. The screen is already been captured!'\n            });\n            return;\n          }\n          var screenCaptureStartCallback = function screenCaptureStartCallback() {\n            nativeUtils.setSystemScreenCaptureStartCallback(null);\n            _this29.sendMessageToCallMachine({\n              action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_START_SCREENSHARE,\n              captureOptions: captureOptions\n            });\n          };\n          nativeUtils.setSystemScreenCaptureStartCallback(screenCaptureStartCallback);\n          nativeUtils.presentSystemScreenCapturePrompt();\n        } else {\n          this.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_START_SCREENSHARE,\n            captureOptions: captureOptions\n          });\n        }\n      });\n      function startScreenShare() {\n        return _startScreenShare.apply(this, arguments);\n      }\n      return startScreenShare;\n    }()\n  }, {\n    key: \"stopScreenShare\",\n    value: function stopScreenShare() {\n      methodRequiresDailyMainExecution(this._dailyMainExecuted, 'stopScreenShare()');\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_STOP_SCREENSHARE\n      });\n    }\n  }, {\n    key: \"startRecording\",\n    value: function startRecording() {\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.sendMessageToCallMachine(_objectSpread({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_START_RECORDING\n      }, args));\n    }\n  }, {\n    key: \"updateRecording\",\n    value: function updateRecording(_ref7) {\n      var _ref7$layout = _ref7.layout,\n        layout = _ref7$layout === void 0 ? {\n          preset: 'default'\n        } : _ref7$layout,\n        instanceId = _ref7.instanceId;\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_UPDATE_RECORDING,\n        layout: layout,\n        instanceId: instanceId\n      });\n    }\n  }, {\n    key: \"stopRecording\",\n    value: function stopRecording() {\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.sendMessageToCallMachine(_objectSpread({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_STOP_RECORDING\n      }, args));\n    }\n  }, {\n    key: \"startLiveStreaming\",\n    value: function startLiveStreaming() {\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.sendMessageToCallMachine(_objectSpread({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_START_LIVE_STREAMING\n      }, args));\n    }\n  }, {\n    key: \"updateLiveStreaming\",\n    value: function updateLiveStreaming(_ref8) {\n      var _ref8$layout = _ref8.layout,\n        layout = _ref8$layout === void 0 ? {\n          preset: 'default'\n        } : _ref8$layout,\n        instanceId = _ref8.instanceId;\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_UPDATE_LIVE_STREAMING,\n        layout: layout,\n        instanceId: instanceId\n      });\n    }\n  }, {\n    key: \"addLiveStreamingEndpoints\",\n    value: function addLiveStreamingEndpoints(_ref9) {\n      var endpoints = _ref9.endpoints,\n        instanceId = _ref9.instanceId;\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_UPDATE_LIVE_STREAMING_ENDPOINTS,\n        endpointsOp: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.UPDATE_LIVE_STREAMING_ENDPOINTS_OP.ADD_ENDPOINTS,\n        endpoints: endpoints,\n        instanceId: instanceId\n      });\n    }\n  }, {\n    key: \"removeLiveStreamingEndpoints\",\n    value: function removeLiveStreamingEndpoints(_ref10) {\n      var endpoints = _ref10.endpoints,\n        instanceId = _ref10.instanceId;\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_UPDATE_LIVE_STREAMING_ENDPOINTS,\n        endpointsOp: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.UPDATE_LIVE_STREAMING_ENDPOINTS_OP.REMOVE_ENDPOINTS,\n        endpoints: endpoints,\n        instanceId: instanceId\n      });\n    }\n  }, {\n    key: \"stopLiveStreaming\",\n    value: function stopLiveStreaming() {\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.sendMessageToCallMachine(_objectSpread({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_STOP_LIVE_STREAMING\n      }, args));\n    }\n  }, {\n    key: \"validateDailyConfig\",\n    value: function validateDailyConfig(dailyConfig) {\n      // validate simulcastEncodings\n      if (dailyConfig.camSimulcastEncodings) {\n        console.warn('camSimulcastEncodings is deprecated. Use sendSettings, found in DailyCallOptions, to provide camera simulcast settings.');\n        this.validateSimulcastEncodings(dailyConfig.camSimulcastEncodings);\n      }\n      // warn for use of screenSimulcastEncodings\n      if (dailyConfig.screenSimulcastEncodings) {\n        console.warn('screenSimulcastEncodings is deprecated. Use sendSettings, found in DailyCallOptions, to provide screen simulcast settings.');\n      }\n    }\n  }, {\n    key: \"validateSimulcastEncodings\",\n    value: function validateSimulcastEncodings(encodings) {\n      var validEncodingRanges = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var isMaxBitrateMandatory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (!encodings) return;\n      // validate simulcastEncodings\n      if (!(encodings instanceof Array)) {\n        throw new Error(\"encodings must be an Array\");\n      }\n      // max 3 layers\n      if (!isValueInRange(encodings.length, 1, MAX_SIMULCAST_LAYERS)) {\n        throw new Error(\"encodings must be an Array with between 1 to \".concat(MAX_SIMULCAST_LAYERS, \" layers\"));\n      }\n      // check value within each simulcast layer\n      for (var i = 0; i < encodings.length; i++) {\n        var layer = encodings[i];\n        this._validateEncodingLayerHasValidProperties(layer);\n        for (var prop in layer) {\n          // check property is valid\n          if (!simulcastEncodingsValidKeys.includes(prop)) {\n            throw new Error(\"Invalid key \".concat(prop, \", valid keys are:\") + Object.values(simulcastEncodingsValidKeys));\n          }\n          // property must be number\n          if (typeof layer[prop] !== 'number') {\n            throw new Error(\"\".concat(prop, \" must be a number\"));\n          }\n          if (validEncodingRanges) {\n            // property must be within range\n            var _validEncodingRanges$ = validEncodingRanges[prop],\n              min = _validEncodingRanges$.min,\n              max = _validEncodingRanges$.max;\n            if (!isValueInRange(layer[prop], min, max)) {\n              throw new Error(\"\".concat(prop, \" value not in range. valid range: \").concat(min, \" to \").concat(max));\n            }\n          }\n        }\n        // maxBitrate is sometimes mandatory\n        if (isMaxBitrateMandatory && !layer.hasOwnProperty('maxBitrate')) {\n          throw new Error(\"maxBitrate is not specified\");\n        }\n      }\n    }\n  }, {\n    key: \"startRemoteMediaPlayer\",\n    value: function () {\n      var _startRemoteMediaPlayer = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (_ref11) {\n        var _this30 = this;\n        var url = _ref11.url,\n          _ref11$settings = _ref11.settings,\n          settings = _ref11$settings === void 0 ? {\n            state: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_JS_REMOTE_MEDIA_PLAYER_SETTING.PLAY\n          } : _ref11$settings;\n        try {\n          validateRemotePlayerUrl(url);\n          validateRemotePlayerSettings(settings);\n          validateRemotePlayerEncodingSettings(settings);\n        } catch (e) {\n          console.error(\"invalid argument Error: \".concat(e));\n          console.error(remoteMediaPlayerStartValidationHelpMsg());\n          throw e;\n        }\n        return new Promise(function (resolve, reject) {\n          var k = function k(msg) {\n            if (msg.error) {\n              reject({\n                error: msg.error,\n                errorMsg: msg.errorMsg\n              });\n            } else {\n              resolve({\n                session_id: msg.session_id,\n                remoteMediaPlayerState: {\n                  state: msg.state,\n                  settings: msg.settings\n                }\n              });\n            }\n          };\n          _this30.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_START_REMOTE_MEDIA_PLAYER,\n            url: url,\n            settings: settings\n          }, k);\n        });\n      });\n      function startRemoteMediaPlayer(_x9) {\n        return _startRemoteMediaPlayer.apply(this, arguments);\n      }\n      return startRemoteMediaPlayer;\n    }()\n  }, {\n    key: \"stopRemoteMediaPlayer\",\n    value: function () {\n      var _stopRemoteMediaPlayer = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (session_id) {\n        var _this31 = this;\n        if (typeof session_id !== 'string') throw new Error(' remotePlayerID must be of type string');\n        return new Promise(function (resolve, reject) {\n          var k = function k(msg) {\n            if (msg.error) {\n              reject({\n                error: msg.error,\n                errorMsg: msg.errorMsg\n              });\n            } else {\n              resolve();\n            }\n          };\n          _this31.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_STOP_REMOTE_MEDIA_PLAYER,\n            session_id: session_id\n          }, k);\n        });\n      });\n      function stopRemoteMediaPlayer(_x10) {\n        return _stopRemoteMediaPlayer.apply(this, arguments);\n      }\n      return stopRemoteMediaPlayer;\n    }()\n  }, {\n    key: \"updateRemoteMediaPlayer\",\n    value: function () {\n      var _updateRemoteMediaPlayer = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (_ref12) {\n        var _this32 = this;\n        var session_id = _ref12.session_id,\n          settings = _ref12.settings;\n        // TODO: Add check of the current_state === desired state\n        // And resolve() from here itself.\n        try {\n          validateRemotePlayerSettings(settings);\n        } catch (e) {\n          console.error(\"invalid argument Error: \".concat(e));\n          console.error(remoteMediaPlayerUpdateValidationHelpMsg());\n          throw e;\n        }\n        return new Promise(function (resolve, reject) {\n          var k = function k(msg) {\n            if (msg.error) {\n              reject({\n                error: msg.error,\n                errorMsg: msg.errorMsg\n              });\n            } else {\n              resolve({\n                session_id: msg.session_id,\n                remoteMediaPlayerState: {\n                  state: msg.state,\n                  settings: msg.settings\n                }\n              });\n            }\n          };\n          _this32.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_UPDATE_REMOTE_MEDIA_PLAYER,\n            session_id: session_id,\n            settings: settings\n          }, k);\n        });\n      });\n      function updateRemoteMediaPlayer(_x11) {\n        return _updateRemoteMediaPlayer.apply(this, arguments);\n      }\n      return updateRemoteMediaPlayer;\n    }()\n  }, {\n    key: \"startTranscription\",\n    value: function startTranscription(args) {\n      this.sendMessageToCallMachine(_objectSpread({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_START_TRANSCRIPTION\n      }, args));\n    }\n  }, {\n    key: \"stopTranscription\",\n    value: function stopTranscription() {\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_STOP_TRANSCRIPTION\n      });\n    }\n  }, {\n    key: \"startDialOut\",\n    value: function () {\n      var _startDialOut = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (args) {\n        var _this33 = this;\n        methodOnlySupportedAfterJoin(this._callState, 'startDialOut()');\n        if (!args.sipUri && !args.phoneNumber) {\n          throw new Error(\"Error starting dial out: either a sip uri or phone number must be provided\");\n        }\n        if (args.sipUri && args.phoneNumber) {\n          throw new Error(\"Error starting dial out: only one of sip uri or phone number must be provided\");\n        }\n        if (args.sipUri) {\n          if (typeof args.sipUri !== 'string') {\n            throw new Error(\"Error starting dial out: sipUri must be a string\");\n          }\n          if (!args.sipUri.startsWith('sip:')) {\n            throw new Error(\"Error starting dial out: Invalid SIP URI, must start with 'sip:'\");\n          }\n        }\n        if (args.phoneNumber) {\n          if (typeof args.phoneNumber !== 'string') {\n            throw new Error(\"Error starting dial out: phoneNumber must be a string\");\n          }\n\n          // Must be a valid phone number as per E.164, example: +12268077097.\n          var re = /^\\+\\d{1,}$/;\n          if (!re.test(args.phoneNumber)) {\n            throw new Error(\"Error starting dial out: Invalid phone number, must be valid phone number as per E.164\");\n          }\n        }\n        return new Promise(function (resolve, reject) {\n          var k = function k(msg) {\n            if (msg.error) {\n              reject(msg.error);\n            } else {\n              resolve(msg);\n            }\n          };\n          _this33.sendMessageToCallMachine(_objectSpread({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_START_DIALOUT\n          }, args), k);\n        });\n      });\n      function startDialOut(_x12) {\n        return _startDialOut.apply(this, arguments);\n      }\n      return startDialOut;\n    }()\n  }, {\n    key: \"stopDialOut\",\n    value: function stopDialOut(args) {\n      methodOnlySupportedAfterJoin(this._callState, 'stopDialOut()');\n      this.sendMessageToCallMachine(_objectSpread({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_STOP_DIALOUT\n      }, args));\n    }\n  }, {\n    key: \"getNetworkStats\",\n    value: function getNetworkStats() {\n      var _this34 = this;\n      if (this._callState !== _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_JOINED) {\n        var stats = {\n          latest: {}\n        };\n        return {\n          stats: stats\n        };\n      }\n      return new Promise(function (resolve) {\n        var k = function k(msg) {\n          resolve(_objectSpread({\n            stats: msg.stats\n          }, _this34._network));\n        };\n        _this34.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_GET_CALC_STATS\n        }, k);\n      });\n    }\n  }, {\n    key: \"testWebsocketConnectivity\",\n    value: function () {\n      var _testWebsocketConnectivity = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        var _this35 = this;\n        methodNotSupportedDuringTestCall(this._testCallInProgress, \"testWebsocketConnectivity()\");\n        if (this.needsLoad()) {\n          try {\n            yield this.load();\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        }\n        return new Promise(function (resolve, reject) {\n          var k = function k(msg) {\n            if (msg.error) {\n              reject(msg.error);\n            } else {\n              resolve(msg.results);\n            }\n          };\n          _this35.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_TEST_WEBSOCKET_CONNECTIVITY\n          }, k);\n        });\n      });\n      function testWebsocketConnectivity() {\n        return _testWebsocketConnectivity.apply(this, arguments);\n      }\n      return testWebsocketConnectivity;\n    }()\n  }, {\n    key: \"abortTestWebsocketConnectivity\",\n    value: function abortTestWebsocketConnectivity() {\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_ABORT_TEST_WEBSOCKET_CONNECTIVITY\n      });\n    }\n  }, {\n    key: \"_validateVideoTrackForNetworkTests\",\n    value: function _validateVideoTrackForNetworkTests(videoTrack) {\n      if (!videoTrack) {\n        console.error('Missing video track. You must provide a video track in order to run this test.');\n        return false;\n      }\n      if (!(videoTrack instanceof MediaStreamTrack)) {\n        console.error('Video track needs to be of type `MediaStreamTrack`.');\n        return false;\n      }\n      if (!(0,_shared_with_pluot_core_TrackStateUtil__WEBPACK_IMPORTED_MODULE_22__.isPlayable)(videoTrack, {\n        isLocalScreenVideo: false\n      })) {\n        console.error('Video track is not playable. This test needs a live video track.');\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"testCallQuality\",\n    value: function () {\n      var _testCallQuality = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (args) {\n        var _this36 = this;\n        methodNotSupportedAfterDailyMainExecution(this._dailyMainExecuted, 'testCallQuality()');\n        if (args.videoTrack && !this._validateVideoTrackForNetworkTests(args.videoTrack)) {\n          throw new Error('Video track error');\n        }\n\n        // it's ok to call this method when a test is already running. we\n        // simply wait for the same promise and return the same results from\n        // ongoing one. BUT only the first test run should modify our flag.\n        var _testCallAlreadyInProgress = this._testCallAlreadyInProgress;\n        var _maybeUpdateTestCallInProgressFlag = function _maybeUpdateTestCallInProgressFlag(inProgress) {\n          if (!_testCallAlreadyInProgress) {\n            _this36._testCallInProgress = inProgress;\n          }\n        };\n        _maybeUpdateTestCallInProgressFlag(true);\n        var videoTrack = args.videoTrack,\n          callArgs = (0,_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(args, _excluded);\n        this._preloadCache.videoTrackForConnectionQualityTest = videoTrack;\n        if (this.needsLoad()) {\n          try {\n            // fun fact: sometimes when we call the loader's load() we don't\n            // actually load the call bundle, we just call a global function\n            // _dailyCallObjectSetup() to reinstall the call-bundle's message\n            // handler. meanwhile: needsLoad() checks against _callState and will\n            // return false if LOADED (which load() sets). Since the test call does\n            // not otherwise update our _callState to things like JOINED/LEFT but it\n            // WILL leave a call and remove the listener, we need to set the\n            // _callState back to what it was so future needsLoad() checks do the\n            // right thing\n            var _preloadCallState = this._callState;\n            yield this.load();\n            this._callState = _preloadCallState;\n          } catch (e) {\n            _maybeUpdateTestCallInProgressFlag(false);\n            return Promise.reject(e);\n          }\n        }\n        return new Promise(function (resolve) {\n          var k = function k(msg) {\n            var _msg$results = msg.results,\n              result = _msg$results.result,\n              data = (0,_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_msg$results, _excluded2);\n            if (result === 'failed') {\n              var _data$error;\n              var sentryError = _objectSpread({}, data);\n              if ((_data$error = data.error) !== null && _data$error !== void 0 && _data$error.details) {\n                data.error.details = JSON.parse(data.error.details);\n                sentryError.error = _objectSpread(_objectSpread({}, sentryError.error), {}, {\n                  details: _objectSpread({}, sentryError.error.details)\n                });\n                sentryError.error.details.duringTest = 'testCallQuality';\n              } else {\n                // we want to add details to the sentryError we send but\n                // be careful not to modify the one we return\n                sentryError.error = sentryError.error ? _objectSpread({}, sentryError.error) : {};\n                sentryError.error.details = {\n                  duringTest: 'testCallQuality'\n                };\n              }\n              _this36._maybeSendToSentry(sentryError);\n            }\n            _maybeUpdateTestCallInProgressFlag(false);\n            resolve(_objectSpread({\n              result: result\n            }, data));\n          };\n          _this36.sendMessageToCallMachine(_objectSpread(_objectSpread({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_TEST_CALL_QUALITY\n          }, callArgs), {}, {\n            dailyJsVersion: _this36.properties.dailyJsVersion\n          }), k);\n        });\n      });\n      function testCallQuality(_x13) {\n        return _testCallQuality.apply(this, arguments);\n      }\n      return testCallQuality;\n    }()\n  }, {\n    key: \"stopTestCallQuality\",\n    value: function stopTestCallQuality() {\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_STOP_TEST_CALL_QUALITY\n      });\n    }\n  }, {\n    key: \"testConnectionQuality\",\n    value: function () {\n      var _testConnectionQuality = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (args) {\n        console.warn(\"testConnectionQuality() is deprecated: use testCallQuality()(recommended) or testPeerToPeerCallQuality() instead\");\n        return yield this.testPeerToPeerCallQuality(args);\n      });\n      function testConnectionQuality(_x14) {\n        return _testConnectionQuality.apply(this, arguments);\n      }\n      return testConnectionQuality;\n    }()\n  }, {\n    key: \"testPeerToPeerCallQuality\",\n    value: function () {\n      var _testPeerToPeerCallQuality = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (args) {\n        var _this37 = this;\n        methodNotSupportedDuringTestCall(this._testCallInProgress, \"testConnectionQuality()\");\n        if (this.needsLoad()) {\n          try {\n            yield this.load();\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        }\n        var videoTrack = args.videoTrack,\n          duration = args.duration;\n        if (!this._validateVideoTrackForNetworkTests(videoTrack)) {\n          throw new Error('Video track error');\n        } else {\n          this._preloadCache.videoTrackForConnectionQualityTest = videoTrack;\n        }\n        return new Promise(function (resolve, reject) {\n          var k = function k(msg) {\n            if (msg.error) {\n              reject(msg.error);\n            } else {\n              resolve(msg.results);\n            }\n          };\n          _this37.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_TEST_P2P_CALL_QUALITY,\n            duration: duration\n          }, k);\n        });\n      });\n      function testPeerToPeerCallQuality(_x15) {\n        return _testPeerToPeerCallQuality.apply(this, arguments);\n      }\n      return testPeerToPeerCallQuality;\n    }()\n  }, {\n    key: \"stopTestConnectionQuality\",\n    value: function stopTestConnectionQuality() {\n      console.warn(\"stopTestConnectionQuality() is deprecated: use stopTestCallQuality() or stopTestPeerToPeerCallQuality() instead\");\n      this.stopTestPeerToPeerCallQuality();\n    }\n  }, {\n    key: \"stopTestPeerToPeerCallQuality\",\n    value: function stopTestPeerToPeerCallQuality() {\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_STOP_TEST_P2P_CALL_QUALITY\n      });\n    }\n  }, {\n    key: \"testNetworkConnectivity\",\n    value: function () {\n      var _testNetworkConnectivity = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (videoTrack) {\n        var _this38 = this;\n        methodNotSupportedDuringTestCall(this._testCallInProgress, \"testNetworkConnectivity()\");\n        if (this.needsLoad()) {\n          try {\n            yield this.load();\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        }\n        if (!this._validateVideoTrackForNetworkTests(videoTrack)) {\n          throw new Error('Video track error');\n        } else {\n          this._preloadCache.videoTrackForNetworkConnectivityTest = videoTrack;\n        }\n        return new Promise(function (resolve, reject) {\n          var k = function k(msg) {\n            if (msg.error) {\n              reject(msg.error);\n            } else {\n              resolve(msg.results);\n            }\n          };\n          _this38.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_TEST_NETWORK_CONNECTIVITY\n          }, k);\n        });\n      });\n      function testNetworkConnectivity(_x16) {\n        return _testNetworkConnectivity.apply(this, arguments);\n      }\n      return testNetworkConnectivity;\n    }()\n  }, {\n    key: \"abortTestNetworkConnectivity\",\n    value: function abortTestNetworkConnectivity() {\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_ABORT_TEST_NETWORK_CONNECTIVITY\n      });\n    }\n  }, {\n    key: \"getCpuLoadStats\",\n    value: function getCpuLoadStats() {\n      var _this39 = this;\n      return new Promise(function (resolve, _) {\n        if (_this39._callState !== _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_JOINED) {\n          resolve({\n            cpuLoadState: undefined,\n            cpuLoadStateReason: undefined,\n            stats: {}\n          });\n          return;\n        }\n        var k = function k(msg) {\n          resolve(msg.cpuStats);\n        };\n        _this39.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_GET_CPU_LOAD_STATS\n        }, k);\n      });\n    }\n  }, {\n    key: \"_validateEncodingLayerHasValidProperties\",\n    value: function _validateEncodingLayerHasValidProperties(layer) {\n      var _Object$keys2;\n      var layerHasProperties = ((_Object$keys2 = Object.keys(layer)) === null || _Object$keys2 === void 0 ? void 0 : _Object$keys2.length) > 0;\n      if (!layerHasProperties) {\n        throw new Error(\"Empty encoding is not allowed. At least one of these valid keys should be specified:\" + Object.values(simulcastEncodingsValidKeys));\n      }\n    }\n  }, {\n    key: \"_validateVideoSendSettings\",\n    value: function _validateVideoSendSettings(trackName, videoSendSettings) {\n      var videoSupportedPresets = [_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DEFAULT_VIDEO_SEND_SETTINGS_PRESET_KEY, _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.LOW_BANDWIDTH_VIDEO_SEND_SETTINGS_PRESET_KEY, _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.MEDIUM_BANDWIDTH_VIDEO_SEND_SETTINGS_PRESET_KEY, _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.HIGH_BANDWIDTH_VIDEO_SEND_SETTINGS_PRESET_KEY];\n      var screenVideoSupportedPresets = [_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DEFAULT_SCREEN_VIDEO_SEND_SETTINGS_PRESET_KEY, _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DETAIL_OPTIMIZED_SCREEN_VIDEO_SEND_SETTINGS_PRESET_KEY, _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.MOTION_OPTIMIZED_SCREEN_VIDEO_SEND_SETTINGS_PRESET_KEY, _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.MOTION_AND_DETAIL_BALANCED_SCREEN_VIDEO_SEND_SETTINGS_PRESET_KEY];\n      var supportedPresets = trackName === 'screenVideo' ? screenVideoSupportedPresets : videoSupportedPresets;\n      var supportedVideoSendSettingsErrorMsg = \"Video send settings should be either an object or one of the supported presets: \".concat(supportedPresets.join());\n      if (typeof videoSendSettings === 'string') {\n        if (!supportedPresets.includes(videoSendSettings)) {\n          throw new Error(supportedVideoSendSettingsErrorMsg);\n        }\n      } else {\n        if ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(videoSendSettings) !== 'object') {\n          throw new Error(supportedVideoSendSettingsErrorMsg);\n        }\n        if (!videoSendSettings.maxQuality && !videoSendSettings.encodings) {\n          throw new Error(\"Video send settings must contain at least maxQuality or encodings attribute\");\n        }\n        if (videoSendSettings.maxQuality && ['low', 'medium', 'high'].indexOf(videoSendSettings.maxQuality) === -1) {\n          throw new Error(\"maxQuality must be either low, medium or high\");\n        }\n        if (videoSendSettings.encodings) {\n          var trowEncodingValidationError = false;\n          switch (Object.keys(videoSendSettings.encodings).length) {\n            case 1:\n              trowEncodingValidationError = !videoSendSettings.encodings.low;\n              break;\n            case 2:\n              trowEncodingValidationError = !videoSendSettings.encodings.low || !videoSendSettings.encodings.medium;\n              break;\n            case 3:\n              trowEncodingValidationError = !videoSendSettings.encodings.low || !videoSendSettings.encodings.medium || !videoSendSettings.encodings.high;\n              break;\n            default:\n              trowEncodingValidationError = true;\n          }\n          if (trowEncodingValidationError) {\n            throw new Error(\"Encodings must be defined as: low, low and medium, or low, medium and high.\");\n          }\n          if (videoSendSettings.encodings.low) {\n            this._validateEncodingLayerHasValidProperties(videoSendSettings.encodings.low);\n          }\n          if (videoSendSettings.encodings.medium) {\n            this._validateEncodingLayerHasValidProperties(videoSendSettings.encodings.medium);\n          }\n          if (videoSendSettings.encodings.high) {\n            this._validateEncodingLayerHasValidProperties(videoSendSettings.encodings.high);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"validateUpdateSendSettings\",\n    value: function validateUpdateSendSettings(sendSettings) {\n      var _this40 = this;\n      if (!sendSettings || Object.keys(sendSettings).length === 0) {\n        throw new Error('Send settings must contain at least information for one track!');\n      }\n      Object.entries(sendSettings).forEach(function (_ref13) {\n        var _ref14 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(_ref13, 2),\n          trackName = _ref14[0],\n          videoSendSettings = _ref14[1];\n        _this40._validateVideoSendSettings(trackName, videoSendSettings);\n      });\n    }\n  }, {\n    key: \"updateSendSettings\",\n    value: function updateSendSettings(sendSettings) {\n      var _this41 = this;\n      this.validateUpdateSendSettings(sendSettings);\n      if (this.needsLoad()) {\n        this._preloadCache.sendSettings = sendSettings;\n        return {\n          sendSettings: this._preloadCache.sendSettings\n        };\n      }\n      // Ask call machine to update settings, then await callback.\n      return new Promise(function (resolve, reject) {\n        var k = function k(msg) {\n          if (msg.error) {\n            reject(msg.error);\n          } else {\n            resolve(msg.sendSettings);\n          }\n        };\n        _this41.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_UPDATE_SEND_SETTINGS,\n          sendSettings: sendSettings\n        }, k);\n      });\n    }\n  }, {\n    key: \"getSendSettings\",\n    value: function getSendSettings() {\n      // Returns null if the user has never invoked updateSendSettings or joined a call\n      return this._sendSettings || this._preloadCache.sendSettings;\n    }\n  }, {\n    key: \"getLocalAudioLevel\",\n    value: function getLocalAudioLevel() {\n      return this._localAudioLevel;\n    }\n  }, {\n    key: \"getRemoteParticipantsAudioLevel\",\n    value: function getRemoteParticipantsAudioLevel() {\n      return this._remoteParticipantsAudioLevel;\n    }\n  }, {\n    key: \"getActiveSpeaker\",\n    value: function getActiveSpeaker() {\n      methodNotSupportedInReactNative();\n      return this._activeSpeaker;\n    }\n  }, {\n    key: \"setActiveSpeakerMode\",\n    value: function setActiveSpeakerMode(enabled) {\n      methodNotSupportedInReactNative();\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_ACTIVE_SPEAKER_MODE,\n        enabled: enabled\n      });\n      return this;\n    }\n  }, {\n    key: \"activeSpeakerMode\",\n    value: function activeSpeakerMode() {\n      methodNotSupportedInReactNative();\n      return this._activeSpeakerMode;\n    }\n  }, {\n    key: \"subscribeToTracksAutomatically\",\n    value: function subscribeToTracksAutomatically() {\n      return this._preloadCache.subscribeToTracksAutomatically;\n    }\n  }, {\n    key: \"setSubscribeToTracksAutomatically\",\n    value: function setSubscribeToTracksAutomatically(enabled) {\n      // todo: is this actually true? doesn't the use of _preloadCache below mean you CAN call it?\n      methodOnlySupportedAfterJoin(this._callState, 'setSubscribeToTracksAutomatically()', 'Use the subscribeToTracksAutomatically configuration property.');\n      this._preloadCache.subscribeToTracksAutomatically = enabled;\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_SUBSCRIBE_TO_TRACKS_AUTOMATICALLY,\n        enabled: enabled\n      });\n      return this;\n    }\n  }, {\n    key: \"enumerateDevices\",\n    value: function () {\n      var _enumerateDevices = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        var _this42 = this;\n        if (this._callObjectMode) {\n          var raw = yield navigator.mediaDevices.enumerateDevices();\n\n          // Strip audio output devices if the user can't do anything with them\n          // anyway. Stripping them emulates behavior of browsers (FF < 116, Safari)\n          // that don't support audio output selection.\n          if ((0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isAudioOutputSelectionDisallowed)()) {\n            raw = raw.filter(function (d) {\n              return d.kind !== 'audiooutput';\n            });\n          }\n          return {\n            devices: raw.map(function (d) {\n              return JSON.parse(JSON.stringify(d));\n            })\n          };\n        }\n        return new Promise(function (resolve) {\n          var k = function k(msg) {\n            resolve({\n              devices: msg.devices\n            });\n          };\n          _this42.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_ENUMERATE_DEVICES\n          }, k);\n        });\n      });\n      function enumerateDevices() {\n        return _enumerateDevices.apply(this, arguments);\n      }\n      return enumerateDevices;\n    }()\n  }, {\n    key: \"sendAppMessage\",\n    value: function sendAppMessage(data) {\n      var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '*';\n      methodOnlySupportedAfterJoin(this._callState, 'sendAppMessage()');\n      if (JSON.stringify(data).length > _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.MAX_APP_MSG_SIZE) {\n        throw new Error('Message data too large. Max size is ' + _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.MAX_APP_MSG_SIZE);\n      }\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_APP_MSG,\n        data: data,\n        to: to\n      });\n      return this;\n    }\n  }, {\n    key: \"addFakeParticipant\",\n    value: function addFakeParticipant(args) {\n      methodNotSupportedInReactNative();\n      methodOnlySupportedAfterJoin(this._callState, 'addFakeParticipant()');\n      this.sendMessageToCallMachine(_objectSpread({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_ADD_FAKE_PARTICIPANT\n      }, args));\n      return this;\n    }\n  }, {\n    key: \"setShowNamesMode\",\n    value: function setShowNamesMode(mode) {\n      methodOnlySupportedInPrebuilt(this._callObjectMode, 'setShowNamesMode()');\n      methodNotSupportedInReactNative();\n      if (mode && !(mode === 'always' || mode === 'never')) {\n        console.error('setShowNamesMode argument should be \"always\", \"never\", or false');\n        return this;\n      }\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_SHOW_NAMES,\n        mode: mode\n      });\n      return this;\n    }\n  }, {\n    key: \"setShowLocalVideo\",\n    value: function setShowLocalVideo() {\n      var show = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      methodOnlySupportedInPrebuilt(this._callObjectMode, 'setShowLocalVideo()');\n      methodNotSupportedInReactNative();\n      methodOnlySupportedAfterJoin(this._callState, 'setShowLocalVideo()');\n      if (typeof show !== 'boolean') {\n        console.error('setShowLocalVideo only accepts a boolean value');\n        return this;\n      }\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_SHOW_LOCAL_VIDEO,\n        show: show\n      });\n      this._showLocalVideo = show;\n      return this;\n    }\n  }, {\n    key: \"showLocalVideo\",\n    value: function showLocalVideo() {\n      methodOnlySupportedInPrebuilt(this._callObjectMode, 'showLocalVideo()');\n      methodNotSupportedInReactNative();\n      return this._showLocalVideo;\n    }\n  }, {\n    key: \"setShowParticipantsBar\",\n    value: function setShowParticipantsBar() {\n      var show = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      methodOnlySupportedInPrebuilt(this._callObjectMode, 'setShowParticipantsBar()');\n      methodNotSupportedInReactNative();\n      methodOnlySupportedAfterJoin(this._callState, 'setShowParticipantsBar()');\n      if (typeof show !== 'boolean') {\n        console.error('setShowParticipantsBar only accepts a boolean value');\n        return this;\n      }\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_SHOW_PARTICIPANTS_BAR,\n        show: show\n      });\n      this._showParticipantsBar = show;\n      return this;\n    }\n  }, {\n    key: \"showParticipantsBar\",\n    value: function showParticipantsBar() {\n      methodOnlySupportedInPrebuilt(this._callObjectMode, 'showParticipantsBar()');\n      methodNotSupportedInReactNative();\n      return this._showParticipantsBar;\n    }\n  }, {\n    key: \"customIntegrations\",\n    value: function customIntegrations() {\n      methodNotSupportedInReactNative();\n      methodOnlySupportedInPrebuilt(this._callObjectMode, 'customIntegrations()');\n      return this._customIntegrations;\n    }\n  }, {\n    key: \"setCustomIntegrations\",\n    value: function setCustomIntegrations(integrations) {\n      methodNotSupportedInReactNative();\n      methodOnlySupportedInPrebuilt(this._callObjectMode, 'setCustomIntegrations()');\n      methodOnlySupportedAfterJoin(this._callState, 'setCustomIntegrations()');\n      if (!validateCustomIntegrations(integrations)) {\n        return this;\n      }\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_CUSTOM_INTEGRATIONS,\n        integrations: integrations\n      });\n      this._customIntegrations = integrations;\n      return this;\n    }\n  }, {\n    key: \"startCustomIntegrations\",\n    value: function startCustomIntegrations(ids) {\n      var _this43 = this;\n      methodNotSupportedInReactNative();\n      methodOnlySupportedInPrebuilt(this._callObjectMode, 'startCustomIntegrations()');\n      methodOnlySupportedAfterJoin(this._callState, 'startCustomIntegrations()');\n      if (Array.isArray(ids) && ids.some(function (id) {\n        return typeof id !== 'string';\n      }) || !Array.isArray(ids) && typeof ids !== 'string') {\n        console.error('startCustomIntegrations() only accepts string | string[]');\n        return this;\n      }\n      var _ids = typeof ids === 'string' ? [ids] : ids;\n      var notFound = _ids.filter(function (id) {\n        return !(id in _this43._customIntegrations);\n      });\n      if (notFound.length) {\n        console.error(\"Can't find custom integration(s): \\\"\".concat(notFound.join(', '), \"\\\"\"));\n        return this;\n      }\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_START_CUSTOM_INTEGRATIONS,\n        ids: _ids\n      });\n      return this;\n    }\n  }, {\n    key: \"stopCustomIntegrations\",\n    value: function stopCustomIntegrations(ids) {\n      var _this44 = this;\n      methodNotSupportedInReactNative();\n      methodOnlySupportedInPrebuilt(this._callObjectMode, 'stopCustomIntegrations()');\n      methodOnlySupportedAfterJoin(this._callState, 'stopCustomIntegrations()');\n      if (Array.isArray(ids) && ids.some(function (id) {\n        return typeof id !== 'string';\n      }) || !Array.isArray(ids) && typeof ids !== 'string') {\n        console.error('stopCustomIntegrations() only accepts string | string[]');\n        return this;\n      }\n      var _ids = typeof ids === 'string' ? [ids] : ids;\n      var notFound = _ids.filter(function (id) {\n        return !(id in _this44._customIntegrations);\n      });\n      if (notFound.length) {\n        console.error(\"Can't find custom integration(s): \\\"\".concat(notFound.join(', '), \"\\\"\"));\n        return this;\n      }\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_STOP_CUSTOM_INTEGRATIONS,\n        ids: _ids\n      });\n      return this;\n    }\n  }, {\n    key: \"customTrayButtons\",\n    value: function customTrayButtons() {\n      methodOnlySupportedInPrebuilt(this._callObjectMode, 'customTrayButtons()');\n      methodNotSupportedInReactNative();\n      return this._customTrayButtons;\n    }\n  }, {\n    key: \"updateCustomTrayButtons\",\n    value: function updateCustomTrayButtons(btns) {\n      methodOnlySupportedInPrebuilt(this._callObjectMode, 'updateCustomTrayButtons()');\n      methodNotSupportedInReactNative();\n      methodOnlySupportedAfterJoin(this._callState, 'updateCustomTrayButtons()');\n      if (!validateCustomTrayButtons(btns)) {\n        console.error(\"updateCustomTrayButtons only accepts a dictionary of the type \".concat(JSON.stringify(customTrayButtonsType)));\n        return this;\n      }\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_UPDATE_CUSTOM_TRAY_BUTTONS,\n        btns: btns\n      });\n      this._customTrayButtons = btns;\n      return this;\n    }\n  }, {\n    key: \"theme\",\n    value: function theme() {\n      methodOnlySupportedInPrebuilt(this._callObjectMode, 'theme()');\n      return this.properties.theme;\n    }\n  }, {\n    key: \"setTheme\",\n    value: function setTheme(theme) {\n      var _this45 = this;\n      methodOnlySupportedInPrebuilt(this._callObjectMode, 'setTheme()');\n      return new Promise(function (resolve, reject) {\n        try {\n          _this45.validateProperties({\n            theme: theme\n          });\n          _this45.properties.theme = _objectSpread({}, theme);\n          // Send message to Prebuilt UI Iframe driver\n          _this45.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_THEME,\n            theme: _this45.properties.theme\n          });\n          /**\n           * For simplicity, emitting theme-updated here rather than\n           * listening for it from Prebuilt & re-emitting it, since:\n           * - we've fully validated the theme, so there's no risk of it not being applied\n           * - we set `this.properties.theme` first, so in a customer's `theme-updated`\n           *   handler, a call to `theme()` will return the latest value\n           * - this method is the only way `theme-updated` can change\n           */\n          try {\n            _this45.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_THEME_UPDATED, {\n              action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_THEME_UPDATED,\n              theme: _this45.properties.theme\n            });\n          } catch (e) {\n            console.log(\"could not emit 'theme-updated'\", e);\n          }\n          resolve(_this45.properties.theme);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n  }, {\n    key: \"requestFullscreen\",\n    value: function () {\n      var _requestFullscreen = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        methodNotSupportedInReactNative();\n        if (!this._iframe || document.fullscreenElement || !(0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isFullscreenSupported)()) {\n          return;\n        }\n        try {\n          (yield this._iframe.requestFullscreen) ? this._iframe.requestFullscreen() : this._iframe.webkitRequestFullscreen();\n        } catch (e) {\n          console.log('could not make video call fullscreen', e);\n        }\n      });\n      function requestFullscreen() {\n        return _requestFullscreen.apply(this, arguments);\n      }\n      return requestFullscreen;\n    }()\n  }, {\n    key: \"exitFullscreen\",\n    value: function exitFullscreen() {\n      methodNotSupportedInReactNative();\n      if (document.fullscreenElement) {\n        void document.exitFullscreen();\n      } else if (document.webkitFullscreenElement) {\n        document.webkitExitFullscreen();\n      }\n    }\n  }, {\n    key: \"getSidebarView\",\n    value: function () {\n      var _getSidebarView = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        var _this46 = this;\n        if (this._callObjectMode) {\n          console.error('getSidebarView is not available in callObject mode');\n          return Promise.resolve(null);\n        }\n        return new Promise(function (resolve) {\n          var k = function k(msg) {\n            resolve(msg.view);\n          };\n          _this46.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_GET_SIDEBAR_VIEW\n          }, k);\n        });\n      });\n      function getSidebarView() {\n        return _getSidebarView.apply(this, arguments);\n      }\n      return getSidebarView;\n    }()\n  }, {\n    key: \"setSidebarView\",\n    value: function setSidebarView(view) {\n      if (this._callObjectMode) {\n        console.error('setSidebarView is not available in callObject mode');\n        return this;\n      }\n      // Send message to Prebuilt UI Iframe driver\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_SIDEBAR_VIEW,\n        view: view\n      });\n      return this;\n    }\n  }, {\n    key: \"room\",\n    value: function () {\n      var _room = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        var _this47 = this;\n        var _ref15 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref15$includeRoomCon = _ref15.includeRoomConfigDefaults,\n          includeRoomConfigDefaults = _ref15$includeRoomCon === void 0 ? true : _ref15$includeRoomCon;\n        // The call machine bundle is loaded and it's already given us an access\n        // state (which is based on room info), so we know it can be queried for\n        // room info.\n        if (this._accessState.access !== _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_ACCESS_UNKNOWN && !this.needsLoad()) {\n          // We've succesfully join()ed or preAuth()ed, so we should have room info.\n          return new Promise(function (resolve) {\n            var k = function k(msg) {\n              delete msg.action;\n              delete msg.callbackStamp;\n              resolve(msg);\n            };\n            _this47.sendMessageToCallMachine({\n              action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_ROOM,\n              includeRoomConfigDefaults: includeRoomConfigDefaults\n            }, k);\n          });\n        } else {\n          // Return the URL of the room we'll be in if/when we successfully join(),\n          // since we have no other room info to show yet.\n          if (this.properties.url) {\n            // NOTE: technically this should be called \"roomUrlPendingJoinOrPreauth\"\n            // to indicate that *either* a join() or a preAuth() will allow you to\n            // access room info, but preAuth() was added later and this name was\n            // preserved to maintain backward compatibility: if a consumer hasn't\n            // updated their app to use preAuth(), they'll be none the wiser.\n            return {\n              roomUrlPendingJoin: this.properties.url\n            };\n          }\n          return null;\n        }\n      });\n      function room() {\n        return _room.apply(this, arguments);\n      }\n      return room;\n    }()\n  }, {\n    key: \"geo\",\n    value: function () {\n      var _geo = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        try {\n          var url = 'https://gs.daily.co/_ks_/x-swsl/:';\n          var res = yield fetch(url);\n          var data = yield res.json();\n          return {\n            current: data.geo\n          };\n        } catch (e) {\n          console.error('geo lookup failed', e);\n          return {\n            current: ''\n          };\n        }\n      });\n      function geo() {\n        return _geo.apply(this, arguments);\n      }\n      return geo;\n    }()\n  }, {\n    key: \"setNetworkTopology\",\n    value: function () {\n      var _setNetworkTopology = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* (opts) {\n        var _this48 = this;\n        methodNotSupportedInReactNative();\n        methodOnlySupportedAfterJoin(this._callState, 'setNetworkTopology()');\n        return new Promise(function (resolve, reject) {\n          var k = function k(msg) {\n            if (msg.error) {\n              reject({\n                error: msg.error\n              });\n            } else {\n              resolve({\n                workerId: msg.workerId\n              });\n            }\n          };\n          _this48.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_NETWORK_TOPOLOGY,\n            opts: opts\n          }, k);\n        });\n      });\n      function setNetworkTopology(_x17) {\n        return _setNetworkTopology.apply(this, arguments);\n      }\n      return setNetworkTopology;\n    }()\n  }, {\n    key: \"getNetworkTopology\",\n    value: function () {\n      var _getNetworkTopology = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function* () {\n        var _this49 = this;\n        return new Promise(function (resolve, reject) {\n          if (_this49.needsLoad()) {\n            resolve({\n              topology: 'none'\n            });\n          }\n          var k = function k(msg) {\n            if (msg.error) {\n              reject({\n                error: msg.error\n              });\n            } else {\n              resolve({\n                topology: msg.topology\n              });\n            }\n          };\n          _this49.sendMessageToCallMachine({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_GET_NETWORK_TOPOLOGY\n          }, k);\n        });\n      });\n      function getNetworkTopology() {\n        return _getNetworkTopology.apply(this, arguments);\n      }\n      return getNetworkTopology;\n    }()\n  }, {\n    key: \"setPlayNewParticipantSound\",\n    value: function setPlayNewParticipantSound(arg) {\n      methodNotSupportedInReactNative();\n      if (!(typeof arg === 'number' || arg === true || arg === false)) {\n        throw new Error(\"argument to setShouldPlayNewParticipantSound should be true, false, or a number, but is \".concat(arg));\n      }\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_SET_PLAY_DING,\n        arg: arg\n      });\n    }\n  }, {\n    key: \"on\",\n    value: function on(eventName, k) {\n      this._inputEventsOn[eventName] = {};\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_REGISTER_INPUT_HANDLER,\n        on: eventName\n      });\n      return events__WEBPACK_IMPORTED_MODULE_11___default().prototype.on.call(this, eventName, k);\n    }\n\n    // todo: once is almost certainly implemented incorrectly. read the\n    // EventEmitter source to figure out how to do this properly. since\n    // overriding on/off/once are optimizations, anyway, we won't worry\n    // about it right now.\n  }, {\n    key: \"once\",\n    value: function once(eventName, k) {\n      this._inputEventsOn[eventName] = {};\n      this.sendMessageToCallMachine({\n        action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_REGISTER_INPUT_HANDLER,\n        on: eventName\n      });\n      return events__WEBPACK_IMPORTED_MODULE_11___default().prototype.once.call(this, eventName, k);\n    }\n  }, {\n    key: \"off\",\n    value: function off(eventName, k) {\n      delete this._inputEventsOn[eventName];\n      if (!this.isDestroyed()) {\n        this.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_REGISTER_INPUT_HANDLER,\n          off: eventName\n        });\n      }\n      return events__WEBPACK_IMPORTED_MODULE_11___default().prototype.off.call(this, eventName, k);\n    }\n\n    //\n    // internal methods\n    //\n  }, {\n    key: \"validateProperties\",\n    value: function validateProperties(properties) {\n      for (var k in properties) {\n        if (!FRAME_PROPS[k]) {\n          throw new Error(\"unrecognized property '\".concat(k, \"'\"));\n        }\n        if (FRAME_PROPS[k].validate && !FRAME_PROPS[k].validate(properties[k], this)) {\n          throw new Error(\"property '\".concat(k, \"': \").concat(FRAME_PROPS[k].help));\n        }\n      }\n    }\n  }, {\n    key: \"assembleMeetingUrl\",\n    value: function assembleMeetingUrl() {\n      var _window$_dailyConfig, _window$_dailyConfig2;\n      // handle case of url with query string and without\n      var props = _objectSpread(_objectSpread({}, this.properties), {}, {\n          emb: this._callFrameId,\n          embHref: encodeURIComponent(window.location.href),\n          proxy: (_window$_dailyConfig = window._dailyConfig) !== null && _window$_dailyConfig !== void 0 && _window$_dailyConfig.proxyUrl ? encodeURIComponent((_window$_dailyConfig2 = window._dailyConfig) === null || _window$_dailyConfig2 === void 0 ? void 0 : _window$_dailyConfig2.proxyUrl) : undefined\n        }),\n        firstSep = props.url.match(/\\?/) ? '&' : '?',\n        url = props.url,\n        urlProps = Object.keys(FRAME_PROPS).filter(function (p) {\n          return FRAME_PROPS[p].queryString && props[p] !== undefined;\n        });\n      var newQueryString = urlProps.map(function (p) {\n        return \"\".concat(FRAME_PROPS[p].queryString, \"=\").concat(props[p]);\n      }).join('&');\n      return url + firstSep + newQueryString;\n    }\n\n    // Note that even if the below method returns true, load() may decide that\n    // there's nothing more to do (e.g. in the case that the call object has\n    // already been loaded once) and simply carry out the appropriate meeting\n    // state transition.\n  }, {\n    key: \"needsLoad\",\n    value: function needsLoad() {\n      // NOTE: The *only* reason DAILY_STATE_LOADING is here is to preserve a bug\n      // that I (@kompfner) am a bit hesitant to fix until more time can be\n      // dedicated to doing the *right* fix. If we're in DAILY_STATE_LOADING, we\n      // probably *shouldn't* let you trigger another load() and get into a weird\n      // state, but this has been long-standing behavior. The alternative would mean\n      // that, if load() failed silently for some reason, you couldn't re-trigger it\n      // since we'd be stuck in the DAILY_STATE_LOADING state.\n      return [_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_NEW, _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_LOADING, _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_LEFT, _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_ERROR].includes(this._callState);\n    }\n  }, {\n    key: \"sendMessageToCallMachine\",\n    value: function sendMessageToCallMachine(message, callback) {\n      if (this._destroyed) {\n        this._logUseAfterDestroy();\n        if (this.strictMode) {\n          throw new Error('Use after destroy');\n        }\n      }\n      this._messageChannel.sendMessageToCallMachine(message, callback, this._iframe, this._callFrameId);\n    }\n\n    ///\n    /// The below *packagedMessage* methods facilitate wiring up a DailyIframe\n    /// instance as a remote driver of another DailyIframe instance, like in the\n    /// new prebuilt UI case, where an \"outer\" callFrame controls an \"inner\"\n    /// callObject through an intermediate iframed app.\n    ///\n  }, {\n    key: \"forwardPackagedMessageToCallMachine\",\n    value: function forwardPackagedMessageToCallMachine(msg) {\n      this._messageChannel.forwardPackagedMessageToCallMachine(msg, this._iframe, this._callFrameId);\n    }\n  }, {\n    key: \"addListenerForPackagedMessagesFromCallMachine\",\n    value: function addListenerForPackagedMessagesFromCallMachine(listener) {\n      return this._messageChannel.addListenerForPackagedMessagesFromCallMachine(listener, this._callFrameId);\n    }\n  }, {\n    key: \"removeListenerForPackagedMessagesFromCallMachine\",\n    value: function removeListenerForPackagedMessagesFromCallMachine(listenerId) {\n      this._messageChannel.removeListenerForPackagedMessagesFromCallMachine(listenerId);\n    }\n  }, {\n    key: \"handleMessageFromCallMachine\",\n    value: function handleMessageFromCallMachine(msg) {\n      switch (msg.action) {\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_IFRAME_READY_FOR_LAUNCH_CONFIG:\n          this.sendMessageToCallMachine(_objectSpread({\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_IFRAME_LAUNCH_CONFIG\n          }, this.properties));\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_DAILY_MAIN_EXECUTED:\n          {\n            this._dailyMainExecuted = true;\n            var logMsg = {\n              action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_TRANSMIT_LOG,\n              level: 'log',\n              code: 1011,\n              stats: {\n                event: 'bundle load',\n                time: this._bundleLoadTime === 'no-op' ? 0 : this._bundleLoadTime,\n                preLoaded: this._bundleLoadTime === 'no-op',\n                url: (0,_utils__WEBPACK_IMPORTED_MODULE_13__.callObjectBundleUrl)()\n              }\n            };\n            this._messageChannel.sendMessageToCallMachine(logMsg, null, this._iframe, this._callFrameId);\n            // if a duplicate instance was detected before initialization\n            // we need to send up the log now.\n            this._delayDuplicateInstanceLog && this._logDuplicateInstanceAttempt();\n            break;\n          }\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOADED:\n          if (this._loadedCallback) {\n            this._loadedCallback();\n            this._loadedCallback = null;\n          }\n          try {\n            this.emit(msg.action, msg);\n          } catch (e) {\n            console.log('could not emit', msg, e);\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_JOINED_MEETING:\n          if (this._joinedCallback) {\n            this._joinedCallback(msg.participants);\n            this._joinedCallback = null;\n          }\n          try {\n            this.emit(msg.action, msg);\n          } catch (e) {\n            console.log('could not emit', msg, e);\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_PARTICIPANT_JOINED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_PARTICIPANT_UPDATED:\n          if (this._callState === _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_LEFT) {\n            return;\n          }\n          if (msg.participant && msg.participant.session_id) {\n            var id = msg.participant.local ? 'local' : msg.participant.session_id;\n            if (this._callObjectMode) {\n              _Participant__WEBPACK_IMPORTED_MODULE_20__.addTracks(msg.participant);\n              _Participant__WEBPACK_IMPORTED_MODULE_20__.addCustomTracks(msg.participant);\n              _Participant__WEBPACK_IMPORTED_MODULE_20__.addLegacyTracks(msg.participant, this._participants[id]);\n            }\n            try {\n              // track events\n              this.maybeParticipantTracksStopped(this._participants[id], msg.participant);\n              this.maybeParticipantTracksStarted(this._participants[id], msg.participant);\n\n              // recording events\n              this.maybeEventRecordingStopped(this._participants[id], msg.participant);\n              this.maybeEventRecordingStarted(this._participants[id], msg.participant);\n            } catch (e) {\n              console.error('track events error', e);\n            }\n            // participant joined/updated events\n            if (!this.compareEqualForParticipantUpdateEvent(msg.participant, this._participants[id])) {\n              this._participants[id] = _objectSpread({}, msg.participant);\n              this.toggleParticipantAudioBasedOnNativeAudioFocus();\n              try {\n                this.emit(msg.action, msg);\n              } catch (e) {\n                console.log('could not emit', msg, e);\n              }\n            }\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_PARTICIPANT_LEFT:\n          if (msg.participant && msg.participant.session_id) {\n            // track events\n            var prevP = this._participants[msg.participant.session_id];\n            if (prevP) {\n              this.maybeParticipantTracksStopped(prevP, null);\n            }\n            // delete from local cach\n            delete this._participants[msg.participant.session_id];\n            try {\n              this.emit(msg.action, msg);\n            } catch (e) {\n              console.log('could not emit', msg, e);\n            }\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_PARTICIPANT_COUNTS_UPDATED:\n          if (!(0,fast_equals__WEBPACK_IMPORTED_MODULE_23__.deepEqual)(this._participantCounts, msg.participantCounts)) {\n            this._participantCounts = msg.participantCounts;\n            try {\n              this.emit(msg.action, msg);\n            } catch (e) {\n              console.log('could not emit', msg, e);\n            }\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_ACCESS_STATE_UPDATED:\n          {\n            var newAccessState = {\n              access: msg.access\n            };\n            if (msg.awaitingAccess) {\n              newAccessState.awaitingAccess = msg.awaitingAccess;\n            }\n            if (!(0,fast_equals__WEBPACK_IMPORTED_MODULE_23__.deepEqual)(this._accessState, newAccessState)) {\n              this._accessState = newAccessState;\n              try {\n                this.emit(msg.action, msg);\n              } catch (e) {\n                console.log('could not emit', msg, e);\n              }\n            }\n            break;\n          }\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_MEETING_SESSION_SUMMARY_UPDATED:\n          if (msg.meetingSession) {\n            this._meetingSessionSummary = msg.meetingSession;\n            try {\n              delete msg.callFrameId;\n              this.emit(msg.action, msg);\n              // send deprecated backwards-compatible event\n              var msg_cp = _objectSpread(_objectSpread({}, msg), {}, {\n                action: 'meeting-session-updated'\n              });\n              this.emit(msg_cp.action, msg_cp);\n            } catch (e) {\n              console.log('could not emit', msg, e);\n            }\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_ERROR:\n          {\n            var _event$error;\n            if (this._iframe && !msg.preserveIframe) {\n              this._iframe.src = '';\n            }\n            this._updateCallState(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_ERROR);\n            this.resetMeetingDependentVars();\n            if (this._loadedCallback) {\n              this._loadedCallback(msg.errorMsg);\n              this._loadedCallback = null;\n            }\n            var preserveIframe = msg.preserveIframe,\n              event = (0,_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(msg, _excluded3);\n            if (event !== null && event !== void 0 && (_event$error = event.error) !== null && _event$error !== void 0 && _event$error.details) {\n              event.error.details = JSON.parse(event.error.details);\n            }\n            this._maybeSendToSentry(msg);\n            if (this._joinedCallback) {\n              this._joinedCallback(null, event);\n              this._joinedCallback = null;\n            }\n            try {\n              this.emit(msg.action, event);\n            } catch (e) {\n              console.log('could not emit', msg, e);\n            }\n            break;\n          }\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LEFT_MEETING:\n          // if we've left due to error, the error msg should have\n          // already been handled and we do not want to override\n          // the state.\n          if (this._callState !== _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_ERROR) {\n            this._updateCallState(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_LEFT);\n          }\n          this.resetMeetingDependentVars();\n          if (this._resolveLeave) {\n            this._resolveLeave();\n            this._resolveLeave = null;\n          }\n          try {\n            this.emit(msg.action, msg);\n          } catch (e) {\n            console.log('could not emit', msg, e);\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_SELECTED_DEVICES_UPDATED:\n          if (msg.devices) {\n            try {\n              this.emit(msg.action, msg);\n            } catch (e) {\n              console.log('could not emit', msg, e);\n            }\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_NETWORK_QUALITY_CHANGE:\n          {\n            var threshold = msg.threshold,\n              quality = msg.quality;\n            if (threshold !== this._network.threshold || quality !== this._network.quality) {\n              this._network.quality = quality;\n              this._network.threshold = threshold;\n              try {\n                this.emit(msg.action, msg);\n              } catch (e) {\n                console.log('could not emit', msg, e);\n              }\n            }\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_CPU_LOAD_CHANGE:\n          {\n            if (msg && msg.cpuLoadState) {\n              try {\n                this.emit(msg.action, msg);\n              } catch (e) {\n                console.log('could not emit', msg, e);\n              }\n            }\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_ACTIVE_SPEAKER_CHANGE:\n          {\n            var activeSpeaker = msg.activeSpeaker;\n            if (this._activeSpeaker.peerId !== activeSpeaker.peerId) {\n              this._activeSpeaker.peerId = activeSpeaker.peerId;\n              try {\n                this.emit(msg.action, {\n                  action: msg.action,\n                  activeSpeaker: this._activeSpeaker\n                });\n              } catch (e) {\n                console.log('could not emit', msg, e);\n              }\n            }\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_SHOW_LOCAL_VIDEO_CHANGED:\n          {\n            if (this._callObjectMode) return;\n            var show = msg.show;\n            this._showLocalVideo = show;\n            try {\n              this.emit(msg.action, {\n                action: msg.action,\n                show: show\n              });\n            } catch (e) {\n              console.log('could not emit', msg, e);\n            }\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_ACTIVE_SPEAKER_MODE_CHANGE:\n          {\n            var enabled = msg.enabled;\n            if (this._activeSpeakerMode !== enabled) {\n              this._activeSpeakerMode = enabled;\n              try {\n                this.emit(msg.action, {\n                  action: msg.action,\n                  enabled: this._activeSpeakerMode\n                });\n              } catch (e) {\n                console.log('could not emit', msg, e);\n              }\n            }\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_WAITING_PARTICIPANT_ADDED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_WAITING_PARTICIPANT_UPDATED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_WAITING_PARTICIPANT_REMOVED:\n          this._waitingParticipants = msg.allWaitingParticipants;\n          try {\n            this.emit(msg.action, {\n              action: msg.action,\n              participant: msg.participant\n            });\n          } catch (e) {\n            console.log('could not emit', msg, e);\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECEIVE_SETTINGS_UPDATED:\n          // NOTE: doing equality check here rather than before sending message in\n          // the first place from call machine, to simplify handling initial\n          // receive settings\n          if (!(0,fast_equals__WEBPACK_IMPORTED_MODULE_23__.deepEqual)(this._receiveSettings, msg.receiveSettings)) {\n            this._receiveSettings = msg.receiveSettings;\n            try {\n              this.emit(msg.action, {\n                action: msg.action,\n                receiveSettings: msg.receiveSettings\n              });\n            } catch (e) {\n              console.log('could not emit', msg, e);\n            }\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_INPUT_SETTINGS_UPDATED:\n          // NOTE: doing equality check here rather than before sending message in\n          // the first place from call machine, to simplify handling initial\n          // input settings\n          if (!(0,fast_equals__WEBPACK_IMPORTED_MODULE_23__.deepEqual)(this._inputSettings, msg.inputSettings)) {\n            var prevInputSettings = this._getInputSettings();\n            this._inputSettings = msg.inputSettings;\n            this._preloadCache.inputSettings = {}; // clear cache, if any\n            if (!(0,fast_equals__WEBPACK_IMPORTED_MODULE_23__.deepEqual)(prevInputSettings, this._getInputSettings())) {\n              try {\n                this.emit(msg.action, {\n                  action: msg.action,\n                  inputSettings: this._getInputSettings()\n                });\n              } catch (e) {\n                console.log('could not emit', msg, e);\n              }\n            }\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_SEND_SETTINGS_UPDATED:\n          {\n            if (!(0,fast_equals__WEBPACK_IMPORTED_MODULE_23__.deepEqual)(this._sendSettings, msg.sendSettings)) {\n              this._sendSettings = msg.sendSettings;\n              this._preloadCache.sendSettings = null; // clear cache, if any\n              try {\n                this.emit(msg.action, {\n                  action: msg.action,\n                  sendSettings: msg.sendSettings\n                });\n              } catch (e) {\n                console.log('could not emit', msg, e);\n              }\n            }\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOCAL_AUDIO_LEVEL:\n          {\n            this._localAudioLevel = msg.audioLevel;\n            this.emitDailyJSEvent(msg);\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_REMOTE_PARTICIPANTS_AUDIO_LEVEL:\n          {\n            this._remoteParticipantsAudioLevel = msg.participantsAudioLevel;\n            this.emitDailyJSEvent(msg);\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_REMOTE_MEDIA_PLAYER_STARTED:\n          {\n            var participantId = msg.session_id;\n            this._rmpPlayerState[participantId] = msg.playerState;\n            this.emitDailyJSEvent(msg);\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_REMOTE_MEDIA_PLAYER_STOPPED:\n          delete this._rmpPlayerState[msg.session_id];\n          this.emitDailyJSEvent(msg);\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_REMOTE_MEDIA_PLAYER_UPDATED:\n          {\n            var _participantId = msg.session_id;\n            var rmpPlayerState = this._rmpPlayerState[_participantId];\n            if (!rmpPlayerState || !this.compareEqualForRMPUpdateEvent(rmpPlayerState, msg.remoteMediaPlayerState)) {\n              this._rmpPlayerState[_participantId] = msg.remoteMediaPlayerState;\n              this.emitDailyJSEvent(msg);\n            }\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_CUSTOM_BUTTON_CLICK:\n          this.emitDailyJSEvent(msg);\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_SIDEBAR_VIEW_CHANGED:\n          this.emitDailyJSEvent(msg);\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_MEETING_SESSION_STATE_UPDATED:\n          var topologyChanged = this._meetingSessionState.topology !== (msg.meetingSessionState && msg.meetingSessionState.topology);\n\n          // Update meeting session state\n          this._meetingSessionState = maybeStripDataFromMeetingSessionState(msg.meetingSessionState, this._callObjectMode);\n\n          // In prebuilt mode, since we strip data, only emit if topology changed\n          // (In call object mode blindly emit to avoid expensive deep equality\n          // check; we're trusting call machine to only send us a message when\n          // things have actually changed).\n          if (this._callObjectMode || topologyChanged) {\n            this.emitDailyJSEvent(msg);\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECORDING_STARTED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECORDING_STOPPED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECORDING_STATS:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECORDING_ERROR:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECORDING_UPLOAD_COMPLETED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_TRANSCRIPTION_STARTED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_TRANSCRIPTION_STOPPED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_TRANSCRIPTION_ERROR:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_STARTED_CAMERA:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_CAMERA_ERROR:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_APP_MSG:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_TRANSCRIPTION_MSG:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOCAL_SCREEN_SHARE_STARTED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOCAL_SCREEN_SHARE_STOPPED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LOCAL_SCREEN_SHARE_CANCELED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_NETWORK_CONNECTION:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECORDING_DATA:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LIVE_STREAMING_STARTED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LIVE_STREAMING_UPDATED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LIVE_STREAMING_STOPPED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LIVE_STREAMING_ERROR:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_NONFATAL_ERROR:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_LANG_UPDATED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_DIALIN_CONNECTED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_DIALIN_ERROR:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_DIALIN_STOPPED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_DIALIN_WARNING:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_DIALOUT_CONNECTED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_DIALOUT_ERROR:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_DIALOUT_STOPPED:\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_DIALOUT_WARNING:\n          try {\n            this.emit(msg.action, msg);\n          } catch (e) {\n            console.log('could not emit', msg, e);\n          }\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_REQUEST_FULLSCREEN:\n          this.requestFullscreen();\n          break;\n        case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EXIT_FULLSCREEN:\n          this.exitFullscreen();\n          break;\n        default: // no op\n      }\n    }\n  }, {\n    key: \"maybeEventRecordingStopped\",\n    value: function maybeEventRecordingStopped(prevP, thisP) {\n      var key = 'record';\n      if (!prevP) {\n        return;\n      }\n      if (!thisP.local && thisP[key] === false && prevP[key] !== thisP[key]) {\n        try {\n          this.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECORDING_STOPPED, {\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECORDING_STOPPED\n          });\n        } catch (e) {\n          console.log('could not emit', e);\n        }\n      }\n    }\n  }, {\n    key: \"maybeEventRecordingStarted\",\n    value: function maybeEventRecordingStarted(prevP, thisP) {\n      var key = 'record';\n      if (!prevP) {\n        return;\n      }\n      if (!thisP.local && thisP[key] === true && prevP[key] !== thisP[key]) {\n        try {\n          this.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECORDING_STARTED, {\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_RECORDING_STARTED\n          });\n        } catch (e) {\n          console.log('could not emit', e);\n        }\n      }\n    }\n  }, {\n    key: \"maybeEventTrackStopped\",\n    value: function maybeEventTrackStopped(prevTrack, thisTrack, thisP, type) {\n      if (!prevTrack) {\n        return;\n      }\n      if (prevTrack.readyState === 'ended' || !thisTrack || prevTrack.id !== thisTrack.id) {\n        try {\n          this.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_TRACK_STOPPED, {\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_TRACK_STOPPED,\n            track: prevTrack,\n            participant: thisP,\n            type: type\n          });\n        } catch (e) {\n          console.log('maybeEventTrackStopped: could not emit', e);\n        }\n      }\n    }\n  }, {\n    key: \"maybeEventTrackStarted\",\n    value: function maybeEventTrackStarted(prevTrack, thisTrack, thisP, type) {\n      if (!thisTrack) {\n        return;\n      }\n      if (!prevTrack || prevTrack.readyState === 'ended' || thisTrack.id !== prevTrack.id) {\n        try {\n          this.emit(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_TRACK_STARTED, {\n            action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_EVENT_TRACK_STARTED,\n            track: thisTrack,\n            participant: thisP,\n            type: type\n          });\n        } catch (e) {\n          console.log('maybeEventTrackStarted: could not emit', e);\n        }\n      }\n    }\n  }, {\n    key: \"maybeParticipantTracksStopped\",\n    value: function maybeParticipantTracksStopped(prevP, thisP) {\n      if (!prevP) {\n        return;\n      }\n      for (var trackKey in prevP.tracks) {\n        this.maybeEventTrackStopped(prevP.tracks[trackKey].track, thisP && thisP.tracks[trackKey] ? thisP.tracks[trackKey].track : null, thisP, trackKey);\n      }\n    }\n  }, {\n    key: \"maybeParticipantTracksStarted\",\n    value: function maybeParticipantTracksStarted(prevP, thisP) {\n      if (!thisP) {\n        return;\n      }\n      for (var trackKey in thisP.tracks) {\n        this.maybeEventTrackStarted(prevP && prevP.tracks[trackKey] ? prevP.tracks[trackKey].track : null, thisP.tracks[trackKey].track, thisP, trackKey);\n      }\n    }\n  }, {\n    key: \"compareEqualForRMPUpdateEvent\",\n    value: function compareEqualForRMPUpdateEvent(a, b) {\n      var _a$settings, _b$settings;\n      if (a.state === b.state && ((_a$settings = a.settings) === null || _a$settings === void 0 ? void 0 : _a$settings.volume) === ((_b$settings = b.settings) === null || _b$settings === void 0 ? void 0 : _b$settings.volume)) {\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"emitDailyJSEvent\",\n    value: function emitDailyJSEvent(msg) {\n      {\n        try {\n          this.emit(msg.action, msg);\n        } catch (e) {\n          console.log('could not emit', msg, e);\n        }\n      }\n    }\n  }, {\n    key: \"compareEqualForParticipantUpdateEvent\",\n    value: function compareEqualForParticipantUpdateEvent(a, b) {\n      if (!(0,fast_equals__WEBPACK_IMPORTED_MODULE_23__.deepEqual)(a, b)) {\n        return false;\n      }\n      if (a.videoTrack && b.videoTrack && (a.videoTrack.id !== b.videoTrack.id || a.videoTrack.muted !== b.videoTrack.muted || a.videoTrack.enabled !== b.videoTrack.enabled)) {\n        return false;\n      }\n      if (a.audioTrack && b.audioTrack && (a.audioTrack.id !== b.audioTrack.id || a.audioTrack.muted !== b.audioTrack.muted || a.audioTrack.enabled !== b.audioTrack.enabled)) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"nativeUtils\",\n    value: function nativeUtils() {\n      if (!(0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)()) {\n        return null;\n      }\n      if (typeof DailyNativeUtils === 'undefined') {\n        console.warn('in React Native, DailyNativeUtils is expected to be available');\n        return null;\n      }\n      return DailyNativeUtils;\n    }\n  }, {\n    key: \"updateIsPreparingToJoin\",\n    value: function updateIsPreparingToJoin(isPreparingToJoin) {\n      this._updateCallState(this._callState, isPreparingToJoin);\n    }\n  }, {\n    key: \"_updateCallState\",\n    value: function _updateCallState(callState) {\n      var isPreparingToJoin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._isPreparingToJoin;\n      // If state hasn't changed, bail\n      if (callState === this._callState && isPreparingToJoin === this._isPreparingToJoin) {\n        return;\n      }\n\n      // Update state\n      var oldMeetingState = this._callState;\n      var oldIsPreparingToJoin = this._isPreparingToJoin;\n      this._callState = callState;\n      this._isPreparingToJoin = isPreparingToJoin;\n\n      // Update state side-effects (which, for now, all depend on whether\n      // _isCallPendingOrOngoing)\n      var oldIsMeetingPendingOrOngoing = _isCallPendingOrOngoing(oldMeetingState, oldIsPreparingToJoin);\n      var curCallPendingOrOngoing = _isCallPendingOrOngoing(this._callState, this._isPreparingToJoin);\n      if (oldIsMeetingPendingOrOngoing === curCallPendingOrOngoing) {\n        return;\n      }\n      this.updateKeepDeviceAwake(curCallPendingOrOngoing);\n      this.updateDeviceAudioMode(curCallPendingOrOngoing);\n      this.updateShowAndroidOngoingMeetingNotification(curCallPendingOrOngoing);\n      this.updateNoOpRecordingEnsuringBackgroundContinuity(curCallPendingOrOngoing);\n    }\n\n    // To be invoked this when leaving or erroring out of a meeting.\n    // NOTE (Paul, 2021-01-07): this could probably be expanded to reset *all*\n    // meeting-dependent vars, but starting with this targeted small set which\n    // were being reset properly on leave() but not when leaving via prebuilt ui.\n  }, {\n    key: \"resetMeetingDependentVars\",\n    value: function resetMeetingDependentVars() {\n      this._participants = {};\n      this._participantCounts = EMPTY_PARTICIPANT_COUNTS;\n      this._waitingParticipants = {};\n      this._activeSpeaker = {};\n      this._activeSpeakerMode = false;\n      this._didPreAuth = false;\n      this._accessState = {\n        access: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_ACCESS_UNKNOWN\n      };\n      this._finalSummaryOfPrevSession = this._meetingSessionSummary;\n      this._meetingSessionSummary = {};\n      this._meetingSessionState = maybeStripDataFromMeetingSessionState(DEFAULT_SESSION_STATE, this._callObjectMode);\n      this._receiveSettings = {};\n      this._inputSettings = undefined;\n      this._sendSettings = {};\n      this._localAudioLevel = 0;\n      this._remoteParticipantsAudioLevel = {};\n      this._dailyMainExecuted = false;\n      this._bundleLoadTime = undefined;\n      resetPreloadCache(this._preloadCache);\n    }\n  }, {\n    key: \"updateKeepDeviceAwake\",\n    value: function updateKeepDeviceAwake(keepAwake) {\n      if (!(0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)()) {\n        return;\n      }\n      this.nativeUtils().setKeepDeviceAwake(keepAwake, this._callFrameId);\n    }\n  }, {\n    key: \"updateDeviceAudioMode\",\n    value: function updateDeviceAudioMode(useInCallAudioMode) {\n      if (!(0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)() || this.disableReactNativeAutoDeviceManagement('audio')) {\n        return;\n      }\n      var audioMode = useInCallAudioMode ? this._nativeInCallAudioMode : NATIVE_AUDIO_MODE_IDLE;\n      this.nativeUtils().setAudioMode(audioMode);\n    }\n\n    // Note: notification properties can't be changed while it is ongoing\n  }, {\n    key: \"updateShowAndroidOngoingMeetingNotification\",\n    value: function updateShowAndroidOngoingMeetingNotification(showNotification) {\n      // Check that we're React Native and that the Android-only method exists\n      if (!((0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)() && this.nativeUtils().setShowOngoingMeetingNotification)) {\n        return;\n      }\n      // Use current this.properties to customize notification behavior\n      var title, subtitle, iconName, disableForCustomOverride;\n      if (this.properties.reactNativeConfig && this.properties.reactNativeConfig.androidInCallNotification) {\n        var _this$properties$reac = this.properties.reactNativeConfig.androidInCallNotification;\n        title = _this$properties$reac.title;\n        subtitle = _this$properties$reac.subtitle;\n        iconName = _this$properties$reac.iconName;\n        disableForCustomOverride = _this$properties$reac.disableForCustomOverride;\n      }\n      if (disableForCustomOverride) {\n        showNotification = false;\n      }\n      this.nativeUtils().setShowOngoingMeetingNotification(showNotification, title, subtitle, iconName, this._callFrameId);\n    }\n\n    // Whether to enable no-op audio recording to ensure continuity of the app\n    // when backgrounded. Required in iOS to ensure we can finish joining when the\n    // app is backgrounded before gUM is called, and to ensure that signaling\n    // remains connected when we're in an empty room and our own cam and mic are\n    // off.\n  }, {\n    key: \"updateNoOpRecordingEnsuringBackgroundContinuity\",\n    value: function updateNoOpRecordingEnsuringBackgroundContinuity(enableNoOpRecording) {\n      if (!((0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)() && this.nativeUtils().enableNoOpRecordingEnsuringBackgroundContinuity)) {\n        return;\n      }\n      this.nativeUtils().enableNoOpRecordingEnsuringBackgroundContinuity(enableNoOpRecording);\n    }\n  }, {\n    key: \"toggleParticipantAudioBasedOnNativeAudioFocus\",\n    value: function toggleParticipantAudioBasedOnNativeAudioFocus() {\n      if (!(0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)()) {\n        return;\n      }\n      // Need to access store directly since when participant muted their audio we\n      // don't have access to their audio tracks in this._participants\n      var state = window.store.getState();\n      for (var streamId in state.streams) {\n        var streamData = state.streams[streamId];\n        if (streamData && streamData.pendingTrack && streamData.pendingTrack.kind === 'audio') {\n          streamData.pendingTrack.enabled = this._hasNativeAudioFocus;\n        }\n      }\n    }\n\n    // type must be either 'audio' or 'video'\n  }, {\n    key: \"disableReactNativeAutoDeviceManagement\",\n    value: function disableReactNativeAutoDeviceManagement(type) {\n      return this.properties.reactNativeConfig && this.properties.reactNativeConfig.disableAutoDeviceManagement && this.properties.reactNativeConfig.disableAutoDeviceManagement[type];\n    }\n  }, {\n    key: \"absoluteUrl\",\n    value: function absoluteUrl(url) {\n      if ('undefined' === typeof url) {\n        return undefined;\n      }\n      var a = document.createElement('a');\n      a.href = url;\n      return a.href;\n    }\n  }, {\n    key: \"sayHello\",\n    value: function sayHello() {\n      var str = 'hello, world.';\n      console.log(str);\n      return str;\n    }\n  }, {\n    key: \"_logUseAfterDestroy\",\n    value: function _logUseAfterDestroy() {\n      // if we have any live call instance, send the log over the wire to land in l&t\n      // any l&t attached to this window. it don't matter which :)\n      if (!this.needsLoad()) {\n        // once strictMode is always true, this block can go away because it\n        // should be impossible for needsLoad to be false\n        var logMsg = {\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_TRANSMIT_LOG,\n          level: 'error',\n          code: this.strictMode ? 9995 : 9997\n        };\n        this._messageChannel.sendMessageToCallMachine(logMsg, null, this._iframe, this._callFrameId);\n      } else if (_callInstance && !_callInstance.needsLoad()) {\n        var _logMsg = {\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_TRANSMIT_LOG,\n          level: 'error',\n          code: this.strictMode ? 9995 : 9997\n        };\n        _callInstance.sendMessageToCallMachine(_logMsg);\n      } else if (!this.strictMode) {\n        var errMsg = 'You are are attempting to use a call instance that was previously ' + 'destroyed, which is unsupported. Please remove `strictMode: false` ' + 'from your constructor properties to enable strict mode to track ' + 'down and fix this unsupported usage.';\n        console.error(errMsg);\n      }\n    }\n  }, {\n    key: \"_logDuplicateInstanceAttempt\",\n    value: function _logDuplicateInstanceAttempt() {\n      var callInst = _callInstance._dailyMainExecuted ? _callInstance : this._dailyMainExecuted ? this : undefined;\n      if (callInst) {\n        callInst.sendMessageToCallMachine({\n          action: _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_METHOD_TRANSMIT_LOG,\n          level: 'error',\n          code: this.strictMode ? 9990 : 9992\n        });\n      } else {\n        // dailyMainExecuted most likely will only fire once and\n        // it's unclear which call machine will handle it.\n        this._delayDuplicateInstanceLog = true;\n        _callInstance._delayDuplicateInstanceLog = true;\n      }\n    }\n  }, {\n    key: \"_maybeSendToSentry\",\n    value: function _maybeSendToSentry(error) {\n      var _error$error, _this$properties, _this$properties2, _this$properties2$dai, _this$properties2$dai2, _error$error2;\n      if ((_error$error = error.error) !== null && _error$error !== void 0 && _error$error.type) {\n        var sentryErrors = ['connection-error', 'end-of-life', 'no-room'];\n        if (!sentryErrors.includes(error.error.type)) {\n          return;\n        }\n      }\n      var url = (_this$properties = this.properties) !== null && _this$properties !== void 0 && _this$properties.url ? new URL(this.properties.url) : undefined;\n      var env = 'production';\n      if (true) {\n        env = 'development';\n      } else {}\n      var client = new _sentry_browser__WEBPACK_IMPORTED_MODULE_24__.BrowserClient({\n        dsn: \"https://f10f1c81e5d44a4098416c0867a8b740@o77906.ingest.sentry.io/168844\",\n        transport: _sentry_browser__WEBPACK_IMPORTED_MODULE_25__.makeFetchTransport,\n        integrations: [new _sentry_browser__WEBPACK_IMPORTED_MODULE_26__.Integrations.GlobalHandlers({\n          onunhandledrejection: false\n        })],\n        environment: env\n      });\n      var hub = new _sentry_browser__WEBPACK_IMPORTED_MODULE_27__.Hub(client, undefined, DailyIframe.version());\n      this.session_id && hub.setExtra('sessionId', this.session_id);\n      if (this.properties) {\n        var properties = _objectSpread({}, this.properties);\n\n        // remove PII\n        properties.userName = properties.userName ? '[Filtered]' : undefined;\n        properties.userData = properties.userData ? '[Filtered]' : undefined;\n        properties.token = properties.token ? '[Filtered]' : undefined;\n        hub.setExtra('properties', properties);\n      }\n      if (url) {\n        var domain = url.searchParams.get('domain');\n        if (!domain) {\n          var match = url.host.match(/(.*?)\\./);\n          domain = match && match[1] || '';\n        }\n        domain && hub.setTag('domain', domain);\n      }\n      if (error.error) {\n        var _error$error$details, _error$error$details2, _error$error$details3, _error$error$details4, _error$error$details5;\n        hub.setTag('fatalErrorType', error.error.type);\n        hub.setExtra('errorDetails', error.error.details);\n        ((_error$error$details = error.error.details) === null || _error$error$details === void 0 ? void 0 : _error$error$details.uri) && hub.setTag('serverAddress', error.error.details.uri);\n        ((_error$error$details2 = error.error.details) === null || _error$error$details2 === void 0 ? void 0 : _error$error$details2.workerGroup) && hub.setTag('workerGroup', error.error.details.workerGroup);\n        ((_error$error$details3 = error.error.details) === null || _error$error$details3 === void 0 ? void 0 : _error$error$details3.geoGroup) && hub.setTag('geoGroup', error.error.details.geoGroup);\n        ((_error$error$details4 = error.error.details) === null || _error$error$details4 === void 0 ? void 0 : _error$error$details4.bundleUrl) && hub.setTag('bundleUrl', error.error.details.bundleUrl);\n        ((_error$error$details5 = error.error.details) === null || _error$error$details5 === void 0 ? void 0 : _error$error$details5.on) && hub.setTag('connectionAttempt', error.error.details.on);\n      }\n      hub.setTags({\n        callMode: this._callObjectMode ? (0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)() ? 'reactNative' : (_this$properties2 = this.properties) !== null && _this$properties2 !== void 0 && (_this$properties2$dai = _this$properties2.dailyConfig) !== null && _this$properties2$dai !== void 0 && (_this$properties2$dai2 = _this$properties2$dai.callMode) !== null && _this$properties2$dai2 !== void 0 && _this$properties2$dai2.includes('prebuilt') ? this.properties.dailyConfig.callMode : 'custom' : 'prebuilt-frame',\n        version: DailyIframe.version()\n      });\n      var msg = ((_error$error2 = error.error) === null || _error$error2 === void 0 ? void 0 : _error$error2.msg) || error.errorMsg;\n      hub.run(function (currentHub) {\n        currentHub.captureException(new Error(msg));\n      });\n    }\n  }], [{\n    key: \"supportedBrowser\",\n    value:\n    //\n    // static methods\n    //\n\n    function supportedBrowser() {\n      if ((0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)()) {\n        return {\n          supported: true,\n          mobile: true,\n          name: 'React Native',\n          version: null,\n          supportsScreenShare: true,\n          supportsSfu: true,\n          supportsVideoProcessing: false,\n          supportsAudioProcessing: false\n        };\n      }\n      var browser = bowser__WEBPACK_IMPORTED_MODULE_12___default().getParser((0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.getUserAgent)());\n      return {\n        supported: !!(0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.browserVideoSupported_p)(),\n        mobile: browser.getPlatformType() === 'mobile',\n        name: browser.getBrowserName(),\n        version: browser.getBrowserVersion(),\n        supportsFullscreen: !!(0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isFullscreenSupported)(),\n        supportsScreenShare: !!(0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isScreenSharingSupported)(),\n        supportsSfu: !!(0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.browserVideoSupported_p)(),\n        // Note: isVideoProcessingSupported() reports video processing support for\n        // the new default processor (Banuba), which is wider than for the old\n        // processor, which can still be configured via useLegacyVideoProcessor\n        supportsVideoProcessing: (0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isVideoProcessingSupported)(),\n        supportsAudioProcessing: (0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isAudioProcessingSupported)()\n      };\n    }\n  }, {\n    key: \"version\",\n    value: function version() {\n      return \"0.57.0-internal.25\";\n    }\n\n    //\n    // constructors\n    //\n  }, {\n    key: \"createCallObject\",\n    value: function createCallObject() {\n      var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      properties.layout = 'none';\n      return new DailyIframe(null, properties);\n    }\n  }, {\n    key: \"wrap\",\n    value: function wrap(iframeish) {\n      var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      methodNotSupportedInReactNative();\n      if (!iframeish || !iframeish.contentWindow || 'string' !== typeof iframeish.src) {\n        throw new Error('DailyIframe::Wrap needs an iframe-like first argument');\n      }\n      if (!properties.layout) {\n        if (properties.customLayout) {\n          properties.layout = 'custom-v1';\n        } else {\n          properties.layout = 'browser';\n        }\n      }\n      return new DailyIframe(iframeish, properties);\n    }\n  }, {\n    key: \"createFrame\",\n    value: function createFrame(arg1, arg2) {\n      methodNotSupportedInReactNative();\n      var parentEl, properties;\n      if (arg1 && arg2) {\n        parentEl = arg1;\n        properties = arg2;\n      } else if (arg1 && arg1.append) {\n        parentEl = arg1;\n        properties = {};\n      } else {\n        parentEl = document.body;\n        properties = arg1 || {};\n      }\n      var iframeStyle = properties.iframeStyle;\n      if (!iframeStyle) {\n        if (parentEl === document.body) {\n          iframeStyle = {\n            position: 'fixed',\n            border: '1px solid black',\n            backgroundColor: 'white',\n            width: '375px',\n            height: '450px',\n            right: '1em',\n            bottom: '1em'\n          };\n        } else {\n          iframeStyle = {\n            border: 0,\n            width: '100%',\n            height: '100%'\n          };\n        }\n      }\n      var iframeEl = document.createElement('iframe');\n      // special-case for old Electron for Figma\n      if (window.navigator && window.navigator.userAgent.match(/Chrome\\/61\\./)) {\n        iframeEl.allow = 'microphone, camera';\n      } else {\n        iframeEl.allow = 'microphone; camera; autoplay; display-capture; screen-wake-lock';\n      }\n      iframeEl.style.visibility = 'hidden';\n      parentEl.appendChild(iframeEl);\n      iframeEl.style.visibility = null;\n      Object.keys(iframeStyle).forEach(function (k) {\n        return iframeEl.style[k] = iframeStyle[k];\n      });\n      if (!properties.layout) {\n        if (properties.customLayout) {\n          properties.layout = 'custom-v1';\n        } else {\n          properties.layout = 'browser';\n        }\n      }\n      try {\n        var callFrame = new DailyIframe(iframeEl, properties);\n        return callFrame;\n      } catch (e) {\n        // something when wrong while constructing the object. so let's clean\n        // up by removing ourselves from the page, then rethrow the error.\n        parentEl.removeChild(iframeEl);\n        throw e;\n      }\n    }\n  }, {\n    key: \"createTransparentFrame\",\n    value: function createTransparentFrame() {\n      var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      methodNotSupportedInReactNative();\n      var iframeEl = document.createElement('iframe');\n      iframeEl.allow = 'microphone; camera; autoplay';\n      iframeEl.style.cssText = \"\\n      position: fixed;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      height: 100%;\\n      border: 0;\\n      pointer-events: none;\\n    \";\n      document.body.appendChild(iframeEl);\n      if (!properties.layout) {\n        properties.layout = 'custom-v1';\n      }\n      return DailyIframe.wrap(iframeEl, properties);\n    }\n  }, {\n    key: \"getCallInstance\",\n    value: function getCallInstance() {\n      return _callInstance;\n    }\n  }]);\n  return DailyIframe;\n}((events__WEBPACK_IMPORTED_MODULE_11___default()));\n\nfunction initializePreloadCache() {\n  return {\n    subscribeToTracksAutomatically: true,\n    audioDeviceId: null,\n    videoDeviceId: null,\n    outputDeviceId: null,\n    inputSettings: null,\n    sendSettings: null,\n    videoTrackForNetworkConnectivityTest: null,\n    videoTrackForConnectionQualityTest: null\n  };\n}\nfunction resetPreloadCache(c) {\n  // don't need to do anything, until we add stuff to the preload\n  // cache that should not persist\n}\nfunction makeSafeForPostMessage(props) {\n  var safe = {};\n  for (var p in props) {\n    if (props[p] instanceof MediaStreamTrack) {\n      // note: could store the track in a global variable for accessing\n      // on the other side of the postMessage, here, instead of as we\n      // currently do in the validate-properties routines, which definitely\n      // is a spooky-action-at-a-distance code anti-pattern\n      safe[p] = _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_CUSTOM_TRACK;\n    } else if (p === 'dailyConfig') {\n      if (props[p].modifyLocalSdpHook) {\n        if (window._dailyConfig) {\n          window._dailyConfig.modifyLocalSdpHook = props[p].modifyLocalSdpHook;\n        }\n        delete props[p].modifyLocalSdpHook;\n      }\n      if (props[p].modifyRemoteSdpHook) {\n        if (window._dailyConfig) {\n          window._dailyConfig.modifyRemoteSdpHook = props[p].modifyRemoteSdpHook;\n        }\n        delete props[p].modifyRemoteSdpHook;\n      }\n      safe[p] = props[p];\n    } else {\n      safe[p] = props[p];\n    }\n  }\n  return safe;\n}\nfunction methodOnlySupportedAfterJoin(callState) {\n  var methodName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'This daily-js method';\n  var moreInfo = arguments.length > 2 ? arguments[2] : undefined;\n  if (callState !== _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_JOINED) {\n    var msg = \"\".concat(methodName, \" only supported after join.\");\n    if (moreInfo) {\n      msg += \" \".concat(moreInfo);\n    }\n    console.error(msg);\n    throw new Error(msg);\n  }\n}\nfunction _isCallPendingOrOngoing(callState, isPreparingToJoin) {\n  return [_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_JOINING, _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_STATE_JOINED].includes(callState) || isPreparingToJoin;\n}\nfunction methodOnlySupportedBeforeJoin(callState, isPreparingToJoin) {\n  var methodName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'This daily-js method';\n  var moreInfo = arguments.length > 3 ? arguments[3] : undefined;\n  if (_isCallPendingOrOngoing(callState, isPreparingToJoin)) {\n    var msg = \"\".concat(methodName, \" not supported after joining a meeting.\");\n    if (moreInfo) {\n      msg += \" \".concat(moreInfo);\n    }\n    console.error(msg);\n    throw new Error(msg);\n  }\n}\nfunction methodRequiresDailyMainExecution(dailyMainExecuted) {\n  var methodName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'This daily-js method';\n  var moreInfo = arguments.length > 2 ? arguments[2] : undefined;\n  if (!dailyMainExecuted) {\n    var msg = \"\".concat(methodName, \" requires preAuth(), startCamera(), or join() to initialize call state.\");\n    if (moreInfo) {\n      msg += \" \".concat(moreInfo);\n    }\n    console.error(msg);\n    throw new Error(msg);\n  }\n}\nfunction methodNotSupportedAfterDailyMainExecution(dailyMainExecuted) {\n  var methodName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'This daily-js method';\n  var moreInfo = arguments.length > 2 ? arguments[2] : undefined;\n  if (dailyMainExecuted) {\n    var msg = \"\".concat(methodName, \" can not be called after preAuth(), startCamera(), or join() and call state has been initialized.\");\n    if (moreInfo) {\n      msg += \" \".concat(moreInfo);\n    }\n    console.error(msg);\n    throw new Error(msg);\n  }\n}\nfunction methodNotSupportedDuringTestCall(testingInProgress) {\n  var methodName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'This daily-js method';\n  if (testingInProgress) {\n    var msg = \"A pre-call quality test is in progress. Please try \".concat(methodName, \" again once testing has completed. Use stopTestCallQuality() to end it early.\");\n    console.error(msg);\n    throw new Error(msg);\n  }\n}\nfunction methodOnlySupportedInCallObject(callObjectMode) {\n  var methodName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'This daily-js method';\n  if (!callObjectMode) {\n    var msg = \"\".concat(methodName, \" is only supported on custom callObject instances\");\n    console.error(msg);\n    throw new Error(msg);\n  }\n}\nfunction methodOnlySupportedInPrebuilt(callObjectMode) {\n  var methodName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'This daily-js method';\n  if (callObjectMode) {\n    var msg = \"\".concat(methodName, \" is only supported as part of Daily's Prebuilt\");\n    console.error(msg);\n    throw new Error(msg);\n  }\n}\nfunction methodNotSupportedInReactNative() {\n  if ((0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)()) {\n    throw new Error('This daily-js method is not currently supported in React Native');\n  }\n}\nfunction methodOnlySupportedInReactNative() {\n  if (!(0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isReactNative)()) {\n    throw new Error('This daily-js method is only supported in React Native');\n  }\n}\nfunction validateSessionDataUpdate(data, mergeStrategy) {\n  // the SessionDataUpdate constructor validates everything and will\n  // throw the errors necessary if things don't check out\n  new _shared_with_pluot_core_SessionData_js__WEBPACK_IMPORTED_MODULE_18__.SessionDataUpdate({\n    data: data,\n    mergeStrategy: mergeStrategy\n  });\n  return true;\n}\nfunction validateUserData(data) {\n  // undefined is considered valid but would fail the checks below\n  if (data === undefined) {\n    return true;\n  }\n  var dataStr;\n  if (typeof data === 'string') {\n    // JSON.stringify adds two characters to the string, so do sizing checks\n    // on the raw string.\n    dataStr = data;\n  } else {\n    try {\n      dataStr = JSON.stringify(data);\n\n      // check that what goes in is the same coming out :)\n      if (!(0,fast_equals__WEBPACK_IMPORTED_MODULE_23__.deepEqual)(JSON.parse(dataStr), data)) {\n        console.warn(\"The userData provided will be modified when serialized.\");\n      }\n    } catch (e) {\n      throw Error(\"userData must be serializable to JSON: \".concat(e));\n    }\n  }\n  // check the size of the payload\n  if (dataStr.length > _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.MAX_USER_DATA_SIZE) {\n    throw Error(\"userData is too large (\".concat(dataStr.length, \" characters). Maximum size suppported is \").concat(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.MAX_USER_DATA_SIZE, \".\"));\n  }\n  return true;\n}\nfunction validateReceiveSettings(receiveSettingsParam, _ref16) {\n  var allowAllParticipantsKey = _ref16.allowAllParticipantsKey;\n  var isParticipantIdValid = function isParticipantIdValid(participantId) {\n    var disallowedKeys = ['local'];\n    if (!allowAllParticipantsKey) disallowedKeys.push('*');\n    return participantId && !disallowedKeys.includes(participantId);\n  };\n  var areVideoReceiveSettingsValid = function areVideoReceiveSettingsValid(videoReceiveSettings) {\n    if (videoReceiveSettings.layer !== undefined) {\n      if (!(Number.isInteger(videoReceiveSettings.layer) && videoReceiveSettings.layer >= 0 || videoReceiveSettings.layer === 'inherit')) {\n        return false;\n      }\n    }\n    return true;\n  };\n  // NOTE: partial receive settings *are* allowed, in both senses:\n  // - only a subset of media types (e.g. only \"video\")\n  // - only a subset of settings per media type (e.g. only \"layer\")\n  var areParticipantReceiveSettingsValid = function areParticipantReceiveSettingsValid(receiveSettings) {\n    if (!receiveSettings) return false;\n    if (receiveSettings.video) {\n      if (!areVideoReceiveSettingsValid(receiveSettings.video)) {\n        return false;\n      }\n    }\n    if (receiveSettings.screenVideo) {\n      if (!areVideoReceiveSettingsValid(receiveSettings.screenVideo)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  for (var _i3 = 0, _Object$entries2 = Object.entries(receiveSettingsParam); _i3 < _Object$entries2.length; _i3++) {\n    var _Object$entries2$_i = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(_Object$entries2[_i3], 2),\n      participantId = _Object$entries2$_i[0],\n      receiveSettings = _Object$entries2$_i[1];\n    if (!(isParticipantIdValid(participantId) && areParticipantReceiveSettingsValid(receiveSettings))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction validateSendSettings(sendSettings, callObject) {\n  try {\n    callObject.validateUpdateSendSettings(sendSettings);\n    return true;\n  } catch (e) {\n    console.error('Failed to validate send settings', e);\n    return false;\n  }\n}\nfunction validateInputSettings(settings) {\n  if ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(settings) !== 'object') return false;\n  if (!(settings.video && (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(settings.video) === 'object' || settings.audio && (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(settings.audio) === 'object')) return false;\n  if (settings.video && !validateVideoProcessor(settings.video.processor)) return false;\n  if (settings.audio && !validateAudioProcessor(settings.audio.processor)) return false;\n  return true;\n}\n\n// Assumes `settings` is otherwise valid (passes `validateInputSettings()`).\n// Note: currently `processor` is required for `settings` to be valid, so we can\n// strip out the entire `video` or `audio` if processing isn't supported.\nfunction stripInputSettingsForUnsupportedPlatforms(settings) {\n  var _window$_dailyConfig$;\n  var unsupportedProcessors = [];\n  if (settings.video && !(0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isVideoProcessingSupported)((_window$_dailyConfig$ = window._dailyConfig.useLegacyVideoProcessor) !== null && _window$_dailyConfig$ !== void 0 ? _window$_dailyConfig$ : false)) {\n    delete settings.video;\n    unsupportedProcessors.push('video');\n  }\n  if (settings.audio && !(0,_shared_with_pluot_core_Environment_js__WEBPACK_IMPORTED_MODULE_15__.isAudioProcessingSupported)()) {\n    delete settings.audio;\n    unsupportedProcessors.push('audio');\n  }\n  if (unsupportedProcessors.length > 0) {\n    console.error(\"Ignoring settings for browser- or platform-unsupported input processor(s): \".concat(unsupportedProcessors.join(', ')));\n  }\n}\nfunction validateAudioProcessor(p) {\n  var VALID_PROCESSOR_KEYS = ['type'];\n  if (!p) return false;\n  if ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(p) !== 'object') return false;\n  Object.keys(p).filter(function (k) {\n    return !VALID_PROCESSOR_KEYS.includes(k);\n  }).forEach(function (k) {\n    console.warn(\"invalid key inputSettings -> audio -> processor : \".concat(k));\n    delete p[k];\n  });\n  if (!validateAudioProcessorType(p.type)) return false;\n  return true;\n}\nfunction validateAudioProcessorType(type) {\n  if (typeof type !== 'string') return false;\n  if (!Object.values(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_JS_AUDIO_PROCESSOR_TYPES).includes(type)) {\n    console.error('inputSettings audio processor type invalid');\n    return false;\n  }\n  return true;\n}\nfunction validateVideoProcessor(p) {\n  // publish has been deprecated. It hasnt been removed from VALID_PROCESSOR_KEYS\n  // so as to not throw an error for any active users; Added a warning about the\n  // deprecation below.\n  var VALID_PROCESSOR_KEYS = ['type', 'config'];\n  if (!p) return false;\n  if ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(p) !== 'object') return false;\n  if (!validateVideoProcessorType(p.type)) return false;\n  if (p.config) {\n    if ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(p.config) !== 'object') return false;\n    if (!validateVideoProcessorConfig(p.type, p.config)) return false;\n  }\n  // scrub invalid keys in processor object\n  Object.keys(p).filter(function (k) {\n    return !VALID_PROCESSOR_KEYS.includes(k);\n  }).forEach(function (k) {\n    console.warn(\"invalid key inputSettings -> video -> processor : \".concat(k));\n    delete p[k];\n  });\n  return true;\n}\nfunction validateVideoProcessorConfig(type, config) {\n  var keys = Object.keys(config);\n  if (keys.length === 0) return true;\n  var configErrMsg = 'invalid object in inputSettings -> video -> processor -> config';\n  switch (type) {\n    case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_JS_VIDEO_PROCESSOR_TYPES.BGBLUR:\n      if (keys.length > 1 || keys[0] !== 'strength') {\n        console.error(configErrMsg);\n        return false;\n      }\n      if (typeof config.strength !== 'number' || config.strength <= 0 || config.strength > 1 || isNaN(config.strength)) {\n        console.error(\"\".concat(configErrMsg, \"; expected: {0 < strength <= 1}, got: \").concat(config.strength));\n        return false;\n      }\n      return true;\n    case _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_JS_VIDEO_PROCESSOR_TYPES.BGIMAGE:\n      if (config.source !== undefined) {\n        if (!validateAndTagBgImageSource(config)) return false;\n      }\n      return true;\n    default:\n      return true;\n  }\n}\nfunction validateAndTagBgImageSource(config) {\n  if (config.source === 'default') {\n    config.type = 'default';\n    return true;\n  }\n  if (config.source instanceof ArrayBuffer) {\n    return true;\n  }\n  if ((0,_utils__WEBPACK_IMPORTED_MODULE_13__.validateHttpUrl)(config.source)) {\n    config.type = 'url';\n    if (!validateBgImageFileType(config.source)) {\n      console.error(\"invalid image type; supported types: [\".concat(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_SUPPORTED_BG_IMG_TYPES.join(', '), \"]\"));\n      return false;\n    }\n    return true;\n  }\n  if (validateImageSelection(config.source)) {\n    config.type = 'daily-preselect';\n    return true;\n  } else {\n    console.error(\"invalid image selection; must be an int, > 0, <= \".concat(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_PRESELECTED_BG_IMAGE_URLS_LENGTH));\n    return false;\n  }\n}\nfunction validateBgImageFileType(url) {\n  // ignore query params\n  var parsedUrl = new URL(url);\n  var pathName = parsedUrl.pathname;\n  if (parsedUrl.protocol === 'data:') {\n    try {\n      var blobContentType = pathName.substring(pathName.indexOf(':') + 1, pathName.indexOf(';'));\n      var blobExtension = blobContentType.split('/')[1];\n      return _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_SUPPORTED_BG_IMG_TYPES.includes(blobExtension);\n    } catch (e) {\n      console.error('failed to deduce blob content type', e);\n      return false;\n    }\n  }\n  var urlFileType = pathName.split('.').at(-1).toLowerCase().trim();\n  return _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_SUPPORTED_BG_IMG_TYPES.includes(urlFileType);\n}\nfunction validateImageSelection(selectImg) {\n  var imgNum = Number(selectImg);\n  if (isNaN(imgNum)) return false;\n  if (!Number.isInteger(imgNum)) return false;\n  if (imgNum <= 0) return false;\n  if (imgNum > _shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_PRESELECTED_BG_IMAGE_URLS_LENGTH) return false;\n  return true;\n}\nfunction validateVideoProcessorType(type) {\n  if (typeof type !== 'string') return false;\n  if (!Object.values(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_JS_VIDEO_PROCESSOR_TYPES).includes(type)) {\n    console.error('inputSettings video processor type invalid');\n    return false;\n  }\n  return true;\n}\nfunction inputSettingsValidationHelpMsg() {\n  var videoProcessorOpts = Object.values(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_JS_VIDEO_PROCESSOR_TYPES).join(' | ');\n  var audioProcessorOpts = Object.values(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_JS_AUDIO_PROCESSOR_TYPES).join(' | ');\n  return \"inputSettings must be of the form: { video?: { processor: { type: [ \".concat(videoProcessorOpts, \" ], config?: {} } }, audio?: { processor: {type: [ \").concat(audioProcessorOpts, \" ] } } }\");\n}\nfunction receiveSettingsValidationHelpMsg(_ref17) {\n  var allowAllParticipantsKey = _ref17.allowAllParticipantsKey;\n  return \"receiveSettings must be of the form { [<remote participant id> | \".concat(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_RECEIVE_SETTINGS_BASE_KEY).concat(allowAllParticipantsKey ? \" | \\\"\".concat(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_RECEIVE_SETTINGS_ALL_PARTICIPANTS_KEY, \"\\\"\") : '', \"]: \") + '{ ' + '[video: [{ layer: [<non-negative integer> | \"inherit\"] } | \"inherit\"]], ' + '[screenVideo: [{ layer: [<non-negative integer> | \"inherit\"] } | \"inherit\"]] ' + '}}}';\n}\nfunction customIntegrationsValidationHelpMsg() {\n  return \"customIntegrations should be an object of type \".concat(JSON.stringify(customIntegrationsType), \".\");\n}\nfunction validateCustomTrayButtons(btns) {\n  if (btns && (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(btns) !== 'object' || Array.isArray(btns)) {\n    console.error(\"customTrayButtons should be an Object of the type \".concat(JSON.stringify(customTrayButtonsType), \".\"));\n    return false;\n  }\n  if (btns) {\n    for (var _i4 = 0, _Object$entries3 = Object.entries(btns); _i4 < _Object$entries3.length; _i4++) {\n      var _Object$entries3$_i = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(_Object$entries3[_i4], 1),\n        btnsKey = _Object$entries3$_i[0];\n      for (var _i5 = 0, _Object$entries4 = Object.entries(btns[btnsKey]); _i5 < _Object$entries4.length; _i5++) {\n        var _Object$entries4$_i = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(_Object$entries4[_i5], 2),\n          btnKey = _Object$entries4$_i[0],\n          btnValue = _Object$entries4$_i[1];\n        if (btnKey === 'iconPath' && !(0,_utils__WEBPACK_IMPORTED_MODULE_13__.validateHttpUrl)(btnValue)) {\n          console.error(\"customTrayButton \".concat(btnKey, \" should be a url.\"));\n          return false;\n        }\n        if (btnKey === 'iconPathDarkMode' && !(0,_utils__WEBPACK_IMPORTED_MODULE_13__.validateHttpUrl)(btnValue)) {\n          console.error(\"customTrayButton \".concat(btnKey, \" should be a url.\"));\n          return false;\n        }\n        var expectedKey = customTrayButtonsType.id[btnKey];\n        if (!expectedKey) {\n          console.error(\"customTrayButton does not support key \".concat(btnKey));\n          return false;\n        }\n        if ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(btnValue) !== expectedKey) {\n          console.error(\"customTrayButton \".concat(btnKey, \" should be a \").concat(expectedKey, \".\"));\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\nfunction validateCustomIntegrations(integrations) {\n  if (!integrations || integrations && (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(integrations) !== 'object' || Array.isArray(integrations)) {\n    console.error(customIntegrationsValidationHelpMsg());\n    return false;\n  }\n  var keyShouldBeType = function keyShouldBeType(key) {\n    return \"\".concat(key, \" should be \").concat(customIntegrationsType.id[key]);\n  };\n  var logError = function logError(id, msg) {\n    return console.error(\"customIntegration \".concat(id, \": \").concat(msg));\n  };\n  for (var _i6 = 0, _Object$entries5 = Object.entries(integrations); _i6 < _Object$entries5.length; _i6++) {\n    var _Object$entries5$_i = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(_Object$entries5[_i6], 1),\n      key = _Object$entries5$_i[0];\n    if (!('label' in integrations[key])) {\n      logError(key, 'label is required');\n      return false;\n    }\n    if (!('location' in integrations[key])) {\n      logError(key, 'location is required');\n      return false;\n    }\n    if (!('src' in integrations[key]) && !('srcdoc' in integrations[key])) {\n      logError(key, 'src or srcdoc is required');\n      return false;\n    }\n    for (var _i7 = 0, _Object$entries6 = Object.entries(integrations[key]); _i7 < _Object$entries6.length; _i7++) {\n      var _Object$entries6$_i = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(_Object$entries6[_i7], 2),\n        iKey = _Object$entries6$_i[0],\n        iValue = _Object$entries6$_i[1];\n      switch (iKey) {\n        case 'allow':\n        case 'csp':\n        case 'name':\n        case 'referrerPolicy':\n        case 'sandbox':\n          if (typeof iValue !== 'string') {\n            logError(key, keyShouldBeType(iKey));\n            return false;\n          }\n          break;\n        case 'iconURL':\n          if (!(0,_utils__WEBPACK_IMPORTED_MODULE_13__.validateHttpUrl)(iValue)) {\n            logError(key, \"\".concat(iKey, \" should be a url\"));\n            return false;\n          }\n          break;\n        case 'src':\n          if ('srcdoc' in integrations[key]) {\n            logError(key, \"cannot have both src and srcdoc\");\n            return false;\n          }\n          if (!(0,_utils__WEBPACK_IMPORTED_MODULE_13__.validateHttpUrl)(iValue)) {\n            logError(key, \"src \\\"\".concat(iValue, \"\\\" is not a valid URL\"));\n            return false;\n          }\n          break;\n        case 'srcdoc':\n          if ('src' in integrations[key]) {\n            logError(key, \"cannot have both src and srcdoc\");\n            return false;\n          }\n          if (typeof iValue !== 'string') {\n            logError(key, keyShouldBeType(iKey));\n            return false;\n          }\n          break;\n        case 'location':\n          if (!['main', 'sidebar'].includes(iValue)) {\n            logError(key, keyShouldBeType(iKey));\n            return false;\n          }\n          break;\n        case 'controlledBy':\n          if (iValue !== '*' && iValue !== 'owners' && (!Array.isArray(iValue) || iValue.some(function (s) {\n            return typeof s !== 'string';\n          }))) {\n            logError(key, keyShouldBeType(iKey));\n            return false;\n          }\n          break;\n        case 'shared':\n          if ((!Array.isArray(iValue) || iValue.some(function (s) {\n            return typeof s !== 'string';\n          })) && iValue !== 'owners' && typeof iValue !== 'boolean') {\n            logError(key, keyShouldBeType(iKey));\n            return false;\n          }\n          break;\n        default:\n          {\n            var expectedKey = customIntegrationsType.id[iKey];\n            if (!expectedKey) {\n              console.error(\"customIntegration does not support key \".concat(iKey));\n              return false;\n            }\n            break;\n          }\n      }\n    }\n  }\n  return true;\n}\nfunction validateReactNativeConfig(config) {\n  return validateConfigPropType(config, reactNativeConfigType);\n}\nfunction validateConfigPropType(prop, propType) {\n  if (propType === undefined) {\n    return false;\n  }\n  switch ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(propType)) {\n    case 'string':\n      return (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(prop) === propType;\n    case 'object':\n      if ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(prop) !== 'object') {\n        return false;\n      }\n      for (var key in prop) {\n        if (!validateConfigPropType(prop[key], propType[key])) {\n          return false;\n        }\n      }\n      return true;\n    default:\n      // console.error(\n      //   \"Internal programming error: we've defined our config prop types wrong\"\n      // );\n      return false;\n  }\n}\nfunction remoteMediaPlayerStartValidationHelpMsg() {\n  return \"startRemoteMediaPlayer arguments must be of the form: \\n  { url: \\\"playback url\\\", \\n  settings?: \\n  {state: \\\"play\\\"|\\\"pause\\\", simulcastEncodings?: [{}] } }\";\n}\nfunction remoteMediaPlayerUpdateValidationHelpMsg() {\n  return \"updateRemoteMediaPlayer arguments must be of the form: \\n  session_id: \\\"participant session\\\", \\n  { settings?: {state: \\\"play\\\"|\\\"pause\\\"} }\";\n}\nfunction validateRemotePlayerUrl(url) {\n  // TODO: add protocol check as well http://, https://. file://..\n  if (typeof url !== 'string') {\n    throw new Error(\"url parameter must be \\\"string\\\" type\");\n  }\n}\nfunction validateRemotePlayerSettings(playerSettings) {\n  if ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(playerSettings) !== 'object') {\n    throw new Error(\"RemoteMediaPlayerSettings: must be \\\"object\\\" type\");\n  }\n  if (playerSettings.state) {\n    if (!Object.values(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_JS_REMOTE_MEDIA_PLAYER_SETTING).includes(playerSettings.state)) {\n      throw new Error(\"Invalid value for RemoteMediaPlayerSettings.state, valid values are: \" + JSON.stringify(_shared_with_pluot_core_CommonIncludes_js__WEBPACK_IMPORTED_MODULE_14__.DAILY_JS_REMOTE_MEDIA_PLAYER_SETTING));\n    }\n  }\n  if (playerSettings.volume) {\n    if (typeof playerSettings.volume !== 'number') {\n      throw new Error(\"RemoteMediaPlayerSettings.volume: must be \\\"number\\\" type\");\n    }\n    if (playerSettings.volume < 0 || playerSettings.volume > 2) {\n      throw new Error(\"RemoteMediaPlayerSettings.volume: must be between 0.0 - 2.0\");\n    }\n  }\n}\nfunction isValueInRange(val, min, max) {\n  if (typeof val !== 'number' || val < min || val > max) {\n    return false;\n  }\n  return true;\n}\nfunction validateRemotePlayerEncodingSettings(playerSettings) {\n  for (var prop in playerSettings) {\n    if (!startRmpSettingsValidKeys.includes(prop)) {\n      throw new Error(\"Invalid key \".concat(prop, \", valid keys are: \").concat(startRmpSettingsValidKeys));\n    }\n  }\n  // validate simulcastEncodings\n  if (playerSettings.simulcastEncodings) {\n    this.validateSimulcastEncodings(playerSettings.simulcastEncodings, rmpSimulcastEncodingsValidRanges, true);\n  }\n}\nfunction maybeStripDataFromMeetingSessionState(meetingSessionState, callObjectMode) {\n  if (meetingSessionState && !callObjectMode) {\n    delete meetingSessionState.data;\n  }\n  return meetingSessionState;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/module.js\n");

/***/ }),

/***/ "./src/shared-with-pluot-core/CommonIncludes.js":
/*!******************************************************!*\
  !*** ./src/shared-with-pluot-core/CommonIncludes.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DAILY_ACCESS_LEVEL_FULL\": function() { return /* binding */ DAILY_ACCESS_LEVEL_FULL; },\n/* harmony export */   \"DAILY_ACCESS_LEVEL_LOBBY\": function() { return /* binding */ DAILY_ACCESS_LEVEL_LOBBY; },\n/* harmony export */   \"DAILY_ACCESS_LEVEL_NONE\": function() { return /* binding */ DAILY_ACCESS_LEVEL_NONE; },\n/* harmony export */   \"DAILY_ACCESS_UNKNOWN\": function() { return /* binding */ DAILY_ACCESS_UNKNOWN; },\n/* harmony export */   \"DAILY_AUDIO_PROCESSOR_ERROR_TYPE\": function() { return /* binding */ DAILY_AUDIO_PROCESSOR_ERROR_TYPE; },\n/* harmony export */   \"DAILY_CAMERA_ERROR_CAM_AND_MIC_IN_USE\": function() { return /* binding */ DAILY_CAMERA_ERROR_CAM_AND_MIC_IN_USE; },\n/* harmony export */   \"DAILY_CAMERA_ERROR_CAM_IN_USE\": function() { return /* binding */ DAILY_CAMERA_ERROR_CAM_IN_USE; },\n/* harmony export */   \"DAILY_CAMERA_ERROR_CONSTRAINTS\": function() { return /* binding */ DAILY_CAMERA_ERROR_CONSTRAINTS; },\n/* harmony export */   \"DAILY_CAMERA_ERROR_MIC_IN_USE\": function() { return /* binding */ DAILY_CAMERA_ERROR_MIC_IN_USE; },\n/* harmony export */   \"DAILY_CAMERA_ERROR_NOT_FOUND\": function() { return /* binding */ DAILY_CAMERA_ERROR_NOT_FOUND; },\n/* harmony export */   \"DAILY_CAMERA_ERROR_PERMISSIONS\": function() { return /* binding */ DAILY_CAMERA_ERROR_PERMISSIONS; },\n/* harmony export */   \"DAILY_CAMERA_ERROR_UNDEF_MEDIADEVICES\": function() { return /* binding */ DAILY_CAMERA_ERROR_UNDEF_MEDIADEVICES; },\n/* harmony export */   \"DAILY_CAMERA_ERROR_UNKNOWN\": function() { return /* binding */ DAILY_CAMERA_ERROR_UNKNOWN; },\n/* harmony export */   \"DAILY_CUSTOM_TRACK\": function() { return /* binding */ DAILY_CUSTOM_TRACK; },\n/* harmony export */   \"DAILY_EVENT_ACCESS_STATE_UPDATED\": function() { return /* binding */ DAILY_EVENT_ACCESS_STATE_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_ACTIVE_SPEAKER_CHANGE\": function() { return /* binding */ DAILY_EVENT_ACTIVE_SPEAKER_CHANGE; },\n/* harmony export */   \"DAILY_EVENT_ACTIVE_SPEAKER_MODE_CHANGE\": function() { return /* binding */ DAILY_EVENT_ACTIVE_SPEAKER_MODE_CHANGE; },\n/* harmony export */   \"DAILY_EVENT_APP_MSG\": function() { return /* binding */ DAILY_EVENT_APP_MSG; },\n/* harmony export */   \"DAILY_EVENT_AVAILABLE_DEVICES_UPDATED\": function() { return /* binding */ DAILY_EVENT_AVAILABLE_DEVICES_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_CAMERA_ERROR\": function() { return /* binding */ DAILY_EVENT_CAMERA_ERROR; },\n/* harmony export */   \"DAILY_EVENT_CPU_LOAD_CHANGE\": function() { return /* binding */ DAILY_EVENT_CPU_LOAD_CHANGE; },\n/* harmony export */   \"DAILY_EVENT_CUSTOM_BUTTON_CLICK\": function() { return /* binding */ DAILY_EVENT_CUSTOM_BUTTON_CLICK; },\n/* harmony export */   \"DAILY_EVENT_DAILY_MAIN_EXECUTED\": function() { return /* binding */ DAILY_EVENT_DAILY_MAIN_EXECUTED; },\n/* harmony export */   \"DAILY_EVENT_DIALIN_CONNECTED\": function() { return /* binding */ DAILY_EVENT_DIALIN_CONNECTED; },\n/* harmony export */   \"DAILY_EVENT_DIALIN_ERROR\": function() { return /* binding */ DAILY_EVENT_DIALIN_ERROR; },\n/* harmony export */   \"DAILY_EVENT_DIALIN_STOPPED\": function() { return /* binding */ DAILY_EVENT_DIALIN_STOPPED; },\n/* harmony export */   \"DAILY_EVENT_DIALIN_WARNING\": function() { return /* binding */ DAILY_EVENT_DIALIN_WARNING; },\n/* harmony export */   \"DAILY_EVENT_DIALOUT_CONNECTED\": function() { return /* binding */ DAILY_EVENT_DIALOUT_CONNECTED; },\n/* harmony export */   \"DAILY_EVENT_DIALOUT_ERROR\": function() { return /* binding */ DAILY_EVENT_DIALOUT_ERROR; },\n/* harmony export */   \"DAILY_EVENT_DIALOUT_STOPPED\": function() { return /* binding */ DAILY_EVENT_DIALOUT_STOPPED; },\n/* harmony export */   \"DAILY_EVENT_DIALOUT_WARNING\": function() { return /* binding */ DAILY_EVENT_DIALOUT_WARNING; },\n/* harmony export */   \"DAILY_EVENT_ERROR\": function() { return /* binding */ DAILY_EVENT_ERROR; },\n/* harmony export */   \"DAILY_EVENT_EXIT_FULLSCREEN\": function() { return /* binding */ DAILY_EVENT_EXIT_FULLSCREEN; },\n/* harmony export */   \"DAILY_EVENT_FULLSCREEN\": function() { return /* binding */ DAILY_EVENT_FULLSCREEN; },\n/* harmony export */   \"DAILY_EVENT_IFRAME_LAUNCH_CONFIG\": function() { return /* binding */ DAILY_EVENT_IFRAME_LAUNCH_CONFIG; },\n/* harmony export */   \"DAILY_EVENT_IFRAME_READY_FOR_LAUNCH_CONFIG\": function() { return /* binding */ DAILY_EVENT_IFRAME_READY_FOR_LAUNCH_CONFIG; },\n/* harmony export */   \"DAILY_EVENT_INPUT_SETTINGS_UPDATED\": function() { return /* binding */ DAILY_EVENT_INPUT_SETTINGS_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_JOINED_MEETING\": function() { return /* binding */ DAILY_EVENT_JOINED_MEETING; },\n/* harmony export */   \"DAILY_EVENT_JOINING_MEETING\": function() { return /* binding */ DAILY_EVENT_JOINING_MEETING; },\n/* harmony export */   \"DAILY_EVENT_LANG_UPDATED\": function() { return /* binding */ DAILY_EVENT_LANG_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_LEFT_MEETING\": function() { return /* binding */ DAILY_EVENT_LEFT_MEETING; },\n/* harmony export */   \"DAILY_EVENT_LIVE_STREAMING_ERROR\": function() { return /* binding */ DAILY_EVENT_LIVE_STREAMING_ERROR; },\n/* harmony export */   \"DAILY_EVENT_LIVE_STREAMING_STARTED\": function() { return /* binding */ DAILY_EVENT_LIVE_STREAMING_STARTED; },\n/* harmony export */   \"DAILY_EVENT_LIVE_STREAMING_STOPPED\": function() { return /* binding */ DAILY_EVENT_LIVE_STREAMING_STOPPED; },\n/* harmony export */   \"DAILY_EVENT_LIVE_STREAMING_UPDATED\": function() { return /* binding */ DAILY_EVENT_LIVE_STREAMING_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_LOADED\": function() { return /* binding */ DAILY_EVENT_LOADED; },\n/* harmony export */   \"DAILY_EVENT_LOADING\": function() { return /* binding */ DAILY_EVENT_LOADING; },\n/* harmony export */   \"DAILY_EVENT_LOAD_ATTEMPT_FAILED\": function() { return /* binding */ DAILY_EVENT_LOAD_ATTEMPT_FAILED; },\n/* harmony export */   \"DAILY_EVENT_LOCAL_AUDIO_LEVEL\": function() { return /* binding */ DAILY_EVENT_LOCAL_AUDIO_LEVEL; },\n/* harmony export */   \"DAILY_EVENT_LOCAL_SCREEN_SHARE_CANCELED\": function() { return /* binding */ DAILY_EVENT_LOCAL_SCREEN_SHARE_CANCELED; },\n/* harmony export */   \"DAILY_EVENT_LOCAL_SCREEN_SHARE_STARTED\": function() { return /* binding */ DAILY_EVENT_LOCAL_SCREEN_SHARE_STARTED; },\n/* harmony export */   \"DAILY_EVENT_LOCAL_SCREEN_SHARE_STOPPED\": function() { return /* binding */ DAILY_EVENT_LOCAL_SCREEN_SHARE_STOPPED; },\n/* harmony export */   \"DAILY_EVENT_MEETING_SESSION_DATA_ERROR\": function() { return /* binding */ DAILY_EVENT_MEETING_SESSION_DATA_ERROR; },\n/* harmony export */   \"DAILY_EVENT_MEETING_SESSION_STATE_UPDATED\": function() { return /* binding */ DAILY_EVENT_MEETING_SESSION_STATE_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_MEETING_SESSION_SUMMARY_UPDATED\": function() { return /* binding */ DAILY_EVENT_MEETING_SESSION_SUMMARY_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_NETWORK_CONNECTION\": function() { return /* binding */ DAILY_EVENT_NETWORK_CONNECTION; },\n/* harmony export */   \"DAILY_EVENT_NETWORK_QUALITY_CHANGE\": function() { return /* binding */ DAILY_EVENT_NETWORK_QUALITY_CHANGE; },\n/* harmony export */   \"DAILY_EVENT_NONFATAL_ERROR\": function() { return /* binding */ DAILY_EVENT_NONFATAL_ERROR; },\n/* harmony export */   \"DAILY_EVENT_PARTICIPANT_COUNTS_UPDATED\": function() { return /* binding */ DAILY_EVENT_PARTICIPANT_COUNTS_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_PARTICIPANT_JOINED\": function() { return /* binding */ DAILY_EVENT_PARTICIPANT_JOINED; },\n/* harmony export */   \"DAILY_EVENT_PARTICIPANT_LEFT\": function() { return /* binding */ DAILY_EVENT_PARTICIPANT_LEFT; },\n/* harmony export */   \"DAILY_EVENT_PARTICIPANT_UPDATED\": function() { return /* binding */ DAILY_EVENT_PARTICIPANT_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_RECEIVE_SETTINGS_UPDATED\": function() { return /* binding */ DAILY_EVENT_RECEIVE_SETTINGS_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_RECORDING_DATA\": function() { return /* binding */ DAILY_EVENT_RECORDING_DATA; },\n/* harmony export */   \"DAILY_EVENT_RECORDING_ERROR\": function() { return /* binding */ DAILY_EVENT_RECORDING_ERROR; },\n/* harmony export */   \"DAILY_EVENT_RECORDING_STARTED\": function() { return /* binding */ DAILY_EVENT_RECORDING_STARTED; },\n/* harmony export */   \"DAILY_EVENT_RECORDING_STATS\": function() { return /* binding */ DAILY_EVENT_RECORDING_STATS; },\n/* harmony export */   \"DAILY_EVENT_RECORDING_STOPPED\": function() { return /* binding */ DAILY_EVENT_RECORDING_STOPPED; },\n/* harmony export */   \"DAILY_EVENT_RECORDING_UPLOAD_COMPLETED\": function() { return /* binding */ DAILY_EVENT_RECORDING_UPLOAD_COMPLETED; },\n/* harmony export */   \"DAILY_EVENT_REMOTE_MEDIA_PLAYER_STARTED\": function() { return /* binding */ DAILY_EVENT_REMOTE_MEDIA_PLAYER_STARTED; },\n/* harmony export */   \"DAILY_EVENT_REMOTE_MEDIA_PLAYER_STOPPED\": function() { return /* binding */ DAILY_EVENT_REMOTE_MEDIA_PLAYER_STOPPED; },\n/* harmony export */   \"DAILY_EVENT_REMOTE_MEDIA_PLAYER_UPDATED\": function() { return /* binding */ DAILY_EVENT_REMOTE_MEDIA_PLAYER_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_REMOTE_PARTICIPANTS_AUDIO_LEVEL\": function() { return /* binding */ DAILY_EVENT_REMOTE_PARTICIPANTS_AUDIO_LEVEL; },\n/* harmony export */   \"DAILY_EVENT_SELECTED_DEVICES_UPDATED\": function() { return /* binding */ DAILY_EVENT_SELECTED_DEVICES_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_SEND_SETTINGS_UPDATED\": function() { return /* binding */ DAILY_EVENT_SEND_SETTINGS_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_SHOW_LOCAL_VIDEO_CHANGED\": function() { return /* binding */ DAILY_EVENT_SHOW_LOCAL_VIDEO_CHANGED; },\n/* harmony export */   \"DAILY_EVENT_SIDEBAR_VIEW_CHANGED\": function() { return /* binding */ DAILY_EVENT_SIDEBAR_VIEW_CHANGED; },\n/* harmony export */   \"DAILY_EVENT_STARTED_CAMERA\": function() { return /* binding */ DAILY_EVENT_STARTED_CAMERA; },\n/* harmony export */   \"DAILY_EVENT_THEME_UPDATED\": function() { return /* binding */ DAILY_EVENT_THEME_UPDATED; },\n/* harmony export */   \"DAILY_EVENT_TRACK_STARTED\": function() { return /* binding */ DAILY_EVENT_TRACK_STARTED; },\n/* harmony export */   \"DAILY_EVENT_TRACK_STOPPED\": function() { return /* binding */ DAILY_EVENT_TRACK_STOPPED; },\n/* harmony export */   \"DAILY_EVENT_TRANSCRIPTION_ERROR\": function() { return /* binding */ DAILY_EVENT_TRANSCRIPTION_ERROR; },\n/* harmony export */   \"DAILY_EVENT_TRANSCRIPTION_MSG\": function() { return /* binding */ DAILY_EVENT_TRANSCRIPTION_MSG; },\n/* harmony export */   \"DAILY_EVENT_TRANSCRIPTION_STARTED\": function() { return /* binding */ DAILY_EVENT_TRANSCRIPTION_STARTED; },\n/* harmony export */   \"DAILY_EVENT_TRANSCRIPTION_STOPPED\": function() { return /* binding */ DAILY_EVENT_TRANSCRIPTION_STOPPED; },\n/* harmony export */   \"DAILY_EVENT_WAITING_PARTICIPANT_ADDED\": function() { return /* binding */ DAILY_EVENT_WAITING_PARTICIPANT_ADDED; },\n/* harmony export */   \"DAILY_EVENT_WAITING_PARTICIPANT_REMOVED\": function() { return /* binding */ DAILY_EVENT_WAITING_PARTICIPANT_REMOVED; },\n/* harmony export */   \"DAILY_EVENT_WAITING_PARTICIPANT_UPDATED\": function() { return /* binding */ DAILY_EVENT_WAITING_PARTICIPANT_UPDATED; },\n/* harmony export */   \"DAILY_EXIT_FULLSCREEN\": function() { return /* binding */ DAILY_EXIT_FULLSCREEN; },\n/* harmony export */   \"DAILY_FATAL_ERROR_CONNECTION\": function() { return /* binding */ DAILY_FATAL_ERROR_CONNECTION; },\n/* harmony export */   \"DAILY_FATAL_ERROR_EJECTED\": function() { return /* binding */ DAILY_FATAL_ERROR_EJECTED; },\n/* harmony export */   \"DAILY_FATAL_ERROR_EOL\": function() { return /* binding */ DAILY_FATAL_ERROR_EOL; },\n/* harmony export */   \"DAILY_FATAL_ERROR_EXP_ROOM\": function() { return /* binding */ DAILY_FATAL_ERROR_EXP_ROOM; },\n/* harmony export */   \"DAILY_FATAL_ERROR_EXP_TOKEN\": function() { return /* binding */ DAILY_FATAL_ERROR_EXP_TOKEN; },\n/* harmony export */   \"DAILY_FATAL_ERROR_MEETING_FULL\": function() { return /* binding */ DAILY_FATAL_ERROR_MEETING_FULL; },\n/* harmony export */   \"DAILY_FATAL_ERROR_NBF_ROOM\": function() { return /* binding */ DAILY_FATAL_ERROR_NBF_ROOM; },\n/* harmony export */   \"DAILY_FATAL_ERROR_NBF_TOKEN\": function() { return /* binding */ DAILY_FATAL_ERROR_NBF_TOKEN; },\n/* harmony export */   \"DAILY_FATAL_ERROR_NOT_ALLOWED\": function() { return /* binding */ DAILY_FATAL_ERROR_NOT_ALLOWED; },\n/* harmony export */   \"DAILY_FATAL_ERROR_NO_ROOM\": function() { return /* binding */ DAILY_FATAL_ERROR_NO_ROOM; },\n/* harmony export */   \"DAILY_INPUT_SETTINGS_ERROR_TYPE\": function() { return /* binding */ DAILY_INPUT_SETTINGS_ERROR_TYPE; },\n/* harmony export */   \"DAILY_JS_AUDIO_PROCESSOR_TYPES\": function() { return /* binding */ DAILY_JS_AUDIO_PROCESSOR_TYPES; },\n/* harmony export */   \"DAILY_JS_NETWORK_THRESHOLDS\": function() { return /* binding */ DAILY_JS_NETWORK_THRESHOLDS; },\n/* harmony export */   \"DAILY_JS_REMOTE_MEDIA_PLAYER_SETTING\": function() { return /* binding */ DAILY_JS_REMOTE_MEDIA_PLAYER_SETTING; },\n/* harmony export */   \"DAILY_JS_REMOTE_MEDIA_PLAYER_STATE\": function() { return /* binding */ DAILY_JS_REMOTE_MEDIA_PLAYER_STATE; },\n/* harmony export */   \"DAILY_JS_VIDEO_PROCESSOR_TYPES\": function() { return /* binding */ DAILY_JS_VIDEO_PROCESSOR_TYPES; },\n/* harmony export */   \"DAILY_LIVE_STREAMING_WARNING\": function() { return /* binding */ DAILY_LIVE_STREAMING_WARNING; },\n/* harmony export */   \"DAILY_LOCAL_AUDIO_LEVEL_OBSERVER_ERROR_TYPE\": function() { return /* binding */ DAILY_LOCAL_AUDIO_LEVEL_OBSERVER_ERROR_TYPE; },\n/* harmony export */   \"DAILY_METHOD_ABORT_TEST_NETWORK_CONNECTIVITY\": function() { return /* binding */ DAILY_METHOD_ABORT_TEST_NETWORK_CONNECTIVITY; },\n/* harmony export */   \"DAILY_METHOD_ABORT_TEST_WEBSOCKET_CONNECTIVITY\": function() { return /* binding */ DAILY_METHOD_ABORT_TEST_WEBSOCKET_CONNECTIVITY; },\n/* harmony export */   \"DAILY_METHOD_ADD_FAKE_PARTICIPANT\": function() { return /* binding */ DAILY_METHOD_ADD_FAKE_PARTICIPANT; },\n/* harmony export */   \"DAILY_METHOD_APP_MSG\": function() { return /* binding */ DAILY_METHOD_APP_MSG; },\n/* harmony export */   \"DAILY_METHOD_CYCLE_CAMERA\": function() { return /* binding */ DAILY_METHOD_CYCLE_CAMERA; },\n/* harmony export */   \"DAILY_METHOD_CYCLE_MIC\": function() { return /* binding */ DAILY_METHOD_CYCLE_MIC; },\n/* harmony export */   \"DAILY_METHOD_ENUMERATE_DEVICES\": function() { return /* binding */ DAILY_METHOD_ENUMERATE_DEVICES; },\n/* harmony export */   \"DAILY_METHOD_GET_CALC_STATS\": function() { return /* binding */ DAILY_METHOD_GET_CALC_STATS; },\n/* harmony export */   \"DAILY_METHOD_GET_CAMERA_FACING_MODE\": function() { return /* binding */ DAILY_METHOD_GET_CAMERA_FACING_MODE; },\n/* harmony export */   \"DAILY_METHOD_GET_CPU_LOAD_STATS\": function() { return /* binding */ DAILY_METHOD_GET_CPU_LOAD_STATS; },\n/* harmony export */   \"DAILY_METHOD_GET_INPUT_DEVICES\": function() { return /* binding */ DAILY_METHOD_GET_INPUT_DEVICES; },\n/* harmony export */   \"DAILY_METHOD_GET_LANG\": function() { return /* binding */ DAILY_METHOD_GET_LANG; },\n/* harmony export */   \"DAILY_METHOD_GET_MEETING_SESSION\": function() { return /* binding */ DAILY_METHOD_GET_MEETING_SESSION; },\n/* harmony export */   \"DAILY_METHOD_GET_NETWORK_TOPOLOGY\": function() { return /* binding */ DAILY_METHOD_GET_NETWORK_TOPOLOGY; },\n/* harmony export */   \"DAILY_METHOD_GET_SIDEBAR_VIEW\": function() { return /* binding */ DAILY_METHOD_GET_SIDEBAR_VIEW; },\n/* harmony export */   \"DAILY_METHOD_GET_SINGLE_PARTICIPANT_RECEIVE_SETTINGS\": function() { return /* binding */ DAILY_METHOD_GET_SINGLE_PARTICIPANT_RECEIVE_SETTINGS; },\n/* harmony export */   \"DAILY_METHOD_JOIN\": function() { return /* binding */ DAILY_METHOD_JOIN; },\n/* harmony export */   \"DAILY_METHOD_LEAVE\": function() { return /* binding */ DAILY_METHOD_LEAVE; },\n/* harmony export */   \"DAILY_METHOD_LOAD_CSS\": function() { return /* binding */ DAILY_METHOD_LOAD_CSS; },\n/* harmony export */   \"DAILY_METHOD_LOCAL_AUDIO\": function() { return /* binding */ DAILY_METHOD_LOCAL_AUDIO; },\n/* harmony export */   \"DAILY_METHOD_LOCAL_VIDEO\": function() { return /* binding */ DAILY_METHOD_LOCAL_VIDEO; },\n/* harmony export */   \"DAILY_METHOD_PREAUTH\": function() { return /* binding */ DAILY_METHOD_PREAUTH; },\n/* harmony export */   \"DAILY_METHOD_REGISTER_INPUT_HANDLER\": function() { return /* binding */ DAILY_METHOD_REGISTER_INPUT_HANDLER; },\n/* harmony export */   \"DAILY_METHOD_REQUEST_ACCESS\": function() { return /* binding */ DAILY_METHOD_REQUEST_ACCESS; },\n/* harmony export */   \"DAILY_METHOD_ROOM\": function() { return /* binding */ DAILY_METHOD_ROOM; },\n/* harmony export */   \"DAILY_METHOD_SET_ACTIVE_SPEAKER_MODE\": function() { return /* binding */ DAILY_METHOD_SET_ACTIVE_SPEAKER_MODE; },\n/* harmony export */   \"DAILY_METHOD_SET_BANDWIDTH\": function() { return /* binding */ DAILY_METHOD_SET_BANDWIDTH; },\n/* harmony export */   \"DAILY_METHOD_SET_CAMERA\": function() { return /* binding */ DAILY_METHOD_SET_CAMERA; },\n/* harmony export */   \"DAILY_METHOD_SET_CUSTOM_INTEGRATIONS\": function() { return /* binding */ DAILY_METHOD_SET_CUSTOM_INTEGRATIONS; },\n/* harmony export */   \"DAILY_METHOD_SET_ICE_CONFIG\": function() { return /* binding */ DAILY_METHOD_SET_ICE_CONFIG; },\n/* harmony export */   \"DAILY_METHOD_SET_INPUT_DEVICES\": function() { return /* binding */ DAILY_METHOD_SET_INPUT_DEVICES; },\n/* harmony export */   \"DAILY_METHOD_SET_LANG\": function() { return /* binding */ DAILY_METHOD_SET_LANG; },\n/* harmony export */   \"DAILY_METHOD_SET_NETWORK_TOPOLOGY\": function() { return /* binding */ DAILY_METHOD_SET_NETWORK_TOPOLOGY; },\n/* harmony export */   \"DAILY_METHOD_SET_OUTPUT_DEVICE\": function() { return /* binding */ DAILY_METHOD_SET_OUTPUT_DEVICE; },\n/* harmony export */   \"DAILY_METHOD_SET_PLAY_DING\": function() { return /* binding */ DAILY_METHOD_SET_PLAY_DING; },\n/* harmony export */   \"DAILY_METHOD_SET_PROXYURL\": function() { return /* binding */ DAILY_METHOD_SET_PROXYURL; },\n/* harmony export */   \"DAILY_METHOD_SET_SESSION_DATA\": function() { return /* binding */ DAILY_METHOD_SET_SESSION_DATA; },\n/* harmony export */   \"DAILY_METHOD_SET_SHOW_LOCAL_VIDEO\": function() { return /* binding */ DAILY_METHOD_SET_SHOW_LOCAL_VIDEO; },\n/* harmony export */   \"DAILY_METHOD_SET_SHOW_NAMES\": function() { return /* binding */ DAILY_METHOD_SET_SHOW_NAMES; },\n/* harmony export */   \"DAILY_METHOD_SET_SHOW_PARTICIPANTS_BAR\": function() { return /* binding */ DAILY_METHOD_SET_SHOW_PARTICIPANTS_BAR; },\n/* harmony export */   \"DAILY_METHOD_SET_SIDEBAR_VIEW\": function() { return /* binding */ DAILY_METHOD_SET_SIDEBAR_VIEW; },\n/* harmony export */   \"DAILY_METHOD_SET_SUBSCRIBE_TO_TRACKS_AUTOMATICALLY\": function() { return /* binding */ DAILY_METHOD_SET_SUBSCRIBE_TO_TRACKS_AUTOMATICALLY; },\n/* harmony export */   \"DAILY_METHOD_SET_THEME\": function() { return /* binding */ DAILY_METHOD_SET_THEME; },\n/* harmony export */   \"DAILY_METHOD_SET_USER_DATA\": function() { return /* binding */ DAILY_METHOD_SET_USER_DATA; },\n/* harmony export */   \"DAILY_METHOD_SET_USER_NAME\": function() { return /* binding */ DAILY_METHOD_SET_USER_NAME; },\n/* harmony export */   \"DAILY_METHOD_START_CAMERA\": function() { return /* binding */ DAILY_METHOD_START_CAMERA; },\n/* harmony export */   \"DAILY_METHOD_START_CUSTOM_INTEGRATIONS\": function() { return /* binding */ DAILY_METHOD_START_CUSTOM_INTEGRATIONS; },\n/* harmony export */   \"DAILY_METHOD_START_CUSTOM_TRACK\": function() { return /* binding */ DAILY_METHOD_START_CUSTOM_TRACK; },\n/* harmony export */   \"DAILY_METHOD_START_DIALOUT\": function() { return /* binding */ DAILY_METHOD_START_DIALOUT; },\n/* harmony export */   \"DAILY_METHOD_START_LIVE_STREAMING\": function() { return /* binding */ DAILY_METHOD_START_LIVE_STREAMING; },\n/* harmony export */   \"DAILY_METHOD_START_LOCAL_AUDIO_LEVEL_OBSERVER\": function() { return /* binding */ DAILY_METHOD_START_LOCAL_AUDIO_LEVEL_OBSERVER; },\n/* harmony export */   \"DAILY_METHOD_START_RECORDING\": function() { return /* binding */ DAILY_METHOD_START_RECORDING; },\n/* harmony export */   \"DAILY_METHOD_START_REMOTE_MEDIA_PLAYER\": function() { return /* binding */ DAILY_METHOD_START_REMOTE_MEDIA_PLAYER; },\n/* harmony export */   \"DAILY_METHOD_START_REMOTE_PARTICIPANTS_AUDIO_LEVEL_OBSERVER\": function() { return /* binding */ DAILY_METHOD_START_REMOTE_PARTICIPANTS_AUDIO_LEVEL_OBSERVER; },\n/* harmony export */   \"DAILY_METHOD_START_SCREENSHARE\": function() { return /* binding */ DAILY_METHOD_START_SCREENSHARE; },\n/* harmony export */   \"DAILY_METHOD_START_TRANSCRIPTION\": function() { return /* binding */ DAILY_METHOD_START_TRANSCRIPTION; },\n/* harmony export */   \"DAILY_METHOD_STOP_CUSTOM_INTEGRATIONS\": function() { return /* binding */ DAILY_METHOD_STOP_CUSTOM_INTEGRATIONS; },\n/* harmony export */   \"DAILY_METHOD_STOP_CUSTOM_TRACK\": function() { return /* binding */ DAILY_METHOD_STOP_CUSTOM_TRACK; },\n/* harmony export */   \"DAILY_METHOD_STOP_DIALOUT\": function() { return /* binding */ DAILY_METHOD_STOP_DIALOUT; },\n/* harmony export */   \"DAILY_METHOD_STOP_LIVE_STREAMING\": function() { return /* binding */ DAILY_METHOD_STOP_LIVE_STREAMING; },\n/* harmony export */   \"DAILY_METHOD_STOP_LOCAL_AUDIO_LEVEL_OBSERVER\": function() { return /* binding */ DAILY_METHOD_STOP_LOCAL_AUDIO_LEVEL_OBSERVER; },\n/* harmony export */   \"DAILY_METHOD_STOP_RECORDING\": function() { return /* binding */ DAILY_METHOD_STOP_RECORDING; },\n/* harmony export */   \"DAILY_METHOD_STOP_REMOTE_MEDIA_PLAYER\": function() { return /* binding */ DAILY_METHOD_STOP_REMOTE_MEDIA_PLAYER; },\n/* harmony export */   \"DAILY_METHOD_STOP_REMOTE_PARTICIPANTS_AUDIO_LEVEL_OBSERVER\": function() { return /* binding */ DAILY_METHOD_STOP_REMOTE_PARTICIPANTS_AUDIO_LEVEL_OBSERVER; },\n/* harmony export */   \"DAILY_METHOD_STOP_SCREENSHARE\": function() { return /* binding */ DAILY_METHOD_STOP_SCREENSHARE; },\n/* harmony export */   \"DAILY_METHOD_STOP_TEST_CALL_QUALITY\": function() { return /* binding */ DAILY_METHOD_STOP_TEST_CALL_QUALITY; },\n/* harmony export */   \"DAILY_METHOD_STOP_TEST_P2P_CALL_QUALITY\": function() { return /* binding */ DAILY_METHOD_STOP_TEST_P2P_CALL_QUALITY; },\n/* harmony export */   \"DAILY_METHOD_STOP_TRANSCRIPTION\": function() { return /* binding */ DAILY_METHOD_STOP_TRANSCRIPTION; },\n/* harmony export */   \"DAILY_METHOD_TEST_CALL_QUALITY\": function() { return /* binding */ DAILY_METHOD_TEST_CALL_QUALITY; },\n/* harmony export */   \"DAILY_METHOD_TEST_NETWORK_CONNECTIVITY\": function() { return /* binding */ DAILY_METHOD_TEST_NETWORK_CONNECTIVITY; },\n/* harmony export */   \"DAILY_METHOD_TEST_P2P_CALL_QUALITY\": function() { return /* binding */ DAILY_METHOD_TEST_P2P_CALL_QUALITY; },\n/* harmony export */   \"DAILY_METHOD_TEST_WEBSOCKET_CONNECTIVITY\": function() { return /* binding */ DAILY_METHOD_TEST_WEBSOCKET_CONNECTIVITY; },\n/* harmony export */   \"DAILY_METHOD_TRANSMIT_LOG\": function() { return /* binding */ DAILY_METHOD_TRANSMIT_LOG; },\n/* harmony export */   \"DAILY_METHOD_UPDATE_CUSTOM_TRAY_BUTTONS\": function() { return /* binding */ DAILY_METHOD_UPDATE_CUSTOM_TRAY_BUTTONS; },\n/* harmony export */   \"DAILY_METHOD_UPDATE_INPUT_SETTINGS\": function() { return /* binding */ DAILY_METHOD_UPDATE_INPUT_SETTINGS; },\n/* harmony export */   \"DAILY_METHOD_UPDATE_LIVE_STREAMING\": function() { return /* binding */ DAILY_METHOD_UPDATE_LIVE_STREAMING; },\n/* harmony export */   \"DAILY_METHOD_UPDATE_LIVE_STREAMING_ENDPOINTS\": function() { return /* binding */ DAILY_METHOD_UPDATE_LIVE_STREAMING_ENDPOINTS; },\n/* harmony export */   \"DAILY_METHOD_UPDATE_PARTICIPANT\": function() { return /* binding */ DAILY_METHOD_UPDATE_PARTICIPANT; },\n/* harmony export */   \"DAILY_METHOD_UPDATE_PARTICIPANTS\": function() { return /* binding */ DAILY_METHOD_UPDATE_PARTICIPANTS; },\n/* harmony export */   \"DAILY_METHOD_UPDATE_RECEIVE_SETTINGS\": function() { return /* binding */ DAILY_METHOD_UPDATE_RECEIVE_SETTINGS; },\n/* harmony export */   \"DAILY_METHOD_UPDATE_RECORDING\": function() { return /* binding */ DAILY_METHOD_UPDATE_RECORDING; },\n/* harmony export */   \"DAILY_METHOD_UPDATE_REMOTE_MEDIA_PLAYER\": function() { return /* binding */ DAILY_METHOD_UPDATE_REMOTE_MEDIA_PLAYER; },\n/* harmony export */   \"DAILY_METHOD_UPDATE_SEND_SETTINGS\": function() { return /* binding */ DAILY_METHOD_UPDATE_SEND_SETTINGS; },\n/* harmony export */   \"DAILY_METHOD_UPDATE_WAITING_PARTICIPANT\": function() { return /* binding */ DAILY_METHOD_UPDATE_WAITING_PARTICIPANT; },\n/* harmony export */   \"DAILY_METHOD_UPDATE_WAITING_PARTICIPANTS\": function() { return /* binding */ DAILY_METHOD_UPDATE_WAITING_PARTICIPANTS; },\n/* harmony export */   \"DAILY_PARTICIPANT_TYPE\": function() { return /* binding */ DAILY_PARTICIPANT_TYPE; },\n/* harmony export */   \"DAILY_PRESELECTED_BG_IMAGE_URLS_LENGTH\": function() { return /* binding */ DAILY_PRESELECTED_BG_IMAGE_URLS_LENGTH; },\n/* harmony export */   \"DAILY_RECEIVE_SETTINGS_ALL_PARTICIPANTS_KEY\": function() { return /* binding */ DAILY_RECEIVE_SETTINGS_ALL_PARTICIPANTS_KEY; },\n/* harmony export */   \"DAILY_RECEIVE_SETTINGS_BASE_KEY\": function() { return /* binding */ DAILY_RECEIVE_SETTINGS_BASE_KEY; },\n/* harmony export */   \"DAILY_REMOTE_MEDIA_PLAYER_ERROR_TYPE\": function() { return /* binding */ DAILY_REMOTE_MEDIA_PLAYER_ERROR_TYPE; },\n/* harmony export */   \"DAILY_REQUEST_FULLSCREEN\": function() { return /* binding */ DAILY_REQUEST_FULLSCREEN; },\n/* harmony export */   \"DAILY_SCREEN_SHARE_ERROR_TYPE\": function() { return /* binding */ DAILY_SCREEN_SHARE_ERROR_TYPE; },\n/* harmony export */   \"DAILY_STATE_ERROR\": function() { return /* binding */ DAILY_STATE_ERROR; },\n/* harmony export */   \"DAILY_STATE_JOINED\": function() { return /* binding */ DAILY_STATE_JOINED; },\n/* harmony export */   \"DAILY_STATE_JOINING\": function() { return /* binding */ DAILY_STATE_JOINING; },\n/* harmony export */   \"DAILY_STATE_LEFT\": function() { return /* binding */ DAILY_STATE_LEFT; },\n/* harmony export */   \"DAILY_STATE_LOADED\": function() { return /* binding */ DAILY_STATE_LOADED; },\n/* harmony export */   \"DAILY_STATE_LOADING\": function() { return /* binding */ DAILY_STATE_LOADING; },\n/* harmony export */   \"DAILY_STATE_NEW\": function() { return /* binding */ DAILY_STATE_NEW; },\n/* harmony export */   \"DAILY_SUPPORTED_BG_IMG_TYPES\": function() { return /* binding */ DAILY_SUPPORTED_BG_IMG_TYPES; },\n/* harmony export */   \"DAILY_TRACK_STATE_BLOCKED\": function() { return /* binding */ DAILY_TRACK_STATE_BLOCKED; },\n/* harmony export */   \"DAILY_TRACK_STATE_INTERRUPTED\": function() { return /* binding */ DAILY_TRACK_STATE_INTERRUPTED; },\n/* harmony export */   \"DAILY_TRACK_STATE_LOADING\": function() { return /* binding */ DAILY_TRACK_STATE_LOADING; },\n/* harmony export */   \"DAILY_TRACK_STATE_OFF\": function() { return /* binding */ DAILY_TRACK_STATE_OFF; },\n/* harmony export */   \"DAILY_TRACK_STATE_PLAYABLE\": function() { return /* binding */ DAILY_TRACK_STATE_PLAYABLE; },\n/* harmony export */   \"DAILY_TRACK_STATE_SENDABLE\": function() { return /* binding */ DAILY_TRACK_STATE_SENDABLE; },\n/* harmony export */   \"DAILY_VIDEO_PROCESSOR_ERROR_TYPE\": function() { return /* binding */ DAILY_VIDEO_PROCESSOR_ERROR_TYPE; },\n/* harmony export */   \"DEFAULT_SCREEN_VIDEO_SEND_SETTINGS_PRESET_KEY\": function() { return /* binding */ DEFAULT_SCREEN_VIDEO_SEND_SETTINGS_PRESET_KEY; },\n/* harmony export */   \"DEFAULT_VIDEO_SEND_SETTINGS_PRESET_KEY\": function() { return /* binding */ DEFAULT_VIDEO_SEND_SETTINGS_PRESET_KEY; },\n/* harmony export */   \"DETAIL_OPTIMIZED_SCREEN_VIDEO_SEND_SETTINGS_PRESET_KEY\": function() { return /* binding */ DETAIL_OPTIMIZED_SCREEN_VIDEO_SEND_SETTINGS_PRESET_KEY; },\n/* harmony export */   \"HIGH_BANDWIDTH_VIDEO_SEND_SETTINGS_PRESET_KEY\": function() { return /* binding */ HIGH_BANDWIDTH_VIDEO_SEND_SETTINGS_PRESET_KEY; },\n/* harmony export */   \"IFRAME_MESSAGE_MARKER\": function() { return /* binding */ IFRAME_MESSAGE_MARKER; },\n/* harmony export */   \"LOW_BANDWIDTH_VIDEO_SEND_SETTINGS_PRESET_KEY\": function() { return /* binding */ LOW_BANDWIDTH_VIDEO_SEND_SETTINGS_PRESET_KEY; },\n/* harmony export */   \"MAX_APP_MSG_SIZE\": function() { return /* binding */ MAX_APP_MSG_SIZE; },\n/* harmony export */   \"MAX_SESSION_DATA_SIZE\": function() { return /* binding */ MAX_SESSION_DATA_SIZE; },\n/* harmony export */   \"MAX_USER_DATA_SIZE\": function() { return /* binding */ MAX_USER_DATA_SIZE; },\n/* harmony export */   \"MEDIUM_BANDWIDTH_VIDEO_SEND_SETTINGS_PRESET_KEY\": function() { return /* binding */ MEDIUM_BANDWIDTH_VIDEO_SEND_SETTINGS_PRESET_KEY; },\n/* harmony export */   \"MOTION_AND_DETAIL_BALANCED_SCREEN_VIDEO_SEND_SETTINGS_PRESET_KEY\": function() { return /* binding */ MOTION_AND_DETAIL_BALANCED_SCREEN_VIDEO_SEND_SETTINGS_PRESET_KEY; },\n/* harmony export */   \"MOTION_OPTIMIZED_SCREEN_VIDEO_SEND_SETTINGS_PRESET_KEY\": function() { return /* binding */ MOTION_OPTIMIZED_SCREEN_VIDEO_SEND_SETTINGS_PRESET_KEY; },\n/* harmony export */   \"UPDATE_LIVE_STREAMING_ENDPOINTS_OP\": function() { return /* binding */ UPDATE_LIVE_STREAMING_ENDPOINTS_OP; }\n/* harmony export */ });\n//\n// external - exported from module.js\n//\n\n// meeting states\n\nvar DAILY_STATE_NEW = 'new';\nvar DAILY_STATE_LOADING = 'loading';\nvar DAILY_STATE_LOADED = 'loaded';\nvar DAILY_STATE_JOINING = 'joining-meeting';\nvar DAILY_STATE_JOINED = 'joined-meeting';\nvar DAILY_STATE_LEFT = 'left-meeting';\nvar DAILY_STATE_ERROR = 'error';\n\n// track states\n\nvar DAILY_TRACK_STATE_BLOCKED = 'blocked';\nvar DAILY_TRACK_STATE_OFF = 'off';\nvar DAILY_TRACK_STATE_SENDABLE = 'sendable';\nvar DAILY_TRACK_STATE_LOADING = 'loading';\nvar DAILY_TRACK_STATE_INTERRUPTED = 'interrupted';\nvar DAILY_TRACK_STATE_PLAYABLE = 'playable';\n\n// meeting access\n\nvar DAILY_ACCESS_UNKNOWN = 'unknown';\nvar DAILY_ACCESS_LEVEL_FULL = 'full';\nvar DAILY_ACCESS_LEVEL_LOBBY = 'lobby';\nvar DAILY_ACCESS_LEVEL_NONE = 'none';\n\n// receive settings\n\nvar DAILY_RECEIVE_SETTINGS_BASE_KEY = 'base';\nvar DAILY_RECEIVE_SETTINGS_ALL_PARTICIPANTS_KEY = '*';\n\n// send settings\nvar HIGH_BANDWIDTH_VIDEO_SEND_SETTINGS_PRESET_KEY = 'quality-optimized';\nvar LOW_BANDWIDTH_VIDEO_SEND_SETTINGS_PRESET_KEY = 'bandwidth-optimized';\nvar MEDIUM_BANDWIDTH_VIDEO_SEND_SETTINGS_PRESET_KEY = 'bandwidth-and-quality-balanced';\nvar DEFAULT_VIDEO_SEND_SETTINGS_PRESET_KEY = 'default-video';\nvar DEFAULT_SCREEN_VIDEO_SEND_SETTINGS_PRESET_KEY = 'default-screen-video';\nvar DETAIL_OPTIMIZED_SCREEN_VIDEO_SEND_SETTINGS_PRESET_KEY = 'detail-optimized';\nvar MOTION_OPTIMIZED_SCREEN_VIDEO_SEND_SETTINGS_PRESET_KEY = 'motion-optimized';\nvar MOTION_AND_DETAIL_BALANCED_SCREEN_VIDEO_SEND_SETTINGS_PRESET_KEY = 'motion-and-detail-balanced';\n\n// error types\n\nvar DAILY_FATAL_ERROR_EJECTED = 'ejected';\nvar DAILY_FATAL_ERROR_NBF_ROOM = 'nbf-room';\nvar DAILY_FATAL_ERROR_NBF_TOKEN = 'nbf-token';\nvar DAILY_FATAL_ERROR_EXP_ROOM = 'exp-room';\nvar DAILY_FATAL_ERROR_EXP_TOKEN = 'exp-token';\nvar DAILY_FATAL_ERROR_NO_ROOM = 'no-room';\nvar DAILY_FATAL_ERROR_MEETING_FULL = 'meeting-full';\nvar DAILY_FATAL_ERROR_EOL = 'end-of-life';\nvar DAILY_FATAL_ERROR_NOT_ALLOWED = 'not-allowed';\nvar DAILY_FATAL_ERROR_CONNECTION = 'connection-error';\nvar DAILY_CAMERA_ERROR_CAM_IN_USE = 'cam-in-use';\nvar DAILY_CAMERA_ERROR_MIC_IN_USE = 'mic-in-use';\nvar DAILY_CAMERA_ERROR_CAM_AND_MIC_IN_USE = 'cam-mic-in-use';\nvar DAILY_CAMERA_ERROR_PERMISSIONS = 'permissions';\nvar DAILY_CAMERA_ERROR_UNDEF_MEDIADEVICES = 'undefined-mediadevices';\nvar DAILY_CAMERA_ERROR_NOT_FOUND = 'not-found';\nvar DAILY_CAMERA_ERROR_CONSTRAINTS = 'constraints';\nvar DAILY_CAMERA_ERROR_UNKNOWN = 'unknown';\n\n// events\n\nvar DAILY_EVENT_IFRAME_READY_FOR_LAUNCH_CONFIG = 'iframe-ready-for-launch-config';\nvar DAILY_EVENT_IFRAME_LAUNCH_CONFIG = 'iframe-launch-config';\nvar DAILY_EVENT_THEME_UPDATED = 'theme-updated';\nvar DAILY_EVENT_LOADING = 'loading';\nvar DAILY_EVENT_LOAD_ATTEMPT_FAILED = 'load-attempt-failed';\nvar DAILY_EVENT_LOADED = 'loaded';\nvar DAILY_EVENT_DAILY_MAIN_EXECUTED = 'daily-main-executed';\nvar DAILY_EVENT_STARTED_CAMERA = 'started-camera';\nvar DAILY_EVENT_CAMERA_ERROR = 'camera-error';\nvar DAILY_EVENT_JOINING_MEETING = 'joining-meeting';\nvar DAILY_EVENT_JOINED_MEETING = 'joined-meeting';\nvar DAILY_EVENT_LEFT_MEETING = 'left-meeting';\nvar DAILY_EVENT_AVAILABLE_DEVICES_UPDATED = 'available-devices-updated';\nvar DAILY_EVENT_SELECTED_DEVICES_UPDATED = 'selected-devices-updated';\nvar DAILY_EVENT_PARTICIPANT_JOINED = 'participant-joined';\nvar DAILY_EVENT_PARTICIPANT_UPDATED = 'participant-updated';\nvar DAILY_EVENT_PARTICIPANT_LEFT = 'participant-left';\nvar DAILY_EVENT_PARTICIPANT_COUNTS_UPDATED = 'participant-counts-updated';\nvar DAILY_EVENT_ACCESS_STATE_UPDATED = 'access-state-updated';\nvar DAILY_EVENT_MEETING_SESSION_SUMMARY_UPDATED = 'meeting-session-summary-updated';\nvar DAILY_EVENT_MEETING_SESSION_STATE_UPDATED = 'meeting-session-state-updated';\nvar DAILY_EVENT_MEETING_SESSION_DATA_ERROR = 'meeting-session-data-error';\nvar DAILY_EVENT_WAITING_PARTICIPANT_ADDED = 'waiting-participant-added';\nvar DAILY_EVENT_WAITING_PARTICIPANT_UPDATED = 'waiting-participant-updated';\nvar DAILY_EVENT_WAITING_PARTICIPANT_REMOVED = 'waiting-participant-removed';\nvar DAILY_EVENT_TRACK_STARTED = 'track-started';\nvar DAILY_EVENT_TRACK_STOPPED = 'track-stopped';\nvar DAILY_EVENT_TRANSCRIPTION_STARTED = 'transcription-started';\nvar DAILY_EVENT_TRANSCRIPTION_STOPPED = 'transcription-stopped';\nvar DAILY_EVENT_TRANSCRIPTION_ERROR = 'transcription-error';\nvar DAILY_EVENT_RECORDING_STARTED = 'recording-started';\nvar DAILY_EVENT_RECORDING_STOPPED = 'recording-stopped';\nvar DAILY_EVENT_RECORDING_STATS = 'recording-stats';\nvar DAILY_EVENT_RECORDING_ERROR = 'recording-error';\nvar DAILY_EVENT_RECORDING_UPLOAD_COMPLETED = 'recording-upload-completed';\nvar DAILY_EVENT_RECORDING_DATA = 'recording-data';\nvar DAILY_EVENT_APP_MSG = 'app-message';\nvar DAILY_EVENT_TRANSCRIPTION_MSG = 'transcription-message';\nvar DAILY_EVENT_REMOTE_MEDIA_PLAYER_STARTED = 'remote-media-player-started';\nvar DAILY_EVENT_REMOTE_MEDIA_PLAYER_UPDATED = 'remote-media-player-updated';\nvar DAILY_EVENT_REMOTE_MEDIA_PLAYER_STOPPED = 'remote-media-player-stopped';\nvar DAILY_REMOTE_MEDIA_PLAYER_ERROR_TYPE = 'remote-media-player-error';\nvar DAILY_EVENT_LOCAL_SCREEN_SHARE_STARTED = 'local-screen-share-started';\nvar DAILY_EVENT_LOCAL_SCREEN_SHARE_STOPPED = 'local-screen-share-stopped';\nvar DAILY_EVENT_LOCAL_SCREEN_SHARE_CANCELED = 'local-screen-share-canceled';\nvar DAILY_EVENT_ACTIVE_SPEAKER_CHANGE = 'active-speaker-change';\nvar DAILY_EVENT_ACTIVE_SPEAKER_MODE_CHANGE = 'active-speaker-mode-change';\nvar DAILY_EVENT_NETWORK_QUALITY_CHANGE = 'network-quality-change';\nvar DAILY_EVENT_NETWORK_CONNECTION = 'network-connection';\nvar DAILY_EVENT_CPU_LOAD_CHANGE = 'cpu-load-change';\nvar DAILY_EVENT_FULLSCREEN = 'fullscreen';\nvar DAILY_EVENT_EXIT_FULLSCREEN = 'exited-fullscreen';\nvar DAILY_EVENT_LIVE_STREAMING_STARTED = 'live-streaming-started';\nvar DAILY_EVENT_LIVE_STREAMING_UPDATED = 'live-streaming-updated';\nvar DAILY_EVENT_LIVE_STREAMING_STOPPED = 'live-streaming-stopped';\nvar DAILY_EVENT_LIVE_STREAMING_ERROR = 'live-streaming-error';\nvar DAILY_LIVE_STREAMING_WARNING = 'live-streaming-warning';\nvar DAILY_EVENT_LANG_UPDATED = 'lang-updated';\nvar DAILY_EVENT_SHOW_LOCAL_VIDEO_CHANGED = 'show-local-video-changed';\nvar DAILY_EVENT_RECEIVE_SETTINGS_UPDATED = 'receive-settings-updated';\nvar DAILY_EVENT_INPUT_SETTINGS_UPDATED = 'input-settings-updated';\nvar DAILY_EVENT_SEND_SETTINGS_UPDATED = 'send-settings-updated';\nvar DAILY_EVENT_LOCAL_AUDIO_LEVEL = 'local-audio-level';\nvar DAILY_EVENT_REMOTE_PARTICIPANTS_AUDIO_LEVEL = 'remote-participants-audio-level';\nvar DAILY_EVENT_NONFATAL_ERROR = 'nonfatal-error';\nvar DAILY_INPUT_SETTINGS_ERROR_TYPE = 'input-settings-error';\nvar DAILY_SCREEN_SHARE_ERROR_TYPE = 'screen-share-error';\nvar DAILY_VIDEO_PROCESSOR_ERROR_TYPE = 'video-processor-error';\nvar DAILY_AUDIO_PROCESSOR_ERROR_TYPE = 'audio-processor-error';\nvar DAILY_LOCAL_AUDIO_LEVEL_OBSERVER_ERROR_TYPE = 'local-audio-level-observer-error';\nvar DAILY_EVENT_ERROR = 'error';\nvar DAILY_EVENT_CUSTOM_BUTTON_CLICK = 'custom-button-click';\nvar DAILY_EVENT_SIDEBAR_VIEW_CHANGED = 'sidebar-view-changed';\n\n//\n// internal\n//\n\nvar MAX_APP_MSG_SIZE = 1024 * 4;\nvar MAX_SESSION_DATA_SIZE = 1024 * 4 * 25;\nvar MAX_USER_DATA_SIZE = 1024 * 4;\nvar IFRAME_MESSAGE_MARKER = 'iframe-call-message';\nvar DAILY_METHOD_GET_SIDEBAR_VIEW = 'get-sidebar-view';\nvar DAILY_METHOD_SET_SIDEBAR_VIEW = 'set-sidebar-view';\nvar DAILY_METHOD_SET_CUSTOM_INTEGRATIONS = 'set-custom-integrations';\nvar DAILY_METHOD_START_CUSTOM_INTEGRATIONS = 'start-custom-integrations';\nvar DAILY_METHOD_STOP_CUSTOM_INTEGRATIONS = 'stop-custom-integrations';\nvar DAILY_METHOD_UPDATE_CUSTOM_TRAY_BUTTONS = 'update-custom-tray-buttons';\nvar DAILY_METHOD_SET_THEME = 'set-theme';\nvar DAILY_METHOD_START_CAMERA = 'start-camera';\nvar DAILY_METHOD_SET_INPUT_DEVICES = 'set-input-devices';\nvar DAILY_METHOD_SET_OUTPUT_DEVICE = 'set-output-device';\nvar DAILY_METHOD_GET_INPUT_DEVICES = 'get-input-devices';\nvar DAILY_METHOD_JOIN = 'join-meeting';\nvar DAILY_METHOD_LEAVE = 'leave-meeting';\nvar DAILY_METHOD_UPDATE_PARTICIPANT = 'update-participant';\nvar DAILY_METHOD_UPDATE_PARTICIPANTS = 'update-participants';\nvar DAILY_METHOD_LOCAL_AUDIO = 'local-audio';\nvar DAILY_METHOD_LOCAL_VIDEO = 'local-video';\nvar DAILY_METHOD_START_SCREENSHARE = 'local-screen-start';\nvar DAILY_METHOD_STOP_SCREENSHARE = 'local-screen-stop';\nvar DAILY_METHOD_START_RECORDING = 'local-recording-start';\nvar DAILY_METHOD_UPDATE_RECORDING = 'daily-method-update-recording';\nvar DAILY_METHOD_STOP_RECORDING = 'local-recording-stop';\nvar DAILY_METHOD_LOAD_CSS = 'load-css';\nvar DAILY_METHOD_SET_BANDWIDTH = 'set-bandwidth';\nvar DAILY_METHOD_GET_CALC_STATS = 'get-calc-stats';\nvar DAILY_METHOD_GET_CPU_LOAD_STATS = 'get-cpu-load-stats';\nvar DAILY_METHOD_ENUMERATE_DEVICES = 'enumerate-devices';\nvar DAILY_METHOD_CYCLE_CAMERA = 'cycle-camera';\nvar DAILY_METHOD_SET_CAMERA = 'set-camera';\nvar DAILY_METHOD_START_CUSTOM_TRACK = 'start-custom-track';\nvar DAILY_METHOD_STOP_CUSTOM_TRACK = 'stop-custom-track';\nvar DAILY_METHOD_START_LOCAL_AUDIO_LEVEL_OBSERVER = 'start-local-audio-level-observer';\nvar DAILY_METHOD_STOP_LOCAL_AUDIO_LEVEL_OBSERVER = 'stop-local-audio-level-observer';\nvar DAILY_METHOD_START_REMOTE_PARTICIPANTS_AUDIO_LEVEL_OBSERVER = 'start-remote-participants-audio-level-observer';\nvar DAILY_METHOD_STOP_REMOTE_PARTICIPANTS_AUDIO_LEVEL_OBSERVER = 'stop-remote-participants-audio-level-observer';\nvar DAILY_METHOD_CYCLE_MIC = 'cycle-mic';\nvar DAILY_METHOD_GET_CAMERA_FACING_MODE = 'get-camera-facing-mode';\nvar DAILY_METHOD_APP_MSG = 'app-msg';\nvar DAILY_METHOD_ADD_FAKE_PARTICIPANT = 'add-fake-participant';\nvar DAILY_METHOD_SET_SHOW_NAMES = 'set-show-names';\nvar DAILY_METHOD_SET_SHOW_LOCAL_VIDEO = 'set-show-local-video';\nvar DAILY_METHOD_SET_SHOW_PARTICIPANTS_BAR = 'set-show-participants-bar';\nvar DAILY_METHOD_SET_ACTIVE_SPEAKER_MODE = 'set-active-speaker-mode';\nvar DAILY_METHOD_REGISTER_INPUT_HANDLER = 'register-input-handler';\nvar DAILY_METHOD_GET_LANG = 'get-daily-lang';\nvar DAILY_METHOD_SET_LANG = 'set-daily-lang';\nvar DAILY_METHOD_SET_PROXYURL = 'set-proxy-url';\nvar DAILY_METHOD_SET_ICE_CONFIG = 'set-ice-config';\nvar DAILY_METHOD_GET_MEETING_SESSION = 'get-meeting-session';\nvar DAILY_METHOD_SET_SESSION_DATA = 'set-session-data';\nvar DAILY_METHOD_SET_USER_NAME = 'set-user-name';\nvar DAILY_METHOD_SET_USER_DATA = 'set-user-data';\nvar DAILY_METHOD_ROOM = 'lib-room-info';\nvar DAILY_METHOD_GET_NETWORK_TOPOLOGY = 'get-network-topology';\nvar DAILY_METHOD_SET_NETWORK_TOPOLOGY = 'set-network-topology';\nvar DAILY_METHOD_SET_PLAY_DING = 'daily-method-set-play-ding';\nvar DAILY_METHOD_SET_SUBSCRIBE_TO_TRACKS_AUTOMATICALLY = 'daily-method-subscribe-to-tracks-automatically';\nvar DAILY_METHOD_START_LIVE_STREAMING = 'daily-method-start-live-streaming';\nvar DAILY_METHOD_UPDATE_LIVE_STREAMING = 'daily-method-update-live-streaming';\nvar DAILY_METHOD_UPDATE_LIVE_STREAMING_ENDPOINTS = 'daily-method-update-live-streaming-endpoints';\nvar DAILY_METHOD_STOP_LIVE_STREAMING = 'daily-method-stop-live-streaming';\nvar DAILY_METHOD_START_REMOTE_MEDIA_PLAYER = 'daily-method-start-remote-media-player';\nvar DAILY_METHOD_STOP_REMOTE_MEDIA_PLAYER = 'daily-method-stop-remote-media-player';\nvar DAILY_METHOD_UPDATE_REMOTE_MEDIA_PLAYER = 'daily-method-update-remote-media-player';\nvar DAILY_METHOD_START_TRANSCRIPTION = 'daily-method-start-transcription';\nvar DAILY_METHOD_STOP_TRANSCRIPTION = 'daily-method-stop-transcription';\nvar DAILY_METHOD_PREAUTH = 'daily-method-preauth';\nvar DAILY_METHOD_REQUEST_ACCESS = 'daily-method-request-access';\nvar DAILY_METHOD_UPDATE_WAITING_PARTICIPANT = 'daily-method-update-waiting-participant';\nvar DAILY_METHOD_UPDATE_WAITING_PARTICIPANTS = 'daily-method-update-waiting-participants';\nvar DAILY_METHOD_GET_SINGLE_PARTICIPANT_RECEIVE_SETTINGS = 'get-single-participant-receive-settings';\nvar DAILY_METHOD_UPDATE_RECEIVE_SETTINGS = 'update-receive-settings';\nvar DAILY_METHOD_UPDATE_INPUT_SETTINGS = 'update-input-settings';\nvar DAILY_METHOD_UPDATE_SEND_SETTINGS = 'update-send-settings';\nvar DAILY_METHOD_TRANSMIT_LOG = 'transmit-log';\nvar DAILY_CUSTOM_TRACK = 'daily-custom-track';\nvar DAILY_REQUEST_FULLSCREEN = 'request-fullscreen';\nvar DAILY_EXIT_FULLSCREEN = 'request-exit-fullscreen';\nvar DAILY_METHOD_TEST_WEBSOCKET_CONNECTIVITY = 'test-websocket-connectivity';\nvar DAILY_METHOD_ABORT_TEST_WEBSOCKET_CONNECTIVITY = 'abort-test-websocket-connectivity';\nvar DAILY_METHOD_TEST_NETWORK_CONNECTIVITY = 'test-network-connectivity';\nvar DAILY_METHOD_ABORT_TEST_NETWORK_CONNECTIVITY = 'abort-test-network-connectivity';\nvar DAILY_METHOD_TEST_CALL_QUALITY = 'test-call-quality';\nvar DAILY_METHOD_STOP_TEST_CALL_QUALITY = 'stop-test-call-quality';\nvar DAILY_METHOD_TEST_P2P_CALL_QUALITY = 'test-p2p-call-quality';\nvar DAILY_METHOD_STOP_TEST_P2P_CALL_QUALITY = 'stop-test-p2p-call-quality';\nvar DAILY_JS_NETWORK_THRESHOLDS = {\n  VERY_LOW: 'very-low',\n  LOW: 'low',\n  GOOD: 'good'\n};\n\n// video processor settings enum\nvar DAILY_JS_VIDEO_PROCESSOR_TYPES = {\n  NONE: 'none',\n  BGBLUR: 'background-blur',\n  BGIMAGE: 'background-image'\n  // CUSTOM: 'custom',\n};\n\nvar DAILY_JS_AUDIO_PROCESSOR_TYPES = {\n  NONE: 'none',\n  NOISE_CANCELLATION: 'noise-cancellation'\n};\nvar DAILY_JS_REMOTE_MEDIA_PLAYER_SETTING = {\n  PLAY: 'play',\n  PAUSE: 'pause'\n};\nvar DAILY_JS_REMOTE_MEDIA_PLAYER_STATE = {\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  BUFFERING: 'buffering',\n  STOPPED: 'stopped'\n};\nvar DAILY_PARTICIPANT_TYPE = {\n  REMOTE_MEDIA_PLAYER: 'remote-media-player'\n};\nvar DAILY_PRESELECTED_BG_IMAGE_URLS_LENGTH = 10;\nvar DAILY_SUPPORTED_BG_IMG_TYPES = ['jpg', 'png', 'jpeg'];\nvar UPDATE_LIVE_STREAMING_ENDPOINTS_OP = {\n  ADD_ENDPOINTS: 'add-endpoints',\n  REMOVE_ENDPOINTS: 'remove-endpoints'\n};\nvar DAILY_METHOD_START_DIALOUT = 'dialout-start';\nvar DAILY_METHOD_STOP_DIALOUT = 'dialout-stop';\nvar DAILY_EVENT_DIALIN_CONNECTED = 'dialin-connected';\nvar DAILY_EVENT_DIALIN_ERROR = 'dialin-error';\nvar DAILY_EVENT_DIALIN_STOPPED = 'dialin-stopped';\nvar DAILY_EVENT_DIALIN_WARNING = 'dialin-warning';\nvar DAILY_EVENT_DIALOUT_CONNECTED = 'dialout-connected';\nvar DAILY_EVENT_DIALOUT_ERROR = 'dialout-error';\nvar DAILY_EVENT_DIALOUT_STOPPED = 'dialout-stopped';\nvar DAILY_EVENT_DIALOUT_WARNING = 'dialout-warning';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/shared-with-pluot-core/CommonIncludes.js\n");

/***/ }),

/***/ "./src/shared-with-pluot-core/DeviceChange.js":
/*!****************************************************!*\
  !*** ./src/shared-with-pluot-core/DeviceChange.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addDeviceChangeListener\": function() { return /* binding */ addDeviceChangeListener; },\n/* harmony export */   \"removeDeviceChangeListener\": function() { return /* binding */ removeDeviceChangeListener; }\n/* harmony export */ });\n/* harmony import */ var _Environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Environment */ \"./src/shared-with-pluot-core/Environment.js\");\n/* harmony import */ var _DeviceChange_EventBased__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DeviceChange_EventBased */ \"./src/shared-with-pluot-core/DeviceChange_EventBased.js\");\n/* harmony import */ var _DeviceChange_PollBased__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DeviceChange_PollBased */ \"./src/shared-with-pluot-core/DeviceChange_PollBased.js\");\n\n\n\nfunction addDeviceChangeListener(deviceChangeListener) {\n  _supportsEventBasedDeviceChangeDetection() ? _DeviceChange_EventBased__WEBPACK_IMPORTED_MODULE_1__.addDeviceChangeListener(deviceChangeListener) : _DeviceChange_PollBased__WEBPACK_IMPORTED_MODULE_2__.addDeviceChangeListener(deviceChangeListener);\n}\nfunction removeDeviceChangeListener(deviceChangeListener) {\n  _supportsEventBasedDeviceChangeDetection() ? _DeviceChange_EventBased__WEBPACK_IMPORTED_MODULE_1__.removeDeviceChangeListener(deviceChangeListener) : _DeviceChange_PollBased__WEBPACK_IMPORTED_MODULE_2__.removeDeviceChangeListener(deviceChangeListener);\n}\n\n// Desktop web, iOS web, and React Native support the 'devicechange' event.\n// Android Chrome/Samsung Internet doesn't.\nfunction _supportsEventBasedDeviceChangeDetection() {\n  return (0,_Environment__WEBPACK_IMPORTED_MODULE_0__.isReactNative)() || typeof navigator.mediaDevices.ondevicechange !== 'undefined';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hhcmVkLXdpdGgtcGx1b3QtY29yZS9EZXZpY2VDaGFuZ2UuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBOEM7QUFDVTtBQUNGO0FBRS9DLFNBQVNHLHVCQUF1QkEsQ0FBQ0Msb0JBQW9CLEVBQUU7RUFDNURDLHdDQUF3QyxDQUFDLENBQUMsR0FDdENKLDZFQUFrQyxDQUFDRyxvQkFBb0IsQ0FBQyxHQUN4REYsNEVBQWlDLENBQUNFLG9CQUFvQixDQUFDO0FBQzdEO0FBRU8sU0FBU0UsMEJBQTBCQSxDQUFDRixvQkFBb0IsRUFBRTtFQUMvREMsd0NBQXdDLENBQUMsQ0FBQyxHQUN0Q0osZ0ZBQXFDLENBQUNHLG9CQUFvQixDQUFDLEdBQzNERiwrRUFBb0MsQ0FBQ0Usb0JBQW9CLENBQUM7QUFDaEU7O0FBRUE7QUFDQTtBQUNBLFNBQVNDLHdDQUF3Q0EsQ0FBQSxFQUFHO0VBQ2xELE9BQ0VMLDJEQUFhLENBQUMsQ0FBQyxJQUNmLE9BQU9PLFNBQVMsQ0FBQ0MsWUFBWSxDQUFDQyxjQUFjLEtBQUssV0FBVztBQUVoRSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vc3JjL3NoYXJlZC13aXRoLXBsdW90LWNvcmUvRGV2aWNlQ2hhbmdlLmpzPzY0YjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNSZWFjdE5hdGl2ZSB9IGZyb20gJy4vRW52aXJvbm1lbnQnO1xuaW1wb3J0ICogYXMgRXZlbnRCYXNlZCBmcm9tICcuL0RldmljZUNoYW5nZV9FdmVudEJhc2VkJztcbmltcG9ydCAqIGFzIFBvbGxCYXNlZCBmcm9tICcuL0RldmljZUNoYW5nZV9Qb2xsQmFzZWQnO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkRGV2aWNlQ2hhbmdlTGlzdGVuZXIoZGV2aWNlQ2hhbmdlTGlzdGVuZXIpIHtcbiAgX3N1cHBvcnRzRXZlbnRCYXNlZERldmljZUNoYW5nZURldGVjdGlvbigpXG4gICAgPyBFdmVudEJhc2VkLmFkZERldmljZUNoYW5nZUxpc3RlbmVyKGRldmljZUNoYW5nZUxpc3RlbmVyKVxuICAgIDogUG9sbEJhc2VkLmFkZERldmljZUNoYW5nZUxpc3RlbmVyKGRldmljZUNoYW5nZUxpc3RlbmVyKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZURldmljZUNoYW5nZUxpc3RlbmVyKGRldmljZUNoYW5nZUxpc3RlbmVyKSB7XG4gIF9zdXBwb3J0c0V2ZW50QmFzZWREZXZpY2VDaGFuZ2VEZXRlY3Rpb24oKVxuICAgID8gRXZlbnRCYXNlZC5yZW1vdmVEZXZpY2VDaGFuZ2VMaXN0ZW5lcihkZXZpY2VDaGFuZ2VMaXN0ZW5lcilcbiAgICA6IFBvbGxCYXNlZC5yZW1vdmVEZXZpY2VDaGFuZ2VMaXN0ZW5lcihkZXZpY2VDaGFuZ2VMaXN0ZW5lcik7XG59XG5cbi8vIERlc2t0b3Agd2ViLCBpT1Mgd2ViLCBhbmQgUmVhY3QgTmF0aXZlIHN1cHBvcnQgdGhlICdkZXZpY2VjaGFuZ2UnIGV2ZW50LlxuLy8gQW5kcm9pZCBDaHJvbWUvU2Ftc3VuZyBJbnRlcm5ldCBkb2Vzbid0LlxuZnVuY3Rpb24gX3N1cHBvcnRzRXZlbnRCYXNlZERldmljZUNoYW5nZURldGVjdGlvbigpIHtcbiAgcmV0dXJuIChcbiAgICBpc1JlYWN0TmF0aXZlKCkgfHxcbiAgICB0eXBlb2YgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5vbmRldmljZWNoYW5nZSAhPT0gJ3VuZGVmaW5lZCdcbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJpc1JlYWN0TmF0aXZlIiwiRXZlbnRCYXNlZCIsIlBvbGxCYXNlZCIsImFkZERldmljZUNoYW5nZUxpc3RlbmVyIiwiZGV2aWNlQ2hhbmdlTGlzdGVuZXIiLCJfc3VwcG9ydHNFdmVudEJhc2VkRGV2aWNlQ2hhbmdlRGV0ZWN0aW9uIiwicmVtb3ZlRGV2aWNlQ2hhbmdlTGlzdGVuZXIiLCJuYXZpZ2F0b3IiLCJtZWRpYURldmljZXMiLCJvbmRldmljZWNoYW5nZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/shared-with-pluot-core/DeviceChange.js\n");

/***/ }),

/***/ "./src/shared-with-pluot-core/DeviceChange_EventBased.js":
/*!***************************************************************!*\
  !*** ./src/shared-with-pluot-core/DeviceChange_EventBased.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addDeviceChangeListener\": function() { return /* binding */ addDeviceChangeListener; },\n/* harmony export */   \"removeDeviceChangeListener\": function() { return /* binding */ removeDeviceChangeListener; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar deviceChangeListeners = new Map();\nvar systemListener = null;\nfunction addDeviceChangeListener(deviceChangeListener) {\n  // If the given listener was already added, skip\n  if (deviceChangeListeners.has(deviceChangeListener)) {\n    return;\n  }\n\n  // Add a `deviceChangeListeners` entry for the listener\n  deviceChangeListeners.set(deviceChangeListener, {});\n  navigator.mediaDevices.enumerateDevices().then(function (devices) {\n    // If `deviceChangeListeners` entry has been removed while we were waiting\n    // for `enumerateDevices()`, bail\n    if (!deviceChangeListeners.has(deviceChangeListener)) {\n      return;\n    }\n\n    // Store initial devices for diffing later\n    deviceChangeListeners.get(deviceChangeListener).lastDevicesString = JSON.stringify(devices);\n\n    // Create the single \"system listener\" that the system/browser will\n    // invoke when it detects a device change.\n    // The system listener will be responsible for iterating through all the\n    // listeners and invoking them with the latest devices.\n    // and pass the devices to all the listeners\n    if (systemListener) {\n      return;\n    }\n    systemListener = /*#__PURE__*/function () {\n      var _ref = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(function* () {\n        var devices = yield navigator.mediaDevices.enumerateDevices();\n        var _iterator = _createForOfIteratorHelper(deviceChangeListeners.keys()),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var listener = _step.value;\n            // If devices have changed since the listener was last invoked, run it\n            var devicesString = JSON.stringify(devices);\n            if (devicesString !== deviceChangeListeners.get(listener).lastDevicesString) {\n              deviceChangeListeners.get(listener).lastDevicesString = devicesString;\n              listener(devices);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      });\n      return function systemListener() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // Register our \"system listener\" as the browser/system event listener\n    navigator.mediaDevices.addEventListener('devicechange', systemListener);\n  });\n}\nfunction removeDeviceChangeListener(deviceChangeListener) {\n  // If the given listener hasn't ever been added, skip\n  if (!deviceChangeListeners.has(deviceChangeListener)) {\n    return;\n  }\n\n  // Remove the `deviceChangeListeners` entry for the listener\n  deviceChangeListeners.delete(deviceChangeListener);\n\n  // If there are no more listeners, unregister our \"system listener\" as the\n  // browser/system event listener.\n  // (First check if the listener was ever created, since we may be removing\n  // this listener before then)\n  if (deviceChangeListeners.size === 0 && systemListener) {\n    navigator.mediaDevices.removeEventListener('devicechange', systemListener);\n    systemListener = null;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hhcmVkLXdpdGgtcGx1b3QtY29yZS9EZXZpY2VDaGFuZ2VfRXZlbnRCYXNlZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsSUFBSUEscUJBQXFCLEdBQUcsSUFBSUMsR0FBRyxDQUFDLENBQUM7QUFDckMsSUFBSUMsY0FBYyxHQUFHLElBQUk7QUFFbEIsU0FBU0MsdUJBQXVCQSxDQUFDQyxvQkFBb0IsRUFBRTtFQUM1RDtFQUNBLElBQUlKLHFCQUFxQixDQUFDSyxHQUFHLENBQUNELG9CQUFvQixDQUFDLEVBQUU7SUFDbkQ7RUFDRjs7RUFFQTtFQUNBSixxQkFBcUIsQ0FBQ00sR0FBRyxDQUFDRixvQkFBb0IsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUVuREcsU0FBUyxDQUFDQyxZQUFZLENBQUNDLGdCQUFnQixDQUFDLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLFVBQUNDLE9BQU8sRUFBSztJQUMxRDtJQUNBO0lBQ0EsSUFBSSxDQUFDWCxxQkFBcUIsQ0FBQ0ssR0FBRyxDQUFDRCxvQkFBb0IsQ0FBQyxFQUFFO01BQ3BEO0lBQ0Y7O0lBRUE7SUFDQUoscUJBQXFCLENBQUNZLEdBQUcsQ0FBQ1Isb0JBQW9CLENBQUMsQ0FBQ1MsaUJBQWlCLEdBQy9EQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ0osT0FBTyxDQUFDOztJQUV6QjtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0EsSUFBSVQsY0FBYyxFQUFFO01BQ2xCO0lBQ0Y7SUFDQUEsY0FBYztNQUFBLElBQUFjLElBQUEsR0FBQUMsbUZBQUEsQ0FBRyxhQUFZO1FBQzNCLElBQU1OLE9BQU8sU0FBU0osU0FBUyxDQUFDQyxZQUFZLENBQUNDLGdCQUFnQixDQUFDLENBQUM7UUFBQyxJQUFBUyxTQUFBLEdBQUFDLDBCQUFBLENBRXpDbkIscUJBQXFCLENBQUNvQixJQUFJLENBQUMsQ0FBQztVQUFBQyxLQUFBO1FBQUE7VUFBbkQsS0FBQUgsU0FBQSxDQUFBSSxDQUFBLE1BQUFELEtBQUEsR0FBQUgsU0FBQSxDQUFBSyxDQUFBLElBQUFDLElBQUEsR0FBcUQ7WUFBQSxJQUExQ0MsUUFBUSxHQUFBSixLQUFBLENBQUFLLEtBQUE7WUFDakI7WUFDQSxJQUFNQyxhQUFhLEdBQUdiLElBQUksQ0FBQ0MsU0FBUyxDQUFDSixPQUFPLENBQUM7WUFDN0MsSUFDRWdCLGFBQWEsS0FDYjNCLHFCQUFxQixDQUFDWSxHQUFHLENBQUNhLFFBQVEsQ0FBQyxDQUFDWixpQkFBaUIsRUFDckQ7Y0FDQWIscUJBQXFCLENBQUNZLEdBQUcsQ0FBQ2EsUUFBUSxDQUFDLENBQUNaLGlCQUFpQixHQUFHYyxhQUFhO2NBQ3JFRixRQUFRLENBQUNkLE9BQU8sQ0FBQztZQUNuQjtVQUNGO1FBQUMsU0FBQWlCLEdBQUE7VUFBQVYsU0FBQSxDQUFBVyxDQUFBLENBQUFELEdBQUE7UUFBQTtVQUFBVixTQUFBLENBQUFZLENBQUE7UUFBQTtNQUNILENBQUM7TUFBQSxnQkFBQTVCLGVBQUE7UUFBQSxPQUFBYyxJQUFBLENBQUFlLEtBQUEsT0FBQUMsU0FBQTtNQUFBO0lBQUE7O0lBRUQ7SUFDQXpCLFNBQVMsQ0FBQ0MsWUFBWSxDQUFDeUIsZ0JBQWdCLENBQUMsY0FBYyxFQUFFL0IsY0FBYyxDQUFDO0VBQ3pFLENBQUMsQ0FBQztBQUNKO0FBRU8sU0FBU2dDLDBCQUEwQkEsQ0FBQzlCLG9CQUFvQixFQUFFO0VBQy9EO0VBQ0EsSUFBSSxDQUFDSixxQkFBcUIsQ0FBQ0ssR0FBRyxDQUFDRCxvQkFBb0IsQ0FBQyxFQUFFO0lBQ3BEO0VBQ0Y7O0VBRUE7RUFDQUoscUJBQXFCLENBQUNtQyxNQUFNLENBQUMvQixvQkFBb0IsQ0FBQzs7RUFFbEQ7RUFDQTtFQUNBO0VBQ0E7RUFDQSxJQUFJSixxQkFBcUIsQ0FBQ29DLElBQUksS0FBSyxDQUFDLElBQUlsQyxjQUFjLEVBQUU7SUFDdERLLFNBQVMsQ0FBQ0MsWUFBWSxDQUFDNkIsbUJBQW1CLENBQUMsY0FBYyxFQUFFbkMsY0FBYyxDQUFDO0lBQzFFQSxjQUFjLEdBQUcsSUFBSTtFQUN2QjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9zcmMvc2hhcmVkLXdpdGgtcGx1b3QtY29yZS9EZXZpY2VDaGFuZ2VfRXZlbnRCYXNlZC5qcz8yMzNhIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBkZXZpY2VDaGFuZ2VMaXN0ZW5lcnMgPSBuZXcgTWFwKCk7XG5sZXQgc3lzdGVtTGlzdGVuZXIgPSBudWxsO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkRGV2aWNlQ2hhbmdlTGlzdGVuZXIoZGV2aWNlQ2hhbmdlTGlzdGVuZXIpIHtcbiAgLy8gSWYgdGhlIGdpdmVuIGxpc3RlbmVyIHdhcyBhbHJlYWR5IGFkZGVkLCBza2lwXG4gIGlmIChkZXZpY2VDaGFuZ2VMaXN0ZW5lcnMuaGFzKGRldmljZUNoYW5nZUxpc3RlbmVyKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIEFkZCBhIGBkZXZpY2VDaGFuZ2VMaXN0ZW5lcnNgIGVudHJ5IGZvciB0aGUgbGlzdGVuZXJcbiAgZGV2aWNlQ2hhbmdlTGlzdGVuZXJzLnNldChkZXZpY2VDaGFuZ2VMaXN0ZW5lciwge30pO1xuXG4gIG5hdmlnYXRvci5tZWRpYURldmljZXMuZW51bWVyYXRlRGV2aWNlcygpLnRoZW4oKGRldmljZXMpID0+IHtcbiAgICAvLyBJZiBgZGV2aWNlQ2hhbmdlTGlzdGVuZXJzYCBlbnRyeSBoYXMgYmVlbiByZW1vdmVkIHdoaWxlIHdlIHdlcmUgd2FpdGluZ1xuICAgIC8vIGZvciBgZW51bWVyYXRlRGV2aWNlcygpYCwgYmFpbFxuICAgIGlmICghZGV2aWNlQ2hhbmdlTGlzdGVuZXJzLmhhcyhkZXZpY2VDaGFuZ2VMaXN0ZW5lcikpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBTdG9yZSBpbml0aWFsIGRldmljZXMgZm9yIGRpZmZpbmcgbGF0ZXJcbiAgICBkZXZpY2VDaGFuZ2VMaXN0ZW5lcnMuZ2V0KGRldmljZUNoYW5nZUxpc3RlbmVyKS5sYXN0RGV2aWNlc1N0cmluZyA9XG4gICAgICBKU09OLnN0cmluZ2lmeShkZXZpY2VzKTtcblxuICAgIC8vIENyZWF0ZSB0aGUgc2luZ2xlIFwic3lzdGVtIGxpc3RlbmVyXCIgdGhhdCB0aGUgc3lzdGVtL2Jyb3dzZXIgd2lsbFxuICAgIC8vIGludm9rZSB3aGVuIGl0IGRldGVjdHMgYSBkZXZpY2UgY2hhbmdlLlxuICAgIC8vIFRoZSBzeXN0ZW0gbGlzdGVuZXIgd2lsbCBiZSByZXNwb25zaWJsZSBmb3IgaXRlcmF0aW5nIHRocm91Z2ggYWxsIHRoZVxuICAgIC8vIGxpc3RlbmVycyBhbmQgaW52b2tpbmcgdGhlbSB3aXRoIHRoZSBsYXRlc3QgZGV2aWNlcy5cbiAgICAvLyBhbmQgcGFzcyB0aGUgZGV2aWNlcyB0byBhbGwgdGhlIGxpc3RlbmVyc1xuICAgIGlmIChzeXN0ZW1MaXN0ZW5lcikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzeXN0ZW1MaXN0ZW5lciA9IGFzeW5jICgpID0+IHtcbiAgICAgIGNvbnN0IGRldmljZXMgPSBhd2FpdCBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmVudW1lcmF0ZURldmljZXMoKTtcblxuICAgICAgZm9yIChjb25zdCBsaXN0ZW5lciBvZiBkZXZpY2VDaGFuZ2VMaXN0ZW5lcnMua2V5cygpKSB7XG4gICAgICAgIC8vIElmIGRldmljZXMgaGF2ZSBjaGFuZ2VkIHNpbmNlIHRoZSBsaXN0ZW5lciB3YXMgbGFzdCBpbnZva2VkLCBydW4gaXRcbiAgICAgICAgY29uc3QgZGV2aWNlc1N0cmluZyA9IEpTT04uc3RyaW5naWZ5KGRldmljZXMpO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgZGV2aWNlc1N0cmluZyAhPT1cbiAgICAgICAgICBkZXZpY2VDaGFuZ2VMaXN0ZW5lcnMuZ2V0KGxpc3RlbmVyKS5sYXN0RGV2aWNlc1N0cmluZ1xuICAgICAgICApIHtcbiAgICAgICAgICBkZXZpY2VDaGFuZ2VMaXN0ZW5lcnMuZ2V0KGxpc3RlbmVyKS5sYXN0RGV2aWNlc1N0cmluZyA9IGRldmljZXNTdHJpbmc7XG4gICAgICAgICAgbGlzdGVuZXIoZGV2aWNlcyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8gUmVnaXN0ZXIgb3VyIFwic3lzdGVtIGxpc3RlbmVyXCIgYXMgdGhlIGJyb3dzZXIvc3lzdGVtIGV2ZW50IGxpc3RlbmVyXG4gICAgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5hZGRFdmVudExpc3RlbmVyKCdkZXZpY2VjaGFuZ2UnLCBzeXN0ZW1MaXN0ZW5lcik7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlRGV2aWNlQ2hhbmdlTGlzdGVuZXIoZGV2aWNlQ2hhbmdlTGlzdGVuZXIpIHtcbiAgLy8gSWYgdGhlIGdpdmVuIGxpc3RlbmVyIGhhc24ndCBldmVyIGJlZW4gYWRkZWQsIHNraXBcbiAgaWYgKCFkZXZpY2VDaGFuZ2VMaXN0ZW5lcnMuaGFzKGRldmljZUNoYW5nZUxpc3RlbmVyKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIFJlbW92ZSB0aGUgYGRldmljZUNoYW5nZUxpc3RlbmVyc2AgZW50cnkgZm9yIHRoZSBsaXN0ZW5lclxuICBkZXZpY2VDaGFuZ2VMaXN0ZW5lcnMuZGVsZXRlKGRldmljZUNoYW5nZUxpc3RlbmVyKTtcblxuICAvLyBJZiB0aGVyZSBhcmUgbm8gbW9yZSBsaXN0ZW5lcnMsIHVucmVnaXN0ZXIgb3VyIFwic3lzdGVtIGxpc3RlbmVyXCIgYXMgdGhlXG4gIC8vIGJyb3dzZXIvc3lzdGVtIGV2ZW50IGxpc3RlbmVyLlxuICAvLyAoRmlyc3QgY2hlY2sgaWYgdGhlIGxpc3RlbmVyIHdhcyBldmVyIGNyZWF0ZWQsIHNpbmNlIHdlIG1heSBiZSByZW1vdmluZ1xuICAvLyB0aGlzIGxpc3RlbmVyIGJlZm9yZSB0aGVuKVxuICBpZiAoZGV2aWNlQ2hhbmdlTGlzdGVuZXJzLnNpemUgPT09IDAgJiYgc3lzdGVtTGlzdGVuZXIpIHtcbiAgICBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2RldmljZWNoYW5nZScsIHN5c3RlbUxpc3RlbmVyKTtcbiAgICBzeXN0ZW1MaXN0ZW5lciA9IG51bGw7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJkZXZpY2VDaGFuZ2VMaXN0ZW5lcnMiLCJNYXAiLCJzeXN0ZW1MaXN0ZW5lciIsImFkZERldmljZUNoYW5nZUxpc3RlbmVyIiwiZGV2aWNlQ2hhbmdlTGlzdGVuZXIiLCJoYXMiLCJzZXQiLCJuYXZpZ2F0b3IiLCJtZWRpYURldmljZXMiLCJlbnVtZXJhdGVEZXZpY2VzIiwidGhlbiIsImRldmljZXMiLCJnZXQiLCJsYXN0RGV2aWNlc1N0cmluZyIsIkpTT04iLCJzdHJpbmdpZnkiLCJfcmVmIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJfaXRlcmF0b3IiLCJfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciIsImtleXMiLCJfc3RlcCIsInMiLCJuIiwiZG9uZSIsImxpc3RlbmVyIiwidmFsdWUiLCJkZXZpY2VzU3RyaW5nIiwiZXJyIiwiZSIsImYiLCJhcHBseSIsImFyZ3VtZW50cyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVEZXZpY2VDaGFuZ2VMaXN0ZW5lciIsImRlbGV0ZSIsInNpemUiLCJyZW1vdmVFdmVudExpc3RlbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/shared-with-pluot-core/DeviceChange_EventBased.js\n");

/***/ }),

/***/ "./src/shared-with-pluot-core/DeviceChange_PollBased.js":
/*!**************************************************************!*\
  !*** ./src/shared-with-pluot-core/DeviceChange_PollBased.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addDeviceChangeListener\": function() { return /* binding */ addDeviceChangeListener; },\n/* harmony export */   \"removeDeviceChangeListener\": function() { return /* binding */ removeDeviceChangeListener; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar deviceChangeListeners = new Map();\nvar deviceChangePollInterval = null;\nvar POLL_INTERVAL_MS = 3000;\nfunction addDeviceChangeListener(deviceChangeListener) {\n  // If the given listener was already added, skip\n  if (deviceChangeListeners.has(deviceChangeListener)) {\n    return;\n  }\n\n  // Add a `deviceChangeListeners` entry for the listener\n  deviceChangeListeners.set(deviceChangeListener, {});\n  navigator.mediaDevices.enumerateDevices().then(function (devices) {\n    // If `deviceChangeListeners` entry has been removed while we were waiting\n    // for `enumerateDevices()`, bail\n    if (!deviceChangeListeners.has(deviceChangeListener)) {\n      return;\n    }\n\n    // Store initial devices for diffing later\n    deviceChangeListeners.get(deviceChangeListener).lastDevicesString = JSON.stringify(devices);\n\n    // Start the poll, if not already started when adding another listener.\n    // The poll will be responsible for iterating through all the listeners and\n    // invoking them with the latest devices.\n    if (deviceChangePollInterval) {\n      return;\n    }\n    deviceChangePollInterval = setInterval( /*#__PURE__*/(0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(function* () {\n      var devices = yield navigator.mediaDevices.enumerateDevices();\n      var _iterator = _createForOfIteratorHelper(deviceChangeListeners.keys()),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var listener = _step.value;\n          // If devices have changed since the listener was last invoked, run it\n          var devicesString = JSON.stringify(devices);\n          if (devicesString !== deviceChangeListeners.get(listener).lastDevicesString) {\n            deviceChangeListeners.get(listener).lastDevicesString = devicesString;\n            listener(devices);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }), POLL_INTERVAL_MS);\n  });\n}\n\n// Assumes entry exists in `deviceChangeListeners`\nfunction removeDeviceChangeListener(deviceChangeListener) {\n  // If the given listener hasn't ever been added, skip\n  if (!deviceChangeListeners.has(deviceChangeListener)) {\n    return;\n  }\n\n  // Remove the `deviceChangeListeners` entry for the listener\n  deviceChangeListeners.delete(deviceChangeListener);\n\n  // If there are no more listeners, stop the polling.\n  // (First check if the poll interval was ever started, since we may be\n  // removing this listener before then)\n  if (deviceChangeListeners.size === 0 && deviceChangePollInterval) {\n    clearInterval(deviceChangePollInterval);\n    deviceChangePollInterval = null;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hhcmVkLXdpdGgtcGx1b3QtY29yZS9EZXZpY2VDaGFuZ2VfUG9sbEJhc2VkLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxxQkFBcUIsR0FBRyxJQUFJQyxHQUFHLENBQUMsQ0FBQztBQUNyQyxJQUFJQyx3QkFBd0IsR0FBRyxJQUFJO0FBRW5DLElBQU1DLGdCQUFnQixHQUFHLElBQUk7QUFFdEIsU0FBU0MsdUJBQXVCQSxDQUFDQyxvQkFBb0IsRUFBRTtFQUM1RDtFQUNBLElBQUlMLHFCQUFxQixDQUFDTSxHQUFHLENBQUNELG9CQUFvQixDQUFDLEVBQUU7SUFDbkQ7RUFDRjs7RUFFQTtFQUNBTCxxQkFBcUIsQ0FBQ08sR0FBRyxDQUFDRixvQkFBb0IsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUVuREcsU0FBUyxDQUFDQyxZQUFZLENBQUNDLGdCQUFnQixDQUFDLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLFVBQUNDLE9BQU8sRUFBSztJQUMxRDtJQUNBO0lBQ0EsSUFBSSxDQUFDWixxQkFBcUIsQ0FBQ00sR0FBRyxDQUFDRCxvQkFBb0IsQ0FBQyxFQUFFO01BQ3BEO0lBQ0Y7O0lBRUE7SUFDQUwscUJBQXFCLENBQUNhLEdBQUcsQ0FBQ1Isb0JBQW9CLENBQUMsQ0FBQ1MsaUJBQWlCLEdBQy9EQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ0osT0FBTyxDQUFDOztJQUV6QjtJQUNBO0lBQ0E7SUFDQSxJQUFJVix3QkFBd0IsRUFBRTtNQUM1QjtJQUNGO0lBQ0FBLHdCQUF3QixHQUFHZSxXQUFXLGVBQUFDLG1GQUFBLENBQUMsYUFBWTtNQUNqRCxJQUFNTixPQUFPLFNBQVNKLFNBQVMsQ0FBQ0MsWUFBWSxDQUFDQyxnQkFBZ0IsQ0FBQyxDQUFDO01BQUMsSUFBQVMsU0FBQSxHQUFBQywwQkFBQSxDQUV6Q3BCLHFCQUFxQixDQUFDcUIsSUFBSSxDQUFDLENBQUM7UUFBQUMsS0FBQTtNQUFBO1FBQW5ELEtBQUFILFNBQUEsQ0FBQUksQ0FBQSxNQUFBRCxLQUFBLEdBQUFILFNBQUEsQ0FBQUssQ0FBQSxJQUFBQyxJQUFBLEdBQXFEO1VBQUEsSUFBMUNDLFFBQVEsR0FBQUosS0FBQSxDQUFBSyxLQUFBO1VBQ2pCO1VBQ0EsSUFBTUMsYUFBYSxHQUFHYixJQUFJLENBQUNDLFNBQVMsQ0FBQ0osT0FBTyxDQUFDO1VBQzdDLElBQ0VnQixhQUFhLEtBQ2I1QixxQkFBcUIsQ0FBQ2EsR0FBRyxDQUFDYSxRQUFRLENBQUMsQ0FBQ1osaUJBQWlCLEVBQ3JEO1lBQ0FkLHFCQUFxQixDQUFDYSxHQUFHLENBQUNhLFFBQVEsQ0FBQyxDQUFDWixpQkFBaUIsR0FBR2MsYUFBYTtZQUNyRUYsUUFBUSxDQUFDZCxPQUFPLENBQUM7VUFDbkI7UUFDRjtNQUFDLFNBQUFpQixHQUFBO1FBQUFWLFNBQUEsQ0FBQVcsQ0FBQSxDQUFBRCxHQUFBO01BQUE7UUFBQVYsU0FBQSxDQUFBWSxDQUFBO01BQUE7SUFDSCxDQUFDLEdBQUU1QixnQkFBZ0IsQ0FBQztFQUN0QixDQUFDLENBQUM7QUFDSjs7QUFFQTtBQUNPLFNBQVM2QiwwQkFBMEJBLENBQUMzQixvQkFBb0IsRUFBRTtFQUMvRDtFQUNBLElBQUksQ0FBQ0wscUJBQXFCLENBQUNNLEdBQUcsQ0FBQ0Qsb0JBQW9CLENBQUMsRUFBRTtJQUNwRDtFQUNGOztFQUVBO0VBQ0FMLHFCQUFxQixDQUFDaUMsTUFBTSxDQUFDNUIsb0JBQW9CLENBQUM7O0VBRWxEO0VBQ0E7RUFDQTtFQUNBLElBQUlMLHFCQUFxQixDQUFDa0MsSUFBSSxLQUFLLENBQUMsSUFBSWhDLHdCQUF3QixFQUFFO0lBQ2hFaUMsYUFBYSxDQUFDakMsd0JBQXdCLENBQUM7SUFDdkNBLHdCQUF3QixHQUFHLElBQUk7RUFDakM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vc3JjL3NoYXJlZC13aXRoLXBsdW90LWNvcmUvRGV2aWNlQ2hhbmdlX1BvbGxCYXNlZC5qcz81NGJkIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBkZXZpY2VDaGFuZ2VMaXN0ZW5lcnMgPSBuZXcgTWFwKCk7XG5sZXQgZGV2aWNlQ2hhbmdlUG9sbEludGVydmFsID0gbnVsbDtcblxuY29uc3QgUE9MTF9JTlRFUlZBTF9NUyA9IDMwMDA7XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGREZXZpY2VDaGFuZ2VMaXN0ZW5lcihkZXZpY2VDaGFuZ2VMaXN0ZW5lcikge1xuICAvLyBJZiB0aGUgZ2l2ZW4gbGlzdGVuZXIgd2FzIGFscmVhZHkgYWRkZWQsIHNraXBcbiAgaWYgKGRldmljZUNoYW5nZUxpc3RlbmVycy5oYXMoZGV2aWNlQ2hhbmdlTGlzdGVuZXIpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gQWRkIGEgYGRldmljZUNoYW5nZUxpc3RlbmVyc2AgZW50cnkgZm9yIHRoZSBsaXN0ZW5lclxuICBkZXZpY2VDaGFuZ2VMaXN0ZW5lcnMuc2V0KGRldmljZUNoYW5nZUxpc3RlbmVyLCB7fSk7XG5cbiAgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5lbnVtZXJhdGVEZXZpY2VzKCkudGhlbigoZGV2aWNlcykgPT4ge1xuICAgIC8vIElmIGBkZXZpY2VDaGFuZ2VMaXN0ZW5lcnNgIGVudHJ5IGhhcyBiZWVuIHJlbW92ZWQgd2hpbGUgd2Ugd2VyZSB3YWl0aW5nXG4gICAgLy8gZm9yIGBlbnVtZXJhdGVEZXZpY2VzKClgLCBiYWlsXG4gICAgaWYgKCFkZXZpY2VDaGFuZ2VMaXN0ZW5lcnMuaGFzKGRldmljZUNoYW5nZUxpc3RlbmVyKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFN0b3JlIGluaXRpYWwgZGV2aWNlcyBmb3IgZGlmZmluZyBsYXRlclxuICAgIGRldmljZUNoYW5nZUxpc3RlbmVycy5nZXQoZGV2aWNlQ2hhbmdlTGlzdGVuZXIpLmxhc3REZXZpY2VzU3RyaW5nID1cbiAgICAgIEpTT04uc3RyaW5naWZ5KGRldmljZXMpO1xuXG4gICAgLy8gU3RhcnQgdGhlIHBvbGwsIGlmIG5vdCBhbHJlYWR5IHN0YXJ0ZWQgd2hlbiBhZGRpbmcgYW5vdGhlciBsaXN0ZW5lci5cbiAgICAvLyBUaGUgcG9sbCB3aWxsIGJlIHJlc3BvbnNpYmxlIGZvciBpdGVyYXRpbmcgdGhyb3VnaCBhbGwgdGhlIGxpc3RlbmVycyBhbmRcbiAgICAvLyBpbnZva2luZyB0aGVtIHdpdGggdGhlIGxhdGVzdCBkZXZpY2VzLlxuICAgIGlmIChkZXZpY2VDaGFuZ2VQb2xsSW50ZXJ2YWwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZGV2aWNlQ2hhbmdlUG9sbEludGVydmFsID0gc2V0SW50ZXJ2YWwoYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgZGV2aWNlcyA9IGF3YWl0IG5hdmlnYXRvci5tZWRpYURldmljZXMuZW51bWVyYXRlRGV2aWNlcygpO1xuXG4gICAgICBmb3IgKGNvbnN0IGxpc3RlbmVyIG9mIGRldmljZUNoYW5nZUxpc3RlbmVycy5rZXlzKCkpIHtcbiAgICAgICAgLy8gSWYgZGV2aWNlcyBoYXZlIGNoYW5nZWQgc2luY2UgdGhlIGxpc3RlbmVyIHdhcyBsYXN0IGludm9rZWQsIHJ1biBpdFxuICAgICAgICBjb25zdCBkZXZpY2VzU3RyaW5nID0gSlNPTi5zdHJpbmdpZnkoZGV2aWNlcyk7XG4gICAgICAgIGlmIChcbiAgICAgICAgICBkZXZpY2VzU3RyaW5nICE9PVxuICAgICAgICAgIGRldmljZUNoYW5nZUxpc3RlbmVycy5nZXQobGlzdGVuZXIpLmxhc3REZXZpY2VzU3RyaW5nXG4gICAgICAgICkge1xuICAgICAgICAgIGRldmljZUNoYW5nZUxpc3RlbmVycy5nZXQobGlzdGVuZXIpLmxhc3REZXZpY2VzU3RyaW5nID0gZGV2aWNlc1N0cmluZztcbiAgICAgICAgICBsaXN0ZW5lcihkZXZpY2VzKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sIFBPTExfSU5URVJWQUxfTVMpO1xuICB9KTtcbn1cblxuLy8gQXNzdW1lcyBlbnRyeSBleGlzdHMgaW4gYGRldmljZUNoYW5nZUxpc3RlbmVyc2BcbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVEZXZpY2VDaGFuZ2VMaXN0ZW5lcihkZXZpY2VDaGFuZ2VMaXN0ZW5lcikge1xuICAvLyBJZiB0aGUgZ2l2ZW4gbGlzdGVuZXIgaGFzbid0IGV2ZXIgYmVlbiBhZGRlZCwgc2tpcFxuICBpZiAoIWRldmljZUNoYW5nZUxpc3RlbmVycy5oYXMoZGV2aWNlQ2hhbmdlTGlzdGVuZXIpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gUmVtb3ZlIHRoZSBgZGV2aWNlQ2hhbmdlTGlzdGVuZXJzYCBlbnRyeSBmb3IgdGhlIGxpc3RlbmVyXG4gIGRldmljZUNoYW5nZUxpc3RlbmVycy5kZWxldGUoZGV2aWNlQ2hhbmdlTGlzdGVuZXIpO1xuXG4gIC8vIElmIHRoZXJlIGFyZSBubyBtb3JlIGxpc3RlbmVycywgc3RvcCB0aGUgcG9sbGluZy5cbiAgLy8gKEZpcnN0IGNoZWNrIGlmIHRoZSBwb2xsIGludGVydmFsIHdhcyBldmVyIHN0YXJ0ZWQsIHNpbmNlIHdlIG1heSBiZVxuICAvLyByZW1vdmluZyB0aGlzIGxpc3RlbmVyIGJlZm9yZSB0aGVuKVxuICBpZiAoZGV2aWNlQ2hhbmdlTGlzdGVuZXJzLnNpemUgPT09IDAgJiYgZGV2aWNlQ2hhbmdlUG9sbEludGVydmFsKSB7XG4gICAgY2xlYXJJbnRlcnZhbChkZXZpY2VDaGFuZ2VQb2xsSW50ZXJ2YWwpO1xuICAgIGRldmljZUNoYW5nZVBvbGxJbnRlcnZhbCA9IG51bGw7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJkZXZpY2VDaGFuZ2VMaXN0ZW5lcnMiLCJNYXAiLCJkZXZpY2VDaGFuZ2VQb2xsSW50ZXJ2YWwiLCJQT0xMX0lOVEVSVkFMX01TIiwiYWRkRGV2aWNlQ2hhbmdlTGlzdGVuZXIiLCJkZXZpY2VDaGFuZ2VMaXN0ZW5lciIsImhhcyIsInNldCIsIm5hdmlnYXRvciIsIm1lZGlhRGV2aWNlcyIsImVudW1lcmF0ZURldmljZXMiLCJ0aGVuIiwiZGV2aWNlcyIsImdldCIsImxhc3REZXZpY2VzU3RyaW5nIiwiSlNPTiIsInN0cmluZ2lmeSIsInNldEludGVydmFsIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJfaXRlcmF0b3IiLCJfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciIsImtleXMiLCJfc3RlcCIsInMiLCJuIiwiZG9uZSIsImxpc3RlbmVyIiwidmFsdWUiLCJkZXZpY2VzU3RyaW5nIiwiZXJyIiwiZSIsImYiLCJyZW1vdmVEZXZpY2VDaGFuZ2VMaXN0ZW5lciIsImRlbGV0ZSIsInNpemUiLCJjbGVhckludGVydmFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/shared-with-pluot-core/DeviceChange_PollBased.js\n");

/***/ }),

/***/ "./src/shared-with-pluot-core/Environment.js":
/*!***************************************************!*\
  !*** ./src/shared-with-pluot-core/Environment.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"browserCanUnifiedPlan\": function() { return /* binding */ browserCanUnifiedPlan; },\n/* harmony export */   \"browserMobile_p\": function() { return /* binding */ browserMobile_p; },\n/* harmony export */   \"browserNeedsUpgrade\": function() { return /* binding */ browserNeedsUpgrade; },\n/* harmony export */   \"browserVideoSupported_p\": function() { return /* binding */ browserVideoSupported_p; },\n/* harmony export */   \"canUnifiedPlan\": function() { return /* binding */ canUnifiedPlan; },\n/* harmony export */   \"getBrowserName\": function() { return /* binding */ getBrowserName; },\n/* harmony export */   \"getBrowserVersion\": function() { return /* binding */ getBrowserVersion; },\n/* harmony export */   \"getChromeVersion\": function() { return /* binding */ getChromeVersion; },\n/* harmony export */   \"getMaxTouchPoints\": function() { return /* binding */ getMaxTouchPoints; },\n/* harmony export */   \"getOSName\": function() { return /* binding */ getOSName; },\n/* harmony export */   \"getUserAgent\": function() { return /* binding */ getUserAgent; },\n/* harmony export */   \"isAndroidApp\": function() { return /* binding */ isAndroidApp; },\n/* harmony export */   \"isAndroidWeb\": function() { return /* binding */ isAndroidWeb; },\n/* harmony export */   \"isAudioOutputSelectionDisallowed\": function() { return /* binding */ isAudioOutputSelectionDisallowed; },\n/* harmony export */   \"isAudioProcessingSupported\": function() { return /* binding */ isAudioProcessingSupported; },\n/* harmony export */   \"isFullscreenSupported\": function() { return /* binding */ isFullscreenSupported; },\n/* harmony export */   \"isIOS\": function() { return /* binding */ isIOS; },\n/* harmony export */   \"isReactNative\": function() { return /* binding */ isReactNative; },\n/* harmony export */   \"isReactNativeAndroid\": function() { return /* binding */ isReactNativeAndroid; },\n/* harmony export */   \"isReactNativeIOS\": function() { return /* binding */ isReactNativeIOS; },\n/* harmony export */   \"isReactNativeUnifiedPlan\": function() { return /* binding */ isReactNativeUnifiedPlan; },\n/* harmony export */   \"isScreenSharingSupported\": function() { return /* binding */ isScreenSharingSupported; },\n/* harmony export */   \"isSupportedIOSEnvironment\": function() { return /* binding */ isSupportedIOSEnvironment; },\n/* harmony export */   \"isUserMediaAccessible\": function() { return /* binding */ isUserMediaAccessible; },\n/* harmony export */   \"isVideoProcessingSupported\": function() { return /* binding */ isVideoProcessingSupported; }\n/* harmony export */ });\n/* harmony import */ var bowser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bowser */ \"./node_modules/bowser/es5.js\");\n/* harmony import */ var bowser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bowser__WEBPACK_IMPORTED_MODULE_0__);\n// Note: Bowser is only used for OS detection, not Browser detection\n\n\n// This method should be used instead of window.navigator.userAgent, which\n// is not defined in React Native and results in an error.\n// (Actually, if it *is* defined in React Native, it's not meant for us, but\n// for our customer's code; that's why we don't just simply override it globally).\nfunction getUserAgent() {\n  if (!isReactNative() && typeof window !== 'undefined' && window.navigator && window.navigator.userAgent) {\n    return window.navigator.userAgent;\n  }\n  return '';\n}\n\n// This method should be used instead of window.navigator.maxTouchPoints, which\n// is not defined in React Native and results in an error.\nfunction getMaxTouchPoints() {\n  var _window, _window$navigator;\n  if (!isReactNative() && typeof window !== 'undefined' && (_window = window) !== null && _window !== void 0 && (_window$navigator = _window.navigator) !== null && _window$navigator !== void 0 && _window$navigator.maxTouchPoints) {\n    return window.navigator.maxTouchPoints;\n  }\n  return 0;\n}\nfunction isReactNative() {\n  // Wondering why we're relying on navigator.product instead of changing the\n  // below check to read isReactNativeIOS() || isReactNativeAndroid()?\n  // Two reasons:\n  // 1. Juuuust in case of other platforms someday!\n  // 2. isReactNativeIOS/Android() only work in newer versions of\n  //    react-native-daily-js; we wouldn't want to unintentionally break older\n  //    versions\n  return typeof navigator !== 'undefined' && navigator.product && navigator.product === 'ReactNative';\n}\nfunction isReactNativeUnifiedPlan() {\n  return isReactNative() && typeof RTCRtpTransceiver !== 'undefined';\n}\nfunction isReactNativeIOS() {\n  if (typeof DailyNativeUtils === 'undefined' || DailyNativeUtils.isIOS === undefined) {\n    return false;\n  }\n  return DailyNativeUtils.isIOS;\n}\nfunction isReactNativeAndroid() {\n  if (typeof DailyNativeUtils === 'undefined' || DailyNativeUtils.isAndroid === undefined) {\n    return false;\n  }\n  return DailyNativeUtils.isAndroid;\n}\nfunction isIOS() {\n  var userAgent = getUserAgent();\n  return !!userAgent.match(/iPad|iPhone|iPod/i);\n}\n\n// Only valid if cam/mic are accessible from browser\nfunction isUserMediaAccessible() {\n  return navigator && navigator.mediaDevices && navigator.mediaDevices.getUserMedia;\n}\n\n// Returns whether we should allow screen sharing from this browser.\n//\n// Note: technically we *could* try to support screen sharing from any browser where\n// isDisplayMediaAccessible() is true (PeerToPeer.js is mostly set up to do so).\n// However, limiting screen sharing to only those that support the Unified Plan SDP\n// format lets us simplify code paths on the receiving end of screen shares: in order\n// to check whether to always expect a single inbound video track, we simply have to\n// check whether we're a browser that only supports the older Plan B SDP format (see below).\n// Additionally, limiting screen sharing this way reduces our test matrix.\nfunction isScreenSharingSupported() {\n  return isDisplayMediaAccessible() && (canUnifiedPlan() || isReactNative());\n}\nfunction isFullscreenSupported() {\n  if (isReactNative()) return false;\n  if (!document) return false;\n  var iframe = document.createElement('iframe');\n  return !!iframe.requestFullscreen || !!iframe.webkitRequestFullscreen;\n}\nfunction isVideoProcessingSupported() {\n  var usingLegacyProvider = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  if (isReactNative()) return false;\n  if (usingLegacyProvider) {\n    return isVideoProcessingSupportedInBrowser_MediaPipe();\n  } else {\n    return isVideoProcessingSupportedInBrowser_Banuba();\n  }\n}\nfunction isVideoProcessingSupportedInBrowser_MediaPipe() {\n  if (browserMobile_p()) {\n    return false;\n  }\n  return ['Chrome', 'Firefox'].includes(getBrowserName());\n}\nfunction isVideoProcessingSupportedInBrowser_Banuba() {\n  // TODO: we *should* be able to support mobile browsers someday by removing\n  // the below check.\n  // Remaining work before that can be done:\n  // - On iOS, more gracefully handle the \"interrupted\" state that occurs when\n  //   backgrounding the browser or switching to a new tab (it currently results\n  //   in very visually weird state).\n  // - Consider whether we should have a set of mobile-specific \"preset\"\n  //   background images; the set we have is tuned to look best on desktop.\n  //   (Preset background images might not be an important enough feature for it\n  //   for it to be worth our while, though...especially since the background\n  //   images look passable on mobile).\n  // - Spend more time tuning the auto-shutoff mechanism and processing settings\n  //   for much-more-often-CPU-constrained mobile devices (especially Android\n  //   devices). On my Galaxy A50:\n  //     - if the the auto-shutoff mechanism is enabled, if fires all the time\n  //     - if the auto-shutoff mechanism is disabled, the CPU spikes to the\n  //       point of starving video decoding, even on a 1:1 call, causing either\n  //       the local or remote video to appear interrupted\n  if (browserMobile_p()) {\n    return false;\n  }\n  var browserName = getBrowserName();\n\n  // Exclude Safari 15.0..<15.4 on iOS, due to a bug.\n  // See underyling bug https://bugs.webkit.org/show_bug.cgi?id=232195, which\n  // manifested as https://bugs.webkit.org/show_bug.cgi?id=232076, which led\n  // Banuba to recommend Safari-specific workaround https://docs.banuba.com/face-ar-sdk-v1/web/web_known_issues/#effect-animations-are-delayed-on-safari.\n  // Given that the underlying bug has since been fixed, for now it makes sense\n  // to simply exclude the problmatic versions of Safari, especially because\n  // they are tied to now-rather-old iOS versions.\n  if (isIOS() && browserName === 'Safari') {\n    var version = getSafariVersion();\n    if (version.major === 15 && version.minor < 4) {\n      return false;\n    }\n  }\n  return ['Chrome', 'Firefox', 'Safari'].includes(browserName);\n}\nvar supportedBrowsersForAudioProcessors = ['Chrome', 'Firefox'];\nfunction isAudioProcessingSupported() {\n  // Using Krisp's compatibility, since they're currently our only audio processor\n  if (isReactNative()) return false;\n  if (browserMobile_p()) return false;\n  // But Krisp uses an AudioWorkletNode, which isn't available in older Safari\n  if (typeof AudioWorkletNode === 'undefined') return false;\n  return supportedBrowsersForAudioProcessors.includes(getBrowserName());\n}\nfunction canUnifiedPlan() {\n  return browserCanUnifiedPlan(getBrowserName(), getBrowserVersion());\n}\nfunction browserCanUnifiedPlan(browserName, browserVersion) {\n  if (!(browserName && browserVersion)) {\n    return true;\n  }\n  switch (browserName) {\n    case 'Chrome':\n      return browserVersion.major >= 75;\n    case 'Safari':\n      // This is the check that Apple suggests in https://webkit.org/blog/8672/on-the-road-to-webrtc-1-0-including-vp8/,\n      // plus a workaround that was already in place here for a Safari 13.0.0 bug, forcing it into Plan B.\n      return RTCRtpTransceiver.prototype.hasOwnProperty('currentDirection') && !(browserVersion.major === 13 && browserVersion.minor === 0 && browserVersion.point === 0);\n    // Note: We now only support Firefox 80+ so this should always be true\n    case 'Firefox':\n      return browserVersion.major >= 67;\n  }\n  return true;\n}\nfunction browserVideoSupported_p() {\n  return isUserMediaAccessible() && !browserNeedsUpgrade();\n}\nfunction isAndroidApp() {\n  return getUserAgent().match(/DailyAnd\\//);\n}\nfunction isAndroidWeb() {\n  return getUserAgent().match(/Linux; Android/);\n}\nfunction browserMobile_p() {\n  var userAgent = getUserAgent();\n  // Testing on iOS and iPad both return 05 touch points.\n  var isIosMobile = userAgent.match(/Mac/) && getMaxTouchPoints() >= 5;\n  if (userAgent.match(/Mobi/) || userAgent.match(/Android/) || isIosMobile) {\n    return true;\n  }\n  if (isAndroidApp()) {\n    return true;\n  }\n}\nfunction browserNeedsUpgrade() {\n  var browser = getBrowserName(),\n    ua = getUserAgent(),\n    version;\n  if (!ua) {\n    return true;\n  }\n  switch (browser) {\n    case 'Chrome':\n      // Includes Chromium-based browsers\n      version = getChromeVersion();\n      return version.major && version.major > 0 && version.major < 61;\n    case 'Firefox':\n      version = getFirefoxVersion();\n      return version.major < 78;\n    case 'Safari':\n      version = getSafariVersion();\n      return version.major < 12;\n    default:\n      return true;\n  }\n}\nfunction getBrowserName() {\n  if (typeof window !== 'undefined') {\n    var userAgent = getUserAgent();\n    // Treat supported WKWebView as Safari. Check for this first just in case\n    // 3rd-party browsers on iOS decide to customize their user agent strings to\n    // match the other conditions.\n    if (isSupportedIOSEnvironment()) {\n      return 'Safari';\n    } else if (userAgent.indexOf('Edge') > -1) {\n      // Note: check will (purposefully) fail for chromium-based Edge\n      // since the user-agent for chromium-based Edge reports `Edg`\n      // (or EdgA (android) or EdgiOS)\n      // Also note: getBrowserName is primarily used for internal\n      //   logic, so this should go away eventually. However, it is used\n      //   in the old prebuilt UI for some upgrade messaging so leaving\n      //   it in until Edge or the old prebuilt is really no longer a thing\n      return 'Edge';\n\n      // }  else if (userAgent.indexOf('OPR') > -1 ||\n      //            userAgent.indexOf('Opera') > -1) {\n      //   return 'Opera';\n    } else if (userAgent.match(/Chrome\\//)) {\n      // Includes Chromium-based browsers\n      return 'Chrome';\n    } else if (userAgent.indexOf('Safari') > -1) {\n      return 'Safari';\n    } else if (userAgent.indexOf('Firefox') > -1) {\n      return 'Firefox';\n    } else if (userAgent.indexOf('MSIE') > -1 || userAgent.indexOf('.NET') > -1) {\n      return 'IE';\n    } else {\n      return 'Unknown Browser';\n    }\n  }\n}\nfunction getBrowserVersion() {\n  var name = getBrowserName();\n  switch (name) {\n    case 'Chrome':\n      // Includes Chromium-based browsers\n      return getChromeVersion();\n    case 'Safari':\n      return getSafariVersion();\n    case 'Firefox':\n      return getFirefoxVersion();\n    case 'Edge':\n      return getEdgeVersion();\n  }\n}\nfunction getChromeVersion() {\n  var major = 0,\n    minor = 0,\n    build = 0,\n    patch = 0,\n    opera = false;\n  if (typeof window !== 'undefined') {\n    var userAgent = getUserAgent(),\n      match = userAgent.match(/Chrome\\/(\\d+).(\\d+).(\\d+).(\\d+)/);\n    if (match) {\n      try {\n        major = parseInt(match[1]);\n        minor = parseInt(match[2]);\n        build = parseInt(match[3]);\n        patch = parseInt(match[4]);\n        opera = userAgent.indexOf('OPR/') > -1;\n      } catch (e) {}\n    }\n  }\n  return {\n    major: major,\n    minor: minor,\n    build: build,\n    patch: patch,\n    opera: opera\n  };\n}\n\n// Mobile Safari or WKWebView on iOS/iPadOS >= 14.3\nfunction isSupportedIOSEnvironment() {\n  return isIOS() && isUserMediaAccessible();\n}\nfunction isDisplayMediaAccessible() {\n  return !!(navigator && navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia);\n}\nfunction getSafariVersion() {\n  var major = 0,\n    minor = 0,\n    point = 0;\n  if (typeof window !== 'undefined') {\n    var userAgent = getUserAgent(),\n      match = userAgent.match(/Version\\/(\\d+).(\\d+)(.(\\d+))?/);\n    if (match) {\n      try {\n        major = parseInt(match[1]);\n        minor = parseInt(match[2]);\n        point = parseInt(match[4]);\n      } catch (e) {}\n    } else if (isSupportedIOSEnvironment()) {\n      // Hack: treat supported WKWebView like Safari 14.0.3 (no need to be\n      // precise; just needs to be new enough to appear supported, and this was\n      // the Safari version around the time WKWebView WebRTC support was added)\n      major = 14;\n      minor = 0;\n      point = 3;\n    }\n  }\n  return {\n    major: major,\n    minor: minor,\n    point: point\n  };\n}\nfunction getFirefoxVersion() {\n  var major = 0,\n    minor = 0;\n  if (typeof window !== 'undefined') {\n    var userAgent = getUserAgent(),\n      match = userAgent.match(/Firefox\\/(\\d+).(\\d+)/);\n    if (match) {\n      try {\n        major = parseInt(match[1]);\n        minor = parseInt(match[2]);\n      } catch (e) {}\n    }\n  }\n  return {\n    major: major,\n    minor: minor\n  };\n}\nfunction getEdgeVersion() {\n  var major = 0,\n    minor = 0;\n  if (typeof window !== 'undefined') {\n    var userAgent = getUserAgent(),\n      match = userAgent.match(/Edge\\/(\\d+).(\\d+)/);\n    if (match) {\n      try {\n        major = parseInt(match[1]);\n        minor = parseInt(match[2]);\n      } catch (e) {}\n    }\n  }\n  return {\n    major: major,\n    minor: minor\n  };\n}\nfunction getOSName() {\n  var OSName = 'Unknown';\n  if (isReactNative()) {\n    if (window && window.DailyNativeUtils && window.DailyNativeUtils.platform && window.DailyNativeUtils.platform.OS) {\n      // in case bowser changes its consts, we don't have to\n      if (window.DailyNativeUtils.platform.OS === 'ios') {\n        OSName = 'iOS';\n      } else if (window.DailyNativeUtils.platform.OS === 'android') {\n        OSName = 'Android';\n      } else {\n        OSName = window.DailyNativeUtils.platform.OS;\n      }\n    }\n    return OSName;\n  }\n\n  // platform module\n  if (typeof window !== 'undefined' && window.navigator && window.navigator.userAgent) {\n    try {\n      var navAgentInfo = bowser__WEBPACK_IMPORTED_MODULE_0___default().getParser(window.navigator.userAgent);\n      var bowserName = navAgentInfo.getOSName();\n      // this seems unnecessary, i know. but it defends against\n      // changes to bowser\n      switch (bowserName) {\n        case 'macOS':\n          OSName = 'macOS';\n          break;\n        case 'Windows':\n          OSName = 'Windows';\n          break;\n        case 'Linux':\n          OSName = 'Linux';\n          break;\n        case 'iOS':\n          OSName = 'iOS';\n          break;\n        case 'Android':\n          OSName = 'Android';\n          break;\n        default:\n          OSName = bowserName;\n          break;\n      }\n    } catch (error) {\n      console.log('bowser error', error);\n      // pass\n    }\n  }\n\n  return OSName;\n}\nfunction isAudioOutputSelectionDisallowed() {\n  // Disallow audio output selection if we're on a version of Firefox where\n  // doing so (using setSinkId) results in echo cancellation breaking.\n  //\n  // Note that prior to the \"broken\" version of Firefox, audio output device\n  // selection wasn't supported in Firefox anyway; it was a new feature that\n  // shipped with a show-stopping bug. So by disallowing audio output selection,\n  // we're just carrying forward Firefox's old (but still pretty recent)\n  // behavior until the bug is fixed.\n  //\n  // Once the fix lands (https://bugzilla.mozilla.org/show_bug.cgi?id=1849108),\n  // we'll need to release another version of daily-js enabling audio output\n  // selection for newer versions of Firefox that include the fix.\n  return getBrowserName() === 'Firefox' && getBrowserVersion().major > 115;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/shared-with-pluot-core/Environment.js\n");

/***/ }),

/***/ "./src/shared-with-pluot-core/SessionData.js":
/*!***************************************************!*\
  !*** ./src/shared-with-pluot-core/SessionData.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MERGE_STRATEGIES\": function() { return /* binding */ MERGE_STRATEGIES; },\n/* harmony export */   \"REPLACE_STRATEGY\": function() { return /* binding */ REPLACE_STRATEGY; },\n/* harmony export */   \"SHALLOW_MERGE_STRATEGY\": function() { return /* binding */ SHALLOW_MERGE_STRATEGY; },\n/* harmony export */   \"SessionData\": function() { return /* binding */ SessionData; },\n/* harmony export */   \"SessionDataClientUpdateQueue\": function() { return /* binding */ SessionDataClientUpdateQueue; },\n/* harmony export */   \"SessionDataUpdate\": function() { return /* binding */ SessionDataUpdate; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var dequal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dequal */ \"./node_modules/dequal/dist/index.mjs\");\n/* harmony import */ var _CommonIncludes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./CommonIncludes */ \"./src/shared-with-pluot-core/CommonIncludes.js\");\n\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n\nvar REPLACE_STRATEGY = 'replace';\nvar SHALLOW_MERGE_STRATEGY = 'shallow-merge';\nvar MERGE_STRATEGIES = [REPLACE_STRATEGY, SHALLOW_MERGE_STRATEGY];\n\n// Explanation of public meeting-session-data-related classes:\n// - Client side (this file):\n//   - SessionDataUpdate: used on the client side to validate & encapsulate\n//     user-specified updates to meeting session data.\n//   - SessionDataClientUpdateQueue: used on the client side to enqueue multiple\n//     user-specified updates before flushing them to the server as a single\n//     payload.\n// - Server side (other file, skyliner-express/app/SessionDataServerStore.js):\n//   - SessionDataServerStore: used on the SFU side to interact with stored\n//     meeting session data, including updating the data and listening to\n//     changes to that data (which may have been updated via a different SFU).\n\n// Check whether data is a Plain Old JavaScript Object (a map-like object),\n// which can be shallow-merged with another.\n// From https://masteringjs.io/tutorials/fundamentals/pojo.\nfunction isPlainOldJavaScriptObject(data) {\n  if (data == null || (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(data) !== 'object') {\n    return false;\n  }\n  var proto = Object.getPrototypeOf(data);\n  if (proto == null) {\n    return true;\n  }\n  return proto === Object.prototype;\n}\n\n// Meeting session data.\n// CONSIDER THIS \"PRIVATE\": ONLY MEANT FOR USE BY SESSIONDATACLIENTUPDATEQUEUE\n// AND SESSIONDATASERVERSTORE.\nvar SessionData = /*#__PURE__*/function () {\n  function SessionData() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, SessionData);\n    this.data = {};\n  }\n\n  // Updates the meeting session data with the given SessionDataUpdate, WITHOUT\n  // deleting keys for undefined fields during a 'shallow-merge'`.\n  // Assumes sessionDataUpdate is valid.\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(SessionData, [{\n    key: \"update\",\n    value: function update(sessionDataUpdate) {\n      if (sessionDataUpdate.isNoOp()) {\n        return;\n      }\n      switch (sessionDataUpdate.mergeStrategy) {\n        case SHALLOW_MERGE_STRATEGY:\n          this.data = _objectSpread(_objectSpread({}, this.data), sessionDataUpdate.data);\n          break;\n        case REPLACE_STRATEGY:\n          this.data = sessionDataUpdate.data;\n          break;\n      }\n    }\n\n    // Deletes the specified keys from the meeting session data.\n  }, {\n    key: \"deleteKeys\",\n    value: function deleteKeys(keys) {\n      if (Array.isArray(keys)) {\n        var _iterator = _createForOfIteratorHelper(keys),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var key = _step.value;\n            if (isPlainOldJavaScriptObject(this.data)) {\n              delete this.data[key];\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n\n    // Whether the current data exceeds the max size.\n  }, {\n    key: \"exceedsMaxSize\",\n    value: function exceedsMaxSize() {\n      return JSON.stringify(this.data).length > _CommonIncludes__WEBPACK_IMPORTED_MODULE_5__.MAX_SESSION_DATA_SIZE;\n    }\n  }]);\n  return SessionData;\n}();\n\n// An update to meeting session data.\n// Guaranteed to be valid upon construction, which means:\n// - mergeStrategy is either 'replace' or 'shallow-merge'\n// - data is a plain (map-like) object\n// - data isn't too big\nvar SessionDataUpdate = /*#__PURE__*/function () {\n  function SessionDataUpdate() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      data = _ref.data,\n      _ref$mergeStrategy = _ref.mergeStrategy,\n      mergeStrategy = _ref$mergeStrategy === void 0 ? REPLACE_STRATEGY : _ref$mergeStrategy;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, SessionDataUpdate);\n    SessionDataUpdate._validateMergeStrategy(mergeStrategy);\n    SessionDataUpdate._validateData(data, mergeStrategy);\n    this.mergeStrategy = mergeStrategy;\n    this.data = data;\n  }\n\n  // Whether this update is a no-op.\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(SessionDataUpdate, [{\n    key: \"isNoOp\",\n    value: function isNoOp() {\n      return SessionDataUpdate.isNoOpUpdate(this.data, this.mergeStrategy);\n    }\n\n    // Whether an update comprised of the given data and mergeStrategy would be a\n    // no-op.\n  }], [{\n    key: \"isNoOpUpdate\",\n    value: function isNoOpUpdate(data, mergeStrategy) {\n      return Object.keys(data).length === 0 && mergeStrategy === SHALLOW_MERGE_STRATEGY;\n    }\n\n    // Validate merge strategy, throwing an error if invalid.\n    // Assumes mergeStrategy is not undefined.\n  }, {\n    key: \"_validateMergeStrategy\",\n    value: function _validateMergeStrategy(mergeStrategy) {\n      if (!MERGE_STRATEGIES.includes(mergeStrategy)) {\n        throw Error(\"Unrecognized mergeStrategy provided. Options are: [\".concat(MERGE_STRATEGIES, \"]\"));\n      }\n    }\n\n    // Validate data with the given merge strategy, throwing an error if invalid.\n    // Assumes mergeStrategy is valid.\n  }, {\n    key: \"_validateData\",\n    value: function _validateData(data, mergeStrategy) {\n      // Data must be a plain (map-like) object.\n      if (!isPlainOldJavaScriptObject(data)) {\n        throw Error(\"Meeting session data must be a plain (map-like) object\");\n      }\n\n      // Check that what goes in will be the same coming out :)\n      // (Make an exception for top-level 'undefined's with 'shallow-merge',\n      // though, since those are meaningful and will be translated into key\n      // deletions).\n      var dataStr;\n      try {\n        dataStr = JSON.stringify(data);\n        if (mergeStrategy === REPLACE_STRATEGY) {\n          var out = JSON.parse(dataStr);\n          if (!(0,dequal__WEBPACK_IMPORTED_MODULE_4__.dequal)(out, data)) {\n            console.warn(\"The meeting session data provided will be modified when serialized.\", out, data);\n          }\n        } else if (mergeStrategy === SHALLOW_MERGE_STRATEGY) {\n          for (var key in data) {\n            if (Object.hasOwnProperty.call(data, key)) {\n              if (data[key] !== undefined) {\n                var _out = JSON.parse(JSON.stringify(data[key]));\n                if (!(0,dequal__WEBPACK_IMPORTED_MODULE_4__.dequal)(data[key], _out)) {\n                  console.warn(\"At least one key in the meeting session data provided will be modified when serialized.\", _out, data[key]);\n                }\n              }\n            }\n          }\n        }\n      } catch (e) {\n        throw Error(\"Meeting session data must be serializable to JSON: \".concat(e));\n      }\n\n      // Check the size of the payload\n      if (dataStr.length > _CommonIncludes__WEBPACK_IMPORTED_MODULE_5__.MAX_SESSION_DATA_SIZE) {\n        throw Error(\"Meeting session data is too large (\".concat(dataStr.length, \" characters). Maximum size suppported is \").concat(_CommonIncludes__WEBPACK_IMPORTED_MODULE_5__.MAX_SESSION_DATA_SIZE, \".\"));\n      }\n    }\n  }]);\n  return SessionDataUpdate;\n}();\n\n// The client-side update \"queue\" where meeting session data updates temporarily\n// live before getting flushed to the server (necessary thanks to client-side\n// debouncing).\n// Note that \"queue\" is in quotes because, though it behaves like a queue, in\n// its implementation the updates are actually merged in place into a single\n// server update.\nvar SessionDataClientUpdateQueue = /*#__PURE__*/function () {\n  function SessionDataClientUpdateQueue() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, SessionDataClientUpdateQueue);\n    this._resetQueue();\n  }\n\n  // \"Enqueues\" a SessionDataUpdate.\n  // Assumes sessionDataUpdate is valid.\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(SessionDataClientUpdateQueue, [{\n    key: \"enqueueUpdate\",\n    value: function enqueueUpdate(sessionDataUpdate) {\n      // If update is a no-op, don't enqueue it.\n      if (sessionDataUpdate.isNoOp()) {\n        return;\n      }\n\n      // If \"queue\" is empty, initialize it.\n      if (!this.sessionData) {\n        this.sessionData = new SessionData();\n        this.mergeStrategyForNextServerUpdate = sessionDataUpdate.mergeStrategy;\n      }\n\n      // Update data in the \"queue\".\n      this.sessionData.update(sessionDataUpdate);\n\n      // If this was a 'replace' update, set 'replace' as the strategy for the\n      // next server update, regardless of incoming client updates until then.\n      if (sessionDataUpdate.mergeStrategy === REPLACE_STRATEGY) {\n        this.mergeStrategyForNextServerUpdate = REPLACE_STRATEGY;\n      }\n    }\n\n    // Flush queue into an update payload to send to the server.\n    // Returns null if there's no update to send, or it'd be a no-op.\n  }, {\n    key: \"flushToServerUpdatePayload\",\n    value: function flushToServerUpdatePayload() {\n      // If nothing's enqueued, return no payload.\n      if (!this.sessionData) {\n        return null;\n      }\n\n      // Make server payload.\n      var payload = {\n        data: this.sessionData.data,\n        mergeStrategy: this.mergeStrategyForNextServerUpdate\n      };\n\n      // If this is a merge and any top-level keys are undefined, translate them\n      // into explicit \"keys to delete\" in the payload; otherwise they'd be\n      // stripped during JSON serialization.\n      if (payload.mergeStrategy === SHALLOW_MERGE_STRATEGY) {\n        for (var key in payload.data) {\n          if (Object.hasOwnProperty.call(payload.data, key)) {\n            if (payload.data[key] === undefined) {\n              if (!payload.keysToDelete) {\n                payload.keysToDelete = [];\n              }\n              payload.keysToDelete.push(key);\n              delete payload.data[key];\n            }\n          }\n        }\n      }\n      this._resetQueue();\n      return payload;\n    }\n  }, {\n    key: \"_resetQueue\",\n    value: function _resetQueue() {\n      this.sessionData = null;\n      this.mergeStrategyForNextServerUpdate = false;\n    }\n  }]);\n  return SessionDataClientUpdateQueue;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/shared-with-pluot-core/SessionData.js\n");

/***/ }),

/***/ "./src/shared-with-pluot-core/TrackStateUtil.js":
/*!******************************************************!*\
  !*** ./src/shared-with-pluot-core/TrackStateUtil.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getTrackDeviceId_v2CAM\": function() { return /* binding */ getTrackDeviceId_v2CAM; },\n/* harmony export */   \"getTrackDeviceLabel_v2CAM\": function() { return /* binding */ getTrackDeviceLabel_v2CAM; },\n/* harmony export */   \"isPlayable\": function() { return /* binding */ isPlayable; },\n/* harmony export */   \"maybeTransientMutedTracks\": function() { return /* binding */ maybeTransientMutedTracks; }\n/* harmony export */ });\n/* harmony import */ var _Environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Environment */ \"./src/shared-with-pluot-core/Environment.js\");\n\n\n// remote tracks oftentimes toggle between muted/unmuted in quick succession.\n// For this reason, we don't actually consider a track muted until it has been\n// so for 3 seconds. During this period, the track is added to the\n// maybeTransientMutedTracks list below so that we can ignore and treat them\n// as not muted in `isTrackMuted()`.\n// Note:  We can't use this same approach for the local screenshare because we\n// don't have a mute handler attached but mainly because they remain muted but\n// valid for long periods of as long as they are static.\nvar maybeTransientMutedTracks = new Set();\n\n// Returns whether `track` is `muted`.\n// Assumes that `track` exists.\nfunction isTrackMuted(track, _ref) {\n  var isLocalScreenVideo = _ref.isLocalScreenVideo;\n  // In Chromium, local screen share tracks become `muted` whenever their\n  // content is not changing (e.g. when you're not scrolling). This really\n  // messes with our ability to determine whether the track is *actually* muted,\n  // so here we simply treat them as not `muted` (the overwhelmingly likely\n  // scenario).\n  if (isLocalScreenVideo && (0,_Environment__WEBPACK_IMPORTED_MODULE_0__.getBrowserName)() === 'Chrome') {\n    return false;\n  }\n  return track.muted && !maybeTransientMutedTracks.has(track.id);\n}\nfunction isPlayable(track, _ref2) {\n  var isLocalScreenVideo = _ref2.isLocalScreenVideo;\n  return track && track.readyState === 'live' && !isTrackMuted(track, {\n    isLocalScreenVideo: isLocalScreenVideo\n  });\n}\n\n// Only for use with v2CamAndMic (should be renamed when v1 cam and mic code\n// path is removed).\n// Assumes track is non-null/undefined.\nfunction getTrackDeviceId_v2CAM(track) {\n  var _track$getSettings;\n  return track.isProcessed ? track._deviceId // undefined if base track is custom (i.e. not Daily-managed)\n  : track._treatAsDefaultDevice ? 'default' : (_track$getSettings = track.getSettings) === null || _track$getSettings === void 0 ? void 0 : _track$getSettings.call(track).deviceId;\n}\n\n// Only for use with v2CamAndMic (should be renamed when v1 cam and mic code\n// path is removed).\n// Assumes track is non-null/undefined.\nfunction getTrackDeviceLabel_v2CAM(track) {\n  return track.isProcessed ? track._label // undefined if base track is custom (i.e. not Daily-managed)\n  : track._treatAsDefaultDevice ? track._defaultDeviceLabel : track.label;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hhcmVkLXdpdGgtcGx1b3QtY29yZS9UcmFja1N0YXRlVXRpbC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUErQzs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLElBQUlDLHlCQUF5QixHQUFHLElBQUlDLEdBQUcsQ0FBQyxDQUFDOztBQUVoRDtBQUNBO0FBQ0EsU0FBU0MsWUFBWUEsQ0FBQ0MsS0FBSyxFQUFBQyxJQUFBLEVBQTBCO0VBQUEsSUFBdEJDLGtCQUFrQixHQUFBRCxJQUFBLENBQWxCQyxrQkFBa0I7RUFDL0M7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBLElBQUlBLGtCQUFrQixJQUFJTiw0REFBYyxDQUFDLENBQUMsS0FBSyxRQUFRLEVBQUU7SUFDdkQsT0FBTyxLQUFLO0VBQ2Q7RUFFQSxPQUFPSSxLQUFLLENBQUNHLEtBQUssSUFBSSxDQUFDTix5QkFBeUIsQ0FBQ08sR0FBRyxDQUFDSixLQUFLLENBQUNLLEVBQUUsQ0FBQztBQUNoRTtBQUVPLFNBQVNDLFVBQVVBLENBQUNOLEtBQUssRUFBQU8sS0FBQSxFQUEwQjtFQUFBLElBQXRCTCxrQkFBa0IsR0FBQUssS0FBQSxDQUFsQkwsa0JBQWtCO0VBQ3BELE9BQ0VGLEtBQUssSUFDTEEsS0FBSyxDQUFDUSxVQUFVLEtBQUssTUFBTSxJQUMzQixDQUFDVCxZQUFZLENBQUNDLEtBQUssRUFBRTtJQUFFRSxrQkFBa0IsRUFBbEJBO0VBQW1CLENBQUMsQ0FBQztBQUVoRDs7QUFFQTtBQUNBO0FBQ0E7QUFDTyxTQUFTTyxzQkFBc0JBLENBQUNULEtBQUssRUFBRTtFQUFBLElBQUFVLGtCQUFBO0VBQzVDLE9BQU9WLEtBQUssQ0FBQ1csV0FBVyxHQUNwQlgsS0FBSyxDQUFDWSxTQUFTLENBQUM7RUFBQSxFQUNoQlosS0FBSyxDQUFDYSxxQkFBcUIsR0FDM0IsU0FBUyxJQUFBSCxrQkFBQSxHQUNUVixLQUFLLENBQUNjLFdBQVcsY0FBQUosa0JBQUEsdUJBQWpCQSxrQkFBQSxDQUFBSyxJQUFBLENBQUFmLEtBQW9CLENBQUMsQ0FBQ2dCLFFBQVE7QUFDcEM7O0FBRUE7QUFDQTtBQUNBO0FBQ08sU0FBU0MseUJBQXlCQSxDQUFDakIsS0FBSyxFQUFFO0VBQy9DLE9BQU9BLEtBQUssQ0FBQ1csV0FBVyxHQUNwQlgsS0FBSyxDQUFDa0IsTUFBTSxDQUFDO0VBQUEsRUFDYmxCLEtBQUssQ0FBQ2EscUJBQXFCLEdBQzNCYixLQUFLLENBQUNtQixtQkFBbUIsR0FDekJuQixLQUFLLENBQUNvQixLQUFLO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9zcmMvc2hhcmVkLXdpdGgtcGx1b3QtY29yZS9UcmFja1N0YXRlVXRpbC5qcz81MDQ4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEJyb3dzZXJOYW1lIH0gZnJvbSAnLi9FbnZpcm9ubWVudCc7XG5cbi8vIHJlbW90ZSB0cmFja3Mgb2Z0ZW50aW1lcyB0b2dnbGUgYmV0d2VlbiBtdXRlZC91bm11dGVkIGluIHF1aWNrIHN1Y2Nlc3Npb24uXG4vLyBGb3IgdGhpcyByZWFzb24sIHdlIGRvbid0IGFjdHVhbGx5IGNvbnNpZGVyIGEgdHJhY2sgbXV0ZWQgdW50aWwgaXQgaGFzIGJlZW5cbi8vIHNvIGZvciAzIHNlY29uZHMuIER1cmluZyB0aGlzIHBlcmlvZCwgdGhlIHRyYWNrIGlzIGFkZGVkIHRvIHRoZVxuLy8gbWF5YmVUcmFuc2llbnRNdXRlZFRyYWNrcyBsaXN0IGJlbG93IHNvIHRoYXQgd2UgY2FuIGlnbm9yZSBhbmQgdHJlYXQgdGhlbVxuLy8gYXMgbm90IG11dGVkIGluIGBpc1RyYWNrTXV0ZWQoKWAuXG4vLyBOb3RlOiAgV2UgY2FuJ3QgdXNlIHRoaXMgc2FtZSBhcHByb2FjaCBmb3IgdGhlIGxvY2FsIHNjcmVlbnNoYXJlIGJlY2F1c2Ugd2Vcbi8vIGRvbid0IGhhdmUgYSBtdXRlIGhhbmRsZXIgYXR0YWNoZWQgYnV0IG1haW5seSBiZWNhdXNlIHRoZXkgcmVtYWluIG11dGVkIGJ1dFxuLy8gdmFsaWQgZm9yIGxvbmcgcGVyaW9kcyBvZiBhcyBsb25nIGFzIHRoZXkgYXJlIHN0YXRpYy5cbmV4cG9ydCBsZXQgbWF5YmVUcmFuc2llbnRNdXRlZFRyYWNrcyA9IG5ldyBTZXQoKTtcblxuLy8gUmV0dXJucyB3aGV0aGVyIGB0cmFja2AgaXMgYG11dGVkYC5cbi8vIEFzc3VtZXMgdGhhdCBgdHJhY2tgIGV4aXN0cy5cbmZ1bmN0aW9uIGlzVHJhY2tNdXRlZCh0cmFjaywgeyBpc0xvY2FsU2NyZWVuVmlkZW8gfSkge1xuICAvLyBJbiBDaHJvbWl1bSwgbG9jYWwgc2NyZWVuIHNoYXJlIHRyYWNrcyBiZWNvbWUgYG11dGVkYCB3aGVuZXZlciB0aGVpclxuICAvLyBjb250ZW50IGlzIG5vdCBjaGFuZ2luZyAoZS5nLiB3aGVuIHlvdSdyZSBub3Qgc2Nyb2xsaW5nKS4gVGhpcyByZWFsbHlcbiAgLy8gbWVzc2VzIHdpdGggb3VyIGFiaWxpdHkgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIHRyYWNrIGlzICphY3R1YWxseSogbXV0ZWQsXG4gIC8vIHNvIGhlcmUgd2Ugc2ltcGx5IHRyZWF0IHRoZW0gYXMgbm90IGBtdXRlZGAgKHRoZSBvdmVyd2hlbG1pbmdseSBsaWtlbHlcbiAgLy8gc2NlbmFyaW8pLlxuICBpZiAoaXNMb2NhbFNjcmVlblZpZGVvICYmIGdldEJyb3dzZXJOYW1lKCkgPT09ICdDaHJvbWUnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHRyYWNrLm11dGVkICYmICFtYXliZVRyYW5zaWVudE11dGVkVHJhY2tzLmhhcyh0cmFjay5pZCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1BsYXlhYmxlKHRyYWNrLCB7IGlzTG9jYWxTY3JlZW5WaWRlbyB9KSB7XG4gIHJldHVybiAoXG4gICAgdHJhY2sgJiZcbiAgICB0cmFjay5yZWFkeVN0YXRlID09PSAnbGl2ZScgJiZcbiAgICAhaXNUcmFja011dGVkKHRyYWNrLCB7IGlzTG9jYWxTY3JlZW5WaWRlbyB9KVxuICApO1xufVxuXG4vLyBPbmx5IGZvciB1c2Ugd2l0aCB2MkNhbUFuZE1pYyAoc2hvdWxkIGJlIHJlbmFtZWQgd2hlbiB2MSBjYW0gYW5kIG1pYyBjb2RlXG4vLyBwYXRoIGlzIHJlbW92ZWQpLlxuLy8gQXNzdW1lcyB0cmFjayBpcyBub24tbnVsbC91bmRlZmluZWQuXG5leHBvcnQgZnVuY3Rpb24gZ2V0VHJhY2tEZXZpY2VJZF92MkNBTSh0cmFjaykge1xuICByZXR1cm4gdHJhY2suaXNQcm9jZXNzZWRcbiAgICA/IHRyYWNrLl9kZXZpY2VJZCAvLyB1bmRlZmluZWQgaWYgYmFzZSB0cmFjayBpcyBjdXN0b20gKGkuZS4gbm90IERhaWx5LW1hbmFnZWQpXG4gICAgOiB0cmFjay5fdHJlYXRBc0RlZmF1bHREZXZpY2VcbiAgICA/ICdkZWZhdWx0J1xuICAgIDogdHJhY2suZ2V0U2V0dGluZ3M/LigpLmRldmljZUlkO1xufVxuXG4vLyBPbmx5IGZvciB1c2Ugd2l0aCB2MkNhbUFuZE1pYyAoc2hvdWxkIGJlIHJlbmFtZWQgd2hlbiB2MSBjYW0gYW5kIG1pYyBjb2RlXG4vLyBwYXRoIGlzIHJlbW92ZWQpLlxuLy8gQXNzdW1lcyB0cmFjayBpcyBub24tbnVsbC91bmRlZmluZWQuXG5leHBvcnQgZnVuY3Rpb24gZ2V0VHJhY2tEZXZpY2VMYWJlbF92MkNBTSh0cmFjaykge1xuICByZXR1cm4gdHJhY2suaXNQcm9jZXNzZWRcbiAgICA/IHRyYWNrLl9sYWJlbCAvLyB1bmRlZmluZWQgaWYgYmFzZSB0cmFjayBpcyBjdXN0b20gKGkuZS4gbm90IERhaWx5LW1hbmFnZWQpXG4gICAgOiB0cmFjay5fdHJlYXRBc0RlZmF1bHREZXZpY2VcbiAgICA/IHRyYWNrLl9kZWZhdWx0RGV2aWNlTGFiZWxcbiAgICA6IHRyYWNrLmxhYmVsO1xufVxuIl0sIm5hbWVzIjpbImdldEJyb3dzZXJOYW1lIiwibWF5YmVUcmFuc2llbnRNdXRlZFRyYWNrcyIsIlNldCIsImlzVHJhY2tNdXRlZCIsInRyYWNrIiwiX3JlZiIsImlzTG9jYWxTY3JlZW5WaWRlbyIsIm11dGVkIiwiaGFzIiwiaWQiLCJpc1BsYXlhYmxlIiwiX3JlZjIiLCJyZWFkeVN0YXRlIiwiZ2V0VHJhY2tEZXZpY2VJZF92MkNBTSIsIl90cmFjayRnZXRTZXR0aW5ncyIsImlzUHJvY2Vzc2VkIiwiX2RldmljZUlkIiwiX3RyZWF0QXNEZWZhdWx0RGV2aWNlIiwiZ2V0U2V0dGluZ3MiLCJjYWxsIiwiZGV2aWNlSWQiLCJnZXRUcmFja0RldmljZUxhYmVsX3YyQ0FNIiwiX2xhYmVsIiwiX2RlZmF1bHREZXZpY2VMYWJlbCIsImxhYmVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/shared-with-pluot-core/TrackStateUtil.js\n");

/***/ }),

/***/ "./src/shared-with-pluot-core/script-message-channels/ReactNativeMessageChannel.js":
/*!*****************************************************************************************!*\
  !*** ./src/shared-with-pluot-core/script-message-channels/ReactNativeMessageChannel.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ReactNativeMessageChannel; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _ScriptMessageChannel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ScriptMessageChannel */ \"./src/shared-with-pluot-core/script-message-channels/ScriptMessageChannel.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils */ \"./src/utils.js\");\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n/**\n * A two-way message channel between daily-js and the call machine (pluot-core),\n * when running in a React Native context.\n */\nvar ReactNativeMessageChannel = /*#__PURE__*/function (_ScriptMessageChannel) {\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(ReactNativeMessageChannel, _ScriptMessageChannel);\n  var _super = _createSuper(ReactNativeMessageChannel);\n  function ReactNativeMessageChannel() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, ReactNativeMessageChannel);\n    _this = _super.call(this);\n\n    // A ReactNativeMessageChannel is constructed both in daily-js and the call\n    // machine. Make sure we only instantiate emitters once.\n    window.callMachineToDailyJsEmitter = window.callMachineToDailyJsEmitter || new events__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();\n    window.dailyJsToCallMachineEmitter = window.dailyJsToCallMachineEmitter || new events__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();\n    _this._wrappedListeners = {}; // Mapping between listeners and wrapped listeners\n    _this._messageCallbacks = {};\n    return _this;\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(ReactNativeMessageChannel, [{\n    key: \"addListenerForMessagesFromCallMachine\",\n    value: function addListenerForMessagesFromCallMachine(listener, callFrameId, thisValue) {\n      this._addListener(listener, window.callMachineToDailyJsEmitter, thisValue, 'received call machine message');\n    }\n  }, {\n    key: \"addListenerForMessagesFromDailyJs\",\n    value: function addListenerForMessagesFromDailyJs(listener, callFrameId, thisValue) {\n      this._addListener(listener, window.dailyJsToCallMachineEmitter, thisValue, 'received daily-js message');\n    }\n  }, {\n    key: \"sendMessageToCallMachine\",\n    value: function sendMessageToCallMachine(message, callback) {\n      this._sendMessage(message, window.dailyJsToCallMachineEmitter, 'sending message to call machine', callback);\n    }\n  }, {\n    key: \"sendMessageToDailyJs\",\n    value: function sendMessageToDailyJs(message) {\n      this._sendMessage(message, window.callMachineToDailyJsEmitter, 'sending message to daily-js');\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(listener) {\n      var wrappedListener = this._wrappedListeners[listener];\n      if (wrappedListener) {\n        // The listener was added to one of these. Might as well try removing\n        // from both (otherwise we would've needed two remove methods in this\n        // class, targeting each side of the channel).\n        window.callMachineToDailyJsEmitter.removeListener('message', wrappedListener);\n        window.dailyJsToCallMachineEmitter.removeListener('message', wrappedListener);\n        delete this._wrappedListeners[listener];\n      }\n    }\n  }, {\n    key: \"_addListener\",\n    value: function _addListener(listener, messageEmitter, thisValue, logMessage) {\n      var _this2 = this;\n      var wrappedListener = function wrappedListener(msg) {\n        // console.log(`[ReactNativeMessageChannel] ${logMessage}`, msg);\n        if (msg.callbackStamp && _this2._messageCallbacks[msg.callbackStamp]) {\n          // console.log('[ReactNativeMessageChannel] handling message as callback', msg);\n          var callbackStamp = msg.callbackStamp; // Storing here since the callback could delete msg.callbackStamp\n          _this2._messageCallbacks[callbackStamp].call(thisValue, msg);\n          delete _this2._messageCallbacks[callbackStamp];\n        }\n        listener.call(thisValue, msg);\n      };\n      this._wrappedListeners[listener] = wrappedListener;\n      messageEmitter.addListener('message', wrappedListener);\n    }\n  }, {\n    key: \"_sendMessage\",\n    value: function _sendMessage(message, messageEmitter, logMessage, callback) {\n      if (callback) {\n        var stamp = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.randomStringId)();\n        this._messageCallbacks[stamp] = callback;\n        message.callbackStamp = stamp;\n      }\n      // console.log(`[ReactNativeMessageChannel] ${logMessage}`, message);\n      messageEmitter.emit('message', message);\n    }\n  }]);\n  return ReactNativeMessageChannel;\n}(_ScriptMessageChannel__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/shared-with-pluot-core/script-message-channels/ReactNativeMessageChannel.js\n");

/***/ }),

/***/ "./src/shared-with-pluot-core/script-message-channels/ScriptMessageChannel.js":
/*!************************************************************************************!*\
  !*** ./src/shared-with-pluot-core/script-message-channels/ScriptMessageChannel.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ScriptMessageChannel; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils */ \"./src/utils.js\");\n\n\n\n\n/**\n * A two-way message channel between daily-js and the call machine (pluot-core).\n */\nvar ScriptMessageChannel = /*#__PURE__*/function () {\n  function ScriptMessageChannel() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, ScriptMessageChannel);\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(ScriptMessageChannel, [{\n    key: \"addListenerForMessagesFromCallMachine\",\n    value:\n    /**\n     * Adds a listener for messages from the call machine (pluot-core).\n     * For use by daily-js.\n     */\n    function addListenerForMessagesFromCallMachine(listener, callFrameId, thisValue) {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_2__.notImplementedError)();\n    }\n\n    /**\n     * Adds a listener for messages from daily-js.\n     * For use by the call machine (pluot-core).\n     */\n  }, {\n    key: \"addListenerForMessagesFromDailyJs\",\n    value: function addListenerForMessagesFromDailyJs(listener, callFrameId, thisValue) {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_2__.notImplementedError)();\n    }\n\n    /**\n     * Send a message to the call machine (pluot-core).\n     * For use by daily-js.\n     */\n  }, {\n    key: \"sendMessageToCallMachine\",\n    value: function sendMessageToCallMachine(message, callback, iframe, callFrameId) {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_2__.notImplementedError)();\n    }\n\n    /**\n     * Send a message to daily-js.\n     * For use by the call machine (pluot-core).\n     */\n  }, {\n    key: \"sendMessageToDailyJs\",\n    value: function sendMessageToDailyJs(message, callFrameId) {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_2__.notImplementedError)();\n    }\n\n    /**\n     * Remove an added listener.\n     */\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(listener) {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_2__.notImplementedError)();\n    }\n  }]);\n  return ScriptMessageChannel;\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hhcmVkLXdpdGgtcGx1b3QtY29yZS9zY3JpcHQtbWVzc2FnZS1jaGFubmVscy9TY3JpcHRNZXNzYWdlQ2hhbm5lbC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBa0Q7O0FBRWxEO0FBQ0E7QUFDQTtBQUZBLElBR3FCQyxvQkFBb0I7RUFBQSxTQUFBQSxxQkFBQTtJQUFBQyxpRkFBQSxPQUFBRCxvQkFBQTtFQUFBO0VBQUFFLDhFQUFBLENBQUFGLG9CQUFBO0lBQUFHLEdBQUE7SUFBQUMsS0FBQTtJQUN2QztBQUNGO0FBQ0E7QUFDQTtJQUNFLFNBQUFDLHNDQUFzQ0MsUUFBUSxFQUFFQyxXQUFXLEVBQUVDLFNBQVMsRUFBRTtNQUN0RVQsMkRBQW1CLENBQUMsQ0FBQztJQUN2Qjs7SUFFQTtBQUNGO0FBQ0E7QUFDQTtFQUhFO0lBQUFJLEdBQUE7SUFBQUMsS0FBQSxFQUlBLFNBQUFLLGtDQUFrQ0gsUUFBUSxFQUFFQyxXQUFXLEVBQUVDLFNBQVMsRUFBRTtNQUNsRVQsMkRBQW1CLENBQUMsQ0FBQztJQUN2Qjs7SUFFQTtBQUNGO0FBQ0E7QUFDQTtFQUhFO0lBQUFJLEdBQUE7SUFBQUMsS0FBQSxFQUlBLFNBQUFNLHlCQUF5QkMsT0FBTyxFQUFFQyxRQUFRLEVBQUVDLE1BQU0sRUFBRU4sV0FBVyxFQUFFO01BQy9EUiwyREFBbUIsQ0FBQyxDQUFDO0lBQ3ZCOztJQUVBO0FBQ0Y7QUFDQTtBQUNBO0VBSEU7SUFBQUksR0FBQTtJQUFBQyxLQUFBLEVBSUEsU0FBQVUscUJBQXFCSCxPQUFPLEVBQUVKLFdBQVcsRUFBRTtNQUN6Q1IsMkRBQW1CLENBQUMsQ0FBQztJQUN2Qjs7SUFFQTtBQUNGO0FBQ0E7RUFGRTtJQUFBSSxHQUFBO0lBQUFDLEtBQUEsRUFHQSxTQUFBVyxlQUFlVCxRQUFRLEVBQUU7TUFDdkJQLDJEQUFtQixDQUFDLENBQUM7SUFDdkI7RUFBQztFQUFBLE9BQUFDLG9CQUFBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL3NyYy9zaGFyZWQtd2l0aC1wbHVvdC1jb3JlL3NjcmlwdC1tZXNzYWdlLWNoYW5uZWxzL1NjcmlwdE1lc3NhZ2VDaGFubmVsLmpzPzI5YTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbm90SW1wbGVtZW50ZWRFcnJvciB9IGZyb20gJy4uLy4uL3V0aWxzJztcblxuLyoqXG4gKiBBIHR3by13YXkgbWVzc2FnZSBjaGFubmVsIGJldHdlZW4gZGFpbHktanMgYW5kIHRoZSBjYWxsIG1hY2hpbmUgKHBsdW90LWNvcmUpLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTY3JpcHRNZXNzYWdlQ2hhbm5lbCB7XG4gIC8qKlxuICAgKiBBZGRzIGEgbGlzdGVuZXIgZm9yIG1lc3NhZ2VzIGZyb20gdGhlIGNhbGwgbWFjaGluZSAocGx1b3QtY29yZSkuXG4gICAqIEZvciB1c2UgYnkgZGFpbHktanMuXG4gICAqL1xuICBhZGRMaXN0ZW5lckZvck1lc3NhZ2VzRnJvbUNhbGxNYWNoaW5lKGxpc3RlbmVyLCBjYWxsRnJhbWVJZCwgdGhpc1ZhbHVlKSB7XG4gICAgbm90SW1wbGVtZW50ZWRFcnJvcigpO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHMgYSBsaXN0ZW5lciBmb3IgbWVzc2FnZXMgZnJvbSBkYWlseS1qcy5cbiAgICogRm9yIHVzZSBieSB0aGUgY2FsbCBtYWNoaW5lIChwbHVvdC1jb3JlKS5cbiAgICovXG4gIGFkZExpc3RlbmVyRm9yTWVzc2FnZXNGcm9tRGFpbHlKcyhsaXN0ZW5lciwgY2FsbEZyYW1lSWQsIHRoaXNWYWx1ZSkge1xuICAgIG5vdEltcGxlbWVudGVkRXJyb3IoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZW5kIGEgbWVzc2FnZSB0byB0aGUgY2FsbCBtYWNoaW5lIChwbHVvdC1jb3JlKS5cbiAgICogRm9yIHVzZSBieSBkYWlseS1qcy5cbiAgICovXG4gIHNlbmRNZXNzYWdlVG9DYWxsTWFjaGluZShtZXNzYWdlLCBjYWxsYmFjaywgaWZyYW1lLCBjYWxsRnJhbWVJZCkge1xuICAgIG5vdEltcGxlbWVudGVkRXJyb3IoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZW5kIGEgbWVzc2FnZSB0byBkYWlseS1qcy5cbiAgICogRm9yIHVzZSBieSB0aGUgY2FsbCBtYWNoaW5lIChwbHVvdC1jb3JlKS5cbiAgICovXG4gIHNlbmRNZXNzYWdlVG9EYWlseUpzKG1lc3NhZ2UsIGNhbGxGcmFtZUlkKSB7XG4gICAgbm90SW1wbGVtZW50ZWRFcnJvcigpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSBhbiBhZGRlZCBsaXN0ZW5lci5cbiAgICovXG4gIHJlbW92ZUxpc3RlbmVyKGxpc3RlbmVyKSB7XG4gICAgbm90SW1wbGVtZW50ZWRFcnJvcigpO1xuICB9XG59XG4iXSwibmFtZXMiOlsibm90SW1wbGVtZW50ZWRFcnJvciIsIlNjcmlwdE1lc3NhZ2VDaGFubmVsIiwiX2NsYXNzQ2FsbENoZWNrIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJhZGRMaXN0ZW5lckZvck1lc3NhZ2VzRnJvbUNhbGxNYWNoaW5lIiwibGlzdGVuZXIiLCJjYWxsRnJhbWVJZCIsInRoaXNWYWx1ZSIsImFkZExpc3RlbmVyRm9yTWVzc2FnZXNGcm9tRGFpbHlKcyIsInNlbmRNZXNzYWdlVG9DYWxsTWFjaGluZSIsIm1lc3NhZ2UiLCJjYWxsYmFjayIsImlmcmFtZSIsInNlbmRNZXNzYWdlVG9EYWlseUpzIiwicmVtb3ZlTGlzdGVuZXIiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/shared-with-pluot-core/script-message-channels/ScriptMessageChannel.js\n");

/***/ }),

/***/ "./src/shared-with-pluot-core/script-message-channels/WebMessageChannel.js":
/*!*********************************************************************************!*\
  !*** ./src/shared-with-pluot-core/script-message-channels/WebMessageChannel.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ WebMessageChannel; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _ScriptMessageChannel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ScriptMessageChannel */ \"./src/shared-with-pluot-core/script-message-channels/ScriptMessageChannel.js\");\n/* harmony import */ var _CommonIncludes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../CommonIncludes */ \"./src/shared-with-pluot-core/CommonIncludes.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils */ \"./src/utils.js\");\n\n\n\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n/**\n * A two-way message channel between daily-js and the call machine (pluot-core),\n * when running in a web context (in a browser or Electron).\n */\nvar WebMessageChannel = /*#__PURE__*/function (_ScriptMessageChannel) {\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(WebMessageChannel, _ScriptMessageChannel);\n  var _super = _createSuper(WebMessageChannel);\n  function WebMessageChannel() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, WebMessageChannel);\n    _this = _super.call(this);\n    _this._wrappedListeners = {}; // Mapping between listeners and wrapped listeners\n    _this._messageCallbacks = {};\n    return _this;\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(WebMessageChannel, [{\n    key: \"addListenerForMessagesFromCallMachine\",\n    value: function addListenerForMessagesFromCallMachine(listener, callFrameId, thisValue) {\n      var _this2 = this;\n      var wrappedListener = function wrappedListener(evt) {\n        if (evt.data && evt.data.what === 'iframe-call-message' && (\n        // make callFrameId addressing backwards-compatible with\n        // old versions of the library, which didn't have it\n        evt.data.callFrameId ? evt.data.callFrameId === callFrameId : true) && (evt.data.from ? evt.data.from !== 'module' : true)) {\n          var msg = _objectSpread({}, evt.data);\n          // console.log('[WebMessageChannel] received call machine message', msg);\n          delete msg.from;\n          // messages could be completely handled by callbacks\n          if (msg.callbackStamp && _this2._messageCallbacks[msg.callbackStamp]) {\n            // console.log('[WebMessageChannel] handling message as callback', msg);\n            var callbackStamp = msg.callbackStamp; // Storing here since the callback could delete msg.callbackStamp\n            _this2._messageCallbacks[callbackStamp].call(thisValue, msg);\n            delete _this2._messageCallbacks[callbackStamp];\n          }\n          // or perhaps we should handle this message based on its\n          // msg.action tag. first we'll delete internal fields so the\n          // listener function has the option of just emitting the raw\n          // message as an event\n          delete msg.what;\n          delete msg.callbackStamp;\n          listener.call(thisValue, msg);\n        }\n      };\n      this._wrappedListeners[listener] = wrappedListener;\n      window.addEventListener('message', wrappedListener);\n    }\n  }, {\n    key: \"addListenerForMessagesFromDailyJs\",\n    value: function addListenerForMessagesFromDailyJs(listener, callFrameId, thisValue) {\n      var wrappedListener = function wrappedListener(evt) {\n        if (!(evt.data && evt.data.what === _CommonIncludes__WEBPACK_IMPORTED_MODULE_7__.IFRAME_MESSAGE_MARKER && evt.data.action && (!evt.data.from || evt.data.from === 'module') && (evt.data.callFrameId && callFrameId ? evt.data.callFrameId === callFrameId : true))) {\n          return;\n        }\n        var msg = evt.data;\n        // console.log('[WebMessageChannel] received daily-js message', msg);\n        listener.call(thisValue, msg);\n      };\n      this._wrappedListeners[listener] = wrappedListener;\n      window.addEventListener('message', wrappedListener);\n    }\n  }, {\n    key: \"sendMessageToCallMachine\",\n    value: function sendMessageToCallMachine(message, callback, iframe, callFrameId) {\n      if (!callFrameId) {\n        throw new Error('undefined callFrameId. Are you trying to use a DailyCall instance previously destroyed?');\n      }\n      var msg = _objectSpread({}, message);\n      msg.what = _CommonIncludes__WEBPACK_IMPORTED_MODULE_7__.IFRAME_MESSAGE_MARKER;\n      msg.from = 'module';\n      msg.callFrameId = callFrameId;\n      if (callback) {\n        var stamp = (0,_utils__WEBPACK_IMPORTED_MODULE_8__.randomStringId)();\n        this._messageCallbacks[stamp] = callback;\n        msg.callbackStamp = stamp;\n      }\n      var w = iframe ? iframe.contentWindow : window;\n      var targetOrigin = this._callMachineTargetOrigin(iframe);\n      // There may be no targetOrigin yet if we haven't set up the iframe yet\n      // (In which case there's also no point posting the message)\n      if (targetOrigin) {\n        // console.log('[WebMessageChannel] sending message to call machine', msg);\n        w.postMessage(msg, targetOrigin);\n      } else {\n        // console.log(\n        //   \"[WebMessageChannel] not sending message to call machine, as there's no targetOrigin yet\",\n        //   msg\n        // );\n      }\n    }\n  }, {\n    key: \"sendMessageToDailyJs\",\n    value: function sendMessageToDailyJs(message, callFrameId) {\n      message.what = _CommonIncludes__WEBPACK_IMPORTED_MODULE_7__.IFRAME_MESSAGE_MARKER;\n      message.callFrameId = callFrameId;\n      message.from = 'embedded';\n      // console.log('[WebMessageChannel] sending message to daily-js', message);\n      // Note: this message is only meant for the daily-js running in the same\n      // window. IframeDriverProvider is responsible for forwarding that message\n      // up to the daily-js running in the parent window (the \"driver\" of the\n      // iframe).\n      window.postMessage(message, this._targetOriginFromWindowLocation());\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(listener) {\n      var wrappedListener = this._wrappedListeners[listener];\n      if (wrappedListener) {\n        window.removeEventListener('message', wrappedListener);\n        delete this._wrappedListeners[listener];\n      }\n    }\n\n    // Expects msg to already be packaged with all internal metadata fields\n    // (what, from, callFrameId, etc.)\n  }, {\n    key: \"forwardPackagedMessageToCallMachine\",\n    value: function forwardPackagedMessageToCallMachine(msg, iframe, newCallFrameId) {\n      var newMsg = _objectSpread({}, msg);\n      newMsg.callFrameId = newCallFrameId;\n      var w = iframe ? iframe.contentWindow : window;\n      var targetOrigin = this._callMachineTargetOrigin(iframe);\n      if (targetOrigin) {\n        // console.log(\n        //   '[WebMessageChannel] forwarding packaged message to call machine',\n        //   msg\n        // );\n        w.postMessage(newMsg, targetOrigin);\n      } else {\n        // console.log(\n        //   \"[WebMessageChannel] not forwarding packaged message to call machine, as there's no targetOrigin yet\",\n        //   msg\n        // );\n      }\n    }\n\n    // Listener will be given packaged message with all internal metadata fields\n    // (what, from, callFrameId, etc.)\n  }, {\n    key: \"addListenerForPackagedMessagesFromCallMachine\",\n    value: function addListenerForPackagedMessagesFromCallMachine(listener, callFrameId) {\n      var wrappedListener = function wrappedListener(evt) {\n        // console.log(\n        //   '[WebMessageChannel] received packaged call machine message',\n        //   msg\n        // );\n        if (evt.data && evt.data.what === 'iframe-call-message' && (\n        // make callFrameId addressing backwards-compatible with\n        // old versions of the library, which didn't have it\n        evt.data.callFrameId ? evt.data.callFrameId === callFrameId : true) && (evt.data.from ? evt.data.from !== 'module' : true)) {\n          var msg = evt.data;\n          listener(msg);\n        }\n      };\n      // For now we're still using the listener itself as the key, like in the\n      // other addListener* methods. We should probably change this everywhere to\n      // use a proper unique id.\n      this._wrappedListeners[listener] = wrappedListener;\n      window.addEventListener('message', wrappedListener);\n      return listener;\n    }\n  }, {\n    key: \"removeListenerForPackagedMessagesFromCallMachine\",\n    value: function removeListenerForPackagedMessagesFromCallMachine(listenerId) {\n      var wrappedListener = this._wrappedListeners[listenerId];\n      if (wrappedListener) {\n        window.removeEventListener('message', wrappedListener);\n        delete this._wrappedListeners[listenerId];\n      }\n    }\n\n    // The origin of the page where the call machine is running\n  }, {\n    key: \"_callMachineTargetOrigin\",\n    value: function _callMachineTargetOrigin(iframe) {\n      if (iframe) {\n        if (iframe.src) {\n          return new URL(iframe.src).origin;\n        }\n      } else {\n        return this._targetOriginFromWindowLocation();\n      }\n    }\n\n    // Converts this window's current location into something that can be used as\n    // a target origin for window.postMessage() calls.\n  }, {\n    key: \"_targetOriginFromWindowLocation\",\n    value: function _targetOriginFromWindowLocation() {\n      // According to MDN: 'posting a message to a page at a `file:` URL currently requires that the targetOrigin argument be \"*\"'\n      // https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n      return window.location.protocol === 'file:' ? '*' : window.location.origin;\n    }\n  }]);\n  return WebMessageChannel;\n}(_ScriptMessageChannel__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/shared-with-pluot-core/script-message-channels/WebMessageChannel.js\n");

/***/ }),

/***/ "./src/shared-with-pluot-core/selectors.js":
/*!*************************************************!*\
  !*** ./src/shared-with-pluot-core/selectors.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getIsRemoteTrackLoading\": function() { return /* binding */ getIsRemoteTrackLoading; },\n/* harmony export */   \"getLocalCustomTrack\": function() { return /* binding */ getLocalCustomTrack; },\n/* harmony export */   \"getLocalIsSubscribedToTrack\": function() { return /* binding */ getLocalIsSubscribedToTrack; },\n/* harmony export */   \"getLocalSubscriptionToTrack\": function() { return /* binding */ getLocalSubscriptionToTrack; },\n/* harmony export */   \"getLocalTrack\": function() { return /* binding */ getLocalTrack; },\n/* harmony export */   \"getRemoteParticipantIsSubscribedToLocalTrack\": function() { return /* binding */ getRemoteParticipantIsSubscribedToLocalTrack; },\n/* harmony export */   \"getRemoteTrack\": function() { return /* binding */ getRemoteTrack; }\n/* harmony export */ });\n/* harmony import */ var lodash_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/filter */ \"./node_modules/lodash/filter.js\");\n/* harmony import */ var lodash_filter__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_filter__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_orderBy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/orderBy */ \"./node_modules/lodash/orderBy.js\");\n/* harmony import */ var lodash_orderBy__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_orderBy__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar getLocalSubscriptionToTrack = function getLocalSubscriptionToTrack(state, id, mediaTag) {\n  return _getSubscriptionToTrack(state.local, id, mediaTag);\n};\nvar getLocalIsSubscribedToTrack = function getLocalIsSubscribedToTrack(state, id, mediaTag) {\n  return _getSubscriptionToTrack(state.local, id, mediaTag) === true;\n};\n\n// NOTE: only meant for use in P2P mode, where we have access to remote\n// participants' subscriptions info.\nvar getRemoteParticipantIsSubscribedToLocalTrack = function getRemoteParticipantIsSubscribedToLocalTrack(state, id, mediaTag) {\n  return _getSubscriptionToTrack(state.participants[id], state.local.public.id, mediaTag) === true;\n};\n\n// type is \"cam\" or \"screen\"\n// kind is \"video\" or \"audio\"\nvar getLocalTrack = function getLocalTrack(state, type, kind) {\n  return state.local.streams && state.local.streams[type] && state.local.streams[type].stream && state.local.streams[type].stream[\"get\".concat(kind === 'video' ? 'Video' : 'Audio', \"Tracks\")]()[0];\n};\n\n// kind is \"video\" or \"audio\"\n// for standard tracks, type is \"cam\" or \"screen\"\n// for custom tracks, type is the mediaTag\nvar getRemoteTrack = function getRemoteTrack(state, participantId, type, kind) {\n  var streamEntry = _getRemoteStreamEntry(state, participantId, type, kind);\n  return streamEntry && streamEntry.pendingTrack;\n};\n\n// type is \"cam\" or \"screen\"\n// kind is \"video\" or \"audio\"\nvar getIsRemoteTrackLoading = function getIsRemoteTrackLoading(state, participantId, type, kind) {\n  var participant = state.participants && state.participants[participantId];\n  var loadedTracks = participant && participant.public && participant.public.loadedTracks;\n  if (loadedTracks) {\n    if (type === 'cam') {\n      return !loadedTracks[kind];\n    } else if (type === 'screen') {\n      return !loadedTracks[\"screen\".concat(kind.charAt(0).toUpperCase() + kind.slice(1))];\n    } else {\n      return !loadedTracks[type];\n    }\n  }\n  return false;\n};\n\n// NOTE: maps 'avatar' to true. 'avatar' is deprecated with the new prebuilt ui\n// and is currently accessed directly from redux anyway (not via this selector)\n// where it's needed.\nvar _getSubscriptionToTrack = function _getSubscriptionToTrack(subscriber, subscribeeId, mediaTag) {\n  // if we don't have a participant record at all, assume that\n  // false is the safest thing to return, here\n  if (!subscriber) {\n    return false;\n  }\n  var mapToTrueFalseStaged = function mapToTrueFalseStaged(subscription) {\n    switch (subscription) {\n      case 'avatar':\n        return true;\n      case 'staged':\n        return subscription;\n      default:\n        // boolean or undefined\n        return !!subscription;\n    }\n  };\n  var sTracks = subscriber.public.subscribedTracks;\n  // Below shows the return values for all the various versions of sTracks\n  //   { ALL: true }                   -> true\n  //   { ALL: false }                  -> false\n  //   { ALL: 'staged' }               -> 'staged'\n  //   { ALL: 'avatar' }               -> true\n  //   undefined                       -> true  // this should never happen\n  //   {},                             -> false\n  //   { p2id: { }}                    -> false\n  //   { p2id: { mediaTag: true }}     -> true\n  //   { p2id: { mediaTag: false }}    -> false\n  //   { p2id: { mediaTag: 'staged' }} -> 'staged'\n  //   { p2id: { mediaTag: 'avatar' }} -> true\n  if (!(sTracks && sTracks[subscribeeId])) {\n    return sTracks ? mapToTrueFalseStaged(sTracks.ALL) : true;\n  }\n  var isCustomTrack = ['cam-audio', 'cam-video', 'screen-video', 'screen-audio', 'rmpAudio', 'rmpVideo'].indexOf(mediaTag) === -1;\n  var result;\n  if (isCustomTrack && sTracks[subscribeeId]['custom']) {\n    result = [true, 'staged'].includes(sTracks[subscribeeId]['custom']) ? mapToTrueFalseStaged(sTracks[subscribeeId]['custom']) : mapToTrueFalseStaged(sTracks[subscribeeId]['custom'][mediaTag]);\n  } else {\n    result = mapToTrueFalseStaged(sTracks[subscribeeId][mediaTag]);\n  }\n  return result;\n};\nvar _getRemoteStreamEntry = function _getRemoteStreamEntry(state, participantId, type, kind) {\n  var streams = lodash_orderBy__WEBPACK_IMPORTED_MODULE_1___default()(lodash_filter__WEBPACK_IMPORTED_MODULE_0___default()(state.streams, function (s) {\n    return s.participantId === participantId && s.type === type && s.pendingTrack && s.pendingTrack.kind === kind;\n  }), 'starttime', 'desc');\n  return streams && streams[0];\n};\nvar getLocalCustomTrack = function getLocalCustomTrack(state, trackEntryKey) {\n  var trackEntries = state.local.public.customTracks;\n  if (!(trackEntries && trackEntries[trackEntryKey])) {\n    return;\n  }\n  return trackEntries[trackEntryKey].track;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/shared-with-pluot-core/selectors.js\n");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"callObjectBundleUrl\": function() { return /* binding */ callObjectBundleUrl; },\n/* harmony export */   \"maybeProxyHttpsUrl\": function() { return /* binding */ maybeProxyHttpsUrl; },\n/* harmony export */   \"notImplementedError\": function() { return /* binding */ notImplementedError; },\n/* harmony export */   \"randomStringId\": function() { return /* binding */ randomStringId; },\n/* harmony export */   \"validateHttpUrl\": function() { return /* binding */ validateHttpUrl; }\n/* harmony export */ });\nfunction randomStringId() {\n  return Date.now() + Math.random().toString();\n}\nfunction notImplementedError() {\n  throw new Error('Method must be implemented in subclass');\n}\n\n// url assumed to start with 'https://'\nfunction maybeProxyHttpsUrl(url) {\n  if (window._dailyConfig && window._dailyConfig.proxyUrl) {\n    return window._dailyConfig.proxyUrl + (window._dailyConfig.proxyUrl.slice(-1) === '/' ? '' : '/') + url.substring(8);\n  }\n  return url;\n}\nfunction callObjectBundleUrl() {\n  // ADVANCED: if a custom bundle URL override is specified, use that.\n  if (window._dailyConfig && window._dailyConfig.callObjectBundleUrlOverride) {\n    return window._dailyConfig.callObjectBundleUrlOverride;\n  }\n\n  // 1. Dev build of daily-js --> load bundle from __devCallMachineUrl__, which\n  //    is either:\n  //    - DEV_CALL_MACHINE_URL env variable (read at build time)\n  //    - default local dev URL\n  //    See webpack or rollup config for details.\n  // 2. Prod build of daily-js --> load bundle from version-specific prod URL.\n  return  true ? \"https://daily-prebuilt-ui-static-1w0qx32zf-daily-co.vercel.app/static/call-machine-object-bundle.js\" : 0;\n}\nfunction validateHttpUrl(string) {\n  try {\n    var url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n  return true;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBTyxTQUFTQSxjQUFjQSxDQUFBLEVBQUc7RUFDL0IsT0FBT0MsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxHQUFHQyxJQUFJLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUNDLFFBQVEsQ0FBQyxDQUFDO0FBQzlDO0FBRU8sU0FBU0MsbUJBQW1CQSxDQUFBLEVBQUc7RUFDcEMsTUFBTSxJQUFJQyxLQUFLLENBQUMsd0NBQXdDLENBQUM7QUFDM0Q7O0FBRUE7QUFDTyxTQUFTQyxrQkFBa0JBLENBQUNDLEdBQUcsRUFBRTtFQUN0QyxJQUFJQyxNQUFNLENBQUNDLFlBQVksSUFBSUQsTUFBTSxDQUFDQyxZQUFZLENBQUNDLFFBQVEsRUFBRTtJQUN2RCxPQUNFRixNQUFNLENBQUNDLFlBQVksQ0FBQ0MsUUFBUSxJQUMzQkYsTUFBTSxDQUFDQyxZQUFZLENBQUNDLFFBQVEsQ0FBQ0MsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxHQUFHLEVBQUUsR0FBRyxHQUFHLENBQUMsR0FDM0RKLEdBQUcsQ0FBQ0ssU0FBUyxDQUFDLENBQUMsQ0FBQztFQUVwQjtFQUNBLE9BQU9MLEdBQUc7QUFDWjtBQUVPLFNBQVNNLG1CQUFtQkEsQ0FBQSxFQUFHO0VBQ3BDO0VBQ0EsSUFBSUwsTUFBTSxDQUFDQyxZQUFZLElBQUlELE1BQU0sQ0FBQ0MsWUFBWSxDQUFDSywyQkFBMkIsRUFBRTtJQUMxRSxPQUFPTixNQUFNLENBQUNDLFlBQVksQ0FBQ0ssMkJBQTJCO0VBQ3hEOztFQUVBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBLE9BQU9DLEtBQXNDLEdBQ3pDRyxxR0FBcUIsR0FDckJaLENBRUM7QUFDUDtBQUVPLFNBQVNlLGVBQWVBLENBQUNDLE1BQU0sRUFBRTtFQUN0QyxJQUFJO0lBQ0YsSUFBSWYsR0FBRyxHQUFHLElBQUlnQixHQUFHLENBQUNELE1BQU0sQ0FBQztFQUMzQixDQUFDLENBQUMsT0FBT0UsQ0FBQyxFQUFFO0lBQ1YsT0FBTyxLQUFLO0VBQ2Q7RUFDQSxPQUFPLElBQUk7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vc3JjL3V0aWxzLmpzPzAyNWUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHJhbmRvbVN0cmluZ0lkKCkge1xuICByZXR1cm4gRGF0ZS5ub3coKSArIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG5vdEltcGxlbWVudGVkRXJyb3IoKSB7XG4gIHRocm93IG5ldyBFcnJvcignTWV0aG9kIG11c3QgYmUgaW1wbGVtZW50ZWQgaW4gc3ViY2xhc3MnKTtcbn1cblxuLy8gdXJsIGFzc3VtZWQgdG8gc3RhcnQgd2l0aCAnaHR0cHM6Ly8nXG5leHBvcnQgZnVuY3Rpb24gbWF5YmVQcm94eUh0dHBzVXJsKHVybCkge1xuICBpZiAod2luZG93Ll9kYWlseUNvbmZpZyAmJiB3aW5kb3cuX2RhaWx5Q29uZmlnLnByb3h5VXJsKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIHdpbmRvdy5fZGFpbHlDb25maWcucHJveHlVcmwgK1xuICAgICAgKHdpbmRvdy5fZGFpbHlDb25maWcucHJveHlVcmwuc2xpY2UoLTEpID09PSAnLycgPyAnJyA6ICcvJykgK1xuICAgICAgdXJsLnN1YnN0cmluZyg4KVxuICAgICk7XG4gIH1cbiAgcmV0dXJuIHVybDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhbGxPYmplY3RCdW5kbGVVcmwoKSB7XG4gIC8vIEFEVkFOQ0VEOiBpZiBhIGN1c3RvbSBidW5kbGUgVVJMIG92ZXJyaWRlIGlzIHNwZWNpZmllZCwgdXNlIHRoYXQuXG4gIGlmICh3aW5kb3cuX2RhaWx5Q29uZmlnICYmIHdpbmRvdy5fZGFpbHlDb25maWcuY2FsbE9iamVjdEJ1bmRsZVVybE92ZXJyaWRlKSB7XG4gICAgcmV0dXJuIHdpbmRvdy5fZGFpbHlDb25maWcuY2FsbE9iamVjdEJ1bmRsZVVybE92ZXJyaWRlO1xuICB9XG5cbiAgLy8gMS4gRGV2IGJ1aWxkIG9mIGRhaWx5LWpzIC0tPiBsb2FkIGJ1bmRsZSBmcm9tIF9fZGV2Q2FsbE1hY2hpbmVVcmxfXywgd2hpY2hcbiAgLy8gICAgaXMgZWl0aGVyOlxuICAvLyAgICAtIERFVl9DQUxMX01BQ0hJTkVfVVJMIGVudiB2YXJpYWJsZSAocmVhZCBhdCBidWlsZCB0aW1lKVxuICAvLyAgICAtIGRlZmF1bHQgbG9jYWwgZGV2IFVSTFxuICAvLyAgICBTZWUgd2VicGFjayBvciByb2xsdXAgY29uZmlnIGZvciBkZXRhaWxzLlxuICAvLyAyLiBQcm9kIGJ1aWxkIG9mIGRhaWx5LWpzIC0tPiBsb2FkIGJ1bmRsZSBmcm9tIHZlcnNpb24tc3BlY2lmaWMgcHJvZCBVUkwuXG4gIHJldHVybiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50J1xuICAgID8gX19kZXZDYWxsTWFjaGluZVVybF9fXG4gICAgOiBtYXliZVByb3h5SHR0cHNVcmwoXG4gICAgICAgIGBodHRwczovL2MuZGFpbHkuY28vY2FsbC1tYWNoaW5lL3ZlcnNpb25lZC8ke19fZGFpbHlKc1ZlcnNpb25fX30vc3RhdGljL2NhbGwtbWFjaGluZS1vYmplY3QtYnVuZGxlLmpzYFxuICAgICAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlSHR0cFVybChzdHJpbmcpIHtcbiAgdHJ5IHtcbiAgICBsZXQgdXJsID0gbmV3IFVSTChzdHJpbmcpO1xuICB9IGNhdGNoIChfKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuIl0sIm5hbWVzIjpbInJhbmRvbVN0cmluZ0lkIiwiRGF0ZSIsIm5vdyIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsIm5vdEltcGxlbWVudGVkRXJyb3IiLCJFcnJvciIsIm1heWJlUHJveHlIdHRwc1VybCIsInVybCIsIndpbmRvdyIsIl9kYWlseUNvbmZpZyIsInByb3h5VXJsIiwic2xpY2UiLCJzdWJzdHJpbmciLCJjYWxsT2JqZWN0QnVuZGxlVXJsIiwiY2FsbE9iamVjdEJ1bmRsZVVybE92ZXJyaWRlIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiX19kZXZDYWxsTWFjaGluZVVybF9fIiwiY29uY2F0IiwiX19kYWlseUpzVmVyc2lvbl9fIiwidmFsaWRhdGVIdHRwVXJsIiwic3RyaW5nIiwiVVJMIiwiXyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils.js\n");

/***/ }),

/***/ "./node_modules/bowser/es5.js":
/*!************************************!*\
  !*** ./node_modules/bowser/es5.js ***!
  \************************************/
/***/ (function(module) {

eval("!function(e,t){ true?module.exports=t():0}(this,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=90)}({17:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n=r(18),i=function(){function e(){}return e.getFirstMatch=function(e,t){var r=t.match(e);return r&&r.length>0&&r[1]||\"\"},e.getSecondMatch=function(e,t){var r=t.match(e);return r&&r.length>1&&r[2]||\"\"},e.matchAndReturnConst=function(e,t,r){if(e.test(t))return r},e.getWindowsVersionName=function(e){switch(e){case\"NT\":return\"NT\";case\"XP\":return\"XP\";case\"NT 5.0\":return\"2000\";case\"NT 5.1\":return\"XP\";case\"NT 5.2\":return\"2003\";case\"NT 6.0\":return\"Vista\";case\"NT 6.1\":return\"7\";case\"NT 6.2\":return\"8\";case\"NT 6.3\":return\"8.1\";case\"NT 10.0\":return\"10\";default:return}},e.getMacOSVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),10===t[0])switch(t[1]){case 5:return\"Leopard\";case 6:return\"Snow Leopard\";case 7:return\"Lion\";case 8:return\"Mountain Lion\";case 9:return\"Mavericks\";case 10:return\"Yosemite\";case 11:return\"El Capitan\";case 12:return\"Sierra\";case 13:return\"High Sierra\";case 14:return\"Mojave\";case 15:return\"Catalina\";default:return}},e.getAndroidVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),!(1===t[0]&&t[1]<5))return 1===t[0]&&t[1]<6?\"Cupcake\":1===t[0]&&t[1]>=6?\"Donut\":2===t[0]&&t[1]<2?\"Eclair\":2===t[0]&&2===t[1]?\"Froyo\":2===t[0]&&t[1]>2?\"Gingerbread\":3===t[0]?\"Honeycomb\":4===t[0]&&t[1]<1?\"Ice Cream Sandwich\":4===t[0]&&t[1]<4?\"Jelly Bean\":4===t[0]&&t[1]>=4?\"KitKat\":5===t[0]?\"Lollipop\":6===t[0]?\"Marshmallow\":7===t[0]?\"Nougat\":8===t[0]?\"Oreo\":9===t[0]?\"Pie\":void 0},e.getVersionPrecision=function(e){return e.split(\".\").length},e.compareVersions=function(t,r,n){void 0===n&&(n=!1);var i=e.getVersionPrecision(t),s=e.getVersionPrecision(r),a=Math.max(i,s),o=0,u=e.map([t,r],(function(t){var r=a-e.getVersionPrecision(t),n=t+new Array(r+1).join(\".0\");return e.map(n.split(\".\"),(function(e){return new Array(20-e.length).join(\"0\")+e})).reverse()}));for(n&&(o=a-Math.min(i,s)),a-=1;a>=o;){if(u[0][a]>u[1][a])return 1;if(u[0][a]===u[1][a]){if(a===o)return 0;a-=1}else if(u[0][a]<u[1][a])return-1}},e.map=function(e,t){var r,n=[];if(Array.prototype.map)return Array.prototype.map.call(e,t);for(r=0;r<e.length;r+=1)n.push(t(e[r]));return n},e.find=function(e,t){var r,n;if(Array.prototype.find)return Array.prototype.find.call(e,t);for(r=0,n=e.length;r<n;r+=1){var i=e[r];if(t(i,r))return i}},e.assign=function(e){for(var t,r,n=e,i=arguments.length,s=new Array(i>1?i-1:0),a=1;a<i;a++)s[a-1]=arguments[a];if(Object.assign)return Object.assign.apply(Object,[e].concat(s));var o=function(){var e=s[t];\"object\"==typeof e&&null!==e&&Object.keys(e).forEach((function(t){n[t]=e[t]}))};for(t=0,r=s.length;t<r;t+=1)o();return e},e.getBrowserAlias=function(e){return n.BROWSER_ALIASES_MAP[e]},e.getBrowserTypeByAlias=function(e){return n.BROWSER_MAP[e]||\"\"},e}();t.default=i,e.exports=t.default},18:function(e,t,r){\"use strict\";t.__esModule=!0,t.ENGINE_MAP=t.OS_MAP=t.PLATFORMS_MAP=t.BROWSER_MAP=t.BROWSER_ALIASES_MAP=void 0;t.BROWSER_ALIASES_MAP={\"Amazon Silk\":\"amazon_silk\",\"Android Browser\":\"android\",Bada:\"bada\",BlackBerry:\"blackberry\",Chrome:\"chrome\",Chromium:\"chromium\",Electron:\"electron\",Epiphany:\"epiphany\",Firefox:\"firefox\",Focus:\"focus\",Generic:\"generic\",\"Google Search\":\"google_search\",Googlebot:\"googlebot\",\"Internet Explorer\":\"ie\",\"K-Meleon\":\"k_meleon\",Maxthon:\"maxthon\",\"Microsoft Edge\":\"edge\",\"MZ Browser\":\"mz\",\"NAVER Whale Browser\":\"naver\",Opera:\"opera\",\"Opera Coast\":\"opera_coast\",PhantomJS:\"phantomjs\",Puffin:\"puffin\",QupZilla:\"qupzilla\",QQ:\"qq\",QQLite:\"qqlite\",Safari:\"safari\",Sailfish:\"sailfish\",\"Samsung Internet for Android\":\"samsung_internet\",SeaMonkey:\"seamonkey\",Sleipnir:\"sleipnir\",Swing:\"swing\",Tizen:\"tizen\",\"UC Browser\":\"uc\",Vivaldi:\"vivaldi\",\"WebOS Browser\":\"webos\",WeChat:\"wechat\",\"Yandex Browser\":\"yandex\",Roku:\"roku\"};t.BROWSER_MAP={amazon_silk:\"Amazon Silk\",android:\"Android Browser\",bada:\"Bada\",blackberry:\"BlackBerry\",chrome:\"Chrome\",chromium:\"Chromium\",electron:\"Electron\",epiphany:\"Epiphany\",firefox:\"Firefox\",focus:\"Focus\",generic:\"Generic\",googlebot:\"Googlebot\",google_search:\"Google Search\",ie:\"Internet Explorer\",k_meleon:\"K-Meleon\",maxthon:\"Maxthon\",edge:\"Microsoft Edge\",mz:\"MZ Browser\",naver:\"NAVER Whale Browser\",opera:\"Opera\",opera_coast:\"Opera Coast\",phantomjs:\"PhantomJS\",puffin:\"Puffin\",qupzilla:\"QupZilla\",qq:\"QQ Browser\",qqlite:\"QQ Browser Lite\",safari:\"Safari\",sailfish:\"Sailfish\",samsung_internet:\"Samsung Internet for Android\",seamonkey:\"SeaMonkey\",sleipnir:\"Sleipnir\",swing:\"Swing\",tizen:\"Tizen\",uc:\"UC Browser\",vivaldi:\"Vivaldi\",webos:\"WebOS Browser\",wechat:\"WeChat\",yandex:\"Yandex Browser\"};t.PLATFORMS_MAP={tablet:\"tablet\",mobile:\"mobile\",desktop:\"desktop\",tv:\"tv\"};t.OS_MAP={WindowsPhone:\"Windows Phone\",Windows:\"Windows\",MacOS:\"macOS\",iOS:\"iOS\",Android:\"Android\",WebOS:\"WebOS\",BlackBerry:\"BlackBerry\",Bada:\"Bada\",Tizen:\"Tizen\",Linux:\"Linux\",ChromeOS:\"Chrome OS\",PlayStation4:\"PlayStation 4\",Roku:\"Roku\"};t.ENGINE_MAP={EdgeHTML:\"EdgeHTML\",Blink:\"Blink\",Trident:\"Trident\",Presto:\"Presto\",Gecko:\"Gecko\",WebKit:\"WebKit\"}},90:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(91))&&n.__esModule?n:{default:n},s=r(18);function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var o=function(){function e(){}var t,r,n;return e.getParser=function(e,t){if(void 0===t&&(t=!1),\"string\"!=typeof e)throw new Error(\"UserAgent should be a string\");return new i.default(e,t)},e.parse=function(e){return new i.default(e).getResult()},t=e,n=[{key:\"BROWSER_MAP\",get:function(){return s.BROWSER_MAP}},{key:\"ENGINE_MAP\",get:function(){return s.ENGINE_MAP}},{key:\"OS_MAP\",get:function(){return s.OS_MAP}},{key:\"PLATFORMS_MAP\",get:function(){return s.PLATFORMS_MAP}}],(r=null)&&a(t.prototype,r),n&&a(t,n),e}();t.default=o,e.exports=t.default},91:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n=u(r(92)),i=u(r(93)),s=u(r(94)),a=u(r(95)),o=u(r(17));function u(e){return e&&e.__esModule?e:{default:e}}var d=function(){function e(e,t){if(void 0===t&&(t=!1),null==e||\"\"===e)throw new Error(\"UserAgent parameter can't be empty\");this._ua=e,this.parsedResult={},!0!==t&&this.parse()}var t=e.prototype;return t.getUA=function(){return this._ua},t.test=function(e){return e.test(this._ua)},t.parseBrowser=function(){var e=this;this.parsedResult.browser={};var t=o.default.find(n.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.browser=t.describe(this.getUA())),this.parsedResult.browser},t.getBrowser=function(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()},t.getBrowserName=function(e){return e?String(this.getBrowser().name).toLowerCase()||\"\":this.getBrowser().name||\"\"},t.getBrowserVersion=function(){return this.getBrowser().version},t.getOS=function(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()},t.parseOS=function(){var e=this;this.parsedResult.os={};var t=o.default.find(i.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.os=t.describe(this.getUA())),this.parsedResult.os},t.getOSName=function(e){var t=this.getOS().name;return e?String(t).toLowerCase()||\"\":t||\"\"},t.getOSVersion=function(){return this.getOS().version},t.getPlatform=function(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()},t.getPlatformType=function(e){void 0===e&&(e=!1);var t=this.getPlatform().type;return e?String(t).toLowerCase()||\"\":t||\"\"},t.parsePlatform=function(){var e=this;this.parsedResult.platform={};var t=o.default.find(s.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.platform=t.describe(this.getUA())),this.parsedResult.platform},t.getEngine=function(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()},t.getEngineName=function(e){return e?String(this.getEngine().name).toLowerCase()||\"\":this.getEngine().name||\"\"},t.parseEngine=function(){var e=this;this.parsedResult.engine={};var t=o.default.find(a.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.engine=t.describe(this.getUA())),this.parsedResult.engine},t.parse=function(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this},t.getResult=function(){return o.default.assign({},this.parsedResult)},t.satisfies=function(e){var t=this,r={},n=0,i={},s=0;if(Object.keys(e).forEach((function(t){var a=e[t];\"string\"==typeof a?(i[t]=a,s+=1):\"object\"==typeof a&&(r[t]=a,n+=1)})),n>0){var a=Object.keys(r),u=o.default.find(a,(function(e){return t.isOS(e)}));if(u){var d=this.satisfies(r[u]);if(void 0!==d)return d}var c=o.default.find(a,(function(e){return t.isPlatform(e)}));if(c){var f=this.satisfies(r[c]);if(void 0!==f)return f}}if(s>0){var l=Object.keys(i),h=o.default.find(l,(function(e){return t.isBrowser(e,!0)}));if(void 0!==h)return this.compareVersion(i[h])}},t.isBrowser=function(e,t){void 0===t&&(t=!1);var r=this.getBrowserName().toLowerCase(),n=e.toLowerCase(),i=o.default.getBrowserTypeByAlias(n);return t&&i&&(n=i.toLowerCase()),n===r},t.compareVersion=function(e){var t=[0],r=e,n=!1,i=this.getBrowserVersion();if(\"string\"==typeof i)return\">\"===e[0]||\"<\"===e[0]?(r=e.substr(1),\"=\"===e[1]?(n=!0,r=e.substr(2)):t=[],\">\"===e[0]?t.push(1):t.push(-1)):\"=\"===e[0]?r=e.substr(1):\"~\"===e[0]&&(n=!0,r=e.substr(1)),t.indexOf(o.default.compareVersions(i,r,n))>-1},t.isOS=function(e){return this.getOSName(!0)===String(e).toLowerCase()},t.isPlatform=function(e){return this.getPlatformType(!0)===String(e).toLowerCase()},t.isEngine=function(e){return this.getEngineName(!0)===String(e).toLowerCase()},t.is=function(e,t){return void 0===t&&(t=!1),this.isBrowser(e,t)||this.isOS(e)||this.isPlatform(e)},t.some=function(e){var t=this;return void 0===e&&(e=[]),e.some((function(e){return t.is(e)}))},e}();t.default=d,e.exports=t.default},92:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n};var s=/version\\/(\\d+(\\.?_?\\d+)+)/i,a=[{test:[/googlebot/i],describe:function(e){var t={name:\"Googlebot\"},r=i.default.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/opera/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opr\\/|opios/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/SamsungBrowser/i],describe:function(e){var t={name:\"Samsung Internet for Android\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Whale/i],describe:function(e){var t={name:\"NAVER Whale Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MZBrowser/i],describe:function(e){var t={name:\"MZ Browser\"},r=i.default.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/focus/i],describe:function(e){var t={name:\"Focus\"},r=i.default.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/swing/i],describe:function(e){var t={name:\"Swing\"},r=i.default.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/coast/i],describe:function(e){var t={name:\"Opera Coast\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opt\\/\\d+(?:.?_?\\d+)+/i],describe:function(e){var t={name:\"Opera Touch\"},r=i.default.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/yabrowser/i],describe:function(e){var t={name:\"Yandex Browser\"},r=i.default.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/ucbrowser/i],describe:function(e){var t={name:\"UC Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Maxthon|mxios/i],describe:function(e){var t={name:\"Maxthon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/epiphany/i],describe:function(e){var t={name:\"Epiphany\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/puffin/i],describe:function(e){var t={name:\"Puffin\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sleipnir/i],describe:function(e){var t={name:\"Sleipnir\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/k-meleon/i],describe:function(e){var t={name:\"K-Meleon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/micromessenger/i],describe:function(e){var t={name:\"WeChat\"},r=i.default.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qqbrowser/i],describe:function(e){var t={name:/qqbrowserlite/i.test(e)?\"QQ Browser Lite\":\"QQ Browser\"},r=i.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/msie|trident/i],describe:function(e){var t={name:\"Internet Explorer\"},r=i.default.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/\\sedg\\//i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/edg([ea]|ios)/i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/vivaldi/i],describe:function(e){var t={name:\"Vivaldi\"},r=i.default.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/seamonkey/i],describe:function(e){var t={name:\"SeaMonkey\"},r=i.default.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sailfish/i],describe:function(e){var t={name:\"Sailfish\"},r=i.default.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i,e);return r&&(t.version=r),t}},{test:[/silk/i],describe:function(e){var t={name:\"Amazon Silk\"},r=i.default.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/phantom/i],describe:function(e){var t={name:\"PhantomJS\"},r=i.default.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/slimerjs/i],describe:function(e){var t={name:\"SlimerJS\"},r=i.default.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t={name:\"BlackBerry\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t={name:\"WebOS Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/bada/i],describe:function(e){var t={name:\"Bada\"},r=i.default.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/tizen/i],describe:function(e){var t={name:\"Tizen\"},r=i.default.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qupzilla/i],describe:function(e){var t={name:\"QupZilla\"},r=i.default.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/firefox|iceweasel|fxios/i],describe:function(e){var t={name:\"Firefox\"},r=i.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/electron/i],describe:function(e){var t={name:\"Electron\"},r=i.default.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MiuiBrowser/i],describe:function(e){var t={name:\"Miui\"},r=i.default.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/chromium/i],describe:function(e){var t={name:\"Chromium\"},r=i.default.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/chrome|crios|crmo/i],describe:function(e){var t={name:\"Chrome\"},r=i.default.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/GSA/i],describe:function(e){var t={name:\"Google Search\"},r=i.default.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t={name:\"Android Browser\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/playstation 4/i],describe:function(e){var t={name:\"PlayStation 4\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/safari|applewebkit/i],describe:function(e){var t={name:\"Safari\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/.*/i],describe:function(e){var t=-1!==e.search(\"\\\\(\")?/^(.*)\\/(.*)[ \\t]\\((.*)/:/^(.*)\\/(.*) /;return{name:i.default.getFirstMatch(t,e),version:i.default.getSecondMatch(t,e)}}}];t.default=a,e.exports=t.default},93:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/Roku\\/DVP/],describe:function(e){var t=i.default.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i,e);return{name:s.OS_MAP.Roku,version:t}}},{test:[/windows phone/i],describe:function(e){var t=i.default.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.WindowsPhone,version:t}}},{test:[/windows /i],describe:function(e){var t=i.default.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i,e),r=i.default.getWindowsVersionName(t);return{name:s.OS_MAP.Windows,version:t,versionName:r}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(e){var t={name:s.OS_MAP.iOS},r=i.default.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/,e);return r&&(t.version=r),t}},{test:[/macintosh/i],describe:function(e){var t=i.default.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i,e).replace(/[_\\s]/g,\".\"),r=i.default.getMacOSVersionName(t),n={name:s.OS_MAP.MacOS,version:t};return r&&(n.versionName=r),n}},{test:[/(ipod|iphone|ipad)/i],describe:function(e){var t=i.default.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i,e).replace(/[_\\s]/g,\".\");return{name:s.OS_MAP.iOS,version:t}}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t=i.default.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i,e),r=i.default.getAndroidVersionName(t),n={name:s.OS_MAP.Android,version:t};return r&&(n.versionName=r),n}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t=i.default.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i,e),r={name:s.OS_MAP.WebOS};return t&&t.length&&(r.version=t),r}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t=i.default.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i,e)||i.default.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i,e)||i.default.getFirstMatch(/\\bbb(\\d+)/i,e);return{name:s.OS_MAP.BlackBerry,version:t}}},{test:[/bada/i],describe:function(e){var t=i.default.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Bada,version:t}}},{test:[/tizen/i],describe:function(e){var t=i.default.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Tizen,version:t}}},{test:[/linux/i],describe:function(){return{name:s.OS_MAP.Linux}}},{test:[/CrOS/],describe:function(){return{name:s.OS_MAP.ChromeOS}}},{test:[/PlayStation 4/],describe:function(e){var t=i.default.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.PlayStation4,version:t}}}];t.default=a,e.exports=t.default},94:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/googlebot/i],describe:function(){return{type:\"bot\",vendor:\"Google\"}}},{test:[/huawei/i],describe:function(e){var t=i.default.getFirstMatch(/(can-l01)/i,e)&&\"Nova\",r={type:s.PLATFORMS_MAP.mobile,vendor:\"Huawei\"};return t&&(r.model=t),r}},{test:[/nexus\\s*(?:7|8|9|10).*/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Nexus\"}}},{test:[/ipad/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/kftt build/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\",model:\"Kindle Fire HD 7\"}}},{test:[/silk/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\"}}},{test:[/tablet(?! pc)/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){var t=e.test(/ipod|iphone/i),r=e.test(/like (ipod|iphone)/i);return t&&!r},describe:function(e){var t=i.default.getFirstMatch(/(ipod|iphone)/i,e);return{type:s.PLATFORMS_MAP.mobile,vendor:\"Apple\",model:t}}},{test:[/nexus\\s*[0-6].*/i,/galaxy nexus/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Nexus\"}}},{test:[/[^-]mobi/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"blackberry\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"BlackBerry\"}}},{test:function(e){return\"bada\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"windows phone\"===e.getBrowserName()},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Microsoft\"}}},{test:function(e){var t=Number(String(e.getOSVersion()).split(\".\")[0]);return\"android\"===e.getOSName(!0)&&t>=3},describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){return\"android\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"macos\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop,vendor:\"Apple\"}}},{test:function(e){return\"windows\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"linux\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"playstation 4\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}},{test:function(e){return\"roku\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}}];t.default=a,e.exports=t.default},95:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:function(e){return\"microsoft edge\"===e.getBrowserName(!0)},describe:function(e){if(/\\sedg\\//i.test(e))return{name:s.ENGINE_MAP.Blink};var t=i.default.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i,e);return{name:s.ENGINE_MAP.EdgeHTML,version:t}}},{test:[/trident/i],describe:function(e){var t={name:s.ENGINE_MAP.Trident},r=i.default.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){return e.test(/presto/i)},describe:function(e){var t={name:s.ENGINE_MAP.Presto},r=i.default.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=e.test(/gecko/i),r=e.test(/like gecko/i);return t&&!r},describe:function(e){var t={name:s.ENGINE_MAP.Gecko},r=i.default.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(apple)?webkit\\/537\\.36/i],describe:function(){return{name:s.ENGINE_MAP.Blink}}},{test:[/(apple)?webkit/i],describe:function(e){var t={name:s.ENGINE_MAP.WebKit},r=i.default.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}}];t.default=a,e.exports=t.default}})}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/bowser/es5.js\n");

/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ (function(module) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/events/events.js\n");

/***/ }),

/***/ "./node_modules/fast-equals/dist/fast-equals.js":
/*!******************************************************!*\
  !*** ./node_modules/fast-equals/dist/fast-equals.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("(function (global, factory) {\n   true ? factory(exports) :\n  0;\n}(this, function (exports) { 'use strict';\n\n  /**\n   * @constant {boolean} HAS_MAP_SUPPORT\n   */\n  var HAS_MAP_SUPPORT = typeof Map === 'function';\n  /**\n   * @constant {boolean} HAS_SET_SUPPORT\n   */\n\n  var HAS_SET_SUPPORT = typeof Set === 'function';\n  /**\n   * @constant {boolean} HAS_WEAKSET_SUPPORT\n   */\n\n  var HAS_WEAKSET_SUPPORT = typeof WeakSet === 'function';\n\n  // constants\n  var keys = Object.keys;\n  /**\n   * @function addObjectToCache\n   *\n   * @description\n   * add object to cache if it is indeed an object\n   *\n   * @param {any} object the object to potentially add to the cache\n   * @param {Object|WeakSet} cache the cache to add to\n   * @returns {void}\n   */\n\n  var addObjectToCache = function addObjectToCache(object, cache) {\n    return object && typeof object === 'object' && cache.add(object);\n  };\n  /**\n   *\n   * @param {Array<Array<any>>} pairs the pairs to check in\n   * @param {Array<any>} pairToMatch the pair to check if exists\n   * @param {function} isEqual the equality comparator\n   * @param {any} meta the meta item to pass through\n   * @returns {boolean} does the pair exist in the pairs\n   */\n\n  var hasPair = function hasPair(pairs, pairToMatch, isEqual, meta) {\n    var pair;\n\n    for (var index = 0; index < pairs.length; index++) {\n      pair = pairs[index];\n\n      if (isEqual(pair[0], pairToMatch[0], meta) && isEqual(pair[1], pairToMatch[1], meta)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * @function hasValue\n   *\n   * @description\n   * does the values include the vakye passed\n   *\n   * @param {Array<any>} values the values to check in\n   * @param {any} item the value to locate\n   * @param {function} isEqual the equality comparator\n   * @param {any} meta the meta item to pass through\n   * @returns {boolean} does the value exist in the values\n   */\n\n  var hasValue = function hasValue(values, item, isEqual, meta) {\n    for (var index = 0; index < values.length; index++) {\n      if (isEqual(values[index], item, meta)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * @function sameValueZeroEqual\n   *\n   * @description\n   * are the objects passed strictly equal or both NaN\n   *\n   * @param {any} objectA the object to compare against\n   * @param {any} objectB the object to test\n   * @returns {boolean} are the objects equal by the SameValueZero principle\n   */\n\n  var sameValueZeroEqual = function sameValueZeroEqual(objectA, objectB) {\n    return objectA === objectB || objectA !== objectA && objectB !== objectB;\n  };\n  /**\n   * @function isPlainObject\n   *\n   * @description\n   * is the object a plain object\n   *\n   * @param {any} object the object to test\n   * @returns {boolean} is the object a plain object\n   */\n\n  var isPlainObject = function isPlainObject(object) {\n    return object.constructor === Object;\n  };\n  /**\n   * @function isPromiseLike\n   *\n   * @description\n   * is the object promise-like (thenable)\n   *\n   * @param {any} object the object to test\n   * @returns {boolean} is the object promise-like\n   */\n\n  var isPromiseLike = function isPromiseLike(object) {\n    return typeof object.then === 'function';\n  };\n  /**\n   * @function isReactElement\n   *\n   * @description\n   * is the object passed a react element\n   *\n   * @param {any} object the object to test\n   * @returns {boolean} is the object a react element\n   */\n\n  var isReactElement = function isReactElement(object) {\n    return !!(object.$$typeof && object._store);\n  };\n  /**\n   * @function getNewCache\n   *\n   * @description\n   * get a new cache object to prevent circular references\n   *\n   * @returns {Object|Weakset} the new cache object\n   */\n\n  var getNewCache = function getNewCache() {\n    return HAS_WEAKSET_SUPPORT ? new WeakSet() : Object.create({\n      _values: [],\n      add: function add(value) {\n        this._values.push(value);\n      },\n      has: function has(value) {\n        return !!~this._values.indexOf(value);\n      }\n    });\n  };\n  /**\n   * @function createCircularEqual\n   *\n   * @description\n   * create a custom isEqual handler specific to circular objects\n   *\n   * @param {funtion} [isEqual] the isEqual comparator to use instead of isDeepEqual\n   * @returns {function(any, any): boolean}\n   */\n\n  var createCircularEqual = function createCircularEqual(isEqual) {\n    return function (isDeepEqual) {\n      var comparator = isEqual || isDeepEqual;\n      return function (objectA, objectB, cache) {\n        if (cache === void 0) {\n          cache = getNewCache();\n        }\n\n        var cacheHasA = cache.has(objectA);\n        var cacheHasB = cache.has(objectB);\n\n        if (cacheHasA || cacheHasB) {\n          return cacheHasA && cacheHasB;\n        }\n\n        addObjectToCache(objectA, cache);\n        addObjectToCache(objectB, cache);\n        return comparator(objectA, objectB, cache);\n      };\n    };\n  };\n  /**\n   * @function toPairs\n   *\n   * @param {Map} map the map to convert to [key, value] pairs (entries)\n   * @returns {Array<Array<*>>} the [key, value] pairs\n   */\n\n  var toPairs = function toPairs(map) {\n    var pairs = [];\n    map.forEach(function (value, key) {\n      return pairs.push([key, value]);\n    });\n    return pairs;\n  };\n  /**\n   * @function toValues\n   *\n   * @param {Set} set the set to convert to values\n   * @returns {Array<*>} the values\n   */\n\n  var toValues = function toValues(set) {\n    var values = [];\n    set.forEach(function (value) {\n      return values.push(value);\n    });\n    return values;\n  };\n  /**\n   * @function areArraysEqual\n   *\n   * @description\n   * are the arrays equal in value\n   *\n   * @param {Array<any>} arrayA the array to test\n   * @param {Array<any>} arrayB the array to test against\n   * @param {function} isEqual the comparator to determine equality\n   * @param {any} meta the meta object to pass through\n   * @returns {boolean} are the arrays equal\n   */\n\n  var areArraysEqual = function areArraysEqual(arrayA, arrayB, isEqual, meta) {\n    if (arrayA.length !== arrayB.length) {\n      return false;\n    }\n\n    for (var index = 0; index < arrayA.length; index++) {\n      if (!isEqual(arrayA[index], arrayB[index], meta)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * @function areMapsEqual\n   *\n   * @description\n   * are the maps equal in value\n   *\n   * @param {Map} mapA the map to test\n   * @param {Map} mapB the map to test against\n   * @param {function} isEqual the comparator to determine equality\n   * @param {any} meta the meta map to pass through\n   * @returns {boolean} are the maps equal\n   */\n\n  var areMapsEqual = function areMapsEqual(mapA, mapB, isEqual, meta) {\n    if (mapA.size !== mapB.size) {\n      return false;\n    }\n\n    var pairsA = toPairs(mapA);\n    var pairsB = toPairs(mapB);\n\n    for (var index = 0; index < pairsA.length; index++) {\n      if (!hasPair(pairsB, pairsA[index], isEqual, meta) || !hasPair(pairsA, pairsB[index], isEqual, meta)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * @function areObjectsEqual\n   *\n   * @description\n   * are the objects equal in value\n   *\n   * @param {Object} objectA the object to test\n   * @param {Object} objectB the object to test against\n   * @param {function} isEqual the comparator to determine equality\n   * @param {any} meta the meta object to pass through\n   * @returns {boolean} are the objects equal\n   */\n\n  var areObjectsEqual = function areObjectsEqual(objectA, objectB, isEqual, meta) {\n    var keysA = keys(objectA);\n    var keysB = keys(objectB);\n\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n\n    var key;\n\n    for (var index = 0; index < keysA.length; index++) {\n      key = keysA[index];\n\n      if (!hasValue(keysB, key, sameValueZeroEqual)) {\n        return false;\n      } // if a react element, ignore the \"_owner\" key because its not necessary for equality comparisons\n\n\n      if (key === '_owner' && isReactElement(objectA) && isReactElement(objectB)) {\n        continue;\n      }\n\n      if (!isEqual(objectA[key], objectB[key], meta)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * @function areRegExpsEqual\n   *\n   * @description\n   * are the regExps equal in value\n   *\n   * @param {RegExp} regExpA the regExp to test\n   * @param {RegExp} regExpB the regExp to test agains\n   * @returns {boolean} are the regExps equal\n   */\n\n  var areRegExpsEqual = function areRegExpsEqual(regExpA, regExpB) {\n    return regExpA.source === regExpB.source && regExpA.global === regExpB.global && regExpA.ignoreCase === regExpB.ignoreCase && regExpA.multiline === regExpB.multiline && regExpA.unicode === regExpB.unicode && regExpA.sticky === regExpB.sticky && regExpA.lastIndex === regExpB.lastIndex;\n  };\n  /**\n   * @function areSetsEqual\n   *\n   * @description\n   * are the sets equal in value\n   *\n   * @param {Set} setA the set to test\n   * @param {Set} setB the set to test against\n   * @param {function} isEqual the comparator to determine equality\n   * @param {any} meta the meta set to pass through\n   * @returns {boolean} are the sets equal\n   */\n\n  var areSetsEqual = function areSetsEqual(setA, setB, isEqual, meta) {\n    if (setA.size !== setB.size) {\n      return false;\n    }\n\n    var valuesA = toValues(setA);\n    var valuesB = toValues(setB);\n\n    for (var index = 0; index < valuesA.length; index++) {\n      if (!hasValue(valuesB, valuesA[index], isEqual, meta) || !hasValue(valuesA, valuesB[index], isEqual, meta)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  // constants\n  var isArray = Array.isArray;\n\n  var createComparator = function createComparator(createIsEqual) {\n    // eslint-disable-next-line no-use-before-define\n    var isEqual = typeof createIsEqual === 'function' ? createIsEqual(comparator) : comparator;\n    /**\n     * @function comparator\n     *\n     * @description\n     * compare the value of the two objects and return true if they are equivalent in values\n     *\n     * @param {any} objectA the object to test against\n     * @param {any} objectB the object to test\n     * @param {any} [meta] an optional meta object that is passed through to all equality test calls\n     * @returns {boolean} are objectA and objectB equivalent in value\n     */\n\n    function comparator(objectA, objectB, meta) {\n      if (sameValueZeroEqual(objectA, objectB)) {\n        return true;\n      }\n\n      var typeOfA = typeof objectA;\n\n      if (typeOfA !== typeof objectB || typeOfA !== 'object' || !objectA || !objectB) {\n        return false;\n      }\n\n      if (isPlainObject(objectA) && isPlainObject(objectB)) {\n        return areObjectsEqual(objectA, objectB, isEqual, meta);\n      }\n\n      var arrayA = isArray(objectA);\n      var arrayB = isArray(objectB);\n\n      if (arrayA || arrayB) {\n        return arrayA === arrayB && areArraysEqual(objectA, objectB, isEqual, meta);\n      }\n\n      var dateA = objectA instanceof Date;\n      var dateB = objectB instanceof Date;\n\n      if (dateA || dateB) {\n        return dateA === dateB && sameValueZeroEqual(objectA.getTime(), objectB.getTime());\n      }\n\n      var regexpA = objectA instanceof RegExp;\n      var regexpB = objectB instanceof RegExp;\n\n      if (regexpA || regexpB) {\n        return regexpA === regexpB && areRegExpsEqual(objectA, objectB);\n      }\n\n      if (isPromiseLike(objectA) || isPromiseLike(objectB)) {\n        return objectA === objectB;\n      }\n\n      if (HAS_MAP_SUPPORT) {\n        var mapA = objectA instanceof Map;\n        var mapB = objectB instanceof Map;\n\n        if (mapA || mapB) {\n          return mapA === mapB && areMapsEqual(objectA, objectB, isEqual, meta);\n        }\n      }\n\n      if (HAS_SET_SUPPORT) {\n        var setA = objectA instanceof Set;\n        var setB = objectB instanceof Set;\n\n        if (setA || setB) {\n          return setA === setB && areSetsEqual(objectA, objectB, isEqual, meta);\n        }\n      }\n\n      return areObjectsEqual(objectA, objectB, isEqual, meta);\n    }\n\n    return comparator;\n  };\n\n  // comparator\n  var circularDeepEqual = createComparator(createCircularEqual());\n  var circularShallowEqual = createComparator(createCircularEqual(sameValueZeroEqual));\n  var deepEqual = createComparator();\n  var shallowEqual = createComparator(function () {\n    return sameValueZeroEqual;\n  });\n  var index = {\n    circularDeep: circularDeepEqual,\n    circularShallow: circularShallowEqual,\n    createCustom: createComparator,\n    deep: deepEqual,\n    sameValueZero: sameValueZeroEqual,\n    shallow: shallowEqual\n  };\n\n  exports.circularDeepEqual = circularDeepEqual;\n  exports.circularShallowEqual = circularShallowEqual;\n  exports.createCustomEqual = createComparator;\n  exports.deepEqual = deepEqual;\n  exports.default = index;\n  exports.sameValueZeroEqual = sameValueZeroEqual;\n  exports.shallowEqual = shallowEqual;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=fast-equals.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/fast-equals/dist/fast-equals.js\n");

/***/ }),

/***/ "./node_modules/lodash/_DataView.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_DataView.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var getNative = __webpack_require__(/*! ./_getNative */ \"./node_modules/lodash/_getNative.js\"),\n    root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19EYXRhVmlldy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyx5REFBYztBQUN0QyxXQUFXLG1CQUFPLENBQUMsK0NBQVM7O0FBRTVCO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX0RhdGFWaWV3LmpzP2I1YTciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldE5hdGl2ZSA9IHJlcXVpcmUoJy4vX2dldE5hdGl2ZScpLFxuICAgIHJvb3QgPSByZXF1aXJlKCcuL19yb290Jyk7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi9cbnZhciBEYXRhVmlldyA9IGdldE5hdGl2ZShyb290LCAnRGF0YVZpZXcnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBEYXRhVmlldztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_DataView.js\n");

/***/ }),

/***/ "./node_modules/lodash/_Hash.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_Hash.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var hashClear = __webpack_require__(/*! ./_hashClear */ \"./node_modules/lodash/_hashClear.js\"),\n    hashDelete = __webpack_require__(/*! ./_hashDelete */ \"./node_modules/lodash/_hashDelete.js\"),\n    hashGet = __webpack_require__(/*! ./_hashGet */ \"./node_modules/lodash/_hashGet.js\"),\n    hashHas = __webpack_require__(/*! ./_hashHas */ \"./node_modules/lodash/_hashHas.js\"),\n    hashSet = __webpack_require__(/*! ./_hashSet */ \"./node_modules/lodash/_hashSet.js\");\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19IYXNoLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBTyxDQUFDLHlEQUFjO0FBQ3RDLGlCQUFpQixtQkFBTyxDQUFDLDJEQUFlO0FBQ3hDLGNBQWMsbUJBQU8sQ0FBQyxxREFBWTtBQUNsQyxjQUFjLG1CQUFPLENBQUMscURBQVk7QUFDbEMsY0FBYyxtQkFBTyxDQUFDLHFEQUFZOztBQUVsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX0hhc2guanM/ZTI0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaGFzaENsZWFyID0gcmVxdWlyZSgnLi9faGFzaENsZWFyJyksXG4gICAgaGFzaERlbGV0ZSA9IHJlcXVpcmUoJy4vX2hhc2hEZWxldGUnKSxcbiAgICBoYXNoR2V0ID0gcmVxdWlyZSgnLi9faGFzaEdldCcpLFxuICAgIGhhc2hIYXMgPSByZXF1aXJlKCcuL19oYXNoSGFzJyksXG4gICAgaGFzaFNldCA9IHJlcXVpcmUoJy4vX2hhc2hTZXQnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgaGFzaCBvYmplY3QuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW2VudHJpZXNdIFRoZSBrZXktdmFsdWUgcGFpcnMgdG8gY2FjaGUuXG4gKi9cbmZ1bmN0aW9uIEhhc2goZW50cmllcykge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGVudHJpZXMgPT0gbnVsbCA/IDAgOiBlbnRyaWVzLmxlbmd0aDtcblxuICB0aGlzLmNsZWFyKCk7XG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIGVudHJ5ID0gZW50cmllc1tpbmRleF07XG4gICAgdGhpcy5zZXQoZW50cnlbMF0sIGVudHJ5WzFdKTtcbiAgfVxufVxuXG4vLyBBZGQgbWV0aG9kcyB0byBgSGFzaGAuXG5IYXNoLnByb3RvdHlwZS5jbGVhciA9IGhhc2hDbGVhcjtcbkhhc2gucHJvdG90eXBlWydkZWxldGUnXSA9IGhhc2hEZWxldGU7XG5IYXNoLnByb3RvdHlwZS5nZXQgPSBoYXNoR2V0O1xuSGFzaC5wcm90b3R5cGUuaGFzID0gaGFzaEhhcztcbkhhc2gucHJvdG90eXBlLnNldCA9IGhhc2hTZXQ7XG5cbm1vZHVsZS5leHBvcnRzID0gSGFzaDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_Hash.js\n");

/***/ }),

/***/ "./node_modules/lodash/_ListCache.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_ListCache.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var listCacheClear = __webpack_require__(/*! ./_listCacheClear */ \"./node_modules/lodash/_listCacheClear.js\"),\n    listCacheDelete = __webpack_require__(/*! ./_listCacheDelete */ \"./node_modules/lodash/_listCacheDelete.js\"),\n    listCacheGet = __webpack_require__(/*! ./_listCacheGet */ \"./node_modules/lodash/_listCacheGet.js\"),\n    listCacheHas = __webpack_require__(/*! ./_listCacheHas */ \"./node_modules/lodash/_listCacheHas.js\"),\n    listCacheSet = __webpack_require__(/*! ./_listCacheSet */ \"./node_modules/lodash/_listCacheSet.js\");\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19MaXN0Q2FjaGUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCLG1CQUFPLENBQUMsbUVBQW1CO0FBQ2hELHNCQUFzQixtQkFBTyxDQUFDLHFFQUFvQjtBQUNsRCxtQkFBbUIsbUJBQU8sQ0FBQywrREFBaUI7QUFDNUMsbUJBQW1CLG1CQUFPLENBQUMsK0RBQWlCO0FBQzVDLG1CQUFtQixtQkFBTyxDQUFDLCtEQUFpQjs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19MaXN0Q2FjaGUuanM/NWUyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbGlzdENhY2hlQ2xlYXIgPSByZXF1aXJlKCcuL19saXN0Q2FjaGVDbGVhcicpLFxuICAgIGxpc3RDYWNoZURlbGV0ZSA9IHJlcXVpcmUoJy4vX2xpc3RDYWNoZURlbGV0ZScpLFxuICAgIGxpc3RDYWNoZUdldCA9IHJlcXVpcmUoJy4vX2xpc3RDYWNoZUdldCcpLFxuICAgIGxpc3RDYWNoZUhhcyA9IHJlcXVpcmUoJy4vX2xpc3RDYWNoZUhhcycpLFxuICAgIGxpc3RDYWNoZVNldCA9IHJlcXVpcmUoJy4vX2xpc3RDYWNoZVNldCcpO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gbGlzdCBjYWNoZSBvYmplY3QuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW2VudHJpZXNdIFRoZSBrZXktdmFsdWUgcGFpcnMgdG8gY2FjaGUuXG4gKi9cbmZ1bmN0aW9uIExpc3RDYWNoZShlbnRyaWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gZW50cmllcyA9PSBudWxsID8gMCA6IGVudHJpZXMubGVuZ3RoO1xuXG4gIHRoaXMuY2xlYXIoKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgZW50cnkgPSBlbnRyaWVzW2luZGV4XTtcbiAgICB0aGlzLnNldChlbnRyeVswXSwgZW50cnlbMV0pO1xuICB9XG59XG5cbi8vIEFkZCBtZXRob2RzIHRvIGBMaXN0Q2FjaGVgLlxuTGlzdENhY2hlLnByb3RvdHlwZS5jbGVhciA9IGxpc3RDYWNoZUNsZWFyO1xuTGlzdENhY2hlLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBsaXN0Q2FjaGVEZWxldGU7XG5MaXN0Q2FjaGUucHJvdG90eXBlLmdldCA9IGxpc3RDYWNoZUdldDtcbkxpc3RDYWNoZS5wcm90b3R5cGUuaGFzID0gbGlzdENhY2hlSGFzO1xuTGlzdENhY2hlLnByb3RvdHlwZS5zZXQgPSBsaXN0Q2FjaGVTZXQ7XG5cbm1vZHVsZS5leHBvcnRzID0gTGlzdENhY2hlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_ListCache.js\n");

/***/ }),

/***/ "./node_modules/lodash/_Map.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Map.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var getNative = __webpack_require__(/*! ./_getNative */ \"./node_modules/lodash/_getNative.js\"),\n    root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19NYXAuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLG1CQUFPLENBQUMseURBQWM7QUFDdEMsV0FBVyxtQkFBTyxDQUFDLCtDQUFTOztBQUU1QjtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19NYXAuanM/NzliYyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0TmF0aXZlID0gcmVxdWlyZSgnLi9fZ2V0TmF0aXZlJyksXG4gICAgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL1xudmFyIE1hcCA9IGdldE5hdGl2ZShyb290LCAnTWFwJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gTWFwO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_Map.js\n");

/***/ }),

/***/ "./node_modules/lodash/_MapCache.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_MapCache.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var mapCacheClear = __webpack_require__(/*! ./_mapCacheClear */ \"./node_modules/lodash/_mapCacheClear.js\"),\n    mapCacheDelete = __webpack_require__(/*! ./_mapCacheDelete */ \"./node_modules/lodash/_mapCacheDelete.js\"),\n    mapCacheGet = __webpack_require__(/*! ./_mapCacheGet */ \"./node_modules/lodash/_mapCacheGet.js\"),\n    mapCacheHas = __webpack_require__(/*! ./_mapCacheHas */ \"./node_modules/lodash/_mapCacheHas.js\"),\n    mapCacheSet = __webpack_require__(/*! ./_mapCacheSet */ \"./node_modules/lodash/_mapCacheSet.js\");\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19NYXBDYWNoZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0IsbUJBQU8sQ0FBQyxpRUFBa0I7QUFDOUMscUJBQXFCLG1CQUFPLENBQUMsbUVBQW1CO0FBQ2hELGtCQUFrQixtQkFBTyxDQUFDLDZEQUFnQjtBQUMxQyxrQkFBa0IsbUJBQU8sQ0FBQyw2REFBZ0I7QUFDMUMsa0JBQWtCLG1CQUFPLENBQUMsNkRBQWdCOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX01hcENhY2hlLmpzPzdiODMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG1hcENhY2hlQ2xlYXIgPSByZXF1aXJlKCcuL19tYXBDYWNoZUNsZWFyJyksXG4gICAgbWFwQ2FjaGVEZWxldGUgPSByZXF1aXJlKCcuL19tYXBDYWNoZURlbGV0ZScpLFxuICAgIG1hcENhY2hlR2V0ID0gcmVxdWlyZSgnLi9fbWFwQ2FjaGVHZXQnKSxcbiAgICBtYXBDYWNoZUhhcyA9IHJlcXVpcmUoJy4vX21hcENhY2hlSGFzJyksXG4gICAgbWFwQ2FjaGVTZXQgPSByZXF1aXJlKCcuL19tYXBDYWNoZVNldCcpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBtYXAgY2FjaGUgb2JqZWN0IHRvIHN0b3JlIGtleS12YWx1ZSBwYWlycy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gTWFwQ2FjaGUoZW50cmllcykge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGVudHJpZXMgPT0gbnVsbCA/IDAgOiBlbnRyaWVzLmxlbmd0aDtcblxuICB0aGlzLmNsZWFyKCk7XG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIGVudHJ5ID0gZW50cmllc1tpbmRleF07XG4gICAgdGhpcy5zZXQoZW50cnlbMF0sIGVudHJ5WzFdKTtcbiAgfVxufVxuXG4vLyBBZGQgbWV0aG9kcyB0byBgTWFwQ2FjaGVgLlxuTWFwQ2FjaGUucHJvdG90eXBlLmNsZWFyID0gbWFwQ2FjaGVDbGVhcjtcbk1hcENhY2hlLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBtYXBDYWNoZURlbGV0ZTtcbk1hcENhY2hlLnByb3RvdHlwZS5nZXQgPSBtYXBDYWNoZUdldDtcbk1hcENhY2hlLnByb3RvdHlwZS5oYXMgPSBtYXBDYWNoZUhhcztcbk1hcENhY2hlLnByb3RvdHlwZS5zZXQgPSBtYXBDYWNoZVNldDtcblxubW9kdWxlLmV4cG9ydHMgPSBNYXBDYWNoZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_MapCache.js\n");

/***/ }),

/***/ "./node_modules/lodash/_Promise.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_Promise.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var getNative = __webpack_require__(/*! ./_getNative */ \"./node_modules/lodash/_getNative.js\"),\n    root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19Qcm9taXNlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBTyxDQUFDLHlEQUFjO0FBQ3RDLFdBQVcsbUJBQU8sQ0FBQywrQ0FBUzs7QUFFNUI7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fUHJvbWlzZS5qcz8xY2VjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBnZXROYXRpdmUgPSByZXF1aXJlKCcuL19nZXROYXRpdmUnKSxcbiAgICByb290ID0gcmVxdWlyZSgnLi9fcm9vdCcpO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB0aGF0IGFyZSB2ZXJpZmllZCB0byBiZSBuYXRpdmUuICovXG52YXIgUHJvbWlzZSA9IGdldE5hdGl2ZShyb290LCAnUHJvbWlzZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFByb21pc2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_Promise.js\n");

/***/ }),

/***/ "./node_modules/lodash/_Set.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Set.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var getNative = __webpack_require__(/*! ./_getNative */ \"./node_modules/lodash/_getNative.js\"),\n    root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19TZXQuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLG1CQUFPLENBQUMseURBQWM7QUFDdEMsV0FBVyxtQkFBTyxDQUFDLCtDQUFTOztBQUU1QjtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19TZXQuanM/Yzg2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0TmF0aXZlID0gcmVxdWlyZSgnLi9fZ2V0TmF0aXZlJyksXG4gICAgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL1xudmFyIFNldCA9IGdldE5hdGl2ZShyb290LCAnU2V0Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gU2V0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_Set.js\n");

/***/ }),

/***/ "./node_modules/lodash/_SetCache.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_SetCache.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var MapCache = __webpack_require__(/*! ./_MapCache */ \"./node_modules/lodash/_MapCache.js\"),\n    setCacheAdd = __webpack_require__(/*! ./_setCacheAdd */ \"./node_modules/lodash/_setCacheAdd.js\"),\n    setCacheHas = __webpack_require__(/*! ./_setCacheHas */ \"./node_modules/lodash/_setCacheHas.js\");\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19TZXRDYWNoZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsdURBQWE7QUFDcEMsa0JBQWtCLG1CQUFPLENBQUMsNkRBQWdCO0FBQzFDLGtCQUFrQixtQkFBTyxDQUFDLDZEQUFnQjs7QUFFMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19TZXRDYWNoZS5qcz9kNjEyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBNYXBDYWNoZSA9IHJlcXVpcmUoJy4vX01hcENhY2hlJyksXG4gICAgc2V0Q2FjaGVBZGQgPSByZXF1aXJlKCcuL19zZXRDYWNoZUFkZCcpLFxuICAgIHNldENhY2hlSGFzID0gcmVxdWlyZSgnLi9fc2V0Q2FjaGVIYXMnKTtcblxuLyoqXG4gKlxuICogQ3JlYXRlcyBhbiBhcnJheSBjYWNoZSBvYmplY3QgdG8gc3RvcmUgdW5pcXVlIHZhbHVlcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0FycmF5fSBbdmFsdWVzXSBUaGUgdmFsdWVzIHRvIGNhY2hlLlxuICovXG5mdW5jdGlvbiBTZXRDYWNoZSh2YWx1ZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSB2YWx1ZXMgPT0gbnVsbCA/IDAgOiB2YWx1ZXMubGVuZ3RoO1xuXG4gIHRoaXMuX19kYXRhX18gPSBuZXcgTWFwQ2FjaGU7XG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdGhpcy5hZGQodmFsdWVzW2luZGV4XSk7XG4gIH1cbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYFNldENhY2hlYC5cblNldENhY2hlLnByb3RvdHlwZS5hZGQgPSBTZXRDYWNoZS5wcm90b3R5cGUucHVzaCA9IHNldENhY2hlQWRkO1xuU2V0Q2FjaGUucHJvdG90eXBlLmhhcyA9IHNldENhY2hlSGFzO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNldENhY2hlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_SetCache.js\n");

/***/ }),

/***/ "./node_modules/lodash/_Stack.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_Stack.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var ListCache = __webpack_require__(/*! ./_ListCache */ \"./node_modules/lodash/_ListCache.js\"),\n    stackClear = __webpack_require__(/*! ./_stackClear */ \"./node_modules/lodash/_stackClear.js\"),\n    stackDelete = __webpack_require__(/*! ./_stackDelete */ \"./node_modules/lodash/_stackDelete.js\"),\n    stackGet = __webpack_require__(/*! ./_stackGet */ \"./node_modules/lodash/_stackGet.js\"),\n    stackHas = __webpack_require__(/*! ./_stackHas */ \"./node_modules/lodash/_stackHas.js\"),\n    stackSet = __webpack_require__(/*! ./_stackSet */ \"./node_modules/lodash/_stackSet.js\");\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19TdGFjay5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyx5REFBYztBQUN0QyxpQkFBaUIsbUJBQU8sQ0FBQywyREFBZTtBQUN4QyxrQkFBa0IsbUJBQU8sQ0FBQyw2REFBZ0I7QUFDMUMsZUFBZSxtQkFBTyxDQUFDLHVEQUFhO0FBQ3BDLGVBQWUsbUJBQU8sQ0FBQyx1REFBYTtBQUNwQyxlQUFlLG1CQUFPLENBQUMsdURBQWE7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1N0YWNrLmpzPzdlNjQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIExpc3RDYWNoZSA9IHJlcXVpcmUoJy4vX0xpc3RDYWNoZScpLFxuICAgIHN0YWNrQ2xlYXIgPSByZXF1aXJlKCcuL19zdGFja0NsZWFyJyksXG4gICAgc3RhY2tEZWxldGUgPSByZXF1aXJlKCcuL19zdGFja0RlbGV0ZScpLFxuICAgIHN0YWNrR2V0ID0gcmVxdWlyZSgnLi9fc3RhY2tHZXQnKSxcbiAgICBzdGFja0hhcyA9IHJlcXVpcmUoJy4vX3N0YWNrSGFzJyksXG4gICAgc3RhY2tTZXQgPSByZXF1aXJlKCcuL19zdGFja1NldCcpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBzdGFjayBjYWNoZSBvYmplY3QgdG8gc3RvcmUga2V5LXZhbHVlIHBhaXJzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7QXJyYXl9IFtlbnRyaWVzXSBUaGUga2V5LXZhbHVlIHBhaXJzIHRvIGNhY2hlLlxuICovXG5mdW5jdGlvbiBTdGFjayhlbnRyaWVzKSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXyA9IG5ldyBMaXN0Q2FjaGUoZW50cmllcyk7XG4gIHRoaXMuc2l6ZSA9IGRhdGEuc2l6ZTtcbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYFN0YWNrYC5cblN0YWNrLnByb3RvdHlwZS5jbGVhciA9IHN0YWNrQ2xlYXI7XG5TdGFjay5wcm90b3R5cGVbJ2RlbGV0ZSddID0gc3RhY2tEZWxldGU7XG5TdGFjay5wcm90b3R5cGUuZ2V0ID0gc3RhY2tHZXQ7XG5TdGFjay5wcm90b3R5cGUuaGFzID0gc3RhY2tIYXM7XG5TdGFjay5wcm90b3R5cGUuc2V0ID0gc3RhY2tTZXQ7XG5cbm1vZHVsZS5leHBvcnRzID0gU3RhY2s7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_Stack.js\n");

/***/ }),

/***/ "./node_modules/lodash/_Symbol.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_Symbol.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19TeW1ib2wuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxtQkFBTyxDQUFDLCtDQUFTOztBQUU1QjtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19TeW1ib2wuanM/OWU2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgU3ltYm9sID0gcm9vdC5TeW1ib2w7XG5cbm1vZHVsZS5leHBvcnRzID0gU3ltYm9sO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_Symbol.js\n");

/***/ }),

/***/ "./node_modules/lodash/_Uint8Array.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_Uint8Array.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19VaW50OEFycmF5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLFdBQVcsbUJBQU8sQ0FBQywrQ0FBUzs7QUFFNUI7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fVWludDhBcnJheS5qcz8yNDc0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciByb290ID0gcmVxdWlyZSgnLi9fcm9vdCcpO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBVaW50OEFycmF5ID0gcm9vdC5VaW50OEFycmF5O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFVpbnQ4QXJyYXk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_Uint8Array.js\n");

/***/ }),

/***/ "./node_modules/lodash/_WeakMap.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_WeakMap.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var getNative = __webpack_require__(/*! ./_getNative */ \"./node_modules/lodash/_getNative.js\"),\n    root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19XZWFrTWFwLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBTyxDQUFDLHlEQUFjO0FBQ3RDLFdBQVcsbUJBQU8sQ0FBQywrQ0FBUzs7QUFFNUI7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fV2Vha01hcC5qcz8zOWZmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBnZXROYXRpdmUgPSByZXF1aXJlKCcuL19nZXROYXRpdmUnKSxcbiAgICByb290ID0gcmVxdWlyZSgnLi9fcm9vdCcpO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB0aGF0IGFyZSB2ZXJpZmllZCB0byBiZSBuYXRpdmUuICovXG52YXIgV2Vha01hcCA9IGdldE5hdGl2ZShyb290LCAnV2Vha01hcCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFdlYWtNYXA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_WeakMap.js\n");

/***/ }),

/***/ "./node_modules/lodash/_arrayFilter.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_arrayFilter.js ***!
  \*********************************************/
/***/ (function(module) {

eval("/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheUZpbHRlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsVUFBVTtBQUNyQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5RmlsdGVyLmpzPzJkN2MiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYF8uZmlsdGVyYCBmb3IgYXJyYXlzIHdpdGhvdXQgc3VwcG9ydCBmb3JcbiAqIGl0ZXJhdGVlIHNob3J0aGFuZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IFthcnJheV0gVGhlIGFycmF5IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHByZWRpY2F0ZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgZmlsdGVyZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGFycmF5RmlsdGVyKGFycmF5LCBwcmVkaWNhdGUpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aCxcbiAgICAgIHJlc0luZGV4ID0gMCxcbiAgICAgIHJlc3VsdCA9IFtdO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIHZhbHVlID0gYXJyYXlbaW5kZXhdO1xuICAgIGlmIChwcmVkaWNhdGUodmFsdWUsIGluZGV4LCBhcnJheSkpIHtcbiAgICAgIHJlc3VsdFtyZXNJbmRleCsrXSA9IHZhbHVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFycmF5RmlsdGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_arrayFilter.js\n");

/***/ }),

/***/ "./node_modules/lodash/_arrayLikeKeys.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_arrayLikeKeys.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseTimes = __webpack_require__(/*! ./_baseTimes */ \"./node_modules/lodash/_baseTimes.js\"),\n    isArguments = __webpack_require__(/*! ./isArguments */ \"./node_modules/lodash/isArguments.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\"),\n    isBuffer = __webpack_require__(/*! ./isBuffer */ \"./node_modules/lodash/isBuffer.js\"),\n    isIndex = __webpack_require__(/*! ./_isIndex */ \"./node_modules/lodash/_isIndex.js\"),\n    isTypedArray = __webpack_require__(/*! ./isTypedArray */ \"./node_modules/lodash/isTypedArray.js\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheUxpa2VLZXlzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBTyxDQUFDLHlEQUFjO0FBQ3RDLGtCQUFrQixtQkFBTyxDQUFDLDJEQUFlO0FBQ3pDLGNBQWMsbUJBQU8sQ0FBQyxtREFBVztBQUNqQyxlQUFlLG1CQUFPLENBQUMscURBQVk7QUFDbkMsY0FBYyxtQkFBTyxDQUFDLHFEQUFZO0FBQ2xDLG1CQUFtQixtQkFBTyxDQUFDLDZEQUFnQjs7QUFFM0M7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYXJyYXlMaWtlS2V5cy5qcz82ZmNkIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlVGltZXMgPSByZXF1aXJlKCcuL19iYXNlVGltZXMnKSxcbiAgICBpc0FyZ3VtZW50cyA9IHJlcXVpcmUoJy4vaXNBcmd1bWVudHMnKSxcbiAgICBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5JyksXG4gICAgaXNCdWZmZXIgPSByZXF1aXJlKCcuL2lzQnVmZmVyJyksXG4gICAgaXNJbmRleCA9IHJlcXVpcmUoJy4vX2lzSW5kZXgnKSxcbiAgICBpc1R5cGVkQXJyYXkgPSByZXF1aXJlKCcuL2lzVHlwZWRBcnJheScpO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gYXJyYXkgb2YgdGhlIGVudW1lcmFibGUgcHJvcGVydHkgbmFtZXMgb2YgdGhlIGFycmF5LWxpa2UgYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGluaGVyaXRlZCBTcGVjaWZ5IHJldHVybmluZyBpbmhlcml0ZWQgcHJvcGVydHkgbmFtZXMuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzLlxuICovXG5mdW5jdGlvbiBhcnJheUxpa2VLZXlzKHZhbHVlLCBpbmhlcml0ZWQpIHtcbiAgdmFyIGlzQXJyID0gaXNBcnJheSh2YWx1ZSksXG4gICAgICBpc0FyZyA9ICFpc0FyciAmJiBpc0FyZ3VtZW50cyh2YWx1ZSksXG4gICAgICBpc0J1ZmYgPSAhaXNBcnIgJiYgIWlzQXJnICYmIGlzQnVmZmVyKHZhbHVlKSxcbiAgICAgIGlzVHlwZSA9ICFpc0FyciAmJiAhaXNBcmcgJiYgIWlzQnVmZiAmJiBpc1R5cGVkQXJyYXkodmFsdWUpLFxuICAgICAgc2tpcEluZGV4ZXMgPSBpc0FyciB8fCBpc0FyZyB8fCBpc0J1ZmYgfHwgaXNUeXBlLFxuICAgICAgcmVzdWx0ID0gc2tpcEluZGV4ZXMgPyBiYXNlVGltZXModmFsdWUubGVuZ3RoLCBTdHJpbmcpIDogW10sXG4gICAgICBsZW5ndGggPSByZXN1bHQubGVuZ3RoO1xuXG4gIGZvciAodmFyIGtleSBpbiB2YWx1ZSkge1xuICAgIGlmICgoaW5oZXJpdGVkIHx8IGhhc093blByb3BlcnR5LmNhbGwodmFsdWUsIGtleSkpICYmXG4gICAgICAgICEoc2tpcEluZGV4ZXMgJiYgKFxuICAgICAgICAgICAvLyBTYWZhcmkgOSBoYXMgZW51bWVyYWJsZSBgYXJndW1lbnRzLmxlbmd0aGAgaW4gc3RyaWN0IG1vZGUuXG4gICAgICAgICAgIGtleSA9PSAnbGVuZ3RoJyB8fFxuICAgICAgICAgICAvLyBOb2RlLmpzIDAuMTAgaGFzIGVudW1lcmFibGUgbm9uLWluZGV4IHByb3BlcnRpZXMgb24gYnVmZmVycy5cbiAgICAgICAgICAgKGlzQnVmZiAmJiAoa2V5ID09ICdvZmZzZXQnIHx8IGtleSA9PSAncGFyZW50JykpIHx8XG4gICAgICAgICAgIC8vIFBoYW50b21KUyAyIGhhcyBlbnVtZXJhYmxlIG5vbi1pbmRleCBwcm9wZXJ0aWVzIG9uIHR5cGVkIGFycmF5cy5cbiAgICAgICAgICAgKGlzVHlwZSAmJiAoa2V5ID09ICdidWZmZXInIHx8IGtleSA9PSAnYnl0ZUxlbmd0aCcgfHwga2V5ID09ICdieXRlT2Zmc2V0JykpIHx8XG4gICAgICAgICAgIC8vIFNraXAgaW5kZXggcHJvcGVydGllcy5cbiAgICAgICAgICAgaXNJbmRleChrZXksIGxlbmd0aClcbiAgICAgICAgKSkpIHtcbiAgICAgIHJlc3VsdC5wdXNoKGtleSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXJyYXlMaWtlS2V5cztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_arrayLikeKeys.js\n");

/***/ }),

/***/ "./node_modules/lodash/_arrayMap.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_arrayMap.js ***!
  \******************************************/
/***/ (function(module) {

eval("/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheU1hcC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsVUFBVTtBQUNyQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheU1hcC5qcz83OTQ4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLm1hcGAgZm9yIGFycmF5cyB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlXG4gKiBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBbYXJyYXldIFRoZSBhcnJheSB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgbWFwcGVkIGFycmF5LlxuICovXG5mdW5jdGlvbiBhcnJheU1hcChhcnJheSwgaXRlcmF0ZWUpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aCxcbiAgICAgIHJlc3VsdCA9IEFycmF5KGxlbmd0aCk7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICByZXN1bHRbaW5kZXhdID0gaXRlcmF0ZWUoYXJyYXlbaW5kZXhdLCBpbmRleCwgYXJyYXkpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXJyYXlNYXA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_arrayMap.js\n");

/***/ }),

/***/ "./node_modules/lodash/_arrayPush.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arrayPush.js ***!
  \*******************************************/
/***/ (function(module) {

eval("/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheVB1c2guanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5UHVzaC5qcz8wODdkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQXBwZW5kcyB0aGUgZWxlbWVudHMgb2YgYHZhbHVlc2AgdG8gYGFycmF5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIG1vZGlmeS5cbiAqIEBwYXJhbSB7QXJyYXl9IHZhbHVlcyBUaGUgdmFsdWVzIHRvIGFwcGVuZC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBgYXJyYXlgLlxuICovXG5mdW5jdGlvbiBhcnJheVB1c2goYXJyYXksIHZhbHVlcykge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IHZhbHVlcy5sZW5ndGgsXG4gICAgICBvZmZzZXQgPSBhcnJheS5sZW5ndGg7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBhcnJheVtvZmZzZXQgKyBpbmRleF0gPSB2YWx1ZXNbaW5kZXhdO1xuICB9XG4gIHJldHVybiBhcnJheTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhcnJheVB1c2g7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_arrayPush.js\n");

/***/ }),

/***/ "./node_modules/lodash/_arraySome.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arraySome.js ***!
  \*******************************************/
/***/ (function(module) {

eval("/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheVNvbWUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLFVBQVU7QUFDckIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5U29tZS5qcz80Mjg0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLnNvbWVgIGZvciBhcnJheXMgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZVxuICogc2hvcnRoYW5kcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcHJlZGljYXRlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW55IGVsZW1lbnQgcGFzc2VzIHRoZSBwcmVkaWNhdGUgY2hlY2ssXG4gKiAgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBhcnJheVNvbWUoYXJyYXksIHByZWRpY2F0ZSkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgaWYgKHByZWRpY2F0ZShhcnJheVtpbmRleF0sIGluZGV4LCBhcnJheSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXJyYXlTb21lO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_arraySome.js\n");

/***/ }),

/***/ "./node_modules/lodash/_assocIndexOf.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_assocIndexOf.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var eq = __webpack_require__(/*! ./eq */ \"./node_modules/lodash/eq.js\");\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hc3NvY0luZGV4T2YuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsU0FBUyxtQkFBTyxDQUFDLHlDQUFNOztBQUV2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Fzc29jSW5kZXhPZi5qcz9jYjVhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBlcSA9IHJlcXVpcmUoJy4vZXEnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBpbmRleCBhdCB3aGljaCB0aGUgYGtleWAgaXMgZm91bmQgaW4gYGFycmF5YCBvZiBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpbnNwZWN0LlxuICogQHBhcmFtIHsqfSBrZXkgVGhlIGtleSB0byBzZWFyY2ggZm9yLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgaW5kZXggb2YgdGhlIG1hdGNoZWQgdmFsdWUsIGVsc2UgYC0xYC5cbiAqL1xuZnVuY3Rpb24gYXNzb2NJbmRleE9mKGFycmF5LCBrZXkpIHtcbiAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcbiAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgaWYgKGVxKGFycmF5W2xlbmd0aF1bMF0sIGtleSkpIHtcbiAgICAgIHJldHVybiBsZW5ndGg7XG4gICAgfVxuICB9XG4gIHJldHVybiAtMTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhc3NvY0luZGV4T2Y7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_assocIndexOf.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseEach.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseEach.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseForOwn = __webpack_require__(/*! ./_baseForOwn */ \"./node_modules/lodash/_baseForOwn.js\"),\n    createBaseEach = __webpack_require__(/*! ./_createBaseEach */ \"./node_modules/lodash/_createBaseEach.js\");\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRWFjaC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQywyREFBZTtBQUN4QyxxQkFBcUIsbUJBQU8sQ0FBQyxtRUFBbUI7O0FBRWhEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsVUFBVTtBQUNyQixhQUFhLGNBQWM7QUFDM0I7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUVhY2guanM/NDhhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUZvck93biA9IHJlcXVpcmUoJy4vX2Jhc2VGb3JPd24nKSxcbiAgICBjcmVhdGVCYXNlRWFjaCA9IHJlcXVpcmUoJy4vX2NyZWF0ZUJhc2VFYWNoJyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZm9yRWFjaGAgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fE9iamVjdH0gUmV0dXJucyBgY29sbGVjdGlvbmAuXG4gKi9cbnZhciBiYXNlRWFjaCA9IGNyZWF0ZUJhc2VFYWNoKGJhc2VGb3JPd24pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VFYWNoO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseEach.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseFilter.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseFilter.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseEach = __webpack_require__(/*! ./_baseEach */ \"./node_modules/lodash/_baseEach.js\");\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRmlsdGVyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyx1REFBYTs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekIsV0FBVyxVQUFVO0FBQ3JCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRmlsdGVyLmpzPzlmNzQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2VFYWNoID0gcmVxdWlyZSgnLi9fYmFzZUVhY2gnKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5maWx0ZXJgIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWUgc2hvcnRoYW5kcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcHJlZGljYXRlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBmaWx0ZXJlZCBhcnJheS5cbiAqL1xuZnVuY3Rpb24gYmFzZUZpbHRlcihjb2xsZWN0aW9uLCBwcmVkaWNhdGUpIHtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBiYXNlRWFjaChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24pIHtcbiAgICBpZiAocHJlZGljYXRlKHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbikpIHtcbiAgICAgIHJlc3VsdC5wdXNoKHZhbHVlKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VGaWx0ZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseFilter.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseFor.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseFor.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var createBaseFor = __webpack_require__(/*! ./_createBaseFor */ \"./node_modules/lodash/_createBaseFor.js\");\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRm9yLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQixtQkFBTyxDQUFDLGlFQUFrQjs7QUFFOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQixXQUFXLFVBQVU7QUFDckIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VGb3IuanM/NzJhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY3JlYXRlQmFzZUZvciA9IHJlcXVpcmUoJy4vX2NyZWF0ZUJhc2VGb3InKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgYmFzZUZvck93bmAgd2hpY2ggaXRlcmF0ZXMgb3ZlciBgb2JqZWN0YFxuICogcHJvcGVydGllcyByZXR1cm5lZCBieSBga2V5c0Z1bmNgIGFuZCBpbnZva2VzIGBpdGVyYXRlZWAgZm9yIGVhY2ggcHJvcGVydHkuXG4gKiBJdGVyYXRlZSBmdW5jdGlvbnMgbWF5IGV4aXQgaXRlcmF0aW9uIGVhcmx5IGJ5IGV4cGxpY2l0bHkgcmV0dXJuaW5nIGBmYWxzZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHBhcmFtIHtGdW5jdGlvbn0ga2V5c0Z1bmMgVGhlIGZ1bmN0aW9uIHRvIGdldCB0aGUga2V5cyBvZiBgb2JqZWN0YC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYG9iamVjdGAuXG4gKi9cbnZhciBiYXNlRm9yID0gY3JlYXRlQmFzZUZvcigpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VGb3I7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseFor.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseForOwn.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseForOwn.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseFor = __webpack_require__(/*! ./_baseFor */ \"./node_modules/lodash/_baseFor.js\"),\n    keys = __webpack_require__(/*! ./keys */ \"./node_modules/lodash/keys.js\");\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRm9yT3duLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQyxxREFBWTtBQUNsQyxXQUFXLG1CQUFPLENBQUMsNkNBQVE7O0FBRTNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VGb3JPd24uanM/MjQyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUZvciA9IHJlcXVpcmUoJy4vX2Jhc2VGb3InKSxcbiAgICBrZXlzID0gcmVxdWlyZSgnLi9rZXlzJyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZm9yT3duYCB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAqL1xuZnVuY3Rpb24gYmFzZUZvck93bihvYmplY3QsIGl0ZXJhdGVlKSB7XG4gIHJldHVybiBvYmplY3QgJiYgYmFzZUZvcihvYmplY3QsIGl0ZXJhdGVlLCBrZXlzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlRm9yT3duO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseForOwn.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseGet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseGet.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var castPath = __webpack_require__(/*! ./_castPath */ \"./node_modules/lodash/_castPath.js\"),\n    toKey = __webpack_require__(/*! ./_toKey */ \"./node_modules/lodash/_toKey.js\");\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlR2V0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyx1REFBYTtBQUNwQyxZQUFZLG1CQUFPLENBQUMsaURBQVU7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsY0FBYztBQUN6QixhQUFhLEdBQUc7QUFDaEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUdldC5qcz82NTZiIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBjYXN0UGF0aCA9IHJlcXVpcmUoJy4vX2Nhc3RQYXRoJyksXG4gICAgdG9LZXkgPSByZXF1aXJlKCcuL190b0tleScpO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmdldGAgd2l0aG91dCBzdXBwb3J0IGZvciBkZWZhdWx0IHZhbHVlcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtBcnJheXxzdHJpbmd9IHBhdGggVGhlIHBhdGggb2YgdGhlIHByb3BlcnR5IHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSByZXNvbHZlZCB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gYmFzZUdldChvYmplY3QsIHBhdGgpIHtcbiAgcGF0aCA9IGNhc3RQYXRoKHBhdGgsIG9iamVjdCk7XG5cbiAgdmFyIGluZGV4ID0gMCxcbiAgICAgIGxlbmd0aCA9IHBhdGgubGVuZ3RoO1xuXG4gIHdoaWxlIChvYmplY3QgIT0gbnVsbCAmJiBpbmRleCA8IGxlbmd0aCkge1xuICAgIG9iamVjdCA9IG9iamVjdFt0b0tleShwYXRoW2luZGV4KytdKV07XG4gIH1cbiAgcmV0dXJuIChpbmRleCAmJiBpbmRleCA9PSBsZW5ndGgpID8gb2JqZWN0IDogdW5kZWZpbmVkO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VHZXQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseGet.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseGetAllKeys.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_baseGetAllKeys.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var arrayPush = __webpack_require__(/*! ./_arrayPush */ \"./node_modules/lodash/_arrayPush.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\");\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlR2V0QWxsS2V5cy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyx5REFBYztBQUN0QyxjQUFjLG1CQUFPLENBQUMsbURBQVc7O0FBRWpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsV0FBVyxVQUFVO0FBQ3JCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlR2V0QWxsS2V5cy5qcz83ZDFmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcnJheVB1c2ggPSByZXF1aXJlKCcuL19hcnJheVB1c2gnKSxcbiAgICBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5Jyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYGdldEFsbEtleXNgIGFuZCBgZ2V0QWxsS2V5c0luYCB3aGljaCB1c2VzXG4gKiBga2V5c0Z1bmNgIGFuZCBgc3ltYm9sc0Z1bmNgIHRvIGdldCB0aGUgZW51bWVyYWJsZSBwcm9wZXJ0eSBuYW1lcyBhbmRcbiAqIHN5bWJvbHMgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGtleXNGdW5jIFRoZSBmdW5jdGlvbiB0byBnZXQgdGhlIGtleXMgb2YgYG9iamVjdGAuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBzeW1ib2xzRnVuYyBUaGUgZnVuY3Rpb24gdG8gZ2V0IHRoZSBzeW1ib2xzIG9mIGBvYmplY3RgLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcyBhbmQgc3ltYm9scy5cbiAqL1xuZnVuY3Rpb24gYmFzZUdldEFsbEtleXMob2JqZWN0LCBrZXlzRnVuYywgc3ltYm9sc0Z1bmMpIHtcbiAgdmFyIHJlc3VsdCA9IGtleXNGdW5jKG9iamVjdCk7XG4gIHJldHVybiBpc0FycmF5KG9iamVjdCkgPyByZXN1bHQgOiBhcnJheVB1c2gocmVzdWx0LCBzeW1ib2xzRnVuYyhvYmplY3QpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlR2V0QWxsS2V5cztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseGetAllKeys.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseGetTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseGetTag.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Symbol = __webpack_require__(/*! ./_Symbol */ \"./node_modules/lodash/_Symbol.js\"),\n    getRawTag = __webpack_require__(/*! ./_getRawTag */ \"./node_modules/lodash/_getRawTag.js\"),\n    objectToString = __webpack_require__(/*! ./_objectToString */ \"./node_modules/lodash/_objectToString.js\");\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlR2V0VGFnLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGFBQWEsbUJBQU8sQ0FBQyxtREFBVztBQUNoQyxnQkFBZ0IsbUJBQU8sQ0FBQyx5REFBYztBQUN0QyxxQkFBcUIsbUJBQU8sQ0FBQyxtRUFBbUI7O0FBRWhEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUdldFRhZy5qcz8zNzI5Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBTeW1ib2wgPSByZXF1aXJlKCcuL19TeW1ib2wnKSxcbiAgICBnZXRSYXdUYWcgPSByZXF1aXJlKCcuL19nZXRSYXdUYWcnKSxcbiAgICBvYmplY3RUb1N0cmluZyA9IHJlcXVpcmUoJy4vX29iamVjdFRvU3RyaW5nJyk7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBudWxsVGFnID0gJ1tvYmplY3QgTnVsbF0nLFxuICAgIHVuZGVmaW5lZFRhZyA9ICdbb2JqZWN0IFVuZGVmaW5lZF0nO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBzeW1Ub1N0cmluZ1RhZyA9IFN5bWJvbCA/IFN5bWJvbC50b1N0cmluZ1RhZyA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgZ2V0VGFnYCB3aXRob3V0IGZhbGxiYWNrcyBmb3IgYnVnZ3kgZW52aXJvbm1lbnRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGB0b1N0cmluZ1RhZ2AuXG4gKi9cbmZ1bmN0aW9uIGJhc2VHZXRUYWcodmFsdWUpIHtcbiAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZFRhZyA6IG51bGxUYWc7XG4gIH1cbiAgcmV0dXJuIChzeW1Ub1N0cmluZ1RhZyAmJiBzeW1Ub1N0cmluZ1RhZyBpbiBPYmplY3QodmFsdWUpKVxuICAgID8gZ2V0UmF3VGFnKHZhbHVlKVxuICAgIDogb2JqZWN0VG9TdHJpbmcodmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VHZXRUYWc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseGetTag.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseHasIn.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseHasIn.js ***!
  \*******************************************/
/***/ (function(module) {

eval("/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSGFzSW4uanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxjQUFjO0FBQ3pCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUhhc0luLmpzPzI2ZTgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5oYXNJbmAgd2l0aG91dCBzdXBwb3J0IGZvciBkZWVwIHBhdGhzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gW29iamVjdF0gVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7QXJyYXl8c3RyaW5nfSBrZXkgVGhlIGtleSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUhhc0luKG9iamVjdCwga2V5KSB7XG4gIHJldHVybiBvYmplY3QgIT0gbnVsbCAmJiBrZXkgaW4gT2JqZWN0KG9iamVjdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUhhc0luO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseHasIn.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseIsArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsArguments.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"./node_modules/lodash/_baseGetTag.js\"),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"./node_modules/lodash/isObjectLike.js\");\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNBcmd1bWVudHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsMkRBQWU7QUFDeEMsbUJBQW1CLG1CQUFPLENBQUMsNkRBQWdCOztBQUUzQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNBcmd1bWVudHMuanM/MjUzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUdldFRhZyA9IHJlcXVpcmUoJy4vX2Jhc2VHZXRUYWcnKSxcbiAgICBpc09iamVjdExpa2UgPSByZXF1aXJlKCcuL2lzT2JqZWN0TGlrZScpO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgYXJnc1RhZyA9ICdbb2JqZWN0IEFyZ3VtZW50c10nO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzQXJndW1lbnRzYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBgYXJndW1lbnRzYCBvYmplY3QsXG4gKi9cbmZ1bmN0aW9uIGJhc2VJc0FyZ3VtZW50cyh2YWx1ZSkge1xuICByZXR1cm4gaXNPYmplY3RMaWtlKHZhbHVlKSAmJiBiYXNlR2V0VGFnKHZhbHVlKSA9PSBhcmdzVGFnO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VJc0FyZ3VtZW50cztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseIsArguments.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseIsEqual.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIsEqual.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseIsEqualDeep = __webpack_require__(/*! ./_baseIsEqualDeep */ \"./node_modules/lodash/_baseIsEqualDeep.js\"),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"./node_modules/lodash/isObjectLike.js\");\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNFcXVhbC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxzQkFBc0IsbUJBQU8sQ0FBQyxxRUFBb0I7QUFDbEQsbUJBQW1CLG1CQUFPLENBQUMsNkRBQWdCOztBQUUzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsV0FBVyxHQUFHO0FBQ2QsV0FBVyxTQUFTO0FBQ3BCO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUlzRXF1YWwuanM/YzA1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUlzRXF1YWxEZWVwID0gcmVxdWlyZSgnLi9fYmFzZUlzRXF1YWxEZWVwJyksXG4gICAgaXNPYmplY3RMaWtlID0gcmVxdWlyZSgnLi9pc09iamVjdExpa2UnKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc0VxdWFsYCB3aGljaCBzdXBwb3J0cyBwYXJ0aWFsIGNvbXBhcmlzb25zXG4gKiBhbmQgdHJhY2tzIHRyYXZlcnNlZCBvYmplY3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb21wYXJlLlxuICogQHBhcmFtIHsqfSBvdGhlciBUaGUgb3RoZXIgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gYml0bWFzayBUaGUgYml0bWFzayBmbGFncy5cbiAqICAxIC0gVW5vcmRlcmVkIGNvbXBhcmlzb25cbiAqICAyIC0gUGFydGlhbCBjb21wYXJpc29uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY3VzdG9taXplcl0gVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbc3RhY2tdIFRyYWNrcyB0cmF2ZXJzZWQgYHZhbHVlYCBhbmQgYG90aGVyYCBvYmplY3RzLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSB2YWx1ZXMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUlzRXF1YWwodmFsdWUsIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBzdGFjaykge1xuICBpZiAodmFsdWUgPT09IG90aGVyKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgaWYgKHZhbHVlID09IG51bGwgfHwgb3RoZXIgPT0gbnVsbCB8fCAoIWlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgIWlzT2JqZWN0TGlrZShvdGhlcikpKSB7XG4gICAgcmV0dXJuIHZhbHVlICE9PSB2YWx1ZSAmJiBvdGhlciAhPT0gb3RoZXI7XG4gIH1cbiAgcmV0dXJuIGJhc2VJc0VxdWFsRGVlcCh2YWx1ZSwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGJhc2VJc0VxdWFsLCBzdGFjayk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUlzRXF1YWw7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseIsEqual.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseIsEqualDeep.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsEqualDeep.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Stack = __webpack_require__(/*! ./_Stack */ \"./node_modules/lodash/_Stack.js\"),\n    equalArrays = __webpack_require__(/*! ./_equalArrays */ \"./node_modules/lodash/_equalArrays.js\"),\n    equalByTag = __webpack_require__(/*! ./_equalByTag */ \"./node_modules/lodash/_equalByTag.js\"),\n    equalObjects = __webpack_require__(/*! ./_equalObjects */ \"./node_modules/lodash/_equalObjects.js\"),\n    getTag = __webpack_require__(/*! ./_getTag */ \"./node_modules/lodash/_getTag.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\"),\n    isBuffer = __webpack_require__(/*! ./isBuffer */ \"./node_modules/lodash/isBuffer.js\"),\n    isTypedArray = __webpack_require__(/*! ./isTypedArray */ \"./node_modules/lodash/isTypedArray.js\");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNFcXVhbERlZXAuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxtQkFBTyxDQUFDLGlEQUFVO0FBQzlCLGtCQUFrQixtQkFBTyxDQUFDLDZEQUFnQjtBQUMxQyxpQkFBaUIsbUJBQU8sQ0FBQywyREFBZTtBQUN4QyxtQkFBbUIsbUJBQU8sQ0FBQywrREFBaUI7QUFDNUMsYUFBYSxtQkFBTyxDQUFDLG1EQUFXO0FBQ2hDLGNBQWMsbUJBQU8sQ0FBQyxtREFBVztBQUNqQyxlQUFlLG1CQUFPLENBQUMscURBQVk7QUFDbkMsbUJBQW1CLG1CQUFPLENBQUMsNkRBQWdCOztBQUUzQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUlzRXF1YWxEZWVwLmpzPzdiOTciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFN0YWNrID0gcmVxdWlyZSgnLi9fU3RhY2snKSxcbiAgICBlcXVhbEFycmF5cyA9IHJlcXVpcmUoJy4vX2VxdWFsQXJyYXlzJyksXG4gICAgZXF1YWxCeVRhZyA9IHJlcXVpcmUoJy4vX2VxdWFsQnlUYWcnKSxcbiAgICBlcXVhbE9iamVjdHMgPSByZXF1aXJlKCcuL19lcXVhbE9iamVjdHMnKSxcbiAgICBnZXRUYWcgPSByZXF1aXJlKCcuL19nZXRUYWcnKSxcbiAgICBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5JyksXG4gICAgaXNCdWZmZXIgPSByZXF1aXJlKCcuL2lzQnVmZmVyJyksXG4gICAgaXNUeXBlZEFycmF5ID0gcmVxdWlyZSgnLi9pc1R5cGVkQXJyYXknKTtcblxuLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgdmFsdWUgY29tcGFyaXNvbnMuICovXG52YXIgQ09NUEFSRV9QQVJUSUFMX0ZMQUcgPSAxO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgYXJnc1RhZyA9ICdbb2JqZWN0IEFyZ3VtZW50c10nLFxuICAgIGFycmF5VGFnID0gJ1tvYmplY3QgQXJyYXldJyxcbiAgICBvYmplY3RUYWcgPSAnW29iamVjdCBPYmplY3RdJztcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VJc0VxdWFsYCBmb3IgYXJyYXlzIGFuZCBvYmplY3RzIHdoaWNoIHBlcmZvcm1zXG4gKiBkZWVwIGNvbXBhcmlzb25zIGFuZCB0cmFja3MgdHJhdmVyc2VkIG9iamVjdHMgZW5hYmxpbmcgb2JqZWN0cyB3aXRoIGNpcmN1bGFyXG4gKiByZWZlcmVuY2VzIHRvIGJlIGNvbXBhcmVkLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBvdGhlciBUaGUgb3RoZXIgb2JqZWN0IHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge251bWJlcn0gYml0bWFzayBUaGUgYml0bWFzayBmbGFncy4gU2VlIGBiYXNlSXNFcXVhbGAgZm9yIG1vcmUgZGV0YWlscy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGN1c3RvbWl6ZXIgVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGVxdWFsRnVuYyBUaGUgZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIGVxdWl2YWxlbnRzIG9mIHZhbHVlcy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbc3RhY2tdIFRyYWNrcyB0cmF2ZXJzZWQgYG9iamVjdGAgYW5kIGBvdGhlcmAgb2JqZWN0cy5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgb2JqZWN0cyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNFcXVhbERlZXAob2JqZWN0LCBvdGhlciwgYml0bWFzaywgY3VzdG9taXplciwgZXF1YWxGdW5jLCBzdGFjaykge1xuICB2YXIgb2JqSXNBcnIgPSBpc0FycmF5KG9iamVjdCksXG4gICAgICBvdGhJc0FyciA9IGlzQXJyYXkob3RoZXIpLFxuICAgICAgb2JqVGFnID0gb2JqSXNBcnIgPyBhcnJheVRhZyA6IGdldFRhZyhvYmplY3QpLFxuICAgICAgb3RoVGFnID0gb3RoSXNBcnIgPyBhcnJheVRhZyA6IGdldFRhZyhvdGhlcik7XG5cbiAgb2JqVGFnID0gb2JqVGFnID09IGFyZ3NUYWcgPyBvYmplY3RUYWcgOiBvYmpUYWc7XG4gIG90aFRhZyA9IG90aFRhZyA9PSBhcmdzVGFnID8gb2JqZWN0VGFnIDogb3RoVGFnO1xuXG4gIHZhciBvYmpJc09iaiA9IG9ialRhZyA9PSBvYmplY3RUYWcsXG4gICAgICBvdGhJc09iaiA9IG90aFRhZyA9PSBvYmplY3RUYWcsXG4gICAgICBpc1NhbWVUYWcgPSBvYmpUYWcgPT0gb3RoVGFnO1xuXG4gIGlmIChpc1NhbWVUYWcgJiYgaXNCdWZmZXIob2JqZWN0KSkge1xuICAgIGlmICghaXNCdWZmZXIob3RoZXIpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIG9iaklzQXJyID0gdHJ1ZTtcbiAgICBvYmpJc09iaiA9IGZhbHNlO1xuICB9XG4gIGlmIChpc1NhbWVUYWcgJiYgIW9iaklzT2JqKSB7XG4gICAgc3RhY2sgfHwgKHN0YWNrID0gbmV3IFN0YWNrKTtcbiAgICByZXR1cm4gKG9iaklzQXJyIHx8IGlzVHlwZWRBcnJheShvYmplY3QpKVxuICAgICAgPyBlcXVhbEFycmF5cyhvYmplY3QsIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKVxuICAgICAgOiBlcXVhbEJ5VGFnKG9iamVjdCwgb3RoZXIsIG9ialRhZywgYml0bWFzaywgY3VzdG9taXplciwgZXF1YWxGdW5jLCBzdGFjayk7XG4gIH1cbiAgaWYgKCEoYml0bWFzayAmIENPTVBBUkVfUEFSVElBTF9GTEFHKSkge1xuICAgIHZhciBvYmpJc1dyYXBwZWQgPSBvYmpJc09iaiAmJiBoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgJ19fd3JhcHBlZF9fJyksXG4gICAgICAgIG90aElzV3JhcHBlZCA9IG90aElzT2JqICYmIGhhc093blByb3BlcnR5LmNhbGwob3RoZXIsICdfX3dyYXBwZWRfXycpO1xuXG4gICAgaWYgKG9iaklzV3JhcHBlZCB8fCBvdGhJc1dyYXBwZWQpIHtcbiAgICAgIHZhciBvYmpVbndyYXBwZWQgPSBvYmpJc1dyYXBwZWQgPyBvYmplY3QudmFsdWUoKSA6IG9iamVjdCxcbiAgICAgICAgICBvdGhVbndyYXBwZWQgPSBvdGhJc1dyYXBwZWQgPyBvdGhlci52YWx1ZSgpIDogb3RoZXI7XG5cbiAgICAgIHN0YWNrIHx8IChzdGFjayA9IG5ldyBTdGFjayk7XG4gICAgICByZXR1cm4gZXF1YWxGdW5jKG9ialVud3JhcHBlZCwgb3RoVW53cmFwcGVkLCBiaXRtYXNrLCBjdXN0b21pemVyLCBzdGFjayk7XG4gICAgfVxuICB9XG4gIGlmICghaXNTYW1lVGFnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0YWNrIHx8IChzdGFjayA9IG5ldyBTdGFjayk7XG4gIHJldHVybiBlcXVhbE9iamVjdHMob2JqZWN0LCBvdGhlciwgYml0bWFzaywgY3VzdG9taXplciwgZXF1YWxGdW5jLCBzdGFjayk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUlzRXF1YWxEZWVwO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseIsEqualDeep.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseIsMatch.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIsMatch.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Stack = __webpack_require__(/*! ./_Stack */ \"./node_modules/lodash/_Stack.js\"),\n    baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ \"./node_modules/lodash/_baseIsEqual.js\");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNNYXRjaC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxZQUFZLG1CQUFPLENBQUMsaURBQVU7QUFDOUIsa0JBQWtCLG1CQUFPLENBQUMsNkRBQWdCOztBQUUxQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsT0FBTztBQUNsQixXQUFXLFVBQVU7QUFDckIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc01hdGNoLmpzPzk2NmYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFN0YWNrID0gcmVxdWlyZSgnLi9fU3RhY2snKSxcbiAgICBiYXNlSXNFcXVhbCA9IHJlcXVpcmUoJy4vX2Jhc2VJc0VxdWFsJyk7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIHZhbHVlIGNvbXBhcmlzb25zLiAqL1xudmFyIENPTVBBUkVfUEFSVElBTF9GTEFHID0gMSxcbiAgICBDT01QQVJFX1VOT1JERVJFRF9GTEFHID0gMjtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc01hdGNoYCB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpbnNwZWN0LlxuICogQHBhcmFtIHtPYmplY3R9IHNvdXJjZSBUaGUgb2JqZWN0IG9mIHByb3BlcnR5IHZhbHVlcyB0byBtYXRjaC5cbiAqIEBwYXJhbSB7QXJyYXl9IG1hdGNoRGF0YSBUaGUgcHJvcGVydHkgbmFtZXMsIHZhbHVlcywgYW5kIGNvbXBhcmUgZmxhZ3MgdG8gbWF0Y2guXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY3VzdG9taXplcl0gVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgb2JqZWN0YCBpcyBhIG1hdGNoLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VJc01hdGNoKG9iamVjdCwgc291cmNlLCBtYXRjaERhdGEsIGN1c3RvbWl6ZXIpIHtcbiAgdmFyIGluZGV4ID0gbWF0Y2hEYXRhLmxlbmd0aCxcbiAgICAgIGxlbmd0aCA9IGluZGV4LFxuICAgICAgbm9DdXN0b21pemVyID0gIWN1c3RvbWl6ZXI7XG5cbiAgaWYgKG9iamVjdCA9PSBudWxsKSB7XG4gICAgcmV0dXJuICFsZW5ndGg7XG4gIH1cbiAgb2JqZWN0ID0gT2JqZWN0KG9iamVjdCk7XG4gIHdoaWxlIChpbmRleC0tKSB7XG4gICAgdmFyIGRhdGEgPSBtYXRjaERhdGFbaW5kZXhdO1xuICAgIGlmICgobm9DdXN0b21pemVyICYmIGRhdGFbMl0pXG4gICAgICAgICAgPyBkYXRhWzFdICE9PSBvYmplY3RbZGF0YVswXV1cbiAgICAgICAgICA6ICEoZGF0YVswXSBpbiBvYmplY3QpXG4gICAgICAgICkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIGRhdGEgPSBtYXRjaERhdGFbaW5kZXhdO1xuICAgIHZhciBrZXkgPSBkYXRhWzBdLFxuICAgICAgICBvYmpWYWx1ZSA9IG9iamVjdFtrZXldLFxuICAgICAgICBzcmNWYWx1ZSA9IGRhdGFbMV07XG5cbiAgICBpZiAobm9DdXN0b21pemVyICYmIGRhdGFbMl0pIHtcbiAgICAgIGlmIChvYmpWYWx1ZSA9PT0gdW5kZWZpbmVkICYmICEoa2V5IGluIG9iamVjdCkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgc3RhY2sgPSBuZXcgU3RhY2s7XG4gICAgICBpZiAoY3VzdG9taXplcikge1xuICAgICAgICB2YXIgcmVzdWx0ID0gY3VzdG9taXplcihvYmpWYWx1ZSwgc3JjVmFsdWUsIGtleSwgb2JqZWN0LCBzb3VyY2UsIHN0YWNrKTtcbiAgICAgIH1cbiAgICAgIGlmICghKHJlc3VsdCA9PT0gdW5kZWZpbmVkXG4gICAgICAgICAgICA/IGJhc2VJc0VxdWFsKHNyY1ZhbHVlLCBvYmpWYWx1ZSwgQ09NUEFSRV9QQVJUSUFMX0ZMQUcgfCBDT01QQVJFX1VOT1JERVJFRF9GTEFHLCBjdXN0b21pemVyLCBzdGFjaylcbiAgICAgICAgICAgIDogcmVzdWx0XG4gICAgICAgICAgKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VJc01hdGNoO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseIsMatch.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseIsNative.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIsNative.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var isFunction = __webpack_require__(/*! ./isFunction */ \"./node_modules/lodash/isFunction.js\"),\n    isMasked = __webpack_require__(/*! ./_isMasked */ \"./node_modules/lodash/_isMasked.js\"),\n    isObject = __webpack_require__(/*! ./isObject */ \"./node_modules/lodash/isObject.js\"),\n    toSource = __webpack_require__(/*! ./_toSource */ \"./node_modules/lodash/_toSource.js\");\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNOYXRpdmUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMseURBQWM7QUFDdkMsZUFBZSxtQkFBTyxDQUFDLHVEQUFhO0FBQ3BDLGVBQWUsbUJBQU8sQ0FBQyxxREFBWTtBQUNuQyxlQUFlLG1CQUFPLENBQUMsdURBQWE7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DOztBQUVwQztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc05hdGl2ZS5qcz8zNGFjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc0Z1bmN0aW9uID0gcmVxdWlyZSgnLi9pc0Z1bmN0aW9uJyksXG4gICAgaXNNYXNrZWQgPSByZXF1aXJlKCcuL19pc01hc2tlZCcpLFxuICAgIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9pc09iamVjdCcpLFxuICAgIHRvU291cmNlID0gcmVxdWlyZSgnLi9fdG9Tb3VyY2UnKTtcblxuLyoqXG4gKiBVc2VkIHRvIG1hdGNoIGBSZWdFeHBgXG4gKiBbc3ludGF4IGNoYXJhY3RlcnNdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXBhdHRlcm5zKS5cbiAqL1xudmFyIHJlUmVnRXhwQ2hhciA9IC9bXFxcXF4kLiorPygpW1xcXXt9fF0vZztcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGhvc3QgY29uc3RydWN0b3JzIChTYWZhcmkpLiAqL1xudmFyIHJlSXNIb3N0Q3RvciA9IC9eXFxbb2JqZWN0IC4rP0NvbnN0cnVjdG9yXFxdJC87XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBmdW5jUHJvdG8gPSBGdW5jdGlvbi5wcm90b3R5cGUsXG4gICAgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byByZXNvbHZlIHRoZSBkZWNvbXBpbGVkIHNvdXJjZSBvZiBmdW5jdGlvbnMuICovXG52YXIgZnVuY1RvU3RyaW5nID0gZnVuY1Byb3RvLnRvU3RyaW5nO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKiogVXNlZCB0byBkZXRlY3QgaWYgYSBtZXRob2QgaXMgbmF0aXZlLiAqL1xudmFyIHJlSXNOYXRpdmUgPSBSZWdFeHAoJ14nICtcbiAgZnVuY1RvU3RyaW5nLmNhbGwoaGFzT3duUHJvcGVydHkpLnJlcGxhY2UocmVSZWdFeHBDaGFyLCAnXFxcXCQmJylcbiAgLnJlcGxhY2UoL2hhc093blByb3BlcnR5fChmdW5jdGlvbikuKj8oPz1cXFxcXFwoKXwgZm9yIC4rPyg/PVxcXFxcXF0pL2csICckMS4qPycpICsgJyQnXG4pO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzTmF0aXZlYCB3aXRob3V0IGJhZCBzaGltIGNoZWNrcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIG5hdGl2ZSBmdW5jdGlvbixcbiAqICBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VJc05hdGl2ZSh2YWx1ZSkge1xuICBpZiAoIWlzT2JqZWN0KHZhbHVlKSB8fCBpc01hc2tlZCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIHBhdHRlcm4gPSBpc0Z1bmN0aW9uKHZhbHVlKSA/IHJlSXNOYXRpdmUgOiByZUlzSG9zdEN0b3I7XG4gIHJldHVybiBwYXR0ZXJuLnRlc3QodG9Tb3VyY2UodmFsdWUpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlSXNOYXRpdmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseIsNative.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseIsTypedArray.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_baseIsTypedArray.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"./node_modules/lodash/_baseGetTag.js\"),\n    isLength = __webpack_require__(/*! ./isLength */ \"./node_modules/lodash/isLength.js\"),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"./node_modules/lodash/isObjectLike.js\");\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNUeXBlZEFycmF5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLDJEQUFlO0FBQ3hDLGVBQWUsbUJBQU8sQ0FBQyxxREFBWTtBQUNuQyxtQkFBbUIsbUJBQU8sQ0FBQyw2REFBZ0I7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUlzVHlwZWRBcnJheS5qcz83NDNmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlR2V0VGFnID0gcmVxdWlyZSgnLi9fYmFzZUdldFRhZycpLFxuICAgIGlzTGVuZ3RoID0gcmVxdWlyZSgnLi9pc0xlbmd0aCcpLFxuICAgIGlzT2JqZWN0TGlrZSA9IHJlcXVpcmUoJy4vaXNPYmplY3RMaWtlJyk7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBhcmdzVGFnID0gJ1tvYmplY3QgQXJndW1lbnRzXScsXG4gICAgYXJyYXlUYWcgPSAnW29iamVjdCBBcnJheV0nLFxuICAgIGJvb2xUYWcgPSAnW29iamVjdCBCb29sZWFuXScsXG4gICAgZGF0ZVRhZyA9ICdbb2JqZWN0IERhdGVdJyxcbiAgICBlcnJvclRhZyA9ICdbb2JqZWN0IEVycm9yXScsXG4gICAgZnVuY1RhZyA9ICdbb2JqZWN0IEZ1bmN0aW9uXScsXG4gICAgbWFwVGFnID0gJ1tvYmplY3QgTWFwXScsXG4gICAgbnVtYmVyVGFnID0gJ1tvYmplY3QgTnVtYmVyXScsXG4gICAgb2JqZWN0VGFnID0gJ1tvYmplY3QgT2JqZWN0XScsXG4gICAgcmVnZXhwVGFnID0gJ1tvYmplY3QgUmVnRXhwXScsXG4gICAgc2V0VGFnID0gJ1tvYmplY3QgU2V0XScsXG4gICAgc3RyaW5nVGFnID0gJ1tvYmplY3QgU3RyaW5nXScsXG4gICAgd2Vha01hcFRhZyA9ICdbb2JqZWN0IFdlYWtNYXBdJztcblxudmFyIGFycmF5QnVmZmVyVGFnID0gJ1tvYmplY3QgQXJyYXlCdWZmZXJdJyxcbiAgICBkYXRhVmlld1RhZyA9ICdbb2JqZWN0IERhdGFWaWV3XScsXG4gICAgZmxvYXQzMlRhZyA9ICdbb2JqZWN0IEZsb2F0MzJBcnJheV0nLFxuICAgIGZsb2F0NjRUYWcgPSAnW29iamVjdCBGbG9hdDY0QXJyYXldJyxcbiAgICBpbnQ4VGFnID0gJ1tvYmplY3QgSW50OEFycmF5XScsXG4gICAgaW50MTZUYWcgPSAnW29iamVjdCBJbnQxNkFycmF5XScsXG4gICAgaW50MzJUYWcgPSAnW29iamVjdCBJbnQzMkFycmF5XScsXG4gICAgdWludDhUYWcgPSAnW29iamVjdCBVaW50OEFycmF5XScsXG4gICAgdWludDhDbGFtcGVkVGFnID0gJ1tvYmplY3QgVWludDhDbGFtcGVkQXJyYXldJyxcbiAgICB1aW50MTZUYWcgPSAnW29iamVjdCBVaW50MTZBcnJheV0nLFxuICAgIHVpbnQzMlRhZyA9ICdbb2JqZWN0IFVpbnQzMkFycmF5XSc7XG5cbi8qKiBVc2VkIHRvIGlkZW50aWZ5IGB0b1N0cmluZ1RhZ2AgdmFsdWVzIG9mIHR5cGVkIGFycmF5cy4gKi9cbnZhciB0eXBlZEFycmF5VGFncyA9IHt9O1xudHlwZWRBcnJheVRhZ3NbZmxvYXQzMlRhZ10gPSB0eXBlZEFycmF5VGFnc1tmbG9hdDY0VGFnXSA9XG50eXBlZEFycmF5VGFnc1tpbnQ4VGFnXSA9IHR5cGVkQXJyYXlUYWdzW2ludDE2VGFnXSA9XG50eXBlZEFycmF5VGFnc1tpbnQzMlRhZ10gPSB0eXBlZEFycmF5VGFnc1t1aW50OFRhZ10gPVxudHlwZWRBcnJheVRhZ3NbdWludDhDbGFtcGVkVGFnXSA9IHR5cGVkQXJyYXlUYWdzW3VpbnQxNlRhZ10gPVxudHlwZWRBcnJheVRhZ3NbdWludDMyVGFnXSA9IHRydWU7XG50eXBlZEFycmF5VGFnc1thcmdzVGFnXSA9IHR5cGVkQXJyYXlUYWdzW2FycmF5VGFnXSA9XG50eXBlZEFycmF5VGFnc1thcnJheUJ1ZmZlclRhZ10gPSB0eXBlZEFycmF5VGFnc1tib29sVGFnXSA9XG50eXBlZEFycmF5VGFnc1tkYXRhVmlld1RhZ10gPSB0eXBlZEFycmF5VGFnc1tkYXRlVGFnXSA9XG50eXBlZEFycmF5VGFnc1tlcnJvclRhZ10gPSB0eXBlZEFycmF5VGFnc1tmdW5jVGFnXSA9XG50eXBlZEFycmF5VGFnc1ttYXBUYWddID0gdHlwZWRBcnJheVRhZ3NbbnVtYmVyVGFnXSA9XG50eXBlZEFycmF5VGFnc1tvYmplY3RUYWddID0gdHlwZWRBcnJheVRhZ3NbcmVnZXhwVGFnXSA9XG50eXBlZEFycmF5VGFnc1tzZXRUYWddID0gdHlwZWRBcnJheVRhZ3Nbc3RyaW5nVGFnXSA9XG50eXBlZEFycmF5VGFnc1t3ZWFrTWFwVGFnXSA9IGZhbHNlO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzVHlwZWRBcnJheWAgd2l0aG91dCBOb2RlLmpzIG9wdGltaXphdGlvbnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB0eXBlZCBhcnJheSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNUeXBlZEFycmF5KHZhbHVlKSB7XG4gIHJldHVybiBpc09iamVjdExpa2UodmFsdWUpICYmXG4gICAgaXNMZW5ndGgodmFsdWUubGVuZ3RoKSAmJiAhIXR5cGVkQXJyYXlUYWdzW2Jhc2VHZXRUYWcodmFsdWUpXTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlSXNUeXBlZEFycmF5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseIsTypedArray.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseIteratee.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIteratee.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseMatches = __webpack_require__(/*! ./_baseMatches */ \"./node_modules/lodash/_baseMatches.js\"),\n    baseMatchesProperty = __webpack_require__(/*! ./_baseMatchesProperty */ \"./node_modules/lodash/_baseMatchesProperty.js\"),\n    identity = __webpack_require__(/*! ./identity */ \"./node_modules/lodash/identity.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\"),\n    property = __webpack_require__(/*! ./property */ \"./node_modules/lodash/property.js\");\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXRlcmF0ZWUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsa0JBQWtCLG1CQUFPLENBQUMsNkRBQWdCO0FBQzFDLDBCQUEwQixtQkFBTyxDQUFDLDZFQUF3QjtBQUMxRCxlQUFlLG1CQUFPLENBQUMscURBQVk7QUFDbkMsY0FBYyxtQkFBTyxDQUFDLG1EQUFXO0FBQ2pDLGVBQWUsbUJBQU8sQ0FBQyxxREFBWTs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFVBQVU7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUl0ZXJhdGVlLmpzP2JhZGYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2VNYXRjaGVzID0gcmVxdWlyZSgnLi9fYmFzZU1hdGNoZXMnKSxcbiAgICBiYXNlTWF0Y2hlc1Byb3BlcnR5ID0gcmVxdWlyZSgnLi9fYmFzZU1hdGNoZXNQcm9wZXJ0eScpLFxuICAgIGlkZW50aXR5ID0gcmVxdWlyZSgnLi9pZGVudGl0eScpLFxuICAgIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKSxcbiAgICBwcm9wZXJ0eSA9IHJlcXVpcmUoJy4vcHJvcGVydHknKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pdGVyYXRlZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gW3ZhbHVlPV8uaWRlbnRpdHldIFRoZSB2YWx1ZSB0byBjb252ZXJ0IHRvIGFuIGl0ZXJhdGVlLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBpdGVyYXRlZS5cbiAqL1xuZnVuY3Rpb24gYmFzZUl0ZXJhdGVlKHZhbHVlKSB7XG4gIC8vIERvbid0IHN0b3JlIHRoZSBgdHlwZW9mYCByZXN1bHQgaW4gYSB2YXJpYWJsZSB0byBhdm9pZCBhIEpJVCBidWcgaW4gU2FmYXJpIDkuXG4gIC8vIFNlZSBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTU2MDM0IGZvciBtb3JlIGRldGFpbHMuXG4gIGlmICh0eXBlb2YgdmFsdWUgPT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgIHJldHVybiBpZGVudGl0eTtcbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlID09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIGlzQXJyYXkodmFsdWUpXG4gICAgICA/IGJhc2VNYXRjaGVzUHJvcGVydHkodmFsdWVbMF0sIHZhbHVlWzFdKVxuICAgICAgOiBiYXNlTWF0Y2hlcyh2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIHByb3BlcnR5KHZhbHVlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlSXRlcmF0ZWU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseIteratee.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseKeys.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseKeys.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var isPrototype = __webpack_require__(/*! ./_isPrototype */ \"./node_modules/lodash/_isPrototype.js\"),\n    nativeKeys = __webpack_require__(/*! ./_nativeKeys */ \"./node_modules/lodash/_nativeKeys.js\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlS2V5cy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IsbUJBQU8sQ0FBQyw2REFBZ0I7QUFDMUMsaUJBQWlCLG1CQUFPLENBQUMsMkRBQWU7O0FBRXhDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VLZXlzLmpzPzAzZGQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzUHJvdG90eXBlID0gcmVxdWlyZSgnLi9faXNQcm90b3R5cGUnKSxcbiAgICBuYXRpdmVLZXlzID0gcmVxdWlyZSgnLi9fbmF0aXZlS2V5cycpO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmtleXNgIHdoaWNoIGRvZXNuJ3QgdHJlYXQgc3BhcnNlIGFycmF5cyBhcyBkZW5zZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqL1xuZnVuY3Rpb24gYmFzZUtleXMob2JqZWN0KSB7XG4gIGlmICghaXNQcm90b3R5cGUob2JqZWN0KSkge1xuICAgIHJldHVybiBuYXRpdmVLZXlzKG9iamVjdCk7XG4gIH1cbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gT2JqZWN0KG9iamVjdCkpIHtcbiAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIGtleSkgJiYga2V5ICE9ICdjb25zdHJ1Y3RvcicpIHtcbiAgICAgIHJlc3VsdC5wdXNoKGtleSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUtleXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseKeys.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseMap.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseMap.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseEach = __webpack_require__(/*! ./_baseEach */ \"./node_modules/lodash/_baseEach.js\"),\n    isArrayLike = __webpack_require__(/*! ./isArrayLike */ \"./node_modules/lodash/isArrayLike.js\");\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlTWFwLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyx1REFBYTtBQUNwQyxrQkFBa0IsbUJBQU8sQ0FBQywyREFBZTs7QUFFekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekIsV0FBVyxVQUFVO0FBQ3JCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VNYXAuanM/OTdkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUVhY2ggPSByZXF1aXJlKCcuL19iYXNlRWFjaCcpLFxuICAgIGlzQXJyYXlMaWtlID0gcmVxdWlyZSgnLi9pc0FycmF5TGlrZScpO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLm1hcGAgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgbWFwcGVkIGFycmF5LlxuICovXG5mdW5jdGlvbiBiYXNlTWFwKGNvbGxlY3Rpb24sIGl0ZXJhdGVlKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gaXNBcnJheUxpa2UoY29sbGVjdGlvbikgPyBBcnJheShjb2xsZWN0aW9uLmxlbmd0aCkgOiBbXTtcblxuICBiYXNlRWFjaChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwga2V5LCBjb2xsZWN0aW9uKSB7XG4gICAgcmVzdWx0WysraW5kZXhdID0gaXRlcmF0ZWUodmFsdWUsIGtleSwgY29sbGVjdGlvbik7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VNYXA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseMap.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseMatches.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseMatches.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseIsMatch = __webpack_require__(/*! ./_baseIsMatch */ \"./node_modules/lodash/_baseIsMatch.js\"),\n    getMatchData = __webpack_require__(/*! ./_getMatchData */ \"./node_modules/lodash/_getMatchData.js\"),\n    matchesStrictComparable = __webpack_require__(/*! ./_matchesStrictComparable */ \"./node_modules/lodash/_matchesStrictComparable.js\");\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlTWF0Y2hlcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IsbUJBQU8sQ0FBQyw2REFBZ0I7QUFDMUMsbUJBQW1CLG1CQUFPLENBQUMsK0RBQWlCO0FBQzVDLDhCQUE4QixtQkFBTyxDQUFDLHFGQUE0Qjs7QUFFbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxVQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlTWF0Y2hlcy5qcz82NDJhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlSXNNYXRjaCA9IHJlcXVpcmUoJy4vX2Jhc2VJc01hdGNoJyksXG4gICAgZ2V0TWF0Y2hEYXRhID0gcmVxdWlyZSgnLi9fZ2V0TWF0Y2hEYXRhJyksXG4gICAgbWF0Y2hlc1N0cmljdENvbXBhcmFibGUgPSByZXF1aXJlKCcuL19tYXRjaGVzU3RyaWN0Q29tcGFyYWJsZScpO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLm1hdGNoZXNgIHdoaWNoIGRvZXNuJ3QgY2xvbmUgYHNvdXJjZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2UgVGhlIG9iamVjdCBvZiBwcm9wZXJ0eSB2YWx1ZXMgdG8gbWF0Y2guXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBzcGVjIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBiYXNlTWF0Y2hlcyhzb3VyY2UpIHtcbiAgdmFyIG1hdGNoRGF0YSA9IGdldE1hdGNoRGF0YShzb3VyY2UpO1xuICBpZiAobWF0Y2hEYXRhLmxlbmd0aCA9PSAxICYmIG1hdGNoRGF0YVswXVsyXSkge1xuICAgIHJldHVybiBtYXRjaGVzU3RyaWN0Q29tcGFyYWJsZShtYXRjaERhdGFbMF1bMF0sIG1hdGNoRGF0YVswXVsxXSk7XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHJldHVybiBvYmplY3QgPT09IHNvdXJjZSB8fCBiYXNlSXNNYXRjaChvYmplY3QsIHNvdXJjZSwgbWF0Y2hEYXRhKTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlTWF0Y2hlcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseMatches.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseMatchesProperty.js":
/*!*****************************************************!*\
  !*** ./node_modules/lodash/_baseMatchesProperty.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ \"./node_modules/lodash/_baseIsEqual.js\"),\n    get = __webpack_require__(/*! ./get */ \"./node_modules/lodash/get.js\"),\n    hasIn = __webpack_require__(/*! ./hasIn */ \"./node_modules/lodash/hasIn.js\"),\n    isKey = __webpack_require__(/*! ./_isKey */ \"./node_modules/lodash/_isKey.js\"),\n    isStrictComparable = __webpack_require__(/*! ./_isStrictComparable */ \"./node_modules/lodash/_isStrictComparable.js\"),\n    matchesStrictComparable = __webpack_require__(/*! ./_matchesStrictComparable */ \"./node_modules/lodash/_matchesStrictComparable.js\"),\n    toKey = __webpack_require__(/*! ./_toKey */ \"./node_modules/lodash/_toKey.js\");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlTWF0Y2hlc1Byb3BlcnR5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixtQkFBTyxDQUFDLDZEQUFnQjtBQUMxQyxVQUFVLG1CQUFPLENBQUMsMkNBQU87QUFDekIsWUFBWSxtQkFBTyxDQUFDLCtDQUFTO0FBQzdCLFlBQVksbUJBQU8sQ0FBQyxpREFBVTtBQUM5Qix5QkFBeUIsbUJBQU8sQ0FBQywyRUFBdUI7QUFDeEQsOEJBQThCLG1CQUFPLENBQUMscUZBQTRCO0FBQ2xFLFlBQVksbUJBQU8sQ0FBQyxpREFBVTs7QUFFOUI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsR0FBRztBQUNkLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VNYXRjaGVzUHJvcGVydHkuanM/MTgzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUlzRXF1YWwgPSByZXF1aXJlKCcuL19iYXNlSXNFcXVhbCcpLFxuICAgIGdldCA9IHJlcXVpcmUoJy4vZ2V0JyksXG4gICAgaGFzSW4gPSByZXF1aXJlKCcuL2hhc0luJyksXG4gICAgaXNLZXkgPSByZXF1aXJlKCcuL19pc0tleScpLFxuICAgIGlzU3RyaWN0Q29tcGFyYWJsZSA9IHJlcXVpcmUoJy4vX2lzU3RyaWN0Q29tcGFyYWJsZScpLFxuICAgIG1hdGNoZXNTdHJpY3RDb21wYXJhYmxlID0gcmVxdWlyZSgnLi9fbWF0Y2hlc1N0cmljdENvbXBhcmFibGUnKSxcbiAgICB0b0tleSA9IHJlcXVpcmUoJy4vX3RvS2V5Jyk7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIHZhbHVlIGNvbXBhcmlzb25zLiAqL1xudmFyIENPTVBBUkVfUEFSVElBTF9GTEFHID0gMSxcbiAgICBDT01QQVJFX1VOT1JERVJFRF9GTEFHID0gMjtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5tYXRjaGVzUHJvcGVydHlgIHdoaWNoIGRvZXNuJ3QgY2xvbmUgYHNyY1ZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGggVGhlIHBhdGggb2YgdGhlIHByb3BlcnR5IHRvIGdldC5cbiAqIEBwYXJhbSB7Kn0gc3JjVmFsdWUgVGhlIHZhbHVlIHRvIG1hdGNoLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgc3BlYyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gYmFzZU1hdGNoZXNQcm9wZXJ0eShwYXRoLCBzcmNWYWx1ZSkge1xuICBpZiAoaXNLZXkocGF0aCkgJiYgaXNTdHJpY3RDb21wYXJhYmxlKHNyY1ZhbHVlKSkge1xuICAgIHJldHVybiBtYXRjaGVzU3RyaWN0Q29tcGFyYWJsZSh0b0tleShwYXRoKSwgc3JjVmFsdWUpO1xuICB9XG4gIHJldHVybiBmdW5jdGlvbihvYmplY3QpIHtcbiAgICB2YXIgb2JqVmFsdWUgPSBnZXQob2JqZWN0LCBwYXRoKTtcbiAgICByZXR1cm4gKG9ialZhbHVlID09PSB1bmRlZmluZWQgJiYgb2JqVmFsdWUgPT09IHNyY1ZhbHVlKVxuICAgICAgPyBoYXNJbihvYmplY3QsIHBhdGgpXG4gICAgICA6IGJhc2VJc0VxdWFsKHNyY1ZhbHVlLCBvYmpWYWx1ZSwgQ09NUEFSRV9QQVJUSUFMX0ZMQUcgfCBDT01QQVJFX1VOT1JERVJFRF9GTEFHKTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlTWF0Y2hlc1Byb3BlcnR5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseMatchesProperty.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseOrderBy.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseOrderBy.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var arrayMap = __webpack_require__(/*! ./_arrayMap */ \"./node_modules/lodash/_arrayMap.js\"),\n    baseGet = __webpack_require__(/*! ./_baseGet */ \"./node_modules/lodash/_baseGet.js\"),\n    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ \"./node_modules/lodash/_baseIteratee.js\"),\n    baseMap = __webpack_require__(/*! ./_baseMap */ \"./node_modules/lodash/_baseMap.js\"),\n    baseSortBy = __webpack_require__(/*! ./_baseSortBy */ \"./node_modules/lodash/_baseSortBy.js\"),\n    baseUnary = __webpack_require__(/*! ./_baseUnary */ \"./node_modules/lodash/_baseUnary.js\"),\n    compareMultiple = __webpack_require__(/*! ./_compareMultiple */ \"./node_modules/lodash/_compareMultiple.js\"),\n    identity = __webpack_require__(/*! ./identity */ \"./node_modules/lodash/identity.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\");\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlT3JkZXJCeS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsdURBQWE7QUFDcEMsY0FBYyxtQkFBTyxDQUFDLHFEQUFZO0FBQ2xDLG1CQUFtQixtQkFBTyxDQUFDLCtEQUFpQjtBQUM1QyxjQUFjLG1CQUFPLENBQUMscURBQVk7QUFDbEMsaUJBQWlCLG1CQUFPLENBQUMsMkRBQWU7QUFDeEMsZ0JBQWdCLG1CQUFPLENBQUMseURBQWM7QUFDdEMsc0JBQXNCLG1CQUFPLENBQUMscUVBQW9CO0FBQ2xELGVBQWUsbUJBQU8sQ0FBQyxxREFBWTtBQUNuQyxjQUFjLG1CQUFPLENBQUMsbURBQVc7O0FBRWpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsOEJBQThCO0FBQ3pDLFdBQVcsVUFBVTtBQUNyQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsYUFBYTtBQUNiLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZU9yZGVyQnkuanM/NmE1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXJyYXlNYXAgPSByZXF1aXJlKCcuL19hcnJheU1hcCcpLFxuICAgIGJhc2VHZXQgPSByZXF1aXJlKCcuL19iYXNlR2V0JyksXG4gICAgYmFzZUl0ZXJhdGVlID0gcmVxdWlyZSgnLi9fYmFzZUl0ZXJhdGVlJyksXG4gICAgYmFzZU1hcCA9IHJlcXVpcmUoJy4vX2Jhc2VNYXAnKSxcbiAgICBiYXNlU29ydEJ5ID0gcmVxdWlyZSgnLi9fYmFzZVNvcnRCeScpLFxuICAgIGJhc2VVbmFyeSA9IHJlcXVpcmUoJy4vX2Jhc2VVbmFyeScpLFxuICAgIGNvbXBhcmVNdWx0aXBsZSA9IHJlcXVpcmUoJy4vX2NvbXBhcmVNdWx0aXBsZScpLFxuICAgIGlkZW50aXR5ID0gcmVxdWlyZSgnLi9pZGVudGl0eScpLFxuICAgIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5vcmRlckJ5YCB3aXRob3V0IHBhcmFtIGd1YXJkcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbltdfE9iamVjdFtdfHN0cmluZ1tdfSBpdGVyYXRlZXMgVGhlIGl0ZXJhdGVlcyB0byBzb3J0IGJ5LlxuICogQHBhcmFtIHtzdHJpbmdbXX0gb3JkZXJzIFRoZSBzb3J0IG9yZGVycyBvZiBgaXRlcmF0ZWVzYC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IHNvcnRlZCBhcnJheS5cbiAqL1xuZnVuY3Rpb24gYmFzZU9yZGVyQnkoY29sbGVjdGlvbiwgaXRlcmF0ZWVzLCBvcmRlcnMpIHtcbiAgaWYgKGl0ZXJhdGVlcy5sZW5ndGgpIHtcbiAgICBpdGVyYXRlZXMgPSBhcnJheU1hcChpdGVyYXRlZXMsIGZ1bmN0aW9uKGl0ZXJhdGVlKSB7XG4gICAgICBpZiAoaXNBcnJheShpdGVyYXRlZSkpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGJhc2VHZXQodmFsdWUsIGl0ZXJhdGVlLmxlbmd0aCA9PT0gMSA/IGl0ZXJhdGVlWzBdIDogaXRlcmF0ZWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gaXRlcmF0ZWU7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgaXRlcmF0ZWVzID0gW2lkZW50aXR5XTtcbiAgfVxuXG4gIHZhciBpbmRleCA9IC0xO1xuICBpdGVyYXRlZXMgPSBhcnJheU1hcChpdGVyYXRlZXMsIGJhc2VVbmFyeShiYXNlSXRlcmF0ZWUpKTtcblxuICB2YXIgcmVzdWx0ID0gYmFzZU1hcChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwga2V5LCBjb2xsZWN0aW9uKSB7XG4gICAgdmFyIGNyaXRlcmlhID0gYXJyYXlNYXAoaXRlcmF0ZWVzLCBmdW5jdGlvbihpdGVyYXRlZSkge1xuICAgICAgcmV0dXJuIGl0ZXJhdGVlKHZhbHVlKTtcbiAgICB9KTtcbiAgICByZXR1cm4geyAnY3JpdGVyaWEnOiBjcml0ZXJpYSwgJ2luZGV4JzogKytpbmRleCwgJ3ZhbHVlJzogdmFsdWUgfTtcbiAgfSk7XG5cbiAgcmV0dXJuIGJhc2VTb3J0QnkocmVzdWx0LCBmdW5jdGlvbihvYmplY3QsIG90aGVyKSB7XG4gICAgcmV0dXJuIGNvbXBhcmVNdWx0aXBsZShvYmplY3QsIG90aGVyLCBvcmRlcnMpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlT3JkZXJCeTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseOrderBy.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseProperty.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseProperty.js ***!
  \**********************************************/
/***/ (function(module) {

eval("/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlUHJvcGVydHkuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxVQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZVByb3BlcnR5LmpzP2VmNWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5wcm9wZXJ0eWAgd2l0aG91dCBzdXBwb3J0IGZvciBkZWVwIHBhdGhzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGdldC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGFjY2Vzc29yIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBiYXNlUHJvcGVydHkoa2V5KSB7XG4gIHJldHVybiBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gb2JqZWN0ID09IG51bGwgPyB1bmRlZmluZWQgOiBvYmplY3Rba2V5XTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlUHJvcGVydHk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseProperty.js\n");

/***/ }),

/***/ "./node_modules/lodash/_basePropertyDeep.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_basePropertyDeep.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseGet = __webpack_require__(/*! ./_baseGet */ \"./node_modules/lodash/_baseGet.js\");\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlUHJvcGVydHlEZWVwLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQyxxREFBWTs7QUFFbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekIsYUFBYSxVQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZVByb3BlcnR5RGVlcC5qcz9lM2Y4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlR2V0ID0gcmVxdWlyZSgnLi9fYmFzZUdldCcpO1xuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZVByb3BlcnR5YCB3aGljaCBzdXBwb3J0cyBkZWVwIHBhdGhzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYWNjZXNzb3IgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIGJhc2VQcm9wZXJ0eURlZXAocGF0aCkge1xuICByZXR1cm4gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIGJhc2VHZXQob2JqZWN0LCBwYXRoKTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlUHJvcGVydHlEZWVwO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_basePropertyDeep.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseSortBy.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseSortBy.js ***!
  \********************************************/
/***/ (function(module) {

eval("/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlU29ydEJ5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLFVBQVU7QUFDckIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VTb3J0QnkuanM/ZDRiMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnNvcnRCeWAgd2hpY2ggdXNlcyBgY29tcGFyZXJgIHRvIGRlZmluZSB0aGVcbiAqIHNvcnQgb3JkZXIgb2YgYGFycmF5YCBhbmQgcmVwbGFjZXMgY3JpdGVyaWEgb2JqZWN0cyB3aXRoIHRoZWlyIGNvcnJlc3BvbmRpbmdcbiAqIHZhbHVlcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIHNvcnQuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjb21wYXJlciBUaGUgZnVuY3Rpb24gdG8gZGVmaW5lIHNvcnQgb3JkZXIuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC5cbiAqL1xuZnVuY3Rpb24gYmFzZVNvcnRCeShhcnJheSwgY29tcGFyZXIpIHtcbiAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcblxuICBhcnJheS5zb3J0KGNvbXBhcmVyKTtcbiAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgYXJyYXlbbGVuZ3RoXSA9IGFycmF5W2xlbmd0aF0udmFsdWU7XG4gIH1cbiAgcmV0dXJuIGFycmF5O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VTb3J0Qnk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseSortBy.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseTimes.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseTimes.js ***!
  \*******************************************/
/***/ (function(module) {

eval("/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlVGltZXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VUaW1lcy5qcz81MGQ4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8udGltZXNgIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWUgc2hvcnRoYW5kc1xuICogb3IgbWF4IGFycmF5IGxlbmd0aCBjaGVja3MuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7bnVtYmVyfSBuIFRoZSBudW1iZXIgb2YgdGltZXMgdG8gaW52b2tlIGBpdGVyYXRlZWAuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiByZXN1bHRzLlxuICovXG5mdW5jdGlvbiBiYXNlVGltZXMobiwgaXRlcmF0ZWUpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICByZXN1bHQgPSBBcnJheShuKTtcblxuICB3aGlsZSAoKytpbmRleCA8IG4pIHtcbiAgICByZXN1bHRbaW5kZXhdID0gaXRlcmF0ZWUoaW5kZXgpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZVRpbWVzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseTimes.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseToString.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseToString.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Symbol = __webpack_require__(/*! ./_Symbol */ \"./node_modules/lodash/_Symbol.js\"),\n    arrayMap = __webpack_require__(/*! ./_arrayMap */ \"./node_modules/lodash/_arrayMap.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\"),\n    isSymbol = __webpack_require__(/*! ./isSymbol */ \"./node_modules/lodash/isSymbol.js\");\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlVG9TdHJpbmcuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxtQkFBTyxDQUFDLG1EQUFXO0FBQ2hDLGVBQWUsbUJBQU8sQ0FBQyx1REFBYTtBQUNwQyxjQUFjLG1CQUFPLENBQUMsbURBQVc7QUFDakMsZUFBZSxtQkFBTyxDQUFDLHFEQUFZOztBQUVuQztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlVG9TdHJpbmcuanM/Y2U4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgU3ltYm9sID0gcmVxdWlyZSgnLi9fU3ltYm9sJyksXG4gICAgYXJyYXlNYXAgPSByZXF1aXJlKCcuL19hcnJheU1hcCcpLFxuICAgIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKSxcbiAgICBpc1N5bWJvbCA9IHJlcXVpcmUoJy4vaXNTeW1ib2wnKTtcblxuLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovXG52YXIgSU5GSU5JVFkgPSAxIC8gMDtcblxuLyoqIFVzZWQgdG8gY29udmVydCBzeW1ib2xzIHRvIHByaW1pdGl2ZXMgYW5kIHN0cmluZ3MuICovXG52YXIgc3ltYm9sUHJvdG8gPSBTeW1ib2wgPyBTeW1ib2wucHJvdG90eXBlIDogdW5kZWZpbmVkLFxuICAgIHN5bWJvbFRvU3RyaW5nID0gc3ltYm9sUHJvdG8gPyBzeW1ib2xQcm90by50b1N0cmluZyA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy50b1N0cmluZ2Agd2hpY2ggZG9lc24ndCBjb252ZXJ0IG51bGxpc2hcbiAqIHZhbHVlcyB0byBlbXB0eSBzdHJpbmdzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBwcm9jZXNzLlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBiYXNlVG9TdHJpbmcodmFsdWUpIHtcbiAgLy8gRXhpdCBlYXJseSBmb3Igc3RyaW5ncyB0byBhdm9pZCBhIHBlcmZvcm1hbmNlIGhpdCBpbiBzb21lIGVudmlyb25tZW50cy5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAvLyBSZWN1cnNpdmVseSBjb252ZXJ0IHZhbHVlcyAoc3VzY2VwdGlibGUgdG8gY2FsbCBzdGFjayBsaW1pdHMpLlxuICAgIHJldHVybiBhcnJheU1hcCh2YWx1ZSwgYmFzZVRvU3RyaW5nKSArICcnO1xuICB9XG4gIGlmIChpc1N5bWJvbCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gc3ltYm9sVG9TdHJpbmcgPyBzeW1ib2xUb1N0cmluZy5jYWxsKHZhbHVlKSA6ICcnO1xuICB9XG4gIHZhciByZXN1bHQgPSAodmFsdWUgKyAnJyk7XG4gIHJldHVybiAocmVzdWx0ID09ICcwJyAmJiAoMSAvIHZhbHVlKSA9PSAtSU5GSU5JVFkpID8gJy0wJyA6IHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlVG9TdHJpbmc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseToString.js\n");

/***/ }),

/***/ "./node_modules/lodash/_baseUnary.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseUnary.js ***!
  \*******************************************/
/***/ (function(module) {

eval("/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlVW5hcnkuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsYUFBYSxVQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZVVuYXJ5LmpzP2IwNDciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy51bmFyeWAgd2l0aG91dCBzdXBwb3J0IGZvciBzdG9yaW5nIG1ldGFkYXRhLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBjYXAgYXJndW1lbnRzIGZvci5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGNhcHBlZCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gYmFzZVVuYXJ5KGZ1bmMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIGZ1bmModmFsdWUpO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VVbmFyeTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_baseUnary.js\n");

/***/ }),

/***/ "./node_modules/lodash/_cacheHas.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_cacheHas.js ***!
  \******************************************/
/***/ (function(module) {

eval("/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jYWNoZUhhcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jYWNoZUhhcy5qcz9jNTg0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2tzIGlmIGEgYGNhY2hlYCB2YWx1ZSBmb3IgYGtleWAgZXhpc3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gY2FjaGUgVGhlIGNhY2hlIHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBlbnRyeSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbnRyeSBmb3IgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGNhY2hlSGFzKGNhY2hlLCBrZXkpIHtcbiAgcmV0dXJuIGNhY2hlLmhhcyhrZXkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNhY2hlSGFzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_cacheHas.js\n");

/***/ }),

/***/ "./node_modules/lodash/_castPath.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_castPath.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\"),\n    isKey = __webpack_require__(/*! ./_isKey */ \"./node_modules/lodash/_isKey.js\"),\n    stringToPath = __webpack_require__(/*! ./_stringToPath */ \"./node_modules/lodash/_stringToPath.js\"),\n    toString = __webpack_require__(/*! ./toString */ \"./node_modules/lodash/toString.js\");\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jYXN0UGF0aC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxjQUFjLG1CQUFPLENBQUMsbURBQVc7QUFDakMsWUFBWSxtQkFBTyxDQUFDLGlEQUFVO0FBQzlCLG1CQUFtQixtQkFBTyxDQUFDLCtEQUFpQjtBQUM1QyxlQUFlLG1CQUFPLENBQUMscURBQVk7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsV0FBVyxRQUFRO0FBQ25CLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY2FzdFBhdGguanM/ZTJlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNBcnJheSA9IHJlcXVpcmUoJy4vaXNBcnJheScpLFxuICAgIGlzS2V5ID0gcmVxdWlyZSgnLi9faXNLZXknKSxcbiAgICBzdHJpbmdUb1BhdGggPSByZXF1aXJlKCcuL19zdHJpbmdUb1BhdGgnKSxcbiAgICB0b1N0cmluZyA9IHJlcXVpcmUoJy4vdG9TdHJpbmcnKTtcblxuLyoqXG4gKiBDYXN0cyBgdmFsdWVgIHRvIGEgcGF0aCBhcnJheSBpZiBpdCdzIG5vdCBvbmUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGluc3BlY3QuXG4gKiBAcGFyYW0ge09iamVjdH0gW29iamVjdF0gVGhlIG9iamVjdCB0byBxdWVyeSBrZXlzIG9uLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBjYXN0IHByb3BlcnR5IHBhdGggYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGNhc3RQYXRoKHZhbHVlLCBvYmplY3QpIHtcbiAgaWYgKGlzQXJyYXkodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIHJldHVybiBpc0tleSh2YWx1ZSwgb2JqZWN0KSA/IFt2YWx1ZV0gOiBzdHJpbmdUb1BhdGgodG9TdHJpbmcodmFsdWUpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjYXN0UGF0aDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_castPath.js\n");

/***/ }),

/***/ "./node_modules/lodash/_compareAscending.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_compareAscending.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var isSymbol = __webpack_require__(/*! ./isSymbol */ \"./node_modules/lodash/isSymbol.js\");\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jb21wYXJlQXNjZW5kaW5nLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyxxREFBWTs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY29tcGFyZUFzY2VuZGluZy5qcz9jYWU3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc1N5bWJvbCA9IHJlcXVpcmUoJy4vaXNTeW1ib2wnKTtcblxuLyoqXG4gKiBDb21wYXJlcyB2YWx1ZXMgdG8gc29ydCB0aGVtIGluIGFzY2VuZGluZyBvcmRlci5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7Kn0gb3RoZXIgVGhlIG90aGVyIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBzb3J0IG9yZGVyIGluZGljYXRvciBmb3IgYHZhbHVlYC5cbiAqL1xuZnVuY3Rpb24gY29tcGFyZUFzY2VuZGluZyh2YWx1ZSwgb3RoZXIpIHtcbiAgaWYgKHZhbHVlICE9PSBvdGhlcikge1xuICAgIHZhciB2YWxJc0RlZmluZWQgPSB2YWx1ZSAhPT0gdW5kZWZpbmVkLFxuICAgICAgICB2YWxJc051bGwgPSB2YWx1ZSA9PT0gbnVsbCxcbiAgICAgICAgdmFsSXNSZWZsZXhpdmUgPSB2YWx1ZSA9PT0gdmFsdWUsXG4gICAgICAgIHZhbElzU3ltYm9sID0gaXNTeW1ib2wodmFsdWUpO1xuXG4gICAgdmFyIG90aElzRGVmaW5lZCA9IG90aGVyICE9PSB1bmRlZmluZWQsXG4gICAgICAgIG90aElzTnVsbCA9IG90aGVyID09PSBudWxsLFxuICAgICAgICBvdGhJc1JlZmxleGl2ZSA9IG90aGVyID09PSBvdGhlcixcbiAgICAgICAgb3RoSXNTeW1ib2wgPSBpc1N5bWJvbChvdGhlcik7XG5cbiAgICBpZiAoKCFvdGhJc051bGwgJiYgIW90aElzU3ltYm9sICYmICF2YWxJc1N5bWJvbCAmJiB2YWx1ZSA+IG90aGVyKSB8fFxuICAgICAgICAodmFsSXNTeW1ib2wgJiYgb3RoSXNEZWZpbmVkICYmIG90aElzUmVmbGV4aXZlICYmICFvdGhJc051bGwgJiYgIW90aElzU3ltYm9sKSB8fFxuICAgICAgICAodmFsSXNOdWxsICYmIG90aElzRGVmaW5lZCAmJiBvdGhJc1JlZmxleGl2ZSkgfHxcbiAgICAgICAgKCF2YWxJc0RlZmluZWQgJiYgb3RoSXNSZWZsZXhpdmUpIHx8XG4gICAgICAgICF2YWxJc1JlZmxleGl2ZSkge1xuICAgICAgcmV0dXJuIDE7XG4gICAgfVxuICAgIGlmICgoIXZhbElzTnVsbCAmJiAhdmFsSXNTeW1ib2wgJiYgIW90aElzU3ltYm9sICYmIHZhbHVlIDwgb3RoZXIpIHx8XG4gICAgICAgIChvdGhJc1N5bWJvbCAmJiB2YWxJc0RlZmluZWQgJiYgdmFsSXNSZWZsZXhpdmUgJiYgIXZhbElzTnVsbCAmJiAhdmFsSXNTeW1ib2wpIHx8XG4gICAgICAgIChvdGhJc051bGwgJiYgdmFsSXNEZWZpbmVkICYmIHZhbElzUmVmbGV4aXZlKSB8fFxuICAgICAgICAoIW90aElzRGVmaW5lZCAmJiB2YWxJc1JlZmxleGl2ZSkgfHxcbiAgICAgICAgIW90aElzUmVmbGV4aXZlKSB7XG4gICAgICByZXR1cm4gLTE7XG4gICAgfVxuICB9XG4gIHJldHVybiAwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbXBhcmVBc2NlbmRpbmc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_compareAscending.js\n");

/***/ }),

/***/ "./node_modules/lodash/_compareMultiple.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_compareMultiple.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var compareAscending = __webpack_require__(/*! ./_compareAscending */ \"./node_modules/lodash/_compareAscending.js\");\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jb21wYXJlTXVsdGlwbGUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsdUJBQXVCLG1CQUFPLENBQUMsdUVBQXFCOztBQUVwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsb0JBQW9CO0FBQy9CLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY29tcGFyZU11bHRpcGxlLmpzPzIxNjQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvbXBhcmVBc2NlbmRpbmcgPSByZXF1aXJlKCcuL19jb21wYXJlQXNjZW5kaW5nJyk7XG5cbi8qKlxuICogVXNlZCBieSBgXy5vcmRlckJ5YCB0byBjb21wYXJlIG11bHRpcGxlIHByb3BlcnRpZXMgb2YgYSB2YWx1ZSB0byBhbm90aGVyXG4gKiBhbmQgc3RhYmxlIHNvcnQgdGhlbS5cbiAqXG4gKiBJZiBgb3JkZXJzYCBpcyB1bnNwZWNpZmllZCwgYWxsIHZhbHVlcyBhcmUgc29ydGVkIGluIGFzY2VuZGluZyBvcmRlci4gT3RoZXJ3aXNlLFxuICogc3BlY2lmeSBhbiBvcmRlciBvZiBcImRlc2NcIiBmb3IgZGVzY2VuZGluZyBvciBcImFzY1wiIGZvciBhc2NlbmRpbmcgc29ydCBvcmRlclxuICogb2YgY29ycmVzcG9uZGluZyB2YWx1ZXMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjb21wYXJlLlxuICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7Ym9vbGVhbltdfHN0cmluZ1tdfSBvcmRlcnMgVGhlIG9yZGVyIHRvIHNvcnQgYnkgZm9yIGVhY2ggcHJvcGVydHkuXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBzb3J0IG9yZGVyIGluZGljYXRvciBmb3IgYG9iamVjdGAuXG4gKi9cbmZ1bmN0aW9uIGNvbXBhcmVNdWx0aXBsZShvYmplY3QsIG90aGVyLCBvcmRlcnMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBvYmpDcml0ZXJpYSA9IG9iamVjdC5jcml0ZXJpYSxcbiAgICAgIG90aENyaXRlcmlhID0gb3RoZXIuY3JpdGVyaWEsXG4gICAgICBsZW5ndGggPSBvYmpDcml0ZXJpYS5sZW5ndGgsXG4gICAgICBvcmRlcnNMZW5ndGggPSBvcmRlcnMubGVuZ3RoO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIHJlc3VsdCA9IGNvbXBhcmVBc2NlbmRpbmcob2JqQ3JpdGVyaWFbaW5kZXhdLCBvdGhDcml0ZXJpYVtpbmRleF0pO1xuICAgIGlmIChyZXN1bHQpIHtcbiAgICAgIGlmIChpbmRleCA+PSBvcmRlcnNMZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIHZhciBvcmRlciA9IG9yZGVyc1tpbmRleF07XG4gICAgICByZXR1cm4gcmVzdWx0ICogKG9yZGVyID09ICdkZXNjJyA/IC0xIDogMSk7XG4gICAgfVxuICB9XG4gIC8vIEZpeGVzIGFuIGBBcnJheSNzb3J0YCBidWcgaW4gdGhlIEpTIGVuZ2luZSBlbWJlZGRlZCBpbiBBZG9iZSBhcHBsaWNhdGlvbnNcbiAgLy8gdGhhdCBjYXVzZXMgaXQsIHVuZGVyIGNlcnRhaW4gY2lyY3Vtc3RhbmNlcywgdG8gcHJvdmlkZSB0aGUgc2FtZSB2YWx1ZSBmb3JcbiAgLy8gYG9iamVjdGAgYW5kIGBvdGhlcmAuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vamFzaGtlbmFzL3VuZGVyc2NvcmUvcHVsbC8xMjQ3XG4gIC8vIGZvciBtb3JlIGRldGFpbHMuXG4gIC8vXG4gIC8vIFRoaXMgYWxzbyBlbnN1cmVzIGEgc3RhYmxlIHNvcnQgaW4gVjggYW5kIG90aGVyIGVuZ2luZXMuXG4gIC8vIFNlZSBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD05MCBmb3IgbW9yZSBkZXRhaWxzLlxuICByZXR1cm4gb2JqZWN0LmluZGV4IC0gb3RoZXIuaW5kZXg7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29tcGFyZU11bHRpcGxlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_compareMultiple.js\n");

/***/ }),

/***/ "./node_modules/lodash/_coreJsData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_coreJsData.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jb3JlSnNEYXRhLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLFdBQVcsbUJBQU8sQ0FBQywrQ0FBUzs7QUFFNUI7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY29yZUpzRGF0YS5qcz9kYTAzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciByb290ID0gcmVxdWlyZSgnLi9fcm9vdCcpO1xuXG4vKiogVXNlZCB0byBkZXRlY3Qgb3ZlcnJlYWNoaW5nIGNvcmUtanMgc2hpbXMuICovXG52YXIgY29yZUpzRGF0YSA9IHJvb3RbJ19fY29yZS1qc19zaGFyZWRfXyddO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNvcmVKc0RhdGE7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_coreJsData.js\n");

/***/ }),

/***/ "./node_modules/lodash/_createBaseEach.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_createBaseEach.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var isArrayLike = __webpack_require__(/*! ./isArrayLike */ \"./node_modules/lodash/isArrayLike.js\");\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jcmVhdGVCYXNlRWFjaC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IsbUJBQU8sQ0FBQywyREFBZTs7QUFFekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY3JlYXRlQmFzZUVhY2guanM/OTUwYSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNBcnJheUxpa2UgPSByZXF1aXJlKCcuL2lzQXJyYXlMaWtlJyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGBiYXNlRWFjaGAgb3IgYGJhc2VFYWNoUmlnaHRgIGZ1bmN0aW9uLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBlYWNoRnVuYyBUaGUgZnVuY3Rpb24gdG8gaXRlcmF0ZSBvdmVyIGEgY29sbGVjdGlvbi5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2Zyb21SaWdodF0gU3BlY2lmeSBpdGVyYXRpbmcgZnJvbSByaWdodCB0byBsZWZ0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYmFzZSBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQmFzZUVhY2goZWFjaEZ1bmMsIGZyb21SaWdodCkge1xuICByZXR1cm4gZnVuY3Rpb24oY29sbGVjdGlvbiwgaXRlcmF0ZWUpIHtcbiAgICBpZiAoY29sbGVjdGlvbiA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gY29sbGVjdGlvbjtcbiAgICB9XG4gICAgaWYgKCFpc0FycmF5TGlrZShjb2xsZWN0aW9uKSkge1xuICAgICAgcmV0dXJuIGVhY2hGdW5jKGNvbGxlY3Rpb24sIGl0ZXJhdGVlKTtcbiAgICB9XG4gICAgdmFyIGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoLFxuICAgICAgICBpbmRleCA9IGZyb21SaWdodCA/IGxlbmd0aCA6IC0xLFxuICAgICAgICBpdGVyYWJsZSA9IE9iamVjdChjb2xsZWN0aW9uKTtcblxuICAgIHdoaWxlICgoZnJvbVJpZ2h0ID8gaW5kZXgtLSA6ICsraW5kZXggPCBsZW5ndGgpKSB7XG4gICAgICBpZiAoaXRlcmF0ZWUoaXRlcmFibGVbaW5kZXhdLCBpbmRleCwgaXRlcmFibGUpID09PSBmYWxzZSkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNvbGxlY3Rpb247XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlQmFzZUVhY2g7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_createBaseEach.js\n");

/***/ }),

/***/ "./node_modules/lodash/_createBaseFor.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_createBaseFor.js ***!
  \***********************************************/
/***/ (function(module) {

eval("/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jcmVhdGVCYXNlRm9yLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NyZWF0ZUJhc2VGb3IuanM/OTljZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZXMgYSBiYXNlIGZ1bmN0aW9uIGZvciBtZXRob2RzIGxpa2UgYF8uZm9ySW5gIGFuZCBgXy5mb3JPd25gLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtmcm9tUmlnaHRdIFNwZWNpZnkgaXRlcmF0aW5nIGZyb20gcmlnaHQgdG8gbGVmdC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGJhc2UgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUJhc2VGb3IoZnJvbVJpZ2h0KSB7XG4gIHJldHVybiBmdW5jdGlvbihvYmplY3QsIGl0ZXJhdGVlLCBrZXlzRnVuYykge1xuICAgIHZhciBpbmRleCA9IC0xLFxuICAgICAgICBpdGVyYWJsZSA9IE9iamVjdChvYmplY3QpLFxuICAgICAgICBwcm9wcyA9IGtleXNGdW5jKG9iamVjdCksXG4gICAgICAgIGxlbmd0aCA9IHByb3BzLmxlbmd0aDtcblxuICAgIHdoaWxlIChsZW5ndGgtLSkge1xuICAgICAgdmFyIGtleSA9IHByb3BzW2Zyb21SaWdodCA/IGxlbmd0aCA6ICsraW5kZXhdO1xuICAgICAgaWYgKGl0ZXJhdGVlKGl0ZXJhYmxlW2tleV0sIGtleSwgaXRlcmFibGUpID09PSBmYWxzZSkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG9iamVjdDtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVCYXNlRm9yO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_createBaseFor.js\n");

/***/ }),

/***/ "./node_modules/lodash/_equalArrays.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_equalArrays.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var SetCache = __webpack_require__(/*! ./_SetCache */ \"./node_modules/lodash/_SetCache.js\"),\n    arraySome = __webpack_require__(/*! ./_arraySome */ \"./node_modules/lodash/_arraySome.js\"),\n    cacheHas = __webpack_require__(/*! ./_cacheHas */ \"./node_modules/lodash/_cacheHas.js\");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19lcXVhbEFycmF5cy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsdURBQWE7QUFDcEMsZ0JBQWdCLG1CQUFPLENBQUMseURBQWM7QUFDdEMsZUFBZSxtQkFBTyxDQUFDLHVEQUFhOztBQUVwQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQixXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19lcXVhbEFycmF5cy5qcz9hMmJlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBTZXRDYWNoZSA9IHJlcXVpcmUoJy4vX1NldENhY2hlJyksXG4gICAgYXJyYXlTb21lID0gcmVxdWlyZSgnLi9fYXJyYXlTb21lJyksXG4gICAgY2FjaGVIYXMgPSByZXF1aXJlKCcuL19jYWNoZUhhcycpO1xuXG4vKiogVXNlZCB0byBjb21wb3NlIGJpdG1hc2tzIGZvciB2YWx1ZSBjb21wYXJpc29ucy4gKi9cbnZhciBDT01QQVJFX1BBUlRJQUxfRkxBRyA9IDEsXG4gICAgQ09NUEFSRV9VTk9SREVSRURfRkxBRyA9IDI7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlSXNFcXVhbERlZXBgIGZvciBhcnJheXMgd2l0aCBzdXBwb3J0IGZvclxuICogcGFydGlhbCBkZWVwIGNvbXBhcmlzb25zLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7QXJyYXl9IG90aGVyIFRoZSBvdGhlciBhcnJheSB0byBjb21wYXJlLlxuICogQHBhcmFtIHtudW1iZXJ9IGJpdG1hc2sgVGhlIGJpdG1hc2sgZmxhZ3MuIFNlZSBgYmFzZUlzRXF1YWxgIGZvciBtb3JlIGRldGFpbHMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjdXN0b21pemVyIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgY29tcGFyaXNvbnMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBlcXVhbEZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGRldGVybWluZSBlcXVpdmFsZW50cyBvZiB2YWx1ZXMuXG4gKiBAcGFyYW0ge09iamVjdH0gc3RhY2sgVHJhY2tzIHRyYXZlcnNlZCBgYXJyYXlgIGFuZCBgb3RoZXJgIG9iamVjdHMuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGFycmF5cyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBlcXVhbEFycmF5cyhhcnJheSwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spIHtcbiAgdmFyIGlzUGFydGlhbCA9IGJpdG1hc2sgJiBDT01QQVJFX1BBUlRJQUxfRkxBRyxcbiAgICAgIGFyckxlbmd0aCA9IGFycmF5Lmxlbmd0aCxcbiAgICAgIG90aExlbmd0aCA9IG90aGVyLmxlbmd0aDtcblxuICBpZiAoYXJyTGVuZ3RoICE9IG90aExlbmd0aCAmJiAhKGlzUGFydGlhbCAmJiBvdGhMZW5ndGggPiBhcnJMZW5ndGgpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIC8vIENoZWNrIHRoYXQgY3ljbGljIHZhbHVlcyBhcmUgZXF1YWwuXG4gIHZhciBhcnJTdGFja2VkID0gc3RhY2suZ2V0KGFycmF5KTtcbiAgdmFyIG90aFN0YWNrZWQgPSBzdGFjay5nZXQob3RoZXIpO1xuICBpZiAoYXJyU3RhY2tlZCAmJiBvdGhTdGFja2VkKSB7XG4gICAgcmV0dXJuIGFyclN0YWNrZWQgPT0gb3RoZXIgJiYgb3RoU3RhY2tlZCA9PSBhcnJheTtcbiAgfVxuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIHJlc3VsdCA9IHRydWUsXG4gICAgICBzZWVuID0gKGJpdG1hc2sgJiBDT01QQVJFX1VOT1JERVJFRF9GTEFHKSA/IG5ldyBTZXRDYWNoZSA6IHVuZGVmaW5lZDtcblxuICBzdGFjay5zZXQoYXJyYXksIG90aGVyKTtcbiAgc3RhY2suc2V0KG90aGVyLCBhcnJheSk7XG5cbiAgLy8gSWdub3JlIG5vbi1pbmRleCBwcm9wZXJ0aWVzLlxuICB3aGlsZSAoKytpbmRleCA8IGFyckxlbmd0aCkge1xuICAgIHZhciBhcnJWYWx1ZSA9IGFycmF5W2luZGV4XSxcbiAgICAgICAgb3RoVmFsdWUgPSBvdGhlcltpbmRleF07XG5cbiAgICBpZiAoY3VzdG9taXplcikge1xuICAgICAgdmFyIGNvbXBhcmVkID0gaXNQYXJ0aWFsXG4gICAgICAgID8gY3VzdG9taXplcihvdGhWYWx1ZSwgYXJyVmFsdWUsIGluZGV4LCBvdGhlciwgYXJyYXksIHN0YWNrKVxuICAgICAgICA6IGN1c3RvbWl6ZXIoYXJyVmFsdWUsIG90aFZhbHVlLCBpbmRleCwgYXJyYXksIG90aGVyLCBzdGFjayk7XG4gICAgfVxuICAgIGlmIChjb21wYXJlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBpZiAoY29tcGFyZWQpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICByZXN1bHQgPSBmYWxzZTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICAvLyBSZWN1cnNpdmVseSBjb21wYXJlIGFycmF5cyAoc3VzY2VwdGlibGUgdG8gY2FsbCBzdGFjayBsaW1pdHMpLlxuICAgIGlmIChzZWVuKSB7XG4gICAgICBpZiAoIWFycmF5U29tZShvdGhlciwgZnVuY3Rpb24ob3RoVmFsdWUsIG90aEluZGV4KSB7XG4gICAgICAgICAgICBpZiAoIWNhY2hlSGFzKHNlZW4sIG90aEluZGV4KSAmJlxuICAgICAgICAgICAgICAgIChhcnJWYWx1ZSA9PT0gb3RoVmFsdWUgfHwgZXF1YWxGdW5jKGFyclZhbHVlLCBvdGhWYWx1ZSwgYml0bWFzaywgY3VzdG9taXplciwgc3RhY2spKSkge1xuICAgICAgICAgICAgICByZXR1cm4gc2Vlbi5wdXNoKG90aEluZGV4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSkge1xuICAgICAgICByZXN1bHQgPSBmYWxzZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICghKFxuICAgICAgICAgIGFyclZhbHVlID09PSBvdGhWYWx1ZSB8fFxuICAgICAgICAgICAgZXF1YWxGdW5jKGFyclZhbHVlLCBvdGhWYWx1ZSwgYml0bWFzaywgY3VzdG9taXplciwgc3RhY2spXG4gICAgICAgICkpIHtcbiAgICAgIHJlc3VsdCA9IGZhbHNlO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHN0YWNrWydkZWxldGUnXShhcnJheSk7XG4gIHN0YWNrWydkZWxldGUnXShvdGhlcik7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXF1YWxBcnJheXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_equalArrays.js\n");

/***/ }),

/***/ "./node_modules/lodash/_equalByTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_equalByTag.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Symbol = __webpack_require__(/*! ./_Symbol */ \"./node_modules/lodash/_Symbol.js\"),\n    Uint8Array = __webpack_require__(/*! ./_Uint8Array */ \"./node_modules/lodash/_Uint8Array.js\"),\n    eq = __webpack_require__(/*! ./eq */ \"./node_modules/lodash/eq.js\"),\n    equalArrays = __webpack_require__(/*! ./_equalArrays */ \"./node_modules/lodash/_equalArrays.js\"),\n    mapToArray = __webpack_require__(/*! ./_mapToArray */ \"./node_modules/lodash/_mapToArray.js\"),\n    setToArray = __webpack_require__(/*! ./_setToArray */ \"./node_modules/lodash/_setToArray.js\");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19lcXVhbEJ5VGFnLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGFBQWEsbUJBQU8sQ0FBQyxtREFBVztBQUNoQyxpQkFBaUIsbUJBQU8sQ0FBQywyREFBZTtBQUN4QyxTQUFTLG1CQUFPLENBQUMseUNBQU07QUFDdkIsa0JBQWtCLG1CQUFPLENBQUMsNkRBQWdCO0FBQzFDLGlCQUFpQixtQkFBTyxDQUFDLDJEQUFlO0FBQ3hDLGlCQUFpQixtQkFBTyxDQUFDLDJEQUFlOztBQUV4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZXF1YWxCeVRhZy5qcz8xYzNjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBTeW1ib2wgPSByZXF1aXJlKCcuL19TeW1ib2wnKSxcbiAgICBVaW50OEFycmF5ID0gcmVxdWlyZSgnLi9fVWludDhBcnJheScpLFxuICAgIGVxID0gcmVxdWlyZSgnLi9lcScpLFxuICAgIGVxdWFsQXJyYXlzID0gcmVxdWlyZSgnLi9fZXF1YWxBcnJheXMnKSxcbiAgICBtYXBUb0FycmF5ID0gcmVxdWlyZSgnLi9fbWFwVG9BcnJheScpLFxuICAgIHNldFRvQXJyYXkgPSByZXF1aXJlKCcuL19zZXRUb0FycmF5Jyk7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIHZhbHVlIGNvbXBhcmlzb25zLiAqL1xudmFyIENPTVBBUkVfUEFSVElBTF9GTEFHID0gMSxcbiAgICBDT01QQVJFX1VOT1JERVJFRF9GTEFHID0gMjtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGJvb2xUYWcgPSAnW29iamVjdCBCb29sZWFuXScsXG4gICAgZGF0ZVRhZyA9ICdbb2JqZWN0IERhdGVdJyxcbiAgICBlcnJvclRhZyA9ICdbb2JqZWN0IEVycm9yXScsXG4gICAgbWFwVGFnID0gJ1tvYmplY3QgTWFwXScsXG4gICAgbnVtYmVyVGFnID0gJ1tvYmplY3QgTnVtYmVyXScsXG4gICAgcmVnZXhwVGFnID0gJ1tvYmplY3QgUmVnRXhwXScsXG4gICAgc2V0VGFnID0gJ1tvYmplY3QgU2V0XScsXG4gICAgc3RyaW5nVGFnID0gJ1tvYmplY3QgU3RyaW5nXScsXG4gICAgc3ltYm9sVGFnID0gJ1tvYmplY3QgU3ltYm9sXSc7XG5cbnZhciBhcnJheUJ1ZmZlclRhZyA9ICdbb2JqZWN0IEFycmF5QnVmZmVyXScsXG4gICAgZGF0YVZpZXdUYWcgPSAnW29iamVjdCBEYXRhVmlld10nO1xuXG4vKiogVXNlZCB0byBjb252ZXJ0IHN5bWJvbHMgdG8gcHJpbWl0aXZlcyBhbmQgc3RyaW5ncy4gKi9cbnZhciBzeW1ib2xQcm90byA9IFN5bWJvbCA/IFN5bWJvbC5wcm90b3R5cGUgOiB1bmRlZmluZWQsXG4gICAgc3ltYm9sVmFsdWVPZiA9IHN5bWJvbFByb3RvID8gc3ltYm9sUHJvdG8udmFsdWVPZiA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VJc0VxdWFsRGVlcGAgZm9yIGNvbXBhcmluZyBvYmplY3RzIG9mXG4gKiB0aGUgc2FtZSBgdG9TdHJpbmdUYWdgLlxuICpcbiAqICoqTm90ZToqKiBUaGlzIGZ1bmN0aW9uIG9ubHkgc3VwcG9ydHMgY29tcGFyaW5nIHZhbHVlcyB3aXRoIHRhZ3Mgb2ZcbiAqIGBCb29sZWFuYCwgYERhdGVgLCBgRXJyb3JgLCBgTnVtYmVyYCwgYFJlZ0V4cGAsIG9yIGBTdHJpbmdgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBvdGhlciBUaGUgb3RoZXIgb2JqZWN0IHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFnIFRoZSBgdG9TdHJpbmdUYWdgIG9mIHRoZSBvYmplY3RzIHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge251bWJlcn0gYml0bWFzayBUaGUgYml0bWFzayBmbGFncy4gU2VlIGBiYXNlSXNFcXVhbGAgZm9yIG1vcmUgZGV0YWlscy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGN1c3RvbWl6ZXIgVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGVxdWFsRnVuYyBUaGUgZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIGVxdWl2YWxlbnRzIG9mIHZhbHVlcy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzdGFjayBUcmFja3MgdHJhdmVyc2VkIGBvYmplY3RgIGFuZCBgb3RoZXJgIG9iamVjdHMuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIG9iamVjdHMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gZXF1YWxCeVRhZyhvYmplY3QsIG90aGVyLCB0YWcsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spIHtcbiAgc3dpdGNoICh0YWcpIHtcbiAgICBjYXNlIGRhdGFWaWV3VGFnOlxuICAgICAgaWYgKChvYmplY3QuYnl0ZUxlbmd0aCAhPSBvdGhlci5ieXRlTGVuZ3RoKSB8fFxuICAgICAgICAgIChvYmplY3QuYnl0ZU9mZnNldCAhPSBvdGhlci5ieXRlT2Zmc2V0KSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICBvYmplY3QgPSBvYmplY3QuYnVmZmVyO1xuICAgICAgb3RoZXIgPSBvdGhlci5idWZmZXI7XG5cbiAgICBjYXNlIGFycmF5QnVmZmVyVGFnOlxuICAgICAgaWYgKChvYmplY3QuYnl0ZUxlbmd0aCAhPSBvdGhlci5ieXRlTGVuZ3RoKSB8fFxuICAgICAgICAgICFlcXVhbEZ1bmMobmV3IFVpbnQ4QXJyYXkob2JqZWN0KSwgbmV3IFVpbnQ4QXJyYXkob3RoZXIpKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICByZXR1cm4gdHJ1ZTtcblxuICAgIGNhc2UgYm9vbFRhZzpcbiAgICBjYXNlIGRhdGVUYWc6XG4gICAgY2FzZSBudW1iZXJUYWc6XG4gICAgICAvLyBDb2VyY2UgYm9vbGVhbnMgdG8gYDFgIG9yIGAwYCBhbmQgZGF0ZXMgdG8gbWlsbGlzZWNvbmRzLlxuICAgICAgLy8gSW52YWxpZCBkYXRlcyBhcmUgY29lcmNlZCB0byBgTmFOYC5cbiAgICAgIHJldHVybiBlcSgrb2JqZWN0LCArb3RoZXIpO1xuXG4gICAgY2FzZSBlcnJvclRhZzpcbiAgICAgIHJldHVybiBvYmplY3QubmFtZSA9PSBvdGhlci5uYW1lICYmIG9iamVjdC5tZXNzYWdlID09IG90aGVyLm1lc3NhZ2U7XG5cbiAgICBjYXNlIHJlZ2V4cFRhZzpcbiAgICBjYXNlIHN0cmluZ1RhZzpcbiAgICAgIC8vIENvZXJjZSByZWdleGVzIHRvIHN0cmluZ3MgYW5kIHRyZWF0IHN0cmluZ3MsIHByaW1pdGl2ZXMgYW5kIG9iamVjdHMsXG4gICAgICAvLyBhcyBlcXVhbC4gU2VlIGh0dHA6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1yZWdleHAucHJvdG90eXBlLnRvc3RyaW5nXG4gICAgICAvLyBmb3IgbW9yZSBkZXRhaWxzLlxuICAgICAgcmV0dXJuIG9iamVjdCA9PSAob3RoZXIgKyAnJyk7XG5cbiAgICBjYXNlIG1hcFRhZzpcbiAgICAgIHZhciBjb252ZXJ0ID0gbWFwVG9BcnJheTtcblxuICAgIGNhc2Ugc2V0VGFnOlxuICAgICAgdmFyIGlzUGFydGlhbCA9IGJpdG1hc2sgJiBDT01QQVJFX1BBUlRJQUxfRkxBRztcbiAgICAgIGNvbnZlcnQgfHwgKGNvbnZlcnQgPSBzZXRUb0FycmF5KTtcblxuICAgICAgaWYgKG9iamVjdC5zaXplICE9IG90aGVyLnNpemUgJiYgIWlzUGFydGlhbCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICAvLyBBc3N1bWUgY3ljbGljIHZhbHVlcyBhcmUgZXF1YWwuXG4gICAgICB2YXIgc3RhY2tlZCA9IHN0YWNrLmdldChvYmplY3QpO1xuICAgICAgaWYgKHN0YWNrZWQpIHtcbiAgICAgICAgcmV0dXJuIHN0YWNrZWQgPT0gb3RoZXI7XG4gICAgICB9XG4gICAgICBiaXRtYXNrIHw9IENPTVBBUkVfVU5PUkRFUkVEX0ZMQUc7XG5cbiAgICAgIC8vIFJlY3Vyc2l2ZWx5IGNvbXBhcmUgb2JqZWN0cyAoc3VzY2VwdGlibGUgdG8gY2FsbCBzdGFjayBsaW1pdHMpLlxuICAgICAgc3RhY2suc2V0KG9iamVjdCwgb3RoZXIpO1xuICAgICAgdmFyIHJlc3VsdCA9IGVxdWFsQXJyYXlzKGNvbnZlcnQob2JqZWN0KSwgY29udmVydChvdGhlciksIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spO1xuICAgICAgc3RhY2tbJ2RlbGV0ZSddKG9iamVjdCk7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuXG4gICAgY2FzZSBzeW1ib2xUYWc6XG4gICAgICBpZiAoc3ltYm9sVmFsdWVPZikge1xuICAgICAgICByZXR1cm4gc3ltYm9sVmFsdWVPZi5jYWxsKG9iamVjdCkgPT0gc3ltYm9sVmFsdWVPZi5jYWxsKG90aGVyKTtcbiAgICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXF1YWxCeVRhZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_equalByTag.js\n");

/***/ }),

/***/ "./node_modules/lodash/_equalObjects.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_equalObjects.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var getAllKeys = __webpack_require__(/*! ./_getAllKeys */ \"./node_modules/lodash/_getAllKeys.js\");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19lcXVhbE9iamVjdHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsMkRBQWU7O0FBRXhDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19lcXVhbE9iamVjdHMuanM/YjFlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0QWxsS2V5cyA9IHJlcXVpcmUoJy4vX2dldEFsbEtleXMnKTtcblxuLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgdmFsdWUgY29tcGFyaXNvbnMuICovXG52YXIgQ09NUEFSRV9QQVJUSUFMX0ZMQUcgPSAxO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZUlzRXF1YWxEZWVwYCBmb3Igb2JqZWN0cyB3aXRoIHN1cHBvcnQgZm9yXG4gKiBwYXJ0aWFsIGRlZXAgY29tcGFyaXNvbnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjb21wYXJlLlxuICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBiaXRtYXNrIFRoZSBiaXRtYXNrIGZsYWdzLiBTZWUgYGJhc2VJc0VxdWFsYCBmb3IgbW9yZSBkZXRhaWxzLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY3VzdG9taXplciBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmlzb25zLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZXF1YWxGdW5jIFRoZSBmdW5jdGlvbiB0byBkZXRlcm1pbmUgZXF1aXZhbGVudHMgb2YgdmFsdWVzLlxuICogQHBhcmFtIHtPYmplY3R9IHN0YWNrIFRyYWNrcyB0cmF2ZXJzZWQgYG9iamVjdGAgYW5kIGBvdGhlcmAgb2JqZWN0cy5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgb2JqZWN0cyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBlcXVhbE9iamVjdHMob2JqZWN0LCBvdGhlciwgYml0bWFzaywgY3VzdG9taXplciwgZXF1YWxGdW5jLCBzdGFjaykge1xuICB2YXIgaXNQYXJ0aWFsID0gYml0bWFzayAmIENPTVBBUkVfUEFSVElBTF9GTEFHLFxuICAgICAgb2JqUHJvcHMgPSBnZXRBbGxLZXlzKG9iamVjdCksXG4gICAgICBvYmpMZW5ndGggPSBvYmpQcm9wcy5sZW5ndGgsXG4gICAgICBvdGhQcm9wcyA9IGdldEFsbEtleXMob3RoZXIpLFxuICAgICAgb3RoTGVuZ3RoID0gb3RoUHJvcHMubGVuZ3RoO1xuXG4gIGlmIChvYmpMZW5ndGggIT0gb3RoTGVuZ3RoICYmICFpc1BhcnRpYWwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIGluZGV4ID0gb2JqTGVuZ3RoO1xuICB3aGlsZSAoaW5kZXgtLSkge1xuICAgIHZhciBrZXkgPSBvYmpQcm9wc1tpbmRleF07XG4gICAgaWYgKCEoaXNQYXJ0aWFsID8ga2V5IGluIG90aGVyIDogaGFzT3duUHJvcGVydHkuY2FsbChvdGhlciwga2V5KSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgLy8gQ2hlY2sgdGhhdCBjeWNsaWMgdmFsdWVzIGFyZSBlcXVhbC5cbiAgdmFyIG9ialN0YWNrZWQgPSBzdGFjay5nZXQob2JqZWN0KTtcbiAgdmFyIG90aFN0YWNrZWQgPSBzdGFjay5nZXQob3RoZXIpO1xuICBpZiAob2JqU3RhY2tlZCAmJiBvdGhTdGFja2VkKSB7XG4gICAgcmV0dXJuIG9ialN0YWNrZWQgPT0gb3RoZXIgJiYgb3RoU3RhY2tlZCA9PSBvYmplY3Q7XG4gIH1cbiAgdmFyIHJlc3VsdCA9IHRydWU7XG4gIHN0YWNrLnNldChvYmplY3QsIG90aGVyKTtcbiAgc3RhY2suc2V0KG90aGVyLCBvYmplY3QpO1xuXG4gIHZhciBza2lwQ3RvciA9IGlzUGFydGlhbDtcbiAgd2hpbGUgKCsraW5kZXggPCBvYmpMZW5ndGgpIHtcbiAgICBrZXkgPSBvYmpQcm9wc1tpbmRleF07XG4gICAgdmFyIG9ialZhbHVlID0gb2JqZWN0W2tleV0sXG4gICAgICAgIG90aFZhbHVlID0gb3RoZXJba2V5XTtcblxuICAgIGlmIChjdXN0b21pemVyKSB7XG4gICAgICB2YXIgY29tcGFyZWQgPSBpc1BhcnRpYWxcbiAgICAgICAgPyBjdXN0b21pemVyKG90aFZhbHVlLCBvYmpWYWx1ZSwga2V5LCBvdGhlciwgb2JqZWN0LCBzdGFjaylcbiAgICAgICAgOiBjdXN0b21pemVyKG9ialZhbHVlLCBvdGhWYWx1ZSwga2V5LCBvYmplY3QsIG90aGVyLCBzdGFjayk7XG4gICAgfVxuICAgIC8vIFJlY3Vyc2l2ZWx5IGNvbXBhcmUgb2JqZWN0cyAoc3VzY2VwdGlibGUgdG8gY2FsbCBzdGFjayBsaW1pdHMpLlxuICAgIGlmICghKGNvbXBhcmVkID09PSB1bmRlZmluZWRcbiAgICAgICAgICA/IChvYmpWYWx1ZSA9PT0gb3RoVmFsdWUgfHwgZXF1YWxGdW5jKG9ialZhbHVlLCBvdGhWYWx1ZSwgYml0bWFzaywgY3VzdG9taXplciwgc3RhY2spKVxuICAgICAgICAgIDogY29tcGFyZWRcbiAgICAgICAgKSkge1xuICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgc2tpcEN0b3IgfHwgKHNraXBDdG9yID0ga2V5ID09ICdjb25zdHJ1Y3RvcicpO1xuICB9XG4gIGlmIChyZXN1bHQgJiYgIXNraXBDdG9yKSB7XG4gICAgdmFyIG9iakN0b3IgPSBvYmplY3QuY29uc3RydWN0b3IsXG4gICAgICAgIG90aEN0b3IgPSBvdGhlci5jb25zdHJ1Y3RvcjtcblxuICAgIC8vIE5vbiBgT2JqZWN0YCBvYmplY3QgaW5zdGFuY2VzIHdpdGggZGlmZmVyZW50IGNvbnN0cnVjdG9ycyBhcmUgbm90IGVxdWFsLlxuICAgIGlmIChvYmpDdG9yICE9IG90aEN0b3IgJiZcbiAgICAgICAgKCdjb25zdHJ1Y3RvcicgaW4gb2JqZWN0ICYmICdjb25zdHJ1Y3RvcicgaW4gb3RoZXIpICYmXG4gICAgICAgICEodHlwZW9mIG9iakN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBvYmpDdG9yIGluc3RhbmNlb2Ygb2JqQ3RvciAmJlxuICAgICAgICAgIHR5cGVvZiBvdGhDdG9yID09ICdmdW5jdGlvbicgJiYgb3RoQ3RvciBpbnN0YW5jZW9mIG90aEN0b3IpKSB7XG4gICAgICByZXN1bHQgPSBmYWxzZTtcbiAgICB9XG4gIH1cbiAgc3RhY2tbJ2RlbGV0ZSddKG9iamVjdCk7XG4gIHN0YWNrWydkZWxldGUnXShvdGhlcik7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXF1YWxPYmplY3RzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_equalObjects.js\n");

/***/ }),

/***/ "./node_modules/lodash/_freeGlobal.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_freeGlobal.js ***!
  \********************************************/
/***/ (function(module) {

eval("/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof window == 'object' && window && window.Object === Object && window;\n\nmodule.exports = freeGlobal;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19mcmVlR2xvYmFsLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esd0JBQXdCLE1BQU0sZ0JBQWdCLE1BQU0sSUFBSSxNQUFNLHNCQUFzQixNQUFNOztBQUUxRiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZnJlZUdsb2JhbC5qcz81ODVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgZ2xvYmFsYCBmcm9tIE5vZGUuanMuICovXG52YXIgZnJlZUdsb2JhbCA9IHR5cGVvZiBnbG9iYWwgPT0gJ29iamVjdCcgJiYgZ2xvYmFsICYmIGdsb2JhbC5PYmplY3QgPT09IE9iamVjdCAmJiBnbG9iYWw7XG5cbm1vZHVsZS5leHBvcnRzID0gZnJlZUdsb2JhbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_freeGlobal.js\n");

/***/ }),

/***/ "./node_modules/lodash/_getAllKeys.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getAllKeys.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseGetAllKeys = __webpack_require__(/*! ./_baseGetAllKeys */ \"./node_modules/lodash/_baseGetAllKeys.js\"),\n    getSymbols = __webpack_require__(/*! ./_getSymbols */ \"./node_modules/lodash/_getSymbols.js\"),\n    keys = __webpack_require__(/*! ./keys */ \"./node_modules/lodash/keys.js\");\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRBbGxLZXlzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQixtQkFBTyxDQUFDLG1FQUFtQjtBQUNoRCxpQkFBaUIsbUJBQU8sQ0FBQywyREFBZTtBQUN4QyxXQUFXLG1CQUFPLENBQUMsNkNBQVE7O0FBRTNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0QWxsS2V5cy5qcz9hOTk0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlR2V0QWxsS2V5cyA9IHJlcXVpcmUoJy4vX2Jhc2VHZXRBbGxLZXlzJyksXG4gICAgZ2V0U3ltYm9scyA9IHJlcXVpcmUoJy4vX2dldFN5bWJvbHMnKSxcbiAgICBrZXlzID0gcmVxdWlyZSgnLi9rZXlzJyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiBvd24gZW51bWVyYWJsZSBwcm9wZXJ0eSBuYW1lcyBhbmQgc3ltYm9scyBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcyBhbmQgc3ltYm9scy5cbiAqL1xuZnVuY3Rpb24gZ2V0QWxsS2V5cyhvYmplY3QpIHtcbiAgcmV0dXJuIGJhc2VHZXRBbGxLZXlzKG9iamVjdCwga2V5cywgZ2V0U3ltYm9scyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0QWxsS2V5cztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_getAllKeys.js\n");

/***/ }),

/***/ "./node_modules/lodash/_getMapData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getMapData.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var isKeyable = __webpack_require__(/*! ./_isKeyable */ \"./node_modules/lodash/_isKeyable.js\");\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRNYXBEYXRhLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBTyxDQUFDLHlEQUFjOztBQUV0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxHQUFHO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRNYXBEYXRhLmpzPzQyNDUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzS2V5YWJsZSA9IHJlcXVpcmUoJy4vX2lzS2V5YWJsZScpO1xuXG4vKipcbiAqIEdldHMgdGhlIGRhdGEgZm9yIGBtYXBgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gbWFwIFRoZSBtYXAgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSByZWZlcmVuY2Uga2V5LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIG1hcCBkYXRhLlxuICovXG5mdW5jdGlvbiBnZXRNYXBEYXRhKG1hcCwga2V5KSB7XG4gIHZhciBkYXRhID0gbWFwLl9fZGF0YV9fO1xuICByZXR1cm4gaXNLZXlhYmxlKGtleSlcbiAgICA/IGRhdGFbdHlwZW9mIGtleSA9PSAnc3RyaW5nJyA/ICdzdHJpbmcnIDogJ2hhc2gnXVxuICAgIDogZGF0YS5tYXA7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0TWFwRGF0YTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_getMapData.js\n");

/***/ }),

/***/ "./node_modules/lodash/_getMatchData.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getMatchData.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var isStrictComparable = __webpack_require__(/*! ./_isStrictComparable */ \"./node_modules/lodash/_isStrictComparable.js\"),\n    keys = __webpack_require__(/*! ./keys */ \"./node_modules/lodash/keys.js\");\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRNYXRjaERhdGEuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEseUJBQXlCLG1CQUFPLENBQUMsMkVBQXVCO0FBQ3hELFdBQVcsbUJBQU8sQ0FBQyw2Q0FBUTs7QUFFM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0TWF0Y2hEYXRhLmpzPzNiYjQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzU3RyaWN0Q29tcGFyYWJsZSA9IHJlcXVpcmUoJy4vX2lzU3RyaWN0Q29tcGFyYWJsZScpLFxuICAgIGtleXMgPSByZXF1aXJlKCcuL2tleXMnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBwcm9wZXJ0eSBuYW1lcywgdmFsdWVzLCBhbmQgY29tcGFyZSBmbGFncyBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBtYXRjaCBkYXRhIG9mIGBvYmplY3RgLlxuICovXG5mdW5jdGlvbiBnZXRNYXRjaERhdGEob2JqZWN0KSB7XG4gIHZhciByZXN1bHQgPSBrZXlzKG9iamVjdCksXG4gICAgICBsZW5ndGggPSByZXN1bHQubGVuZ3RoO1xuXG4gIHdoaWxlIChsZW5ndGgtLSkge1xuICAgIHZhciBrZXkgPSByZXN1bHRbbGVuZ3RoXSxcbiAgICAgICAgdmFsdWUgPSBvYmplY3Rba2V5XTtcblxuICAgIHJlc3VsdFtsZW5ndGhdID0gW2tleSwgdmFsdWUsIGlzU3RyaWN0Q29tcGFyYWJsZSh2YWx1ZSldO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0TWF0Y2hEYXRhO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_getMatchData.js\n");

/***/ }),

/***/ "./node_modules/lodash/_getNative.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getNative.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseIsNative = __webpack_require__(/*! ./_baseIsNative */ \"./node_modules/lodash/_baseIsNative.js\"),\n    getValue = __webpack_require__(/*! ./_getValue */ \"./node_modules/lodash/_getValue.js\");\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXROYXRpdmUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsbUJBQW1CLG1CQUFPLENBQUMsK0RBQWlCO0FBQzVDLGVBQWUsbUJBQU8sQ0FBQyx1REFBYTs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsR0FBRztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXROYXRpdmUuanM/MGIwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUlzTmF0aXZlID0gcmVxdWlyZSgnLi9fYmFzZUlzTmF0aXZlJyksXG4gICAgZ2V0VmFsdWUgPSByZXF1aXJlKCcuL19nZXRWYWx1ZScpO1xuXG4vKipcbiAqIEdldHMgdGhlIG5hdGl2ZSBmdW5jdGlvbiBhdCBga2V5YCBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBtZXRob2QgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGZ1bmN0aW9uIGlmIGl0J3MgbmF0aXZlLCBlbHNlIGB1bmRlZmluZWRgLlxuICovXG5mdW5jdGlvbiBnZXROYXRpdmUob2JqZWN0LCBrZXkpIHtcbiAgdmFyIHZhbHVlID0gZ2V0VmFsdWUob2JqZWN0LCBrZXkpO1xuICByZXR1cm4gYmFzZUlzTmF0aXZlKHZhbHVlKSA/IHZhbHVlIDogdW5kZWZpbmVkO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldE5hdGl2ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_getNative.js\n");

/***/ }),

/***/ "./node_modules/lodash/_getRawTag.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getRawTag.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Symbol = __webpack_require__(/*! ./_Symbol */ \"./node_modules/lodash/_Symbol.js\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRSYXdUYWcuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxtQkFBTyxDQUFDLG1EQUFXOztBQUVoQztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTs7QUFFSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRSYXdUYWcuanM/MDBmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgU3ltYm9sID0gcmVxdWlyZSgnLi9fU3ltYm9sJyk7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZVxuICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpXG4gKiBvZiB2YWx1ZXMuXG4gKi9cbnZhciBuYXRpdmVPYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBzeW1Ub1N0cmluZ1RhZyA9IFN5bWJvbCA/IFN5bWJvbC50b1N0cmluZ1RhZyA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VHZXRUYWdgIHdoaWNoIGlnbm9yZXMgYFN5bWJvbC50b1N0cmluZ1RhZ2AgdmFsdWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIHJhdyBgdG9TdHJpbmdUYWdgLlxuICovXG5mdW5jdGlvbiBnZXRSYXdUYWcodmFsdWUpIHtcbiAgdmFyIGlzT3duID0gaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgc3ltVG9TdHJpbmdUYWcpLFxuICAgICAgdGFnID0gdmFsdWVbc3ltVG9TdHJpbmdUYWddO1xuXG4gIHRyeSB7XG4gICAgdmFsdWVbc3ltVG9TdHJpbmdUYWddID0gdW5kZWZpbmVkO1xuICAgIHZhciB1bm1hc2tlZCA9IHRydWU7XG4gIH0gY2F0Y2ggKGUpIHt9XG5cbiAgdmFyIHJlc3VsdCA9IG5hdGl2ZU9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpO1xuICBpZiAodW5tYXNrZWQpIHtcbiAgICBpZiAoaXNPd24pIHtcbiAgICAgIHZhbHVlW3N5bVRvU3RyaW5nVGFnXSA9IHRhZztcbiAgICB9IGVsc2Uge1xuICAgICAgZGVsZXRlIHZhbHVlW3N5bVRvU3RyaW5nVGFnXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRSYXdUYWc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_getRawTag.js\n");

/***/ }),

/***/ "./node_modules/lodash/_getSymbols.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getSymbols.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var arrayFilter = __webpack_require__(/*! ./_arrayFilter */ \"./node_modules/lodash/_arrayFilter.js\"),\n    stubArray = __webpack_require__(/*! ./stubArray */ \"./node_modules/lodash/stubArray.js\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRTeW1ib2xzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixtQkFBTyxDQUFDLDZEQUFnQjtBQUMxQyxnQkFBZ0IsbUJBQU8sQ0FBQyx1REFBYTs7QUFFckM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFN5bWJvbHMuanM/MzJmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXJyYXlGaWx0ZXIgPSByZXF1aXJlKCcuL19hcnJheUZpbHRlcicpLFxuICAgIHN0dWJBcnJheSA9IHJlcXVpcmUoJy4vc3R1YkFycmF5Jyk7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIHByb3BlcnR5SXNFbnVtZXJhYmxlID0gb2JqZWN0UHJvdG8ucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIGZvciB0aG9zZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgb3RoZXIgYGxvZGFzaGAgbWV0aG9kcy4gKi9cbnZhciBuYXRpdmVHZXRTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBvd24gZW51bWVyYWJsZSBzeW1ib2xzIG9mIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHN5bWJvbHMuXG4gKi9cbnZhciBnZXRTeW1ib2xzID0gIW5hdGl2ZUdldFN5bWJvbHMgPyBzdHViQXJyYXkgOiBmdW5jdGlvbihvYmplY3QpIHtcbiAgaWYgKG9iamVjdCA9PSBudWxsKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG4gIG9iamVjdCA9IE9iamVjdChvYmplY3QpO1xuICByZXR1cm4gYXJyYXlGaWx0ZXIobmF0aXZlR2V0U3ltYm9scyhvYmplY3QpLCBmdW5jdGlvbihzeW1ib2wpIHtcbiAgICByZXR1cm4gcHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChvYmplY3QsIHN5bWJvbCk7XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBnZXRTeW1ib2xzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_getSymbols.js\n");

/***/ }),

/***/ "./node_modules/lodash/_getTag.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_getTag.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var DataView = __webpack_require__(/*! ./_DataView */ \"./node_modules/lodash/_DataView.js\"),\n    Map = __webpack_require__(/*! ./_Map */ \"./node_modules/lodash/_Map.js\"),\n    Promise = __webpack_require__(/*! ./_Promise */ \"./node_modules/lodash/_Promise.js\"),\n    Set = __webpack_require__(/*! ./_Set */ \"./node_modules/lodash/_Set.js\"),\n    WeakMap = __webpack_require__(/*! ./_WeakMap */ \"./node_modules/lodash/_WeakMap.js\"),\n    baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"./node_modules/lodash/_baseGetTag.js\"),\n    toSource = __webpack_require__(/*! ./_toSource */ \"./node_modules/lodash/_toSource.js\");\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRUYWcuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSxtQkFBTyxDQUFDLHVEQUFhO0FBQ3BDLFVBQVUsbUJBQU8sQ0FBQyw2Q0FBUTtBQUMxQixjQUFjLG1CQUFPLENBQUMscURBQVk7QUFDbEMsVUFBVSxtQkFBTyxDQUFDLDZDQUFRO0FBQzFCLGNBQWMsbUJBQU8sQ0FBQyxxREFBWTtBQUNsQyxpQkFBaUIsbUJBQU8sQ0FBQywyREFBZTtBQUN4QyxlQUFlLG1CQUFPLENBQUMsdURBQWE7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFRhZy5qcz80MmEyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBEYXRhVmlldyA9IHJlcXVpcmUoJy4vX0RhdGFWaWV3JyksXG4gICAgTWFwID0gcmVxdWlyZSgnLi9fTWFwJyksXG4gICAgUHJvbWlzZSA9IHJlcXVpcmUoJy4vX1Byb21pc2UnKSxcbiAgICBTZXQgPSByZXF1aXJlKCcuL19TZXQnKSxcbiAgICBXZWFrTWFwID0gcmVxdWlyZSgnLi9fV2Vha01hcCcpLFxuICAgIGJhc2VHZXRUYWcgPSByZXF1aXJlKCcuL19iYXNlR2V0VGFnJyksXG4gICAgdG9Tb3VyY2UgPSByZXF1aXJlKCcuL190b1NvdXJjZScpO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgbWFwVGFnID0gJ1tvYmplY3QgTWFwXScsXG4gICAgb2JqZWN0VGFnID0gJ1tvYmplY3QgT2JqZWN0XScsXG4gICAgcHJvbWlzZVRhZyA9ICdbb2JqZWN0IFByb21pc2VdJyxcbiAgICBzZXRUYWcgPSAnW29iamVjdCBTZXRdJyxcbiAgICB3ZWFrTWFwVGFnID0gJ1tvYmplY3QgV2Vha01hcF0nO1xuXG52YXIgZGF0YVZpZXdUYWcgPSAnW29iamVjdCBEYXRhVmlld10nO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgbWFwcywgc2V0cywgYW5kIHdlYWttYXBzLiAqL1xudmFyIGRhdGFWaWV3Q3RvclN0cmluZyA9IHRvU291cmNlKERhdGFWaWV3KSxcbiAgICBtYXBDdG9yU3RyaW5nID0gdG9Tb3VyY2UoTWFwKSxcbiAgICBwcm9taXNlQ3RvclN0cmluZyA9IHRvU291cmNlKFByb21pc2UpLFxuICAgIHNldEN0b3JTdHJpbmcgPSB0b1NvdXJjZShTZXQpLFxuICAgIHdlYWtNYXBDdG9yU3RyaW5nID0gdG9Tb3VyY2UoV2Vha01hcCk7XG5cbi8qKlxuICogR2V0cyB0aGUgYHRvU3RyaW5nVGFnYCBvZiBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGB0b1N0cmluZ1RhZ2AuXG4gKi9cbnZhciBnZXRUYWcgPSBiYXNlR2V0VGFnO1xuXG4vLyBGYWxsYmFjayBmb3IgZGF0YSB2aWV3cywgbWFwcywgc2V0cywgYW5kIHdlYWsgbWFwcyBpbiBJRSAxMSBhbmQgcHJvbWlzZXMgaW4gTm9kZS5qcyA8IDYuXG5pZiAoKERhdGFWaWV3ICYmIGdldFRhZyhuZXcgRGF0YVZpZXcobmV3IEFycmF5QnVmZmVyKDEpKSkgIT0gZGF0YVZpZXdUYWcpIHx8XG4gICAgKE1hcCAmJiBnZXRUYWcobmV3IE1hcCkgIT0gbWFwVGFnKSB8fFxuICAgIChQcm9taXNlICYmIGdldFRhZyhQcm9taXNlLnJlc29sdmUoKSkgIT0gcHJvbWlzZVRhZykgfHxcbiAgICAoU2V0ICYmIGdldFRhZyhuZXcgU2V0KSAhPSBzZXRUYWcpIHx8XG4gICAgKFdlYWtNYXAgJiYgZ2V0VGFnKG5ldyBXZWFrTWFwKSAhPSB3ZWFrTWFwVGFnKSkge1xuICBnZXRUYWcgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHZhciByZXN1bHQgPSBiYXNlR2V0VGFnKHZhbHVlKSxcbiAgICAgICAgQ3RvciA9IHJlc3VsdCA9PSBvYmplY3RUYWcgPyB2YWx1ZS5jb25zdHJ1Y3RvciA6IHVuZGVmaW5lZCxcbiAgICAgICAgY3RvclN0cmluZyA9IEN0b3IgPyB0b1NvdXJjZShDdG9yKSA6ICcnO1xuXG4gICAgaWYgKGN0b3JTdHJpbmcpIHtcbiAgICAgIHN3aXRjaCAoY3RvclN0cmluZykge1xuICAgICAgICBjYXNlIGRhdGFWaWV3Q3RvclN0cmluZzogcmV0dXJuIGRhdGFWaWV3VGFnO1xuICAgICAgICBjYXNlIG1hcEN0b3JTdHJpbmc6IHJldHVybiBtYXBUYWc7XG4gICAgICAgIGNhc2UgcHJvbWlzZUN0b3JTdHJpbmc6IHJldHVybiBwcm9taXNlVGFnO1xuICAgICAgICBjYXNlIHNldEN0b3JTdHJpbmc6IHJldHVybiBzZXRUYWc7XG4gICAgICAgIGNhc2Ugd2Vha01hcEN0b3JTdHJpbmc6IHJldHVybiB3ZWFrTWFwVGFnO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFRhZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_getTag.js\n");

/***/ }),

/***/ "./node_modules/lodash/_getValue.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_getValue.js ***!
  \******************************************/
/***/ (function(module) {

eval("/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRWYWx1ZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxHQUFHO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRWYWx1ZS5qcz8zNjk4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2V0cyB0aGUgdmFsdWUgYXQgYGtleWAgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgcHJvcGVydHkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGdldFZhbHVlKG9iamVjdCwga2V5KSB7XG4gIHJldHVybiBvYmplY3QgPT0gbnVsbCA/IHVuZGVmaW5lZCA6IG9iamVjdFtrZXldO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFZhbHVlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_getValue.js\n");

/***/ }),

/***/ "./node_modules/lodash/_hasPath.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hasPath.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var castPath = __webpack_require__(/*! ./_castPath */ \"./node_modules/lodash/_castPath.js\"),\n    isArguments = __webpack_require__(/*! ./isArguments */ \"./node_modules/lodash/isArguments.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\"),\n    isIndex = __webpack_require__(/*! ./_isIndex */ \"./node_modules/lodash/_isIndex.js\"),\n    isLength = __webpack_require__(/*! ./isLength */ \"./node_modules/lodash/isLength.js\"),\n    toKey = __webpack_require__(/*! ./_toKey */ \"./node_modules/lodash/_toKey.js\");\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNQYXRoLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyx1REFBYTtBQUNwQyxrQkFBa0IsbUJBQU8sQ0FBQywyREFBZTtBQUN6QyxjQUFjLG1CQUFPLENBQUMsbURBQVc7QUFDakMsY0FBYyxtQkFBTyxDQUFDLHFEQUFZO0FBQ2xDLGVBQWUsbUJBQU8sQ0FBQyxxREFBWTtBQUNuQyxZQUFZLG1CQUFPLENBQUMsaURBQVU7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsY0FBYztBQUN6QixXQUFXLFVBQVU7QUFDckIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzUGF0aC5qcz9lMmMwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBjYXN0UGF0aCA9IHJlcXVpcmUoJy4vX2Nhc3RQYXRoJyksXG4gICAgaXNBcmd1bWVudHMgPSByZXF1aXJlKCcuL2lzQXJndW1lbnRzJyksXG4gICAgaXNBcnJheSA9IHJlcXVpcmUoJy4vaXNBcnJheScpLFxuICAgIGlzSW5kZXggPSByZXF1aXJlKCcuL19pc0luZGV4JyksXG4gICAgaXNMZW5ndGggPSByZXF1aXJlKCcuL2lzTGVuZ3RoJyksXG4gICAgdG9LZXkgPSByZXF1aXJlKCcuL190b0tleScpO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgcGF0aGAgZXhpc3RzIG9uIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCB0byBjaGVjay5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGhhc0Z1bmMgVGhlIGZ1bmN0aW9uIHRvIGNoZWNrIHByb3BlcnRpZXMuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHBhdGhgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBoYXNQYXRoKG9iamVjdCwgcGF0aCwgaGFzRnVuYykge1xuICBwYXRoID0gY2FzdFBhdGgocGF0aCwgb2JqZWN0KTtcblxuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IHBhdGgubGVuZ3RoLFxuICAgICAgcmVzdWx0ID0gZmFsc2U7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIga2V5ID0gdG9LZXkocGF0aFtpbmRleF0pO1xuICAgIGlmICghKHJlc3VsdCA9IG9iamVjdCAhPSBudWxsICYmIGhhc0Z1bmMob2JqZWN0LCBrZXkpKSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIG9iamVjdCA9IG9iamVjdFtrZXldO1xuICB9XG4gIGlmIChyZXN1bHQgfHwgKytpbmRleCAhPSBsZW5ndGgpIHtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG4gIGxlbmd0aCA9IG9iamVjdCA9PSBudWxsID8gMCA6IG9iamVjdC5sZW5ndGg7XG4gIHJldHVybiAhIWxlbmd0aCAmJiBpc0xlbmd0aChsZW5ndGgpICYmIGlzSW5kZXgoa2V5LCBsZW5ndGgpICYmXG4gICAgKGlzQXJyYXkob2JqZWN0KSB8fCBpc0FyZ3VtZW50cyhvYmplY3QpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNQYXRoO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_hasPath.js\n");

/***/ }),

/***/ "./node_modules/lodash/_hashClear.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_hashClear.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ \"./node_modules/lodash/_nativeCreate.js\");\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoQ2xlYXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsbUJBQW1CLG1CQUFPLENBQUMsK0RBQWlCOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoQ2xlYXIuanM/NDlmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbmF0aXZlQ3JlYXRlID0gcmVxdWlyZSgnLi9fbmF0aXZlQ3JlYXRlJyk7XG5cbi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgaGFzaC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKi9cbmZ1bmN0aW9uIGhhc2hDbGVhcigpIHtcbiAgdGhpcy5fX2RhdGFfXyA9IG5hdGl2ZUNyZWF0ZSA/IG5hdGl2ZUNyZWF0ZShudWxsKSA6IHt9O1xuICB0aGlzLnNpemUgPSAwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc2hDbGVhcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_hashClear.js\n");

/***/ }),

/***/ "./node_modules/lodash/_hashDelete.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_hashDelete.js ***!
  \********************************************/
/***/ (function(module) {

eval("/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoRGVsZXRlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzaERlbGV0ZS5qcz8xZWZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVtb3ZlcyBga2V5YCBhbmQgaXRzIHZhbHVlIGZyb20gdGhlIGhhc2guXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIEhhc2hcbiAqIEBwYXJhbSB7T2JqZWN0fSBoYXNoIFRoZSBoYXNoIHRvIG1vZGlmeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gcmVtb3ZlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBlbnRyeSB3YXMgcmVtb3ZlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBoYXNoRGVsZXRlKGtleSkge1xuICB2YXIgcmVzdWx0ID0gdGhpcy5oYXMoa2V5KSAmJiBkZWxldGUgdGhpcy5fX2RhdGFfX1trZXldO1xuICB0aGlzLnNpemUgLT0gcmVzdWx0ID8gMSA6IDA7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaGFzaERlbGV0ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_hashDelete.js\n");

/***/ }),

/***/ "./node_modules/lodash/_hashGet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashGet.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ \"./node_modules/lodash/_nativeCreate.js\");\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoR2V0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLG1CQUFtQixtQkFBTyxDQUFDLCtEQUFpQjs7QUFFNUM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsR0FBRztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hHZXQuanM/YmJjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbmF0aXZlQ3JlYXRlID0gcmVxdWlyZSgnLi9fbmF0aXZlQ3JlYXRlJyk7XG5cbi8qKiBVc2VkIHRvIHN0YW5kLWluIGZvciBgdW5kZWZpbmVkYCBoYXNoIHZhbHVlcy4gKi9cbnZhciBIQVNIX1VOREVGSU5FRCA9ICdfX2xvZGFzaF9oYXNoX3VuZGVmaW5lZF9fJztcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBHZXRzIHRoZSBoYXNoIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgSGFzaFxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZW50cnkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGhhc2hHZXQoa2V5KSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXztcbiAgaWYgKG5hdGl2ZUNyZWF0ZSkge1xuICAgIHZhciByZXN1bHQgPSBkYXRhW2tleV07XG4gICAgcmV0dXJuIHJlc3VsdCA9PT0gSEFTSF9VTkRFRklORUQgPyB1bmRlZmluZWQgOiByZXN1bHQ7XG4gIH1cbiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoZGF0YSwga2V5KSA/IGRhdGFba2V5XSA6IHVuZGVmaW5lZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNoR2V0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_hashGet.js\n");

/***/ }),

/***/ "./node_modules/lodash/_hashHas.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashHas.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ \"./node_modules/lodash/_nativeCreate.js\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoSGFzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLG1CQUFtQixtQkFBTyxDQUFDLCtEQUFpQjs7QUFFNUM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzaEhhcy5qcz83YTQ4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBuYXRpdmVDcmVhdGUgPSByZXF1aXJlKCcuL19uYXRpdmVDcmVhdGUnKTtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYSBoYXNoIHZhbHVlIGZvciBga2V5YCBleGlzdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIEhhc2hcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBoYXNoSGFzKGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gIHJldHVybiBuYXRpdmVDcmVhdGUgPyAoZGF0YVtrZXldICE9PSB1bmRlZmluZWQpIDogaGFzT3duUHJvcGVydHkuY2FsbChkYXRhLCBrZXkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc2hIYXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_hashHas.js\n");

/***/ }),

/***/ "./node_modules/lodash/_hashSet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashSet.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ \"./node_modules/lodash/_nativeCreate.js\");\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoU2V0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLG1CQUFtQixtQkFBTyxDQUFDLCtEQUFpQjs7QUFFNUM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxHQUFHO0FBQ2QsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoU2V0LmpzPzI1MjQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG5hdGl2ZUNyZWF0ZSA9IHJlcXVpcmUoJy4vX25hdGl2ZUNyZWF0ZScpO1xuXG4vKiogVXNlZCB0byBzdGFuZC1pbiBmb3IgYHVuZGVmaW5lZGAgaGFzaCB2YWx1ZXMuICovXG52YXIgSEFTSF9VTkRFRklORUQgPSAnX19sb2Rhc2hfaGFzaF91bmRlZmluZWRfXyc7XG5cbi8qKlxuICogU2V0cyB0aGUgaGFzaCBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGhhc2ggaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIGhhc2hTZXQoa2V5LCB2YWx1ZSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gIHRoaXMuc2l6ZSArPSB0aGlzLmhhcyhrZXkpID8gMCA6IDE7XG4gIGRhdGFba2V5XSA9IChuYXRpdmVDcmVhdGUgJiYgdmFsdWUgPT09IHVuZGVmaW5lZCkgPyBIQVNIX1VOREVGSU5FRCA6IHZhbHVlO1xuICByZXR1cm4gdGhpcztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNoU2V0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_hashSet.js\n");

/***/ }),

/***/ "./node_modules/lodash/_isIndex.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_isIndex.js ***!
  \*****************************************/
/***/ (function(module) {

eval("/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faXNJbmRleC5qcz9jMDk4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIGFzIHJlZmVyZW5jZXMgZm9yIHZhcmlvdXMgYE51bWJlcmAgY29uc3RhbnRzLiAqL1xudmFyIE1BWF9TQUZFX0lOVEVHRVIgPSA5MDA3MTk5MjU0NzQwOTkxO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgdW5zaWduZWQgaW50ZWdlciB2YWx1ZXMuICovXG52YXIgcmVJc1VpbnQgPSAvXig/OjB8WzEtOV1cXGQqKSQvO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgdmFsaWQgYXJyYXktbGlrZSBpbmRleC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcGFyYW0ge251bWJlcn0gW2xlbmd0aD1NQVhfU0FGRV9JTlRFR0VSXSBUaGUgdXBwZXIgYm91bmRzIG9mIGEgdmFsaWQgaW5kZXguXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGluZGV4LCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGlzSW5kZXgodmFsdWUsIGxlbmd0aCkge1xuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgbGVuZ3RoID0gbGVuZ3RoID09IG51bGwgPyBNQVhfU0FGRV9JTlRFR0VSIDogbGVuZ3RoO1xuXG4gIHJldHVybiAhIWxlbmd0aCAmJlxuICAgICh0eXBlID09ICdudW1iZXInIHx8XG4gICAgICAodHlwZSAhPSAnc3ltYm9sJyAmJiByZUlzVWludC50ZXN0KHZhbHVlKSkpICYmXG4gICAgICAgICh2YWx1ZSA+IC0xICYmIHZhbHVlICUgMSA9PSAwICYmIHZhbHVlIDwgbGVuZ3RoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0luZGV4O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_isIndex.js\n");

/***/ }),

/***/ "./node_modules/lodash/_isKey.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_isKey.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\"),\n    isSymbol = __webpack_require__(/*! ./isSymbol */ \"./node_modules/lodash/isSymbol.js\");\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0tleS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxjQUFjLG1CQUFPLENBQUMsbURBQVc7QUFDakMsZUFBZSxtQkFBTyxDQUFDLHFEQUFZOztBQUVuQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0tleS5qcz9mNjA4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5JyksXG4gICAgaXNTeW1ib2wgPSByZXF1aXJlKCcuL2lzU3ltYm9sJyk7XG5cbi8qKiBVc2VkIHRvIG1hdGNoIHByb3BlcnR5IG5hbWVzIHdpdGhpbiBwcm9wZXJ0eSBwYXRocy4gKi9cbnZhciByZUlzRGVlcFByb3AgPSAvXFwufFxcWyg/OlteW1xcXV0qfChbXCInXSkoPzooPyFcXDEpW15cXFxcXXxcXFxcLikqP1xcMSlcXF0vLFxuICAgIHJlSXNQbGFpblByb3AgPSAvXlxcdyokLztcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIHByb3BlcnR5IG5hbWUgYW5kIG5vdCBhIHByb3BlcnR5IHBhdGguXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHBhcmFtIHtPYmplY3R9IFtvYmplY3RdIFRoZSBvYmplY3QgdG8gcXVlcnkga2V5cyBvbi5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgcHJvcGVydHkgbmFtZSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc0tleSh2YWx1ZSwgb2JqZWN0KSB7XG4gIGlmIChpc0FycmF5KHZhbHVlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgaWYgKHR5cGUgPT0gJ251bWJlcicgfHwgdHlwZSA9PSAnc3ltYm9sJyB8fCB0eXBlID09ICdib29sZWFuJyB8fFxuICAgICAgdmFsdWUgPT0gbnVsbCB8fCBpc1N5bWJvbCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gcmVJc1BsYWluUHJvcC50ZXN0KHZhbHVlKSB8fCAhcmVJc0RlZXBQcm9wLnRlc3QodmFsdWUpIHx8XG4gICAgKG9iamVjdCAhPSBudWxsICYmIHZhbHVlIGluIE9iamVjdChvYmplY3QpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0tleTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_isKey.js\n");

/***/ }),

/***/ "./node_modules/lodash/_isKeyable.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_isKeyable.js ***!
  \*******************************************/
/***/ (function(module) {

eval("/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0tleWFibGUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzS2V5YWJsZS5qcz8xMjkwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgc3VpdGFibGUgZm9yIHVzZSBhcyB1bmlxdWUgb2JqZWN0IGtleS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBzdWl0YWJsZSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc0tleWFibGUodmFsdWUpIHtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIHJldHVybiAodHlwZSA9PSAnc3RyaW5nJyB8fCB0eXBlID09ICdudW1iZXInIHx8IHR5cGUgPT0gJ3N5bWJvbCcgfHwgdHlwZSA9PSAnYm9vbGVhbicpXG4gICAgPyAodmFsdWUgIT09ICdfX3Byb3RvX18nKVxuICAgIDogKHZhbHVlID09PSBudWxsKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0tleWFibGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_isKeyable.js\n");

/***/ }),

/***/ "./node_modules/lodash/_isMasked.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_isMasked.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var coreJsData = __webpack_require__(/*! ./_coreJsData */ \"./node_modules/lodash/_coreJsData.js\");\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc01hc2tlZC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQywyREFBZTs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faXNNYXNrZWQuanM/MTM2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29yZUpzRGF0YSA9IHJlcXVpcmUoJy4vX2NvcmVKc0RhdGEnKTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IG1ldGhvZHMgbWFzcXVlcmFkaW5nIGFzIG5hdGl2ZS4gKi9cbnZhciBtYXNrU3JjS2V5ID0gKGZ1bmN0aW9uKCkge1xuICB2YXIgdWlkID0gL1teLl0rJC8uZXhlYyhjb3JlSnNEYXRhICYmIGNvcmVKc0RhdGEua2V5cyAmJiBjb3JlSnNEYXRhLmtleXMuSUVfUFJPVE8gfHwgJycpO1xuICByZXR1cm4gdWlkID8gKCdTeW1ib2woc3JjKV8xLicgKyB1aWQpIDogJyc7XG59KCkpO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgZnVuY2AgaGFzIGl0cyBzb3VyY2UgbWFza2VkLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgZnVuY2AgaXMgbWFza2VkLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGlzTWFza2VkKGZ1bmMpIHtcbiAgcmV0dXJuICEhbWFza1NyY0tleSAmJiAobWFza1NyY0tleSBpbiBmdW5jKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc01hc2tlZDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_isMasked.js\n");

/***/ }),

/***/ "./node_modules/lodash/_isPrototype.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_isPrototype.js ***!
  \*********************************************/
/***/ (function(module) {

eval("/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc1Byb3RvdHlwZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzUHJvdG90eXBlLmpzP2VhYzUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBsaWtlbHkgYSBwcm90b3R5cGUgb2JqZWN0LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgcHJvdG90eXBlLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGlzUHJvdG90eXBlKHZhbHVlKSB7XG4gIHZhciBDdG9yID0gdmFsdWUgJiYgdmFsdWUuY29uc3RydWN0b3IsXG4gICAgICBwcm90byA9ICh0eXBlb2YgQ3RvciA9PSAnZnVuY3Rpb24nICYmIEN0b3IucHJvdG90eXBlKSB8fCBvYmplY3RQcm90bztcblxuICByZXR1cm4gdmFsdWUgPT09IHByb3RvO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzUHJvdG90eXBlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_isPrototype.js\n");

/***/ }),

/***/ "./node_modules/lodash/_isStrictComparable.js":
/*!****************************************************!*\
  !*** ./node_modules/lodash/_isStrictComparable.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var isObject = __webpack_require__(/*! ./isObject */ \"./node_modules/lodash/isObject.js\");\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc1N0cmljdENvbXBhcmFibGUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSxtQkFBTyxDQUFDLHFEQUFZOztBQUVuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc1N0cmljdENvbXBhcmFibGUuanM/MDhjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL2lzT2JqZWN0Jyk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgc3VpdGFibGUgZm9yIHN0cmljdCBlcXVhbGl0eSBjb21wYXJpc29ucywgaS5lLiBgPT09YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpZiBzdWl0YWJsZSBmb3Igc3RyaWN0XG4gKiAgZXF1YWxpdHkgY29tcGFyaXNvbnMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNTdHJpY3RDb21wYXJhYmxlKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA9PT0gdmFsdWUgJiYgIWlzT2JqZWN0KHZhbHVlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1N0cmljdENvbXBhcmFibGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_isStrictComparable.js\n");

/***/ }),

/***/ "./node_modules/lodash/_listCacheClear.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_listCacheClear.js ***!
  \************************************************/
/***/ (function(module) {

eval("/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVDbGVhci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVDbGVhci5qcz8yOGM5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgbGlzdCBjYWNoZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlQ2xlYXIoKSB7XG4gIHRoaXMuX19kYXRhX18gPSBbXTtcbiAgdGhpcy5zaXplID0gMDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsaXN0Q2FjaGVDbGVhcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_listCacheClear.js\n");

/***/ }),

/***/ "./node_modules/lodash/_listCacheDelete.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_listCacheDelete.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ \"./node_modules/lodash/_assocIndexOf.js\");\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVEZWxldGUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsbUJBQW1CLG1CQUFPLENBQUMsK0RBQWlCOztBQUU1QztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbGlzdENhY2hlRGVsZXRlLmpzPzY5ZDUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFzc29jSW5kZXhPZiA9IHJlcXVpcmUoJy4vX2Fzc29jSW5kZXhPZicpO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgYXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgc3BsaWNlID0gYXJyYXlQcm90by5zcGxpY2U7XG5cbi8qKlxuICogUmVtb3ZlcyBga2V5YCBhbmQgaXRzIHZhbHVlIGZyb20gdGhlIGxpc3QgY2FjaGUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byByZW1vdmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGVudHJ5IHdhcyByZW1vdmVkLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZURlbGV0ZShrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fLFxuICAgICAgaW5kZXggPSBhc3NvY0luZGV4T2YoZGF0YSwga2V5KTtcblxuICBpZiAoaW5kZXggPCAwKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBsYXN0SW5kZXggPSBkYXRhLmxlbmd0aCAtIDE7XG4gIGlmIChpbmRleCA9PSBsYXN0SW5kZXgpIHtcbiAgICBkYXRhLnBvcCgpO1xuICB9IGVsc2Uge1xuICAgIHNwbGljZS5jYWxsKGRhdGEsIGluZGV4LCAxKTtcbiAgfVxuICAtLXRoaXMuc2l6ZTtcbiAgcmV0dXJuIHRydWU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbGlzdENhY2hlRGVsZXRlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_listCacheDelete.js\n");

/***/ }),

/***/ "./node_modules/lodash/_listCacheGet.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheGet.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ \"./node_modules/lodash/_assocIndexOf.js\");\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVHZXQuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsbUJBQW1CLG1CQUFPLENBQUMsK0RBQWlCOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxHQUFHO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZUdldC5qcz9iNGMwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhc3NvY0luZGV4T2YgPSByZXF1aXJlKCcuL19hc3NvY0luZGV4T2YnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBsaXN0IGNhY2hlIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlR2V0KGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sXG4gICAgICBpbmRleCA9IGFzc29jSW5kZXhPZihkYXRhLCBrZXkpO1xuXG4gIHJldHVybiBpbmRleCA8IDAgPyB1bmRlZmluZWQgOiBkYXRhW2luZGV4XVsxXTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsaXN0Q2FjaGVHZXQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_listCacheGet.js\n");

/***/ }),

/***/ "./node_modules/lodash/_listCacheHas.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheHas.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ \"./node_modules/lodash/_assocIndexOf.js\");\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVIYXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsbUJBQW1CLG1CQUFPLENBQUMsK0RBQWlCOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVIYXMuanM/ZmJhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXNzb2NJbmRleE9mID0gcmVxdWlyZSgnLi9fYXNzb2NJbmRleE9mJyk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgbGlzdCBjYWNoZSB2YWx1ZSBmb3IgYGtleWAgZXhpc3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBoYXNcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBsaXN0Q2FjaGVIYXMoa2V5KSB7XG4gIHJldHVybiBhc3NvY0luZGV4T2YodGhpcy5fX2RhdGFfXywga2V5KSA+IC0xO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGxpc3RDYWNoZUhhcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_listCacheHas.js\n");

/***/ }),

/***/ "./node_modules/lodash/_listCacheSet.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheSet.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ \"./node_modules/lodash/_assocIndexOf.js\");\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVTZXQuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsbUJBQW1CLG1CQUFPLENBQUMsK0RBQWlCOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxHQUFHO0FBQ2QsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbGlzdENhY2hlU2V0LmpzPzY3Y2EiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFzc29jSW5kZXhPZiA9IHJlcXVpcmUoJy4vX2Fzc29jSW5kZXhPZicpO1xuXG4vKipcbiAqIFNldHMgdGhlIGxpc3QgY2FjaGUgYGtleWAgdG8gYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgc2V0XG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGxpc3QgY2FjaGUgaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZVNldChrZXksIHZhbHVlKSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXyxcbiAgICAgIGluZGV4ID0gYXNzb2NJbmRleE9mKGRhdGEsIGtleSk7XG5cbiAgaWYgKGluZGV4IDwgMCkge1xuICAgICsrdGhpcy5zaXplO1xuICAgIGRhdGEucHVzaChba2V5LCB2YWx1ZV0pO1xuICB9IGVsc2Uge1xuICAgIGRhdGFbaW5kZXhdWzFdID0gdmFsdWU7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbGlzdENhY2hlU2V0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_listCacheSet.js\n");

/***/ }),

/***/ "./node_modules/lodash/_mapCacheClear.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_mapCacheClear.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Hash = __webpack_require__(/*! ./_Hash */ \"./node_modules/lodash/_Hash.js\"),\n    ListCache = __webpack_require__(/*! ./_ListCache */ \"./node_modules/lodash/_ListCache.js\"),\n    Map = __webpack_require__(/*! ./_Map */ \"./node_modules/lodash/_Map.js\");\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZUNsZWFyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLFdBQVcsbUJBQU8sQ0FBQywrQ0FBUztBQUM1QixnQkFBZ0IsbUJBQU8sQ0FBQyx5REFBYztBQUN0QyxVQUFVLG1CQUFPLENBQUMsNkNBQVE7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWFwQ2FjaGVDbGVhci5qcz83YzY0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBIYXNoID0gcmVxdWlyZSgnLi9fSGFzaCcpLFxuICAgIExpc3RDYWNoZSA9IHJlcXVpcmUoJy4vX0xpc3RDYWNoZScpLFxuICAgIE1hcCA9IHJlcXVpcmUoJy4vX01hcCcpO1xuXG4vKipcbiAqIFJlbW92ZXMgYWxsIGtleS12YWx1ZSBlbnRyaWVzIGZyb20gdGhlIG1hcC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBNYXBDYWNoZVxuICovXG5mdW5jdGlvbiBtYXBDYWNoZUNsZWFyKCkge1xuICB0aGlzLnNpemUgPSAwO1xuICB0aGlzLl9fZGF0YV9fID0ge1xuICAgICdoYXNoJzogbmV3IEhhc2gsXG4gICAgJ21hcCc6IG5ldyAoTWFwIHx8IExpc3RDYWNoZSksXG4gICAgJ3N0cmluZyc6IG5ldyBIYXNoXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWFwQ2FjaGVDbGVhcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_mapCacheClear.js\n");

/***/ }),

/***/ "./node_modules/lodash/_mapCacheDelete.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_mapCacheDelete.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var getMapData = __webpack_require__(/*! ./_getMapData */ \"./node_modules/lodash/_getMapData.js\");\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZURlbGV0ZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQywyREFBZTs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlRGVsZXRlLmpzPzkzZWQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldE1hcERhdGEgPSByZXF1aXJlKCcuL19nZXRNYXBEYXRhJyk7XG5cbi8qKlxuICogUmVtb3ZlcyBga2V5YCBhbmQgaXRzIHZhbHVlIGZyb20gdGhlIG1hcC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZGVsZXRlXG4gKiBAbWVtYmVyT2YgTWFwQ2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gcmVtb3ZlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBlbnRyeSB3YXMgcmVtb3ZlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBtYXBDYWNoZURlbGV0ZShrZXkpIHtcbiAgdmFyIHJlc3VsdCA9IGdldE1hcERhdGEodGhpcywga2V5KVsnZGVsZXRlJ10oa2V5KTtcbiAgdGhpcy5zaXplIC09IHJlc3VsdCA/IDEgOiAwO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1hcENhY2hlRGVsZXRlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_mapCacheDelete.js\n");

/***/ }),

/***/ "./node_modules/lodash/_mapCacheGet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheGet.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var getMapData = __webpack_require__(/*! ./_getMapData */ \"./node_modules/lodash/_getMapData.js\");\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZUdldC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQywyREFBZTs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsR0FBRztBQUNoQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWFwQ2FjaGVHZXQuanM/MjQ3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0TWFwRGF0YSA9IHJlcXVpcmUoJy4vX2dldE1hcERhdGEnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBtYXAgdmFsdWUgZm9yIGBrZXlgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBnZXRcbiAqIEBtZW1iZXJPZiBNYXBDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZW50cnkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIG1hcENhY2hlR2V0KGtleSkge1xuICByZXR1cm4gZ2V0TWFwRGF0YSh0aGlzLCBrZXkpLmdldChrZXkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1hcENhY2hlR2V0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_mapCacheGet.js\n");

/***/ }),

/***/ "./node_modules/lodash/_mapCacheHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheHas.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var getMapData = __webpack_require__(/*! ./_getMapData */ \"./node_modules/lodash/_getMapData.js\");\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZUhhcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQywyREFBZTs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWFwQ2FjaGVIYXMuanM/YTUyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0TWFwRGF0YSA9IHJlcXVpcmUoJy4vX2dldE1hcERhdGEnKTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYSBtYXAgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgaGFzXG4gKiBAbWVtYmVyT2YgTWFwQ2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBtYXBDYWNoZUhhcyhrZXkpIHtcbiAgcmV0dXJuIGdldE1hcERhdGEodGhpcywga2V5KS5oYXMoa2V5KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtYXBDYWNoZUhhcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_mapCacheHas.js\n");

/***/ }),

/***/ "./node_modules/lodash/_mapCacheSet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheSet.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var getMapData = __webpack_require__(/*! ./_getMapData */ \"./node_modules/lodash/_getMapData.js\");\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZVNldC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQywyREFBZTs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsR0FBRztBQUNkLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWFwQ2FjaGVTZXQuanM/MWZjOCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0TWFwRGF0YSA9IHJlcXVpcmUoJy4vX2dldE1hcERhdGEnKTtcblxuLyoqXG4gKiBTZXRzIHRoZSBtYXAgYGtleWAgdG8gYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgc2V0XG4gKiBAbWVtYmVyT2YgTWFwQ2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbWFwIGNhY2hlIGluc3RhbmNlLlxuICovXG5mdW5jdGlvbiBtYXBDYWNoZVNldChrZXksIHZhbHVlKSB7XG4gIHZhciBkYXRhID0gZ2V0TWFwRGF0YSh0aGlzLCBrZXkpLFxuICAgICAgc2l6ZSA9IGRhdGEuc2l6ZTtcblxuICBkYXRhLnNldChrZXksIHZhbHVlKTtcbiAgdGhpcy5zaXplICs9IGRhdGEuc2l6ZSA9PSBzaXplID8gMCA6IDE7XG4gIHJldHVybiB0aGlzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1hcENhY2hlU2V0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_mapCacheSet.js\n");

/***/ }),

/***/ "./node_modules/lodash/_mapToArray.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_mapToArray.js ***!
  \********************************************/
/***/ (function(module) {

eval("/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBUb0FycmF5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcFRvQXJyYXkuanM/ZWRmYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnZlcnRzIGBtYXBgIHRvIGl0cyBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBtYXAgVGhlIG1hcCB0byBjb252ZXJ0LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBrZXktdmFsdWUgcGFpcnMuXG4gKi9cbmZ1bmN0aW9uIG1hcFRvQXJyYXkobWFwKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gQXJyYXkobWFwLnNpemUpO1xuXG4gIG1hcC5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgICByZXN1bHRbKytpbmRleF0gPSBba2V5LCB2YWx1ZV07XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1hcFRvQXJyYXk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_mapToArray.js\n");

/***/ }),

/***/ "./node_modules/lodash/_matchesStrictComparable.js":
/*!*********************************************************!*\
  !*** ./node_modules/lodash/_matchesStrictComparable.js ***!
  \*********************************************************/
/***/ (function(module) {

eval("/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXRjaGVzU3RyaWN0Q29tcGFyYWJsZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsR0FBRztBQUNkLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWF0Y2hlc1N0cmljdENvbXBhcmFibGUuanM/MjBlYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgbWF0Y2hlc1Byb3BlcnR5YCBmb3Igc291cmNlIHZhbHVlcyBzdWl0YWJsZVxuICogZm9yIHN0cmljdCBlcXVhbGl0eSBjb21wYXJpc29ucywgaS5lLiBgPT09YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcGFyYW0geyp9IHNyY1ZhbHVlIFRoZSB2YWx1ZSB0byBtYXRjaC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IHNwZWMgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIG1hdGNoZXNTdHJpY3RDb21wYXJhYmxlKGtleSwgc3JjVmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIGlmIChvYmplY3QgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gb2JqZWN0W2tleV0gPT09IHNyY1ZhbHVlICYmXG4gICAgICAoc3JjVmFsdWUgIT09IHVuZGVmaW5lZCB8fCAoa2V5IGluIE9iamVjdChvYmplY3QpKSk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWF0Y2hlc1N0cmljdENvbXBhcmFibGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_matchesStrictComparable.js\n");

/***/ }),

/***/ "./node_modules/lodash/_memoizeCapped.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_memoizeCapped.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var memoize = __webpack_require__(/*! ./memoize */ \"./node_modules/lodash/memoize.js\");\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tZW1vaXplQ2FwcGVkLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQyxtREFBVzs7QUFFakM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tZW1vaXplQ2FwcGVkLmpzPzIzNGQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG1lbW9pemUgPSByZXF1aXJlKCcuL21lbW9pemUnKTtcblxuLyoqIFVzZWQgYXMgdGhlIG1heGltdW0gbWVtb2l6ZSBjYWNoZSBzaXplLiAqL1xudmFyIE1BWF9NRU1PSVpFX1NJWkUgPSA1MDA7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLm1lbW9pemVgIHdoaWNoIGNsZWFycyB0aGUgbWVtb2l6ZWQgZnVuY3Rpb24nc1xuICogY2FjaGUgd2hlbiBpdCBleGNlZWRzIGBNQVhfTUVNT0laRV9TSVpFYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gaGF2ZSBpdHMgb3V0cHV0IG1lbW9pemVkLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgbWVtb2l6ZWQgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIG1lbW9pemVDYXBwZWQoZnVuYykge1xuICB2YXIgcmVzdWx0ID0gbWVtb2l6ZShmdW5jLCBmdW5jdGlvbihrZXkpIHtcbiAgICBpZiAoY2FjaGUuc2l6ZSA9PT0gTUFYX01FTU9JWkVfU0laRSkge1xuICAgICAgY2FjaGUuY2xlYXIoKTtcbiAgICB9XG4gICAgcmV0dXJuIGtleTtcbiAgfSk7XG5cbiAgdmFyIGNhY2hlID0gcmVzdWx0LmNhY2hlO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1lbW9pemVDYXBwZWQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_memoizeCapped.js\n");

/***/ }),

/***/ "./node_modules/lodash/_nativeCreate.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_nativeCreate.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var getNative = __webpack_require__(/*! ./_getNative */ \"./node_modules/lodash/_getNative.js\");\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19uYXRpdmVDcmVhdGUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLG1CQUFPLENBQUMseURBQWM7O0FBRXRDO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX25hdGl2ZUNyZWF0ZS5qcz82MDQ0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBnZXROYXRpdmUgPSByZXF1aXJlKCcuL19nZXROYXRpdmUnKTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL1xudmFyIG5hdGl2ZUNyZWF0ZSA9IGdldE5hdGl2ZShPYmplY3QsICdjcmVhdGUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBuYXRpdmVDcmVhdGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_nativeCreate.js\n");

/***/ }),

/***/ "./node_modules/lodash/_nativeKeys.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_nativeKeys.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var overArg = __webpack_require__(/*! ./_overArg */ \"./node_modules/lodash/_overArg.js\");\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19uYXRpdmVLZXlzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQyxxREFBWTs7QUFFbEM7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbmF0aXZlS2V5cy5qcz81N2E1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBvdmVyQXJnID0gcmVxdWlyZSgnLi9fb3ZlckFyZycpO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlS2V5cyA9IG92ZXJBcmcoT2JqZWN0LmtleXMsIE9iamVjdCk7XG5cbm1vZHVsZS5leHBvcnRzID0gbmF0aXZlS2V5cztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_nativeKeys.js\n");

/***/ }),

/***/ "./node_modules/lodash/_nodeUtil.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_nodeUtil.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar freeGlobal = __webpack_require__(/*! ./_freeGlobal */ \"./node_modules/lodash/_freeGlobal.js\");\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19ub2RlVXRpbC5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsaUJBQWlCLG1CQUFPLENBQUMsMkRBQWU7O0FBRXhDO0FBQ0Esa0JBQWtCLEtBQTBCOztBQUU1QztBQUNBLGdDQUFnQyxRQUFhOztBQUU3QztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19ub2RlVXRpbC5qcz85OWQzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBmcmVlR2xvYmFsID0gcmVxdWlyZSgnLi9fZnJlZUdsb2JhbCcpO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGV4cG9ydHNgLiAqL1xudmFyIGZyZWVFeHBvcnRzID0gdHlwZW9mIGV4cG9ydHMgPT0gJ29iamVjdCcgJiYgZXhwb3J0cyAmJiAhZXhwb3J0cy5ub2RlVHlwZSAmJiBleHBvcnRzO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYG1vZHVsZWAuICovXG52YXIgZnJlZU1vZHVsZSA9IGZyZWVFeHBvcnRzICYmIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlICYmICFtb2R1bGUubm9kZVR5cGUgJiYgbW9kdWxlO1xuXG4vKiogRGV0ZWN0IHRoZSBwb3B1bGFyIENvbW1vbkpTIGV4dGVuc2lvbiBgbW9kdWxlLmV4cG9ydHNgLiAqL1xudmFyIG1vZHVsZUV4cG9ydHMgPSBmcmVlTW9kdWxlICYmIGZyZWVNb2R1bGUuZXhwb3J0cyA9PT0gZnJlZUV4cG9ydHM7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgcHJvY2Vzc2AgZnJvbSBOb2RlLmpzLiAqL1xudmFyIGZyZWVQcm9jZXNzID0gbW9kdWxlRXhwb3J0cyAmJiBmcmVlR2xvYmFsLnByb2Nlc3M7XG5cbi8qKiBVc2VkIHRvIGFjY2VzcyBmYXN0ZXIgTm9kZS5qcyBoZWxwZXJzLiAqL1xudmFyIG5vZGVVdGlsID0gKGZ1bmN0aW9uKCkge1xuICB0cnkge1xuICAgIC8vIFVzZSBgdXRpbC50eXBlc2AgZm9yIE5vZGUuanMgMTArLlxuICAgIHZhciB0eXBlcyA9IGZyZWVNb2R1bGUgJiYgZnJlZU1vZHVsZS5yZXF1aXJlICYmIGZyZWVNb2R1bGUucmVxdWlyZSgndXRpbCcpLnR5cGVzO1xuXG4gICAgaWYgKHR5cGVzKSB7XG4gICAgICByZXR1cm4gdHlwZXM7XG4gICAgfVxuXG4gICAgLy8gTGVnYWN5IGBwcm9jZXNzLmJpbmRpbmcoJ3V0aWwnKWAgZm9yIE5vZGUuanMgPCAxMC5cbiAgICByZXR1cm4gZnJlZVByb2Nlc3MgJiYgZnJlZVByb2Nlc3MuYmluZGluZyAmJiBmcmVlUHJvY2Vzcy5iaW5kaW5nKCd1dGlsJyk7XG4gIH0gY2F0Y2ggKGUpIHt9XG59KCkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5vZGVVdGlsO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_nodeUtil.js\n");

/***/ }),

/***/ "./node_modules/lodash/_objectToString.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_objectToString.js ***!
  \************************************************/
/***/ (function(module) {

eval("/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19vYmplY3RUb1N0cmluZy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fb2JqZWN0VG9TdHJpbmcuanM/MjlmMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKipcbiAqIFVzZWQgdG8gcmVzb2x2ZSB0aGVcbiAqIFtgdG9TdHJpbmdUYWdgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1vYmplY3QucHJvdG90eXBlLnRvc3RyaW5nKVxuICogb2YgdmFsdWVzLlxuICovXG52YXIgbmF0aXZlT2JqZWN0VG9TdHJpbmcgPSBvYmplY3RQcm90by50b1N0cmluZztcblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgc3RyaW5nIHVzaW5nIGBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGNvbnZlcnRlZCBzdHJpbmcuXG4gKi9cbmZ1bmN0aW9uIG9iamVjdFRvU3RyaW5nKHZhbHVlKSB7XG4gIHJldHVybiBuYXRpdmVPYmplY3RUb1N0cmluZy5jYWxsKHZhbHVlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBvYmplY3RUb1N0cmluZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_objectToString.js\n");

/***/ }),

/***/ "./node_modules/lodash/_overArg.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_overArg.js ***!
  \*****************************************/
/***/ (function(module) {

eval("/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19vdmVyQXJnLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsVUFBVTtBQUNyQixhQUFhLFVBQVU7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19vdmVyQXJnLmpzPzkxZTkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVzIGEgdW5hcnkgZnVuY3Rpb24gdGhhdCBpbnZva2VzIGBmdW5jYCB3aXRoIGl0cyBhcmd1bWVudCB0cmFuc2Zvcm1lZC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gd3JhcC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHRyYW5zZm9ybSBUaGUgYXJndW1lbnQgdHJhbnNmb3JtLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIG92ZXJBcmcoZnVuYywgdHJhbnNmb3JtKSB7XG4gIHJldHVybiBmdW5jdGlvbihhcmcpIHtcbiAgICByZXR1cm4gZnVuYyh0cmFuc2Zvcm0oYXJnKSk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gb3ZlckFyZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_overArg.js\n");

/***/ }),

/***/ "./node_modules/lodash/_root.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_root.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ \"./node_modules/lodash/_freeGlobal.js\");\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19yb290LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLDJEQUFlOztBQUV4QztBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3Jvb3QuanM/MmIzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZnJlZUdsb2JhbCA9IHJlcXVpcmUoJy4vX2ZyZWVHbG9iYWwnKTtcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBzZWxmYC4gKi9cbnZhciBmcmVlU2VsZiA9IHR5cGVvZiBzZWxmID09ICdvYmplY3QnICYmIHNlbGYgJiYgc2VsZi5PYmplY3QgPT09IE9iamVjdCAmJiBzZWxmO1xuXG4vKiogVXNlZCBhcyBhIHJlZmVyZW5jZSB0byB0aGUgZ2xvYmFsIG9iamVjdC4gKi9cbnZhciByb290ID0gZnJlZUdsb2JhbCB8fCBmcmVlU2VsZiB8fCBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvb3Q7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_root.js\n");

/***/ }),

/***/ "./node_modules/lodash/_setCacheAdd.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setCacheAdd.js ***!
  \*********************************************/
/***/ (function(module) {

eval("/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zZXRDYWNoZUFkZC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3NldENhY2hlQWRkLmpzPzdlZDIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFVzZWQgdG8gc3RhbmQtaW4gZm9yIGB1bmRlZmluZWRgIGhhc2ggdmFsdWVzLiAqL1xudmFyIEhBU0hfVU5ERUZJTkVEID0gJ19fbG9kYXNoX2hhc2hfdW5kZWZpbmVkX18nO1xuXG4vKipcbiAqIEFkZHMgYHZhbHVlYCB0byB0aGUgYXJyYXkgY2FjaGUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGFkZFxuICogQG1lbWJlck9mIFNldENhY2hlXG4gKiBAYWxpYXMgcHVzaFxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2FjaGUuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjYWNoZSBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gc2V0Q2FjaGVBZGQodmFsdWUpIHtcbiAgdGhpcy5fX2RhdGFfXy5zZXQodmFsdWUsIEhBU0hfVU5ERUZJTkVEKTtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0Q2FjaGVBZGQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_setCacheAdd.js\n");

/***/ }),

/***/ "./node_modules/lodash/_setCacheHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setCacheHas.js ***!
  \*********************************************/
/***/ (function(module) {

eval("/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zZXRDYWNoZUhhcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3NldENhY2hlSGFzLmpzP2RjMGYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBpbiB0aGUgYXJyYXkgY2FjaGUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIFNldENhY2hlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZWFyY2ggZm9yLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBmb3VuZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBzZXRDYWNoZUhhcyh2YWx1ZSkge1xuICByZXR1cm4gdGhpcy5fX2RhdGFfXy5oYXModmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldENhY2hlSGFzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_setCacheHas.js\n");

/***/ }),

/***/ "./node_modules/lodash/_setToArray.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_setToArray.js ***!
  \********************************************/
/***/ (function(module) {

eval("/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zZXRUb0FycmF5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3NldFRvQXJyYXkuanM/YWM0MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnZlcnRzIGBzZXRgIHRvIGFuIGFycmF5IG9mIGl0cyB2YWx1ZXMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBzZXQgVGhlIHNldCB0byBjb252ZXJ0LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSB2YWx1ZXMuXG4gKi9cbmZ1bmN0aW9uIHNldFRvQXJyYXkoc2V0KSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gQXJyYXkoc2V0LnNpemUpO1xuXG4gIHNldC5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmVzdWx0WysraW5kZXhdID0gdmFsdWU7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldFRvQXJyYXk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_setToArray.js\n");

/***/ }),

/***/ "./node_modules/lodash/_stackClear.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_stackClear.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var ListCache = __webpack_require__(/*! ./_ListCache */ \"./node_modules/lodash/_ListCache.js\");\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja0NsZWFyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBTyxDQUFDLHlEQUFjOztBQUV0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja0NsZWFyLmpzP2VmYjYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIExpc3RDYWNoZSA9IHJlcXVpcmUoJy4vX0xpc3RDYWNoZScpO1xuXG4vKipcbiAqIFJlbW92ZXMgYWxsIGtleS12YWx1ZSBlbnRyaWVzIGZyb20gdGhlIHN0YWNrLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBjbGVhclxuICogQG1lbWJlck9mIFN0YWNrXG4gKi9cbmZ1bmN0aW9uIHN0YWNrQ2xlYXIoKSB7XG4gIHRoaXMuX19kYXRhX18gPSBuZXcgTGlzdENhY2hlO1xuICB0aGlzLnNpemUgPSAwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0YWNrQ2xlYXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_stackClear.js\n");

/***/ }),

/***/ "./node_modules/lodash/_stackDelete.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_stackDelete.js ***!
  \*********************************************/
/***/ (function(module) {

eval("/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja0RlbGV0ZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc3RhY2tEZWxldGUuanM/MmZjYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBzdGFjay5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZGVsZXRlXG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gcmVtb3ZlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBlbnRyeSB3YXMgcmVtb3ZlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBzdGFja0RlbGV0ZShrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fLFxuICAgICAgcmVzdWx0ID0gZGF0YVsnZGVsZXRlJ10oa2V5KTtcblxuICB0aGlzLnNpemUgPSBkYXRhLnNpemU7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RhY2tEZWxldGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_stackDelete.js\n");

/***/ }),

/***/ "./node_modules/lodash/_stackGet.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackGet.js ***!
  \******************************************/
/***/ (function(module) {

eval("/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja0dldC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxHQUFHO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja0dldC5qcz84MDJhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2V0cyB0aGUgc3RhY2sgdmFsdWUgZm9yIGBrZXlgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBnZXRcbiAqIEBtZW1iZXJPZiBTdGFja1xuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZW50cnkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIHN0YWNrR2V0KGtleSkge1xuICByZXR1cm4gdGhpcy5fX2RhdGFfXy5nZXQoa2V5KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdGFja0dldDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_stackGet.js\n");

/***/ }),

/***/ "./node_modules/lodash/_stackHas.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackHas.js ***!
  \******************************************/
/***/ (function(module) {

eval("/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja0hhcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja0hhcy5qcz81NWEzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2tzIGlmIGEgc3RhY2sgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgaGFzXG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBzdGFja0hhcyhrZXkpIHtcbiAgcmV0dXJuIHRoaXMuX19kYXRhX18uaGFzKGtleSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RhY2tIYXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_stackHas.js\n");

/***/ }),

/***/ "./node_modules/lodash/_stackSet.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackSet.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var ListCache = __webpack_require__(/*! ./_ListCache */ \"./node_modules/lodash/_ListCache.js\"),\n    Map = __webpack_require__(/*! ./_Map */ \"./node_modules/lodash/_Map.js\"),\n    MapCache = __webpack_require__(/*! ./_MapCache */ \"./node_modules/lodash/_MapCache.js\");\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja1NldC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyx5REFBYztBQUN0QyxVQUFVLG1CQUFPLENBQUMsNkNBQVE7QUFDMUIsZUFBZSxtQkFBTyxDQUFDLHVEQUFhOztBQUVwQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrU2V0LmpzP2QwMmMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIExpc3RDYWNoZSA9IHJlcXVpcmUoJy4vX0xpc3RDYWNoZScpLFxuICAgIE1hcCA9IHJlcXVpcmUoJy4vX01hcCcpLFxuICAgIE1hcENhY2hlID0gcmVxdWlyZSgnLi9fTWFwQ2FjaGUnKTtcblxuLyoqIFVzZWQgYXMgdGhlIHNpemUgdG8gZW5hYmxlIGxhcmdlIGFycmF5IG9wdGltaXphdGlvbnMuICovXG52YXIgTEFSR0VfQVJSQVlfU0laRSA9IDIwMDtcblxuLyoqXG4gKiBTZXRzIHRoZSBzdGFjayBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBTdGFja1xuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBzdGFjayBjYWNoZSBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gc3RhY2tTZXQoa2V5LCB2YWx1ZSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gIGlmIChkYXRhIGluc3RhbmNlb2YgTGlzdENhY2hlKSB7XG4gICAgdmFyIHBhaXJzID0gZGF0YS5fX2RhdGFfXztcbiAgICBpZiAoIU1hcCB8fCAocGFpcnMubGVuZ3RoIDwgTEFSR0VfQVJSQVlfU0laRSAtIDEpKSB7XG4gICAgICBwYWlycy5wdXNoKFtrZXksIHZhbHVlXSk7XG4gICAgICB0aGlzLnNpemUgPSArK2RhdGEuc2l6ZTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBkYXRhID0gdGhpcy5fX2RhdGFfXyA9IG5ldyBNYXBDYWNoZShwYWlycyk7XG4gIH1cbiAgZGF0YS5zZXQoa2V5LCB2YWx1ZSk7XG4gIHRoaXMuc2l6ZSA9IGRhdGEuc2l6ZTtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RhY2tTZXQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/_stackSet.js\n");

/***/ }),

/***/ "./node_modules/lodash/_stringToPath.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_stringToPath.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var memoizeCapped = __webpack_require__(/*! ./_memoizeCapped */ \"./node_modules/lodash/_memoizeCapped.js\");\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdHJpbmdUb1BhdGguanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CLG1CQUFPLENBQUMsaUVBQWtCOztBQUU5QztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdHJpbmdUb1BhdGguanM/MThkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbWVtb2l6ZUNhcHBlZCA9IHJlcXVpcmUoJy4vX21lbW9pemVDYXBwZWQnKTtcblxuLyoqIFVzZWQgdG8gbWF0Y2ggcHJvcGVydHkgbmFtZXMgd2l0aGluIHByb3BlcnR5IHBhdGhzLiAqL1xudmFyIHJlUHJvcE5hbWUgPSAvW14uW1xcXV0rfFxcWyg/OigtP1xcZCsoPzpcXC5cXGQrKT8pfChbXCInXSkoKD86KD8hXFwyKVteXFxcXF18XFxcXC4pKj8pXFwyKVxcXXwoPz0oPzpcXC58XFxbXFxdKSg/OlxcLnxcXFtcXF18JCkpL2c7XG5cbi8qKiBVc2VkIHRvIG1hdGNoIGJhY2tzbGFzaGVzIGluIHByb3BlcnR5IHBhdGhzLiAqL1xudmFyIHJlRXNjYXBlQ2hhciA9IC9cXFxcKFxcXFwpPy9nO1xuXG4vKipcbiAqIENvbnZlcnRzIGBzdHJpbmdgIHRvIGEgcHJvcGVydHkgcGF0aCBhcnJheS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtzdHJpbmd9IHN0cmluZyBUaGUgc3RyaW5nIHRvIGNvbnZlcnQuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIHByb3BlcnR5IHBhdGggYXJyYXkuXG4gKi9cbnZhciBzdHJpbmdUb1BhdGggPSBtZW1vaXplQ2FwcGVkKGZ1bmN0aW9uKHN0cmluZykge1xuICB2YXIgcmVzdWx0ID0gW107XG4gIGlmIChzdHJpbmcuY2hhckNvZGVBdCgwKSA9PT0gNDYgLyogLiAqLykge1xuICAgIHJlc3VsdC5wdXNoKCcnKTtcbiAgfVxuICBzdHJpbmcucmVwbGFjZShyZVByb3BOYW1lLCBmdW5jdGlvbihtYXRjaCwgbnVtYmVyLCBxdW90ZSwgc3ViU3RyaW5nKSB7XG4gICAgcmVzdWx0LnB1c2gocXVvdGUgPyBzdWJTdHJpbmcucmVwbGFjZShyZUVzY2FwZUNoYXIsICckMScpIDogKG51bWJlciB8fCBtYXRjaCkpO1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHN0cmluZ1RvUGF0aDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/_stringToPath.js\n");

/***/ }),

/***/ "./node_modules/lodash/_toKey.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_toKey.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var isSymbol = __webpack_require__(/*! ./isSymbol */ \"./node_modules/lodash/isSymbol.js\");\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL190b0tleS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMscURBQVk7O0FBRW5DO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLGVBQWU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fdG9LZXkuanM/ZjRkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNTeW1ib2wgPSByZXF1aXJlKCcuL2lzU3ltYm9sJyk7XG5cbi8qKiBVc2VkIGFzIHJlZmVyZW5jZXMgZm9yIHZhcmlvdXMgYE51bWJlcmAgY29uc3RhbnRzLiAqL1xudmFyIElORklOSVRZID0gMSAvIDA7XG5cbi8qKlxuICogQ29udmVydHMgYHZhbHVlYCB0byBhIHN0cmluZyBrZXkgaWYgaXQncyBub3QgYSBzdHJpbmcgb3Igc3ltYm9sLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBpbnNwZWN0LlxuICogQHJldHVybnMge3N0cmluZ3xzeW1ib2x9IFJldHVybnMgdGhlIGtleS5cbiAqL1xuZnVuY3Rpb24gdG9LZXkodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PSAnc3RyaW5nJyB8fCBpc1N5bWJvbCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgdmFyIHJlc3VsdCA9ICh2YWx1ZSArICcnKTtcbiAgcmV0dXJuIChyZXN1bHQgPT0gJzAnICYmICgxIC8gdmFsdWUpID09IC1JTkZJTklUWSkgPyAnLTAnIDogcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHRvS2V5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_toKey.js\n");

/***/ }),

/***/ "./node_modules/lodash/_toSource.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_toSource.js ***!
  \******************************************/
/***/ (function(module) {

eval("/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL190b1NvdXJjZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3RvU291cmNlLmpzP2RjNTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIGZ1bmNQcm90byA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gcmVzb2x2ZSB0aGUgZGVjb21waWxlZCBzb3VyY2Ugb2YgZnVuY3Rpb25zLiAqL1xudmFyIGZ1bmNUb1N0cmluZyA9IGZ1bmNQcm90by50b1N0cmluZztcblxuLyoqXG4gKiBDb252ZXJ0cyBgZnVuY2AgdG8gaXRzIHNvdXJjZSBjb2RlLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBjb252ZXJ0LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgc291cmNlIGNvZGUuXG4gKi9cbmZ1bmN0aW9uIHRvU291cmNlKGZ1bmMpIHtcbiAgaWYgKGZ1bmMgIT0gbnVsbCkge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gZnVuY1RvU3RyaW5nLmNhbGwoZnVuYyk7XG4gICAgfSBjYXRjaCAoZSkge31cbiAgICB0cnkge1xuICAgICAgcmV0dXJuIChmdW5jICsgJycpO1xuICAgIH0gY2F0Y2ggKGUpIHt9XG4gIH1cbiAgcmV0dXJuICcnO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHRvU291cmNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/_toSource.js\n");

/***/ }),

/***/ "./node_modules/lodash/eq.js":
/*!***********************************!*\
  !*** ./node_modules/lodash/eq.js ***!
  \***********************************/
/***/ (function(module) {

eval("/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL2VxLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9lcS5qcz85NjM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUGVyZm9ybXMgYVxuICogW2BTYW1lVmFsdWVaZXJvYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtc2FtZXZhbHVlemVybylcbiAqIGNvbXBhcmlzb24gYmV0d2VlbiB0d28gdmFsdWVzIHRvIGRldGVybWluZSBpZiB0aGV5IGFyZSBlcXVpdmFsZW50LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb21wYXJlLlxuICogQHBhcmFtIHsqfSBvdGhlciBUaGUgb3RoZXIgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBvYmplY3QgPSB7ICdhJzogMSB9O1xuICogdmFyIG90aGVyID0geyAnYSc6IDEgfTtcbiAqXG4gKiBfLmVxKG9iamVjdCwgb2JqZWN0KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmVxKG9iamVjdCwgb3RoZXIpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmVxKCdhJywgJ2EnKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmVxKCdhJywgT2JqZWN0KCdhJykpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmVxKE5hTiwgTmFOKTtcbiAqIC8vID0+IHRydWVcbiAqL1xuZnVuY3Rpb24gZXEodmFsdWUsIG90aGVyKSB7XG4gIHJldHVybiB2YWx1ZSA9PT0gb3RoZXIgfHwgKHZhbHVlICE9PSB2YWx1ZSAmJiBvdGhlciAhPT0gb3RoZXIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGVxO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/eq.js\n");

/***/ }),

/***/ "./node_modules/lodash/filter.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/filter.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var arrayFilter = __webpack_require__(/*! ./_arrayFilter */ \"./node_modules/lodash/_arrayFilter.js\"),\n    baseFilter = __webpack_require__(/*! ./_baseFilter */ \"./node_modules/lodash/_baseFilter.js\"),\n    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ \"./node_modules/lodash/_baseIteratee.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\");\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL2ZpbHRlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IsbUJBQU8sQ0FBQyw2REFBZ0I7QUFDMUMsaUJBQWlCLG1CQUFPLENBQUMsMkRBQWU7QUFDeEMsbUJBQW1CLG1CQUFPLENBQUMsK0RBQWlCO0FBQzVDLGNBQWMsbUJBQU8sQ0FBQyxtREFBVzs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsY0FBYztBQUN6QixXQUFXLFVBQVU7QUFDckIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyw2Q0FBNkM7QUFDcEQsT0FBTztBQUNQO0FBQ0E7QUFDQSxpQ0FBaUMsbUJBQW1CO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwyQkFBMkI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxXQUFXO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9maWx0ZXIuanM/OTM4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXJyYXlGaWx0ZXIgPSByZXF1aXJlKCcuL19hcnJheUZpbHRlcicpLFxuICAgIGJhc2VGaWx0ZXIgPSByZXF1aXJlKCcuL19iYXNlRmlsdGVyJyksXG4gICAgYmFzZUl0ZXJhdGVlID0gcmVxdWlyZSgnLi9fYmFzZUl0ZXJhdGVlJyksXG4gICAgaXNBcnJheSA9IHJlcXVpcmUoJy4vaXNBcnJheScpO1xuXG4vKipcbiAqIEl0ZXJhdGVzIG92ZXIgZWxlbWVudHMgb2YgYGNvbGxlY3Rpb25gLCByZXR1cm5pbmcgYW4gYXJyYXkgb2YgYWxsIGVsZW1lbnRzXG4gKiBgcHJlZGljYXRlYCByZXR1cm5zIHRydXRoeSBmb3IuIFRoZSBwcmVkaWNhdGUgaXMgaW52b2tlZCB3aXRoIHRocmVlXG4gKiBhcmd1bWVudHM6ICh2YWx1ZSwgaW5kZXh8a2V5LCBjb2xsZWN0aW9uKS5cbiAqXG4gKiAqKk5vdGU6KiogVW5saWtlIGBfLnJlbW92ZWAsIHRoaXMgbWV0aG9kIHJldHVybnMgYSBuZXcgYXJyYXkuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtwcmVkaWNhdGU9Xy5pZGVudGl0eV0gVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IGZpbHRlcmVkIGFycmF5LlxuICogQHNlZSBfLnJlamVjdFxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgdXNlcnMgPSBbXG4gKiAgIHsgJ3VzZXInOiAnYmFybmV5JywgJ2FnZSc6IDM2LCAnYWN0aXZlJzogdHJ1ZSB9LFxuICogICB7ICd1c2VyJzogJ2ZyZWQnLCAgICdhZ2UnOiA0MCwgJ2FjdGl2ZSc6IGZhbHNlIH1cbiAqIF07XG4gKlxuICogXy5maWx0ZXIodXNlcnMsIGZ1bmN0aW9uKG8pIHsgcmV0dXJuICFvLmFjdGl2ZTsgfSk7XG4gKiAvLyA9PiBvYmplY3RzIGZvciBbJ2ZyZWQnXVxuICpcbiAqIC8vIFRoZSBgXy5tYXRjaGVzYCBpdGVyYXRlZSBzaG9ydGhhbmQuXG4gKiBfLmZpbHRlcih1c2VycywgeyAnYWdlJzogMzYsICdhY3RpdmUnOiB0cnVlIH0pO1xuICogLy8gPT4gb2JqZWN0cyBmb3IgWydiYXJuZXknXVxuICpcbiAqIC8vIFRoZSBgXy5tYXRjaGVzUHJvcGVydHlgIGl0ZXJhdGVlIHNob3J0aGFuZC5cbiAqIF8uZmlsdGVyKHVzZXJzLCBbJ2FjdGl2ZScsIGZhbHNlXSk7XG4gKiAvLyA9PiBvYmplY3RzIGZvciBbJ2ZyZWQnXVxuICpcbiAqIC8vIFRoZSBgXy5wcm9wZXJ0eWAgaXRlcmF0ZWUgc2hvcnRoYW5kLlxuICogXy5maWx0ZXIodXNlcnMsICdhY3RpdmUnKTtcbiAqIC8vID0+IG9iamVjdHMgZm9yIFsnYmFybmV5J11cbiAqXG4gKiAvLyBDb21iaW5pbmcgc2V2ZXJhbCBwcmVkaWNhdGVzIHVzaW5nIGBfLm92ZXJFdmVyeWAgb3IgYF8ub3ZlclNvbWVgLlxuICogXy5maWx0ZXIodXNlcnMsIF8ub3ZlclNvbWUoW3sgJ2FnZSc6IDM2IH0sIFsnYWdlJywgNDBdXSkpO1xuICogLy8gPT4gb2JqZWN0cyBmb3IgWydmcmVkJywgJ2Jhcm5leSddXG4gKi9cbmZ1bmN0aW9uIGZpbHRlcihjb2xsZWN0aW9uLCBwcmVkaWNhdGUpIHtcbiAgdmFyIGZ1bmMgPSBpc0FycmF5KGNvbGxlY3Rpb24pID8gYXJyYXlGaWx0ZXIgOiBiYXNlRmlsdGVyO1xuICByZXR1cm4gZnVuYyhjb2xsZWN0aW9uLCBiYXNlSXRlcmF0ZWUocHJlZGljYXRlLCAzKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZmlsdGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/filter.js\n");

/***/ }),

/***/ "./node_modules/lodash/get.js":
/*!************************************!*\
  !*** ./node_modules/lodash/get.js ***!
  \************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseGet = __webpack_require__(/*! ./_baseGet */ \"./node_modules/lodash/_baseGet.js\");\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL2dldC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxjQUFjLG1CQUFPLENBQUMscURBQVk7O0FBRWxDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsR0FBRztBQUNkLGFBQWEsR0FBRztBQUNoQjtBQUNBO0FBQ0Esa0JBQWtCLFFBQVEsT0FBTyxVQUFVO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvZ2V0LmpzPzliMDIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2VHZXQgPSByZXF1aXJlKCcuL19iYXNlR2V0Jyk7XG5cbi8qKlxuICogR2V0cyB0aGUgdmFsdWUgYXQgYHBhdGhgIG9mIGBvYmplY3RgLiBJZiB0aGUgcmVzb2x2ZWQgdmFsdWUgaXNcbiAqIGB1bmRlZmluZWRgLCB0aGUgYGRlZmF1bHRWYWx1ZWAgaXMgcmV0dXJuZWQgaW4gaXRzIHBsYWNlLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMy43LjBcbiAqIEBjYXRlZ29yeSBPYmplY3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7QXJyYXl8c3RyaW5nfSBwYXRoIFRoZSBwYXRoIG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcGFyYW0geyp9IFtkZWZhdWx0VmFsdWVdIFRoZSB2YWx1ZSByZXR1cm5lZCBmb3IgYHVuZGVmaW5lZGAgcmVzb2x2ZWQgdmFsdWVzLlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHJlc29sdmVkIHZhbHVlLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0ID0geyAnYSc6IFt7ICdiJzogeyAnYyc6IDMgfSB9XSB9O1xuICpcbiAqIF8uZ2V0KG9iamVjdCwgJ2FbMF0uYi5jJyk7XG4gKiAvLyA9PiAzXG4gKlxuICogXy5nZXQob2JqZWN0LCBbJ2EnLCAnMCcsICdiJywgJ2MnXSk7XG4gKiAvLyA9PiAzXG4gKlxuICogXy5nZXQob2JqZWN0LCAnYS5iLmMnLCAnZGVmYXVsdCcpO1xuICogLy8gPT4gJ2RlZmF1bHQnXG4gKi9cbmZ1bmN0aW9uIGdldChvYmplY3QsIHBhdGgsIGRlZmF1bHRWYWx1ZSkge1xuICB2YXIgcmVzdWx0ID0gb2JqZWN0ID09IG51bGwgPyB1bmRlZmluZWQgOiBiYXNlR2V0KG9iamVjdCwgcGF0aCk7XG4gIHJldHVybiByZXN1bHQgPT09IHVuZGVmaW5lZCA/IGRlZmF1bHRWYWx1ZSA6IHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/get.js\n");

/***/ }),

/***/ "./node_modules/lodash/hasIn.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/hasIn.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseHasIn = __webpack_require__(/*! ./_baseHasIn */ \"./node_modules/lodash/_baseHasIn.js\"),\n    hasPath = __webpack_require__(/*! ./_hasPath */ \"./node_modules/lodash/_hasPath.js\");\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL2hhc0luLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBTyxDQUFDLHlEQUFjO0FBQ3RDLGNBQWMsbUJBQU8sQ0FBQyxxREFBWTs7QUFFbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxjQUFjO0FBQ3pCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0EsMkJBQTJCLGdCQUFnQixRQUFRLEdBQUc7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaGFzSW4uanM/ODYwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUhhc0luID0gcmVxdWlyZSgnLi9fYmFzZUhhc0luJyksXG4gICAgaGFzUGF0aCA9IHJlcXVpcmUoJy4vX2hhc1BhdGgnKTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHBhdGhgIGlzIGEgZGlyZWN0IG9yIGluaGVyaXRlZCBwcm9wZXJ0eSBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgT2JqZWN0XG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgcGF0aGAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBvYmplY3QgPSBfLmNyZWF0ZSh7ICdhJzogXy5jcmVhdGUoeyAnYic6IDIgfSkgfSk7XG4gKlxuICogXy5oYXNJbihvYmplY3QsICdhJyk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5oYXNJbihvYmplY3QsICdhLmInKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmhhc0luKG9iamVjdCwgWydhJywgJ2InXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5oYXNJbihvYmplY3QsICdiJyk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBoYXNJbihvYmplY3QsIHBhdGgpIHtcbiAgcmV0dXJuIG9iamVjdCAhPSBudWxsICYmIGhhc1BhdGgob2JqZWN0LCBwYXRoLCBiYXNlSGFzSW4pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc0luO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/hasIn.js\n");

/***/ }),

/***/ "./node_modules/lodash/identity.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/identity.js ***!
  \*****************************************/
/***/ (function(module) {

eval("/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lkZW50aXR5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxHQUFHO0FBQ2hCO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaWRlbnRpdHkuanM/Y2Q5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgbWV0aG9kIHJldHVybnMgdGhlIGZpcnN0IGFyZ3VtZW50IGl0IHJlY2VpdmVzLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBzaW5jZSAwLjEuMFxuICogQG1lbWJlck9mIF9cbiAqIEBjYXRlZ29yeSBVdGlsXG4gKiBAcGFyYW0geyp9IHZhbHVlIEFueSB2YWx1ZS5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIGB2YWx1ZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBvYmplY3QgPSB7ICdhJzogMSB9O1xuICpcbiAqIGNvbnNvbGUubG9nKF8uaWRlbnRpdHkob2JqZWN0KSA9PT0gb2JqZWN0KTtcbiAqIC8vID0+IHRydWVcbiAqL1xuZnVuY3Rpb24gaWRlbnRpdHkodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlkZW50aXR5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/identity.js\n");

/***/ }),

/***/ "./node_modules/lodash/isArguments.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArguments.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseIsArguments = __webpack_require__(/*! ./_baseIsArguments */ \"./node_modules/lodash/_baseIsArguments.js\"),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"./node_modules/lodash/isObjectLike.js\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzQXJndW1lbnRzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQixtQkFBTyxDQUFDLHFFQUFvQjtBQUNsRCxtQkFBbUIsbUJBQU8sQ0FBQyw2REFBZ0I7O0FBRTNDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixtQkFBbUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxtQkFBbUI7QUFDbEU7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzQXJndW1lbnRzLmpzP2QzNzAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2VJc0FyZ3VtZW50cyA9IHJlcXVpcmUoJy4vX2Jhc2VJc0FyZ3VtZW50cycpLFxuICAgIGlzT2JqZWN0TGlrZSA9IHJlcXVpcmUoJy4vaXNPYmplY3RMaWtlJyk7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIHByb3BlcnR5SXNFbnVtZXJhYmxlID0gb2JqZWN0UHJvdG8ucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgbGlrZWx5IGFuIGBhcmd1bWVudHNgIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBgYXJndW1lbnRzYCBvYmplY3QsXG4gKiAgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzQXJndW1lbnRzKGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcmd1bWVudHMoWzEsIDIsIDNdKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbnZhciBpc0FyZ3VtZW50cyA9IGJhc2VJc0FyZ3VtZW50cyhmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA/IGJhc2VJc0FyZ3VtZW50cyA6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBpc09iamVjdExpa2UodmFsdWUpICYmIGhhc093blByb3BlcnR5LmNhbGwodmFsdWUsICdjYWxsZWUnKSAmJlxuICAgICFwcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHZhbHVlLCAnY2FsbGVlJyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGlzQXJndW1lbnRzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/isArguments.js\n");

/***/ }),

/***/ "./node_modules/lodash/isArray.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/isArray.js ***!
  \****************************************/
/***/ (function(module) {

eval("/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzQXJyYXkuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzQXJyYXkuanM/Njc0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYW4gYEFycmF5YCBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gYXJyYXksIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0FycmF5KFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FycmF5KGRvY3VtZW50LmJvZHkuY2hpbGRyZW4pO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzQXJyYXkoJ2FiYycpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzQXJyYXkoXy5ub29wKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcblxubW9kdWxlLmV4cG9ydHMgPSBpc0FycmF5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/isArray.js\n");

/***/ }),

/***/ "./node_modules/lodash/isArrayLike.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArrayLike.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var isFunction = __webpack_require__(/*! ./isFunction */ \"./node_modules/lodash/isFunction.js\"),\n    isLength = __webpack_require__(/*! ./isLength */ \"./node_modules/lodash/isLength.js\");\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzQXJyYXlMaWtlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLHlEQUFjO0FBQ3ZDLGVBQWUsbUJBQU8sQ0FBQyxxREFBWTs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNBcnJheUxpa2UuanM/MzBjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNGdW5jdGlvbiA9IHJlcXVpcmUoJy4vaXNGdW5jdGlvbicpLFxuICAgIGlzTGVuZ3RoID0gcmVxdWlyZSgnLi9pc0xlbmd0aCcpO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGFycmF5LWxpa2UuIEEgdmFsdWUgaXMgY29uc2lkZXJlZCBhcnJheS1saWtlIGlmIGl0J3NcbiAqIG5vdCBhIGZ1bmN0aW9uIGFuZCBoYXMgYSBgdmFsdWUubGVuZ3RoYCB0aGF0J3MgYW4gaW50ZWdlciBncmVhdGVyIHRoYW4gb3JcbiAqIGVxdWFsIHRvIGAwYCBhbmQgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIGBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUmAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYXJyYXktbGlrZSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlKFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FycmF5TGlrZShkb2N1bWVudC5ib2R5LmNoaWxkcmVuKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlKCdhYmMnKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlKF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5TGlrZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiBpc0xlbmd0aCh2YWx1ZS5sZW5ndGgpICYmICFpc0Z1bmN0aW9uKHZhbHVlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0FycmF5TGlrZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/isArrayLike.js\n");

/***/ }),

/***/ "./node_modules/lodash/isBuffer.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isBuffer.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\"),\n    stubFalse = __webpack_require__(/*! ./stubFalse */ \"./node_modules/lodash/stubFalse.js\");\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzQnVmZmVyLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxXQUFXLG1CQUFPLENBQUMsK0NBQVM7QUFDNUIsZ0JBQWdCLG1CQUFPLENBQUMsdURBQWE7O0FBRXJDO0FBQ0Esa0JBQWtCLEtBQTBCOztBQUU1QztBQUNBLGdDQUFnQyxRQUFhOztBQUU3QztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNCdWZmZXIuanM/MGQyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKSxcbiAgICBzdHViRmFsc2UgPSByZXF1aXJlKCcuL3N0dWJGYWxzZScpO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGV4cG9ydHNgLiAqL1xudmFyIGZyZWVFeHBvcnRzID0gdHlwZW9mIGV4cG9ydHMgPT0gJ29iamVjdCcgJiYgZXhwb3J0cyAmJiAhZXhwb3J0cy5ub2RlVHlwZSAmJiBleHBvcnRzO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYG1vZHVsZWAuICovXG52YXIgZnJlZU1vZHVsZSA9IGZyZWVFeHBvcnRzICYmIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlICYmICFtb2R1bGUubm9kZVR5cGUgJiYgbW9kdWxlO1xuXG4vKiogRGV0ZWN0IHRoZSBwb3B1bGFyIENvbW1vbkpTIGV4dGVuc2lvbiBgbW9kdWxlLmV4cG9ydHNgLiAqL1xudmFyIG1vZHVsZUV4cG9ydHMgPSBmcmVlTW9kdWxlICYmIGZyZWVNb2R1bGUuZXhwb3J0cyA9PT0gZnJlZUV4cG9ydHM7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIEJ1ZmZlciA9IG1vZHVsZUV4cG9ydHMgPyByb290LkJ1ZmZlciA6IHVuZGVmaW5lZDtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgZm9yIHRob3NlIHdpdGggdGhlIHNhbWUgbmFtZSBhcyBvdGhlciBgbG9kYXNoYCBtZXRob2RzLiAqL1xudmFyIG5hdGl2ZUlzQnVmZmVyID0gQnVmZmVyID8gQnVmZmVyLmlzQnVmZmVyIDogdW5kZWZpbmVkO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgYnVmZmVyLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4zLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgYnVmZmVyLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNCdWZmZXIobmV3IEJ1ZmZlcigyKSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0J1ZmZlcihuZXcgVWludDhBcnJheSgyKSk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG52YXIgaXNCdWZmZXIgPSBuYXRpdmVJc0J1ZmZlciB8fCBzdHViRmFsc2U7XG5cbm1vZHVsZS5leHBvcnRzID0gaXNCdWZmZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/isBuffer.js\n");

/***/ }),

/***/ "./node_modules/lodash/isFunction.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/isFunction.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"./node_modules/lodash/_baseGetTag.js\"),\n    isObject = __webpack_require__(/*! ./isObject */ \"./node_modules/lodash/isObject.js\");\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzRnVuY3Rpb24uanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsMkRBQWU7QUFDeEMsZUFBZSxtQkFBTyxDQUFDLHFEQUFZOztBQUVuQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNGdW5jdGlvbi5qcz85NTIwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlR2V0VGFnID0gcmVxdWlyZSgnLi9fYmFzZUdldFRhZycpLFxuICAgIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9pc09iamVjdCcpO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgYXN5bmNUYWcgPSAnW29iamVjdCBBc3luY0Z1bmN0aW9uXScsXG4gICAgZnVuY1RhZyA9ICdbb2JqZWN0IEZ1bmN0aW9uXScsXG4gICAgZ2VuVGFnID0gJ1tvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dJyxcbiAgICBwcm94eVRhZyA9ICdbb2JqZWN0IFByb3h5XSc7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBGdW5jdGlvbmAgb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgZnVuY3Rpb24sIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0Z1bmN0aW9uKF8pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNGdW5jdGlvbigvYWJjLyk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKHZhbHVlKSB7XG4gIGlmICghaXNPYmplY3QodmFsdWUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIC8vIFRoZSB1c2Ugb2YgYE9iamVjdCN0b1N0cmluZ2AgYXZvaWRzIGlzc3VlcyB3aXRoIHRoZSBgdHlwZW9mYCBvcGVyYXRvclxuICAvLyBpbiBTYWZhcmkgOSB3aGljaCByZXR1cm5zICdvYmplY3QnIGZvciB0eXBlZCBhcnJheXMgYW5kIG90aGVyIGNvbnN0cnVjdG9ycy5cbiAgdmFyIHRhZyA9IGJhc2VHZXRUYWcodmFsdWUpO1xuICByZXR1cm4gdGFnID09IGZ1bmNUYWcgfHwgdGFnID09IGdlblRhZyB8fCB0YWcgPT0gYXN5bmNUYWcgfHwgdGFnID09IHByb3h5VGFnO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzRnVuY3Rpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/isFunction.js\n");

/***/ }),

/***/ "./node_modules/lodash/isLength.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isLength.js ***!
  \*****************************************/
/***/ (function(module) {

eval("/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzTGVuZ3RoLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzTGVuZ3RoLmpzP2IyMTgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovXG52YXIgTUFYX1NBRkVfSU5URUdFUiA9IDkwMDcxOTkyNTQ3NDA5OTE7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBhcnJheS1saWtlIGxlbmd0aC5cbiAqXG4gKiAqKk5vdGU6KiogVGhpcyBtZXRob2QgaXMgbG9vc2VseSBiYXNlZCBvblxuICogW2BUb0xlbmd0aGBdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXRvbGVuZ3RoKS5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGxlbmd0aCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzTGVuZ3RoKDMpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNMZW5ndGgoTnVtYmVyLk1JTl9WQUxVRSk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNMZW5ndGgoSW5maW5pdHkpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzTGVuZ3RoKCczJyk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0xlbmd0aCh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdudW1iZXInICYmXG4gICAgdmFsdWUgPiAtMSAmJiB2YWx1ZSAlIDEgPT0gMCAmJiB2YWx1ZSA8PSBNQVhfU0FGRV9JTlRFR0VSO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzTGVuZ3RoO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/isLength.js\n");

/***/ }),

/***/ "./node_modules/lodash/isObject.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isObject.js ***!
  \*****************************************/
/***/ (function(module) {

eval("/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzT2JqZWN0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc09iamVjdC5qcz8xYThjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgdGhlXG4gKiBbbGFuZ3VhZ2UgdHlwZV0oaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLWVjbWFzY3JpcHQtbGFuZ3VhZ2UtdHlwZXMpXG4gKiBvZiBgT2JqZWN0YC4gKGUuZy4gYXJyYXlzLCBmdW5jdGlvbnMsIG9iamVjdHMsIHJlZ2V4ZXMsIGBuZXcgTnVtYmVyKDApYCwgYW5kIGBuZXcgU3RyaW5nKCcnKWApXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gb2JqZWN0LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNPYmplY3Qoe30pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KF8ubm9vcCk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiAodHlwZSA9PSAnb2JqZWN0JyB8fCB0eXBlID09ICdmdW5jdGlvbicpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzT2JqZWN0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/isObject.js\n");

/***/ }),

/***/ "./node_modules/lodash/isObjectLike.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isObjectLike.js ***!
  \*********************************************/
/***/ (function(module) {

eval("/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzT2JqZWN0TGlrZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc09iamVjdExpa2UuanM/MTMxMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIG9iamVjdC1saWtlLiBBIHZhbHVlIGlzIG9iamVjdC1saWtlIGlmIGl0J3Mgbm90IGBudWxsYFxuICogYW5kIGhhcyBhIGB0eXBlb2ZgIHJlc3VsdCBvZiBcIm9iamVjdFwiLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIG9iamVjdC1saWtlLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKG51bGwpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNPYmplY3RMaWtlKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSAhPSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PSAnb2JqZWN0Jztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc09iamVjdExpa2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/isObjectLike.js\n");

/***/ }),

/***/ "./node_modules/lodash/isSymbol.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isSymbol.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"./node_modules/lodash/_baseGetTag.js\"),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"./node_modules/lodash/isObjectLike.js\");\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzU3ltYm9sLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLDJEQUFlO0FBQ3hDLG1CQUFtQixtQkFBTyxDQUFDLDZEQUFnQjs7QUFFM0M7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNTeW1ib2wuanM/ZmZkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUdldFRhZyA9IHJlcXVpcmUoJy4vX2Jhc2VHZXRUYWcnKSxcbiAgICBpc09iamVjdExpa2UgPSByZXF1aXJlKCcuL2lzT2JqZWN0TGlrZScpO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgc3ltYm9sVGFnID0gJ1tvYmplY3QgU3ltYm9sXSc7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBTeW1ib2xgIHByaW1pdGl2ZSBvciBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBzeW1ib2wsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc1N5bWJvbChTeW1ib2wuaXRlcmF0b3IpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNTeW1ib2woJ2FiYycpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNTeW1ib2wodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSAnc3ltYm9sJyB8fFxuICAgIChpc09iamVjdExpa2UodmFsdWUpICYmIGJhc2VHZXRUYWcodmFsdWUpID09IHN5bWJvbFRhZyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNTeW1ib2w7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/isSymbol.js\n");

/***/ }),

/***/ "./node_modules/lodash/isTypedArray.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isTypedArray.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseIsTypedArray = __webpack_require__(/*! ./_baseIsTypedArray */ \"./node_modules/lodash/_baseIsTypedArray.js\"),\n    baseUnary = __webpack_require__(/*! ./_baseUnary */ \"./node_modules/lodash/_baseUnary.js\"),\n    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ \"./node_modules/lodash/_nodeUtil.js\");\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzVHlwZWRBcnJheS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSx1QkFBdUIsbUJBQU8sQ0FBQyx1RUFBcUI7QUFDcEQsZ0JBQWdCLG1CQUFPLENBQUMseURBQWM7QUFDdEMsZUFBZSxtQkFBTyxDQUFDLHVEQUFhOztBQUVwQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc1R5cGVkQXJyYXkuanM/NzNhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUlzVHlwZWRBcnJheSA9IHJlcXVpcmUoJy4vX2Jhc2VJc1R5cGVkQXJyYXknKSxcbiAgICBiYXNlVW5hcnkgPSByZXF1aXJlKCcuL19iYXNlVW5hcnknKSxcbiAgICBub2RlVXRpbCA9IHJlcXVpcmUoJy4vX25vZGVVdGlsJyk7XG5cbi8qIE5vZGUuanMgaGVscGVyIHJlZmVyZW5jZXMuICovXG52YXIgbm9kZUlzVHlwZWRBcnJheSA9IG5vZGVVdGlsICYmIG5vZGVVdGlsLmlzVHlwZWRBcnJheTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGEgdHlwZWQgYXJyYXkuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAzLjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB0eXBlZCBhcnJheSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzVHlwZWRBcnJheShuZXcgVWludDhBcnJheSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc1R5cGVkQXJyYXkoW10pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzVHlwZWRBcnJheSA9IG5vZGVJc1R5cGVkQXJyYXkgPyBiYXNlVW5hcnkobm9kZUlzVHlwZWRBcnJheSkgOiBiYXNlSXNUeXBlZEFycmF5O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGlzVHlwZWRBcnJheTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/isTypedArray.js\n");

/***/ }),

/***/ "./node_modules/lodash/keys.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/keys.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ \"./node_modules/lodash/_arrayLikeKeys.js\"),\n    baseKeys = __webpack_require__(/*! ./_baseKeys */ \"./node_modules/lodash/_baseKeys.js\"),\n    isArrayLike = __webpack_require__(/*! ./isArrayLike */ \"./node_modules/lodash/isArrayLike.js\");\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL2tleXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CLG1CQUFPLENBQUMsaUVBQWtCO0FBQzlDLGVBQWUsbUJBQU8sQ0FBQyx1REFBYTtBQUNwQyxrQkFBa0IsbUJBQU8sQ0FBQywyREFBZTs7QUFFekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2tleXMuanM/ZWM2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXJyYXlMaWtlS2V5cyA9IHJlcXVpcmUoJy4vX2FycmF5TGlrZUtleXMnKSxcbiAgICBiYXNlS2V5cyA9IHJlcXVpcmUoJy4vX2Jhc2VLZXlzJyksXG4gICAgaXNBcnJheUxpa2UgPSByZXF1aXJlKCcuL2lzQXJyYXlMaWtlJyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiB0aGUgb3duIGVudW1lcmFibGUgcHJvcGVydHkgbmFtZXMgb2YgYG9iamVjdGAuXG4gKlxuICogKipOb3RlOioqIE5vbi1vYmplY3QgdmFsdWVzIGFyZSBjb2VyY2VkIHRvIG9iamVjdHMuIFNlZSB0aGVcbiAqIFtFUyBzcGVjXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1vYmplY3Qua2V5cylcbiAqIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogQHN0YXRpY1xuICogQHNpbmNlIDAuMS4wXG4gKiBAbWVtYmVyT2YgX1xuICogQGNhdGVnb3J5IE9iamVjdFxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqIEBleGFtcGxlXG4gKlxuICogZnVuY3Rpb24gRm9vKCkge1xuICogICB0aGlzLmEgPSAxO1xuICogICB0aGlzLmIgPSAyO1xuICogfVxuICpcbiAqIEZvby5wcm90b3R5cGUuYyA9IDM7XG4gKlxuICogXy5rZXlzKG5ldyBGb28pO1xuICogLy8gPT4gWydhJywgJ2InXSAoaXRlcmF0aW9uIG9yZGVyIGlzIG5vdCBndWFyYW50ZWVkKVxuICpcbiAqIF8ua2V5cygnaGknKTtcbiAqIC8vID0+IFsnMCcsICcxJ11cbiAqL1xuZnVuY3Rpb24ga2V5cyhvYmplY3QpIHtcbiAgcmV0dXJuIGlzQXJyYXlMaWtlKG9iamVjdCkgPyBhcnJheUxpa2VLZXlzKG9iamVjdCkgOiBiYXNlS2V5cyhvYmplY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGtleXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/keys.js\n");

/***/ }),

/***/ "./node_modules/lodash/memoize.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/memoize.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var MapCache = __webpack_require__(/*! ./_MapCache */ \"./node_modules/lodash/_MapCache.js\");\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL21lbW9pemUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSxtQkFBTyxDQUFDLHVEQUFhOztBQUVwQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsV0FBVyxVQUFVO0FBQ3JCLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL21lbW9pemUuanM/ZTM4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgTWFwQ2FjaGUgPSByZXF1aXJlKCcuL19NYXBDYWNoZScpO1xuXG4vKiogRXJyb3IgbWVzc2FnZSBjb25zdGFudHMuICovXG52YXIgRlVOQ19FUlJPUl9URVhUID0gJ0V4cGVjdGVkIGEgZnVuY3Rpb24nO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IG1lbW9pemVzIHRoZSByZXN1bHQgb2YgYGZ1bmNgLiBJZiBgcmVzb2x2ZXJgIGlzXG4gKiBwcm92aWRlZCwgaXQgZGV0ZXJtaW5lcyB0aGUgY2FjaGUga2V5IGZvciBzdG9yaW5nIHRoZSByZXN1bHQgYmFzZWQgb24gdGhlXG4gKiBhcmd1bWVudHMgcHJvdmlkZWQgdG8gdGhlIG1lbW9pemVkIGZ1bmN0aW9uLiBCeSBkZWZhdWx0LCB0aGUgZmlyc3QgYXJndW1lbnRcbiAqIHByb3ZpZGVkIHRvIHRoZSBtZW1vaXplZCBmdW5jdGlvbiBpcyB1c2VkIGFzIHRoZSBtYXAgY2FjaGUga2V5LiBUaGUgYGZ1bmNgXG4gKiBpcyBpbnZva2VkIHdpdGggdGhlIGB0aGlzYCBiaW5kaW5nIG9mIHRoZSBtZW1vaXplZCBmdW5jdGlvbi5cbiAqXG4gKiAqKk5vdGU6KiogVGhlIGNhY2hlIGlzIGV4cG9zZWQgYXMgdGhlIGBjYWNoZWAgcHJvcGVydHkgb24gdGhlIG1lbW9pemVkXG4gKiBmdW5jdGlvbi4gSXRzIGNyZWF0aW9uIG1heSBiZSBjdXN0b21pemVkIGJ5IHJlcGxhY2luZyB0aGUgYF8ubWVtb2l6ZS5DYWNoZWBcbiAqIGNvbnN0cnVjdG9yIHdpdGggb25lIHdob3NlIGluc3RhbmNlcyBpbXBsZW1lbnQgdGhlXG4gKiBbYE1hcGBdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXByb3BlcnRpZXMtb2YtdGhlLW1hcC1wcm90b3R5cGUtb2JqZWN0KVxuICogbWV0aG9kIGludGVyZmFjZSBvZiBgY2xlYXJgLCBgZGVsZXRlYCwgYGdldGAsIGBoYXNgLCBhbmQgYHNldGAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IEZ1bmN0aW9uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBoYXZlIGl0cyBvdXRwdXQgbWVtb2l6ZWQuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbcmVzb2x2ZXJdIFRoZSBmdW5jdGlvbiB0byByZXNvbHZlIHRoZSBjYWNoZSBrZXkuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBtZW1vaXplZCBmdW5jdGlvbi5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdCA9IHsgJ2EnOiAxLCAnYic6IDIgfTtcbiAqIHZhciBvdGhlciA9IHsgJ2MnOiAzLCAnZCc6IDQgfTtcbiAqXG4gKiB2YXIgdmFsdWVzID0gXy5tZW1vaXplKF8udmFsdWVzKTtcbiAqIHZhbHVlcyhvYmplY3QpO1xuICogLy8gPT4gWzEsIDJdXG4gKlxuICogdmFsdWVzKG90aGVyKTtcbiAqIC8vID0+IFszLCA0XVxuICpcbiAqIG9iamVjdC5hID0gMjtcbiAqIHZhbHVlcyhvYmplY3QpO1xuICogLy8gPT4gWzEsIDJdXG4gKlxuICogLy8gTW9kaWZ5IHRoZSByZXN1bHQgY2FjaGUuXG4gKiB2YWx1ZXMuY2FjaGUuc2V0KG9iamVjdCwgWydhJywgJ2InXSk7XG4gKiB2YWx1ZXMob2JqZWN0KTtcbiAqIC8vID0+IFsnYScsICdiJ11cbiAqXG4gKiAvLyBSZXBsYWNlIGBfLm1lbW9pemUuQ2FjaGVgLlxuICogXy5tZW1vaXplLkNhY2hlID0gV2Vha01hcDtcbiAqL1xuZnVuY3Rpb24gbWVtb2l6ZShmdW5jLCByZXNvbHZlcikge1xuICBpZiAodHlwZW9mIGZ1bmMgIT0gJ2Z1bmN0aW9uJyB8fCAocmVzb2x2ZXIgIT0gbnVsbCAmJiB0eXBlb2YgcmVzb2x2ZXIgIT0gJ2Z1bmN0aW9uJykpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKEZVTkNfRVJST1JfVEVYVCk7XG4gIH1cbiAgdmFyIG1lbW9pemVkID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGFyZ3MgPSBhcmd1bWVudHMsXG4gICAgICAgIGtleSA9IHJlc29sdmVyID8gcmVzb2x2ZXIuYXBwbHkodGhpcywgYXJncykgOiBhcmdzWzBdLFxuICAgICAgICBjYWNoZSA9IG1lbW9pemVkLmNhY2hlO1xuXG4gICAgaWYgKGNhY2hlLmhhcyhrZXkpKSB7XG4gICAgICByZXR1cm4gY2FjaGUuZ2V0KGtleSk7XG4gICAgfVxuICAgIHZhciByZXN1bHQgPSBmdW5jLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIG1lbW9pemVkLmNhY2hlID0gY2FjaGUuc2V0KGtleSwgcmVzdWx0KSB8fCBjYWNoZTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuICBtZW1vaXplZC5jYWNoZSA9IG5ldyAobWVtb2l6ZS5DYWNoZSB8fCBNYXBDYWNoZSk7XG4gIHJldHVybiBtZW1vaXplZDtcbn1cblxuLy8gRXhwb3NlIGBNYXBDYWNoZWAuXG5tZW1vaXplLkNhY2hlID0gTWFwQ2FjaGU7XG5cbm1vZHVsZS5leHBvcnRzID0gbWVtb2l6ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/memoize.js\n");

/***/ }),

/***/ "./node_modules/lodash/orderBy.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/orderBy.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseOrderBy = __webpack_require__(/*! ./_baseOrderBy */ \"./node_modules/lodash/_baseOrderBy.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\");\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL29yZGVyQnkuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsa0JBQWtCLG1CQUFPLENBQUMsNkRBQWdCO0FBQzFDLGNBQWMsbUJBQU8sQ0FBQyxtREFBVzs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekIsV0FBVyxzQ0FBc0M7QUFDakQ7QUFDQSxXQUFXLFVBQVU7QUFDckIsWUFBWSxRQUFRO0FBQ3BCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQSxPQUFPLDZCQUE2QjtBQUNwQyxPQUFPLDZCQUE2QjtBQUNwQyxPQUFPLDZCQUE2QjtBQUNwQyxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvb3JkZXJCeS5qcz85M2M2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlT3JkZXJCeSA9IHJlcXVpcmUoJy4vX2Jhc2VPcmRlckJ5JyksXG4gICAgaXNBcnJheSA9IHJlcXVpcmUoJy4vaXNBcnJheScpO1xuXG4vKipcbiAqIFRoaXMgbWV0aG9kIGlzIGxpa2UgYF8uc29ydEJ5YCBleGNlcHQgdGhhdCBpdCBhbGxvd3Mgc3BlY2lmeWluZyB0aGUgc29ydFxuICogb3JkZXJzIG9mIHRoZSBpdGVyYXRlZXMgdG8gc29ydCBieS4gSWYgYG9yZGVyc2AgaXMgdW5zcGVjaWZpZWQsIGFsbCB2YWx1ZXNcbiAqIGFyZSBzb3J0ZWQgaW4gYXNjZW5kaW5nIG9yZGVyLiBPdGhlcndpc2UsIHNwZWNpZnkgYW4gb3JkZXIgb2YgXCJkZXNjXCIgZm9yXG4gKiBkZXNjZW5kaW5nIG9yIFwiYXNjXCIgZm9yIGFzY2VuZGluZyBzb3J0IG9yZGVyIG9mIGNvcnJlc3BvbmRpbmcgdmFsdWVzLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0FycmF5W118RnVuY3Rpb25bXXxPYmplY3RbXXxzdHJpbmdbXX0gW2l0ZXJhdGVlcz1bXy5pZGVudGl0eV1dXG4gKiAgVGhlIGl0ZXJhdGVlcyB0byBzb3J0IGJ5LlxuICogQHBhcmFtIHtzdHJpbmdbXX0gW29yZGVyc10gVGhlIHNvcnQgb3JkZXJzIG9mIGBpdGVyYXRlZXNgLlxuICogQHBhcmFtLSB7T2JqZWN0fSBbZ3VhcmRdIEVuYWJsZXMgdXNlIGFzIGFuIGl0ZXJhdGVlIGZvciBtZXRob2RzIGxpa2UgYF8ucmVkdWNlYC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IHNvcnRlZCBhcnJheS5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIHVzZXJzID0gW1xuICogICB7ICd1c2VyJzogJ2ZyZWQnLCAgICdhZ2UnOiA0OCB9LFxuICogICB7ICd1c2VyJzogJ2Jhcm5leScsICdhZ2UnOiAzNCB9LFxuICogICB7ICd1c2VyJzogJ2ZyZWQnLCAgICdhZ2UnOiA0MCB9LFxuICogICB7ICd1c2VyJzogJ2Jhcm5leScsICdhZ2UnOiAzNiB9XG4gKiBdO1xuICpcbiAqIC8vIFNvcnQgYnkgYHVzZXJgIGluIGFzY2VuZGluZyBvcmRlciBhbmQgYnkgYGFnZWAgaW4gZGVzY2VuZGluZyBvcmRlci5cbiAqIF8ub3JkZXJCeSh1c2VycywgWyd1c2VyJywgJ2FnZSddLCBbJ2FzYycsICdkZXNjJ10pO1xuICogLy8gPT4gb2JqZWN0cyBmb3IgW1snYmFybmV5JywgMzZdLCBbJ2Jhcm5leScsIDM0XSwgWydmcmVkJywgNDhdLCBbJ2ZyZWQnLCA0MF1dXG4gKi9cbmZ1bmN0aW9uIG9yZGVyQnkoY29sbGVjdGlvbiwgaXRlcmF0ZWVzLCBvcmRlcnMsIGd1YXJkKSB7XG4gIGlmIChjb2xsZWN0aW9uID09IG51bGwpIHtcbiAgICByZXR1cm4gW107XG4gIH1cbiAgaWYgKCFpc0FycmF5KGl0ZXJhdGVlcykpIHtcbiAgICBpdGVyYXRlZXMgPSBpdGVyYXRlZXMgPT0gbnVsbCA/IFtdIDogW2l0ZXJhdGVlc107XG4gIH1cbiAgb3JkZXJzID0gZ3VhcmQgPyB1bmRlZmluZWQgOiBvcmRlcnM7XG4gIGlmICghaXNBcnJheShvcmRlcnMpKSB7XG4gICAgb3JkZXJzID0gb3JkZXJzID09IG51bGwgPyBbXSA6IFtvcmRlcnNdO1xuICB9XG4gIHJldHVybiBiYXNlT3JkZXJCeShjb2xsZWN0aW9uLCBpdGVyYXRlZXMsIG9yZGVycyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gb3JkZXJCeTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/orderBy.js\n");

/***/ }),

/***/ "./node_modules/lodash/property.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/property.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseProperty = __webpack_require__(/*! ./_baseProperty */ \"./node_modules/lodash/_baseProperty.js\"),\n    basePropertyDeep = __webpack_require__(/*! ./_basePropertyDeep */ \"./node_modules/lodash/_basePropertyDeep.js\"),\n    isKey = __webpack_require__(/*! ./_isKey */ \"./node_modules/lodash/_isKey.js\"),\n    toKey = __webpack_require__(/*! ./_toKey */ \"./node_modules/lodash/_toKey.js\");\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL3Byb3BlcnR5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLG1CQUFtQixtQkFBTyxDQUFDLCtEQUFpQjtBQUM1Qyx1QkFBdUIsbUJBQU8sQ0FBQyx1RUFBcUI7QUFDcEQsWUFBWSxtQkFBTyxDQUFDLGlEQUFVO0FBQzlCLFlBQVksbUJBQU8sQ0FBQyxpREFBVTs7QUFFOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekIsYUFBYSxVQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLE9BQU8sT0FBTyxVQUFVO0FBQ3hCLE9BQU8sT0FBTztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvcHJvcGVydHkuanM/ZjljZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fYmFzZVByb3BlcnR5JyksXG4gICAgYmFzZVByb3BlcnR5RGVlcCA9IHJlcXVpcmUoJy4vX2Jhc2VQcm9wZXJ0eURlZXAnKSxcbiAgICBpc0tleSA9IHJlcXVpcmUoJy4vX2lzS2V5JyksXG4gICAgdG9LZXkgPSByZXF1aXJlKCcuL190b0tleScpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIHZhbHVlIGF0IGBwYXRoYCBvZiBhIGdpdmVuIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDIuNC4wXG4gKiBAY2F0ZWdvcnkgVXRpbFxuICogQHBhcmFtIHtBcnJheXxzdHJpbmd9IHBhdGggVGhlIHBhdGggb2YgdGhlIHByb3BlcnR5IHRvIGdldC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGFjY2Vzc29yIGZ1bmN0aW9uLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0cyA9IFtcbiAqICAgeyAnYSc6IHsgJ2InOiAyIH0gfSxcbiAqICAgeyAnYSc6IHsgJ2InOiAxIH0gfVxuICogXTtcbiAqXG4gKiBfLm1hcChvYmplY3RzLCBfLnByb3BlcnR5KCdhLmInKSk7XG4gKiAvLyA9PiBbMiwgMV1cbiAqXG4gKiBfLm1hcChfLnNvcnRCeShvYmplY3RzLCBfLnByb3BlcnR5KFsnYScsICdiJ10pKSwgJ2EuYicpO1xuICogLy8gPT4gWzEsIDJdXG4gKi9cbmZ1bmN0aW9uIHByb3BlcnR5KHBhdGgpIHtcbiAgcmV0dXJuIGlzS2V5KHBhdGgpID8gYmFzZVByb3BlcnR5KHRvS2V5KHBhdGgpKSA6IGJhc2VQcm9wZXJ0eURlZXAocGF0aCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcHJvcGVydHk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/property.js\n");

/***/ }),

/***/ "./node_modules/lodash/stubArray.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/stubArray.js ***!
  \******************************************/
/***/ (function(module) {

eval("/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL3N0dWJBcnJheS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC9zdHViQXJyYXkuanM/ZDMyNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgbWV0aG9kIHJldHVybnMgYSBuZXcgZW1wdHkgYXJyYXkuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjEzLjBcbiAqIEBjYXRlZ29yeSBVdGlsXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBlbXB0eSBhcnJheS5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIGFycmF5cyA9IF8udGltZXMoMiwgXy5zdHViQXJyYXkpO1xuICpcbiAqIGNvbnNvbGUubG9nKGFycmF5cyk7XG4gKiAvLyA9PiBbW10sIFtdXVxuICpcbiAqIGNvbnNvbGUubG9nKGFycmF5c1swXSA9PT0gYXJyYXlzWzFdKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIHN0dWJBcnJheSgpIHtcbiAgcmV0dXJuIFtdO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0dWJBcnJheTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash/stubArray.js\n");

/***/ }),

/***/ "./node_modules/lodash/stubFalse.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/stubFalse.js ***!
  \******************************************/
/***/ (function(module) {

eval("/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL3N0dWJGYWxzZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL3N0dWJGYWxzZS5qcz8wN2M3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBtZXRob2QgcmV0dXJucyBgZmFsc2VgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4xMy4wXG4gKiBAY2F0ZWdvcnkgVXRpbFxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy50aW1lcygyLCBfLnN0dWJGYWxzZSk7XG4gKiAvLyA9PiBbZmFsc2UsIGZhbHNlXVxuICovXG5mdW5jdGlvbiBzdHViRmFsc2UoKSB7XG4gIHJldHVybiBmYWxzZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHViRmFsc2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/stubFalse.js\n");

/***/ }),

/***/ "./node_modules/lodash/toString.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/toString.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var baseToString = __webpack_require__(/*! ./_baseToString */ \"./node_modules/lodash/_baseToString.js\");\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL3RvU3RyaW5nLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLG1CQUFtQixtQkFBTyxDQUFDLCtEQUFpQjs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvbG9kYXNoL3RvU3RyaW5nLmpzPzc2ZGQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2VUb1N0cmluZyA9IHJlcXVpcmUoJy4vX2Jhc2VUb1N0cmluZycpO1xuXG4vKipcbiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBzdHJpbmcuIEFuIGVtcHR5IHN0cmluZyBpcyByZXR1cm5lZCBmb3IgYG51bGxgXG4gKiBhbmQgYHVuZGVmaW5lZGAgdmFsdWVzLiBUaGUgc2lnbiBvZiBgLTBgIGlzIHByZXNlcnZlZC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGNvbnZlcnRlZCBzdHJpbmcuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8udG9TdHJpbmcobnVsbCk7XG4gKiAvLyA9PiAnJ1xuICpcbiAqIF8udG9TdHJpbmcoLTApO1xuICogLy8gPT4gJy0wJ1xuICpcbiAqIF8udG9TdHJpbmcoWzEsIDIsIDNdKTtcbiAqIC8vID0+ICcxLDIsMydcbiAqL1xuZnVuY3Rpb24gdG9TdHJpbmcodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID09IG51bGwgPyAnJyA6IGJhc2VUb1N0cmluZyh2YWx1ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdG9TdHJpbmc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash/toString.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _arrayLikeToArray; }\n/* harmony export */ });\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlMaWtlVG9BcnJheS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBLHlDQUF5QyxTQUFTO0FBQ2xEO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheUxpa2VUb0FycmF5LmpzPzk2N2QiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHtcbiAgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7XG4gIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgYXJyMltpXSA9IGFycltpXTtcbiAgcmV0dXJuIGFycjI7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _arrayWithHoles; }\n/* harmony export */ });\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlXaXRoSG9sZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5V2l0aEhvbGVzLmpzP2VhZDciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _assertThisInitialized; }\n/* harmony export */ });\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanM/ZjhkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuICByZXR1cm4gc2VsZjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _asyncToGenerator; }\n/* harmony export */ });\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcz8zZmZiIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZWplY3QoZXJyb3IpO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoaW5mby5kb25lKSB7XG4gICAgcmVzb2x2ZSh2YWx1ZSk7XG4gIH0gZWxzZSB7XG4gICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpO1xuICB9XG59XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcyxcbiAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcbiAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJuZXh0XCIsIHZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7XG4gICAgICB9XG4gICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgIH0pO1xuICB9O1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _classCallCheck; }\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2suanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjay5qcz8yYmRjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/construct.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/construct.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _construct; }\n/* harmony export */ });\n/* harmony import */ var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPrototypeOf.js */ \"./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\");\n/* harmony import */ var _isNativeReflectConstruct_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isNativeReflectConstruct.js */ \"./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js\");\n\n\nfunction _construct(Parent, args, Class) {\n  if ((0,_isNativeReflectConstruct_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) (0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY29uc3RydWN0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpRDtBQUNvQjtBQUN0RDtBQUNmLE1BQU0sd0VBQXdCO0FBQzlCO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsOERBQWM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NvbnN0cnVjdC5qcz8zOGI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzZXRQcm90b3R5cGVPZiBmcm9tIFwiLi9zZXRQcm90b3R5cGVPZi5qc1wiO1xuaW1wb3J0IGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCBmcm9tIFwiLi9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LCBhcmdzLCBDbGFzcykge1xuICBpZiAoaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkpIHtcbiAgICBfY29uc3RydWN0ID0gUmVmbGVjdC5jb25zdHJ1Y3QuYmluZCgpO1xuICB9IGVsc2Uge1xuICAgIF9jb25zdHJ1Y3QgPSBmdW5jdGlvbiBfY29uc3RydWN0KFBhcmVudCwgYXJncywgQ2xhc3MpIHtcbiAgICAgIHZhciBhID0gW251bGxdO1xuICAgICAgYS5wdXNoLmFwcGx5KGEsIGFyZ3MpO1xuICAgICAgdmFyIENvbnN0cnVjdG9yID0gRnVuY3Rpb24uYmluZC5hcHBseShQYXJlbnQsIGEpO1xuICAgICAgdmFyIGluc3RhbmNlID0gbmV3IENvbnN0cnVjdG9yKCk7XG4gICAgICBpZiAoQ2xhc3MpIHNldFByb3RvdHlwZU9mKGluc3RhbmNlLCBDbGFzcy5wcm90b3R5cGUpO1xuICAgICAgcmV0dXJuIGluc3RhbmNlO1xuICAgIH07XG4gIH1cbiAgcmV0dXJuIF9jb25zdHJ1Y3QuYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/construct.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/createClass.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/createClass.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _createClass; }\n/* harmony export */ });\n/* harmony import */ var _toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toPropertyKey.js */ \"./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js\");\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, (0,_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDL0M7QUFDQSxrQkFBa0Isa0JBQWtCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDZEQUFhO0FBQy9DO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcy5qcz80MDdjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0b1Byb3BlcnR5S2V5IGZyb20gXCIuL3RvUHJvcGVydHlLZXkuanNcIjtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIHRvUHJvcGVydHlLZXkoZGVzY3JpcHRvci5rZXkpLCBkZXNjcmlwdG9yKTtcbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29uc3RydWN0b3IsIFwicHJvdG90eXBlXCIsIHtcbiAgICB3cml0YWJsZTogZmFsc2VcbiAgfSk7XG4gIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/createClass.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _defineProperty; }\n/* harmony export */ });\n/* harmony import */ var _toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toPropertyKey.js */ \"./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js\");\n\nfunction _defineProperty(obj, key, value) {\n  key = (0,_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDaEM7QUFDZixRQUFRLDZEQUFhO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eS5qcz85MTQ1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0b1Byb3BlcnR5S2V5IGZyb20gXCIuL3RvUHJvcGVydHlLZXkuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAga2V5ID0gdG9Qcm9wZXJ0eUtleShrZXkpO1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuICByZXR1cm4gb2JqO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _getPrototypeOf; }\n/* harmony export */ });\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2dldFByb3RvdHlwZU9mLmpzPzJlMzUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgfTtcbiAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/inherits.js":
/*!*************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/inherits.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _inherits; }\n/* harmony export */ });\n/* harmony import */ var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPrototypeOf.js */ \"./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) (0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(subClass, superClass);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUQ7QUFDbEM7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSCxrQkFBa0IsOERBQWM7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cy5qcz80ODM2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzZXRQcm90b3R5cGVPZiBmcm9tIFwiLi9zZXRQcm90b3R5cGVPZi5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7XG4gIH1cbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgY29uc3RydWN0b3I6IHtcbiAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHN1YkNsYXNzLCBcInByb3RvdHlwZVwiLCB7XG4gICAgd3JpdGFibGU6IGZhbHNlXG4gIH0pO1xuICBpZiAoc3VwZXJDbGFzcykgc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/inherits.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _isNativeFunction; }\n/* harmony export */ });\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXNOYXRpdmVGdW5jdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXNOYXRpdmVGdW5jdGlvbi5qcz8wNDZjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pc05hdGl2ZUZ1bmN0aW9uKGZuKSB7XG4gIHJldHVybiBGdW5jdGlvbi50b1N0cmluZy5jYWxsKGZuKS5pbmRleE9mKFwiW25hdGl2ZSBjb2RlXVwiKSAhPT0gLTE7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _isNativeReflectConstruct; }\n/* harmony export */ });\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0ZBQWdGO0FBQ2hGO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdC5qcz8xMTFkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7XG4gIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTtcbiAgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTtcbiAgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTtcbiAgdHJ5IHtcbiAgICBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _iterableToArrayLimit; }\n/* harmony export */ });\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXRlcmFibGVUb0FycmF5TGltaXQuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLFlBQVksNkVBQTZFO0FBQ2pHLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2l0ZXJhYmxlVG9BcnJheUxpbWl0LmpzPzhiZTYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkge1xuICB2YXIgX2kgPSBudWxsID09IGFyciA/IG51bGwgOiBcInVuZGVmaW5lZFwiICE9IHR5cGVvZiBTeW1ib2wgJiYgYXJyW1N5bWJvbC5pdGVyYXRvcl0gfHwgYXJyW1wiQEBpdGVyYXRvclwiXTtcbiAgaWYgKG51bGwgIT0gX2kpIHtcbiAgICB2YXIgX3MsXG4gICAgICBfZSxcbiAgICAgIF94LFxuICAgICAgX3IsXG4gICAgICBfYXJyID0gW10sXG4gICAgICBfbiA9ICEwLFxuICAgICAgX2QgPSAhMTtcbiAgICB0cnkge1xuICAgICAgaWYgKF94ID0gKF9pID0gX2kuY2FsbChhcnIpKS5uZXh0LCAwID09PSBpKSB7XG4gICAgICAgIGlmIChPYmplY3QoX2kpICE9PSBfaSkgcmV0dXJuO1xuICAgICAgICBfbiA9ICExO1xuICAgICAgfSBlbHNlIGZvciAoOyAhKF9uID0gKF9zID0gX3guY2FsbChfaSkpLmRvbmUpICYmIChfYXJyLnB1c2goX3MudmFsdWUpLCBfYXJyLmxlbmd0aCAhPT0gaSk7IF9uID0gITApO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgX2QgPSAhMCwgX2UgPSBlcnI7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmICghX24gJiYgbnVsbCAhPSBfaVtcInJldHVyblwiXSAmJiAoX3IgPSBfaVtcInJldHVyblwiXSgpLCBPYmplY3QoX3IpICE9PSBfcikpIHJldHVybjtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGlmIChfZCkgdGhyb3cgX2U7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBfYXJyO1xuICB9XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js":
/*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _nonIterableRest; }\n/* harmony export */ });\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vbm9uSXRlcmFibGVSZXN0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZTtBQUNmO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9ub25JdGVyYWJsZVJlc3QuanM/NzEzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _objectWithoutProperties; }\n/* harmony export */ });\n/* harmony import */ var _objectWithoutPropertiesLoose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./objectWithoutPropertiesLoose.js */ \"./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = (0,_objectWithoutPropertiesLoose_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNkU7QUFDOUQ7QUFDZjtBQUNBLGVBQWUsNEVBQTRCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw2QkFBNkI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzLmpzPzk4ZjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG9iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIi4vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHNvdXJjZSwgZXhjbHVkZWQpIHtcbiAgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307XG4gIHZhciB0YXJnZXQgPSBvYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpO1xuICB2YXIga2V5LCBpO1xuICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgIHZhciBzb3VyY2VTeW1ib2xLZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpO1xuICAgIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VTeW1ib2xLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBrZXkgPSBzb3VyY2VTeW1ib2xLZXlzW2ldO1xuICAgICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHNvdXJjZSwga2V5KSkgY29udGludWU7XG4gICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGFyZ2V0O1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _objectWithoutPropertiesLoose; }\n/* harmony export */ });\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsdUJBQXVCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UuanM/MWEzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuICByZXR1cm4gdGFyZ2V0O1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _possibleConstructorReturn; }\n/* harmony export */ });\n/* harmony import */ var _typeof_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeof.js */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var _assertThisInitialized_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assertThisInitialized.js */ \"./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\");\n\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && ((0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return (0,_assertThisInitialized_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(self);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0M7QUFDNkI7QUFDaEQ7QUFDZixlQUFlLHNEQUFPO0FBQ3RCO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxTQUFTLHFFQUFxQjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4uanM/NTRjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX3R5cGVvZiBmcm9tIFwiLi90eXBlb2YuanNcIjtcbmltcG9ydCBhc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSBcIi4vYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7XG4gICAgcmV0dXJuIGNhbGw7XG4gIH0gZWxzZSBpZiAoY2FsbCAhPT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkRlcml2ZWQgY29uc3RydWN0b3JzIG1heSBvbmx5IHJldHVybiBvYmplY3Qgb3IgdW5kZWZpbmVkXCIpO1xuICB9XG4gIHJldHVybiBhc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _setPrototypeOf; }\n/* harmony export */ });\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2V0UHJvdG90eXBlT2YuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2V0UHJvdG90eXBlT2YuanM/NDcwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgcmV0dXJuIG87XG4gIH07XG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/slicedToArray.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _slicedToArray; }\n/* harmony export */ });\n/* harmony import */ var _arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayWithHoles.js */ \"./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\");\n/* harmony import */ var _iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterableToArrayLimit.js */ \"./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\");\n/* harmony import */ var _unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./unsupportedIterableToArray.js */ \"./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\");\n/* harmony import */ var _nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nonIterableRest.js */ \"./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\");\n\n\n\n\nfunction _slicedToArray(arr, i) {\n  return (0,_arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(arr) || (0,_iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(arr, i) || (0,_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(arr, i) || (0,_nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpRDtBQUNZO0FBQ1k7QUFDdEI7QUFDcEM7QUFDZixTQUFTLDhEQUFjLFNBQVMsb0VBQW9CLFlBQVksMEVBQTBCLFlBQVksK0RBQWU7QUFDckgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5LmpzPzcyMWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFycmF5V2l0aEhvbGVzIGZyb20gXCIuL2FycmF5V2l0aEhvbGVzLmpzXCI7XG5pbXBvcnQgaXRlcmFibGVUb0FycmF5TGltaXQgZnJvbSBcIi4vaXRlcmFibGVUb0FycmF5TGltaXQuanNcIjtcbmltcG9ydCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSBmcm9tIFwiLi91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qc1wiO1xuaW1wb3J0IG5vbkl0ZXJhYmxlUmVzdCBmcm9tIFwiLi9ub25JdGVyYWJsZVJlc3QuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkge1xuICByZXR1cm4gYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBpdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgbm9uSXRlcmFibGVSZXN0KCk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/toPrimitive.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/toPrimitive.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _toPrimitive; }\n/* harmony export */ });\n/* harmony import */ var _typeof_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeof.js */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n\nfunction _toPrimitive(input, hint) {\n  if ((0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if ((0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9QcmltaXRpdmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0M7QUFDbkI7QUFDZixNQUFNLHNEQUFPO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBTztBQUNmO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9QcmltaXRpdmUuanM/MDU3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX3R5cGVvZiBmcm9tIFwiLi90eXBlb2YuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF90b1ByaW1pdGl2ZShpbnB1dCwgaGludCkge1xuICBpZiAoX3R5cGVvZihpbnB1dCkgIT09IFwib2JqZWN0XCIgfHwgaW5wdXQgPT09IG51bGwpIHJldHVybiBpbnB1dDtcbiAgdmFyIHByaW0gPSBpbnB1dFtTeW1ib2wudG9QcmltaXRpdmVdO1xuICBpZiAocHJpbSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdmFyIHJlcyA9IHByaW0uY2FsbChpbnB1dCwgaGludCB8fCBcImRlZmF1bHRcIik7XG4gICAgaWYgKF90eXBlb2YocmVzKSAhPT0gXCJvYmplY3RcIikgcmV0dXJuIHJlcztcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7XG4gIH1cbiAgcmV0dXJuIChoaW50ID09PSBcInN0cmluZ1wiID8gU3RyaW5nIDogTnVtYmVyKShpbnB1dCk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/toPrimitive.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _toPropertyKey; }\n/* harmony export */ });\n/* harmony import */ var _typeof_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeof.js */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var _toPrimitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toPrimitive.js */ \"./node_modules/@babel/runtime/helpers/esm/toPrimitive.js\");\n\n\nfunction _toPropertyKey(arg) {\n  var key = (0,_toPrimitive_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(arg, \"string\");\n  return (0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(key) === \"symbol\" ? key : String(key);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Qcm9wZXJ0eUtleS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0M7QUFDUztBQUM1QjtBQUNmLFlBQVksMkRBQVc7QUFDdkIsU0FBUyxzREFBTztBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvUHJvcGVydHlLZXkuanM/OTU1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX3R5cGVvZiBmcm9tIFwiLi90eXBlb2YuanNcIjtcbmltcG9ydCB0b1ByaW1pdGl2ZSBmcm9tIFwiLi90b1ByaW1pdGl2ZS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkoYXJnKSB7XG4gIHZhciBrZXkgPSB0b1ByaW1pdGl2ZShhcmcsIFwic3RyaW5nXCIpO1xuICByZXR1cm4gX3R5cGVvZihrZXkpID09PSBcInN5bWJvbFwiID8ga2V5IDogU3RyaW5nKGtleSk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/typeof.js":
/*!***********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/typeof.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _typeof; }\n/* harmony export */ });\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZTtBQUNmOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YuanM/YTE5MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7XG5cbiAgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAob2JqKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmo7XG4gIH0gOiBmdW5jdGlvbiAob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbiAgfSwgX3R5cGVvZihvYmopO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/typeof.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _unsupportedIterableToArray; }\n/* harmony export */ });\n/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayLikeToArray.js */ \"./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(o, minLen);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUQ7QUFDdEM7QUFDZjtBQUNBLG9DQUFvQyxnRUFBZ0I7QUFDcEQ7QUFDQTtBQUNBO0FBQ0Esc0ZBQXNGLGdFQUFnQjtBQUN0RyIsInNvdXJjZXMiOlsid2VicGFjazovL0RhaWx5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzPzMzOWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFycmF5TGlrZVRvQXJyYXkgZnJvbSBcIi4vYXJyYXlMaWtlVG9BcnJheS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikge1xuICBpZiAoIW8pIHJldHVybjtcbiAgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG4gIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pO1xuICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js":
/*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _wrapNativeSuper; }\n/* harmony export */ });\n/* harmony import */ var _getPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getPrototypeOf.js */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./setPrototypeOf.js */ \"./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\");\n/* harmony import */ var _isNativeFunction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isNativeFunction.js */ \"./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js\");\n/* harmony import */ var _construct_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./construct.js */ \"./node_modules/@babel/runtime/helpers/esm/construct.js\");\n\n\n\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !(0,_isNativeFunction_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return (0,_construct_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Class, arguments, (0,_getPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return (0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vd3JhcE5hdGl2ZVN1cGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWlEO0FBQ0E7QUFDSTtBQUNkO0FBQ3hCO0FBQ2Y7QUFDQTtBQUNBLDJCQUEyQixnRUFBZ0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEseURBQVMsbUJBQW1CLDhEQUFjO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsV0FBVyw4REFBYztBQUN6QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYWlseS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS93cmFwTmF0aXZlU3VwZXIuanM/MGYwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ2V0UHJvdG90eXBlT2YgZnJvbSBcIi4vZ2V0UHJvdG90eXBlT2YuanNcIjtcbmltcG9ydCBzZXRQcm90b3R5cGVPZiBmcm9tIFwiLi9zZXRQcm90b3R5cGVPZi5qc1wiO1xuaW1wb3J0IGlzTmF0aXZlRnVuY3Rpb24gZnJvbSBcIi4vaXNOYXRpdmVGdW5jdGlvbi5qc1wiO1xuaW1wb3J0IGNvbnN0cnVjdCBmcm9tIFwiLi9jb25zdHJ1Y3QuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3MpIHtcbiAgdmFyIF9jYWNoZSA9IHR5cGVvZiBNYXAgPT09IFwiZnVuY3Rpb25cIiA/IG5ldyBNYXAoKSA6IHVuZGVmaW5lZDtcbiAgX3dyYXBOYXRpdmVTdXBlciA9IGZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3MpIHtcbiAgICBpZiAoQ2xhc3MgPT09IG51bGwgfHwgIWlzTmF0aXZlRnVuY3Rpb24oQ2xhc3MpKSByZXR1cm4gQ2xhc3M7XG4gICAgaWYgKHR5cGVvZiBDbGFzcyAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgX2NhY2hlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBpZiAoX2NhY2hlLmhhcyhDbGFzcykpIHJldHVybiBfY2FjaGUuZ2V0KENsYXNzKTtcbiAgICAgIF9jYWNoZS5zZXQoQ2xhc3MsIFdyYXBwZXIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBXcmFwcGVyKCkge1xuICAgICAgcmV0dXJuIGNvbnN0cnVjdChDbGFzcywgYXJndW1lbnRzLCBnZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3Rvcik7XG4gICAgfVxuICAgIFdyYXBwZXIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShDbGFzcy5wcm90b3R5cGUsIHtcbiAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgIHZhbHVlOiBXcmFwcGVyLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBzZXRQcm90b3R5cGVPZihXcmFwcGVyLCBDbGFzcyk7XG4gIH07XG4gIHJldHVybiBfd3JhcE5hdGl2ZVN1cGVyKENsYXNzKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\n");

/***/ }),

/***/ "./node_modules/dequal/dist/index.mjs":
/*!********************************************!*\
  !*** ./node_modules/dequal/dist/index.mjs ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dequal\": function() { return /* binding */ dequal; }\n/* harmony export */ });\nvar has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nfunction dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVxdWFsL2Rpc3QvaW5kZXgubWpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRGFpbHkvLi9ub2RlX21vZHVsZXMvZGVxdWFsL2Rpc3QvaW5kZXgubWpzPzhlOWMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGhhcyA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbmZ1bmN0aW9uIGZpbmQoaXRlciwgdGFyLCBrZXkpIHtcblx0Zm9yIChrZXkgb2YgaXRlci5rZXlzKCkpIHtcblx0XHRpZiAoZGVxdWFsKGtleSwgdGFyKSkgcmV0dXJuIGtleTtcblx0fVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZGVxdWFsKGZvbywgYmFyKSB7XG5cdHZhciBjdG9yLCBsZW4sIHRtcDtcblx0aWYgKGZvbyA9PT0gYmFyKSByZXR1cm4gdHJ1ZTtcblxuXHRpZiAoZm9vICYmIGJhciAmJiAoY3Rvcj1mb28uY29uc3RydWN0b3IpID09PSBiYXIuY29uc3RydWN0b3IpIHtcblx0XHRpZiAoY3RvciA9PT0gRGF0ZSkgcmV0dXJuIGZvby5nZXRUaW1lKCkgPT09IGJhci5nZXRUaW1lKCk7XG5cdFx0aWYgKGN0b3IgPT09IFJlZ0V4cCkgcmV0dXJuIGZvby50b1N0cmluZygpID09PSBiYXIudG9TdHJpbmcoKTtcblxuXHRcdGlmIChjdG9yID09PSBBcnJheSkge1xuXHRcdFx0aWYgKChsZW49Zm9vLmxlbmd0aCkgPT09IGJhci5sZW5ndGgpIHtcblx0XHRcdFx0d2hpbGUgKGxlbi0tICYmIGRlcXVhbChmb29bbGVuXSwgYmFyW2xlbl0pKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBsZW4gPT09IC0xO1xuXHRcdH1cblxuXHRcdGlmIChjdG9yID09PSBTZXQpIHtcblx0XHRcdGlmIChmb28uc2l6ZSAhPT0gYmFyLnNpemUpIHtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0Zm9yIChsZW4gb2YgZm9vKSB7XG5cdFx0XHRcdHRtcCA9IGxlbjtcblx0XHRcdFx0aWYgKHRtcCAmJiB0eXBlb2YgdG1wID09PSAnb2JqZWN0Jykge1xuXHRcdFx0XHRcdHRtcCA9IGZpbmQoYmFyLCB0bXApO1xuXHRcdFx0XHRcdGlmICghdG1wKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCFiYXIuaGFzKHRtcCkpIHJldHVybiBmYWxzZTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblxuXHRcdGlmIChjdG9yID09PSBNYXApIHtcblx0XHRcdGlmIChmb28uc2l6ZSAhPT0gYmFyLnNpemUpIHtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0Zm9yIChsZW4gb2YgZm9vKSB7XG5cdFx0XHRcdHRtcCA9IGxlblswXTtcblx0XHRcdFx0aWYgKHRtcCAmJiB0eXBlb2YgdG1wID09PSAnb2JqZWN0Jykge1xuXHRcdFx0XHRcdHRtcCA9IGZpbmQoYmFyLCB0bXApO1xuXHRcdFx0XHRcdGlmICghdG1wKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCFkZXF1YWwobGVuWzFdLCBiYXIuZ2V0KHRtcCkpKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cblx0XHRpZiAoY3RvciA9PT0gQXJyYXlCdWZmZXIpIHtcblx0XHRcdGZvbyA9IG5ldyBVaW50OEFycmF5KGZvbyk7XG5cdFx0XHRiYXIgPSBuZXcgVWludDhBcnJheShiYXIpO1xuXHRcdH0gZWxzZSBpZiAoY3RvciA9PT0gRGF0YVZpZXcpIHtcblx0XHRcdGlmICgobGVuPWZvby5ieXRlTGVuZ3RoKSA9PT0gYmFyLmJ5dGVMZW5ndGgpIHtcblx0XHRcdFx0d2hpbGUgKGxlbi0tICYmIGZvby5nZXRJbnQ4KGxlbikgPT09IGJhci5nZXRJbnQ4KGxlbikpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGxlbiA9PT0gLTE7XG5cdFx0fVxuXG5cdFx0aWYgKEFycmF5QnVmZmVyLmlzVmlldyhmb28pKSB7XG5cdFx0XHRpZiAoKGxlbj1mb28uYnl0ZUxlbmd0aCkgPT09IGJhci5ieXRlTGVuZ3RoKSB7XG5cdFx0XHRcdHdoaWxlIChsZW4tLSAmJiBmb29bbGVuXSA9PT0gYmFyW2xlbl0pO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGxlbiA9PT0gLTE7XG5cdFx0fVxuXG5cdFx0aWYgKCFjdG9yIHx8IHR5cGVvZiBmb28gPT09ICdvYmplY3QnKSB7XG5cdFx0XHRsZW4gPSAwO1xuXHRcdFx0Zm9yIChjdG9yIGluIGZvbykge1xuXHRcdFx0XHRpZiAoaGFzLmNhbGwoZm9vLCBjdG9yKSAmJiArK2xlbiAmJiAhaGFzLmNhbGwoYmFyLCBjdG9yKSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZiAoIShjdG9yIGluIGJhcikgfHwgIWRlcXVhbChmb29bY3Rvcl0sIGJhcltjdG9yXSkpIHJldHVybiBmYWxzZTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBPYmplY3Qua2V5cyhiYXIpLmxlbmd0aCA9PT0gbGVuO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBmb28gIT09IGZvbyAmJiBiYXIgIT09IGJhcjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dequal/dist/index.mjs\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/harmony module decorator */
/******/ 	!function() {
/******/ 		__webpack_require__.hmd = function(module) {
/******/ 			module = Object.create(module);
/******/ 			if (!module.children) module.children = [];
/******/ 			Object.defineProperty(module, 'exports', {
/******/ 				enumerable: true,
/******/ 				set: function() {
/******/ 					throw new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);
/******/ 				}
/******/ 			});
/******/ 			return module;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	!function() {
/******/ 		__webpack_require__.nmd = function(module) {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});
if (globalThis && globalThis.Daily) { globalThis.DailyIframe = globalThis.Daily; }